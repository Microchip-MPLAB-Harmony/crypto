
dist\sam_e70_xplained_ultra\production\sam_e70_xplained_ultra.X.production.elf:     file format elf32-littlearm


Disassembly of section .vectors:

00400000 <exception_table>:
  400000:	f0 ff 45 20 d9 7f 40 00 63 ab 40 00 ef ab 40 00     ..E ..@.c.@...@.
  400010:	9f ac 40 00 a1 ac 40 00 a3 ac 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	73 aa 40 00 9d ac 40 00 00 00 00 00 73 aa 40 00     s.@...@.....s.@.
  40003c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40004c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40005c:	73 aa 40 00 73 aa 40 00 00 00 00 00 73 aa 40 00     s.@.s.@.....s.@.
  40006c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 91 7d 40 00     s.@.s.@.s.@..}@.
  40007c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40008c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40009c:	49 a8 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     I.@.s.@.s.@.s.@.
  4000ac:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  4000bc:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  4000cc:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  4000dc:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  4000ec:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  4000fc:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40010c:	73 aa 40 00 73 aa 40 00 00 00 00 00 00 00 00 00     s.@.s.@.........
  40011c:	00 00 00 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     ....s.@.s.@.s.@.
  40012c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40013c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40014c:	73 aa 40 00 73 aa 40 00 73 aa 40 00 73 aa 40 00     s.@.s.@.s.@.s.@.
  40015c:	73 aa 40 00 73 aa 40 00 73 aa 40 00                 s.@.s.@.s.@.

Disassembly of section .text:

00400168 <_init>:
  400168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40016a:	bf00      	nop
  40016c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40016e:	bc08      	pop	{r3}
  400170:	469e      	mov	lr, r3
  400172:	4770      	bx	lr

00400174 <__init_array_start>:
  400174:	0040aa9d 	.word	0x0040aa9d

00400178 <__frame_dummy_init_array_entry>:
  400178:	00409b8d                                ..@.

0040017c <_fini>:
  40017c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40017e:	bf00      	nop
  400180:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400182:	bc08      	pop	{r3}
  400184:	469e      	mov	lr, r3
  400186:	4770      	bx	lr

00400188 <__fini_array_start>:
  400188:	00409b69 	.word	0x00409b69

Disassembly of section .ARM.exidx:

0040018c <.ARM.exidx>:
  40018c:	000069c4 	.word	0x000069c4
  400190:	00000001 	.word	0x00000001

Disassembly of section .text._Transform%29:

00400194 <_Transform>:

#define R(i) h(i)+=S1(e(i))+Ch(e(i),f(i),g(i))+K[i+j]+(j?blk2(i):blk0(i));\
    d(i)+=h(i);h(i)+=S0(a(i))+Maj(a(i),b(i),c(i))

static int _Transform(Sha512* sha512)
{
  400194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00400198 <.LCFI0>:
  400198:	f2ad 7d94 	subw	sp, sp, #1940	; 0x794

0040019c <.LCFI1>:
  40019c:	f8cd 06cc 	str.w	r0, [sp, #1740]	; 0x6cc
#else
    word64 W[16];
#endif

    /* Copy digest to working vars */
    XMEMCPY(T, sha512->digest, sizeof(T));
  4001a0:	f100 0418 	add.w	r4, r0, #24
  4001a4:	f50d 66ea 	add.w	r6, sp, #1872	; 0x750
  4001a8:	f100 0758 	add.w	r7, r0, #88	; 0x58

004001ac <.LVL2>:
  4001ac:	4635      	mov	r5, r6
  4001ae:	6820      	ldr	r0, [r4, #0]
  4001b0:	6861      	ldr	r1, [r4, #4]
  4001b2:	68a2      	ldr	r2, [r4, #8]
  4001b4:	68e3      	ldr	r3, [r4, #12]
  4001b6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  4001b8:	3410      	adds	r4, #16
  4001ba:	462e      	mov	r6, r5
  4001bc:	42bc      	cmp	r4, r7
  4001be:	d1f5      	bne.n	4001ac <.LVL2>

004001c0 <.LVL3>:
  4001c0:	f50d 63da 	add.w	r3, sp, #1744	; 0x6d0
  4001c4:	e9d3 3400 	ldrd	r3, r4, [r3]
  4001c8:	e9cd 341c 	strd	r3, r4, [sp, #112]	; 0x70
  4001cc:	f50d 63ed 	add.w	r3, sp, #1896	; 0x768
  4001d0:	e9d3 ab00 	ldrd	sl, fp, [r3]
  4001d4:	f50d 63ea 	add.w	r3, sp, #1872	; 0x750
  4001d8:	e9d3 3400 	ldrd	r3, r4, [r3]
  4001dc:	4625      	mov	r5, r4
  4001de:	461c      	mov	r4, r3
  4001e0:	f50d 63eb 	add.w	r3, sp, #1880	; 0x758
  4001e4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4001e8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  4001ec:	f50d 63ec 	add.w	r3, sp, #1888	; 0x760
  4001f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4001f4:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8
  4001f8:	f50d 63f1 	add.w	r3, sp, #1928	; 0x788
  4001fc:	e9d3 2300 	ldrd	r2, r3, [r3]
  400200:	e9cd 2306 	strd	r2, r3, [sp, #24]
  400204:	f50d 63dc 	add.w	r3, sp, #1760	; 0x6e0
  400208:	e9d3 2300 	ldrd	r2, r3, [r3]
  40020c:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  400210:	f50d 63dd 	add.w	r3, sp, #1768	; 0x6e8
  400214:	e9d3 2300 	ldrd	r2, r3, [r3]
  400218:	e9cd 2320 	strd	r2, r3, [sp, #128]	; 0x80
  40021c:	f50d 63db 	add.w	r3, sp, #1752	; 0x6d8
  400220:	e9d3 2300 	ldrd	r2, r3, [r3]
  400224:	e9cd 2308 	strd	r2, r3, [sp, #32]
  400228:	f50d 63de 	add.w	r3, sp, #1776	; 0x6f0
  40022c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400230:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  400234:	f50d 63df 	add.w	r3, sp, #1784	; 0x6f8
  400238:	e9d3 2300 	ldrd	r2, r3, [r3]
  40023c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  400240:	f50d 63e0 	add.w	r3, sp, #1792	; 0x700
  400244:	e9d3 2300 	ldrd	r2, r3, [r3]
  400248:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  40024c:	f50d 63e1 	add.w	r3, sp, #1800	; 0x708
  400250:	e9d3 2300 	ldrd	r2, r3, [r3]
  400254:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  400258:	f50d 63e3 	add.w	r3, sp, #1816	; 0x718
  40025c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400260:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  400264:	f50d 63f0 	add.w	r3, sp, #1920	; 0x780
  400268:	e9d3 2300 	ldrd	r2, r3, [r3]
  40026c:	e9cd 2304 	strd	r2, r3, [sp, #16]
  400270:	f50d 63e2 	add.w	r3, sp, #1808	; 0x710
  400274:	e9d3 2300 	ldrd	r2, r3, [r3]
  400278:	e9cd 2300 	strd	r2, r3, [sp]
  40027c:	f50d 63e4 	add.w	r3, sp, #1824	; 0x720
  400280:	e9d3 2300 	ldrd	r2, r3, [r3]
  400284:	e9cd 2324 	strd	r2, r3, [sp, #144]	; 0x90
  400288:	f50d 63ef 	add.w	r3, sp, #1912	; 0x778
  40028c:	e9d3 8900 	ldrd	r8, r9, [r3]
  400290:	f50d 63e5 	add.w	r3, sp, #1832	; 0x728
  400294:	e9d3 2300 	ldrd	r2, r3, [r3]
  400298:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  40029c:	f50d 63ee 	add.w	r3, sp, #1904	; 0x770
  4002a0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002a4:	e9cd 2302 	strd	r2, r3, [sp, #8]
  4002a8:	f50d 63e6 	add.w	r3, sp, #1840	; 0x730
  4002ac:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002b0:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  4002b4:	f50d 63e7 	add.w	r3, sp, #1848	; 0x738
  4002b8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002bc:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
  4002c0:	f50d 63e8 	add.w	r3, sp, #1856	; 0x740
  4002c4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002c8:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
  4002cc:	f50d 63e9 	add.w	r3, sp, #1864	; 0x748
  4002d0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002d4:	e9cd 2328 	strd	r2, r3, [sp, #160]	; 0xa0
  4002d8:	4b5a      	ldr	r3, [pc, #360]	; (400444 <.LBE365+0x4e>)
            R(m);
        }
    }
#else
    /* 80 operations, partially loop unrolled */
    for (j = 0; j < 80; j += 16) {
  4002da:	f04f 0c00 	mov.w	ip, #0
  4002de:	469e      	mov	lr, r3
  4002e0:	4667      	mov	r7, ip

004002e2 <.LVL4>:
  4002e2:	f8dd c6cc 	ldr.w	ip, [sp, #1740]	; 0x6cc

004002e6 <.LBB353>:
}


STATIC INLINE word64 rotrFixed64(word64 x, word64 y)
{
    return (x >> y) | (x << (sizeof(y) * 8 - y));
  4002e6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4002ea:	0b83      	lsrs	r3, r0, #14
  4002ec:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  4002f0:	9370      	str	r3, [sp, #448]	; 0x1c0
  4002f2:	0b8b      	lsrs	r3, r1, #14
  4002f4:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  4002f8:	9371      	str	r3, [sp, #452]	; 0x1c4

004002fa <.LBB355>:
  4002fa:	0c83      	lsrs	r3, r0, #18
  4002fc:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  400300:	9372      	str	r3, [sp, #456]	; 0x1c8
  400302:	0c8b      	lsrs	r3, r1, #18
  400304:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  400308:	9373      	str	r3, [sp, #460]	; 0x1cc

0040030a <.LBE355>:
        R( 0); R( 1); R( 2); R( 3);
  40030a:	ab70      	add	r3, sp, #448	; 0x1c0
  40030c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400310:	a972      	add	r1, sp, #456	; 0x1c8
  400312:	e9d1 0100 	ldrd	r0, r1, [r1]
  400316:	4042      	eors	r2, r0
  400318:	404b      	eors	r3, r1
  40031a:	4610      	mov	r0, r2
  40031c:	4619      	mov	r1, r3

0040031e <.LBB357>:
  40031e:	9b03      	ldr	r3, [sp, #12]
  400320:	05db      	lsls	r3, r3, #23
  400322:	9a02      	ldr	r2, [sp, #8]
  400324:	ea43 2352 	orr.w	r3, r3, r2, lsr #9
  400328:	9375      	str	r3, [sp, #468]	; 0x1d4
  40032a:	05d3      	lsls	r3, r2, #23
  40032c:	9a03      	ldr	r2, [sp, #12]
  40032e:	ea43 2352 	orr.w	r3, r3, r2, lsr #9
  400332:	9374      	str	r3, [sp, #464]	; 0x1d0

00400334 <.LBE357>:
  400334:	ab74      	add	r3, sp, #464	; 0x1d0
  400336:	e9d3 2300 	ldrd	r2, r3, [r3]
  40033a:	4042      	eors	r2, r0
  40033c:	404b      	eors	r3, r1
  40033e:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68
  400342:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400346:	ea82 0208 	eor.w	r2, r2, r8
  40034a:	ea83 0309 	eor.w	r3, r3, r9
  40034e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400352:	4010      	ands	r0, r2
  400354:	4019      	ands	r1, r3
  400356:	4602      	mov	r2, r0
  400358:	460b      	mov	r3, r1
  40035a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40035e:	4050      	eors	r0, r2
  400360:	4059      	eors	r1, r3
  400362:	4602      	mov	r2, r0
  400364:	460b      	mov	r3, r1
  400366:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  40036a:	1880      	adds	r0, r0, r2
  40036c:	4159      	adcs	r1, r3
  40036e:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400372:	4676      	mov	r6, lr
  400374:	e9de 2300 	ldrd	r2, r3, [lr]
  400378:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0
  40037c:	2f00      	cmp	r7, #0
  40037e:	f002 8255 	beq.w	40282c <.LCFI3>

00400382 <.LBB359>:
  400382:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  400386:	0cc3      	lsrs	r3, r0, #19
  400388:	ea43 3341 	orr.w	r3, r3, r1, lsl #13
  40038c:	9376      	str	r3, [sp, #472]	; 0x1d8
  40038e:	0ccb      	lsrs	r3, r1, #19
  400390:	ea43 3340 	orr.w	r3, r3, r0, lsl #13
  400394:	9377      	str	r3, [sp, #476]	; 0x1dc

00400396 <.LBB361>:
  400396:	00cb      	lsls	r3, r1, #3
  400398:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
  40039c:	9379      	str	r3, [sp, #484]	; 0x1e4
  40039e:	00c3      	lsls	r3, r0, #3
  4003a0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
  4003a4:	9378      	str	r3, [sp, #480]	; 0x1e0

004003a6 <.LBE361>:
  4003a6:	ab76      	add	r3, sp, #472	; 0x1d8
  4003a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4003ac:	a978      	add	r1, sp, #480	; 0x1e0
  4003ae:	e9d1 0100 	ldrd	r0, r1, [r1]
  4003b2:	4042      	eors	r2, r0
  4003b4:	404b      	eors	r3, r1
  4003b6:	990c      	ldr	r1, [sp, #48]	; 0x30
  4003b8:	0989      	lsrs	r1, r1, #6
  4003ba:	980d      	ldr	r0, [sp, #52]	; 0x34
  4003bc:	ea41 6180 	orr.w	r1, r1, r0, lsl #26
  4003c0:	9130      	str	r1, [sp, #192]	; 0xc0
  4003c2:	0981      	lsrs	r1, r0, #6
  4003c4:	9131      	str	r1, [sp, #196]	; 0xc4
  4003c6:	e9dd 0130 	ldrd	r0, r1, [sp, #192]	; 0xc0
  4003ca:	4050      	eors	r0, r2
  4003cc:	4059      	eors	r1, r3
  4003ce:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8

004003d2 <.LBB363>:
  4003d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  4003d6:	0851      	lsrs	r1, r2, #1
  4003d8:	ea41 71c3 	orr.w	r1, r1, r3, lsl #31
  4003dc:	917a      	str	r1, [sp, #488]	; 0x1e8
  4003de:	0859      	lsrs	r1, r3, #1
  4003e0:	ea41 71c2 	orr.w	r1, r1, r2, lsl #31
  4003e4:	917b      	str	r1, [sp, #492]	; 0x1ec

004003e6 <.LBB365>:
  4003e6:	0a11      	lsrs	r1, r2, #8
  4003e8:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
  4003ec:	917c      	str	r1, [sp, #496]	; 0x1f0
  4003ee:	0a19      	lsrs	r1, r3, #8
  4003f0:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
  4003f4:	917d      	str	r1, [sp, #500]	; 0x1f4

004003f6 <.LBE365>:
  4003f6:	ab7a      	add	r3, sp, #488	; 0x1e8
  4003f8:	e9d3 0100 	ldrd	r0, r1, [r3]
  4003fc:	ab7c      	add	r3, sp, #496	; 0x1f0
  4003fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  400402:	4050      	eors	r0, r2
  400404:	4059      	eors	r1, r3
  400406:	9b08      	ldr	r3, [sp, #32]
  400408:	09db      	lsrs	r3, r3, #7
  40040a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40040c:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
  400410:	9332      	str	r3, [sp, #200]	; 0xc8
  400412:	09d3      	lsrs	r3, r2, #7
  400414:	9333      	str	r3, [sp, #204]	; 0xcc
  400416:	e9dd 2332 	ldrd	r2, r3, [sp, #200]	; 0xc8
  40041a:	4042      	eors	r2, r0
  40041c:	404b      	eors	r3, r1
  40041e:	4610      	mov	r0, r2
  400420:	4619      	mov	r1, r3
  400422:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  400426:	1812      	adds	r2, r2, r0
  400428:	414b      	adcs	r3, r1
  40042a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40042e:	1880      	adds	r0, r0, r2
  400430:	4159      	adcs	r1, r3
  400432:	4602      	mov	r2, r0
  400434:	460b      	mov	r3, r1
  400436:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  40043a:	1880      	adds	r0, r0, r2
  40043c:	4159      	adcs	r1, r3
  40043e:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
  400442:	e001      	b.n	400448 <.LBE365+0x52>
  400444:	00407350 	.word	0x00407350
  400448:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  40044c:	e9dd 012c 	ldrd	r0, r1, [sp, #176]	; 0xb0
  400450:	1812      	adds	r2, r2, r0
  400452:	414b      	adcs	r3, r1
  400454:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  400458:	1880      	adds	r0, r0, r2
  40045a:	4159      	adcs	r1, r3
  40045c:	4602      	mov	r2, r0
  40045e:	460b      	mov	r3, r1
  400460:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  400464:	1880      	adds	r0, r0, r2
  400466:	4159      	adcs	r1, r3
  400468:	4602      	mov	r2, r0
  40046a:	460b      	mov	r3, r1
  40046c:	e9cd 2306 	strd	r2, r3, [sp, #24]
  400470:	eb10 020a 	adds.w	r2, r0, sl
  400474:	eb41 030b 	adc.w	r3, r1, fp
  400478:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0

0040047c <.LBB367>:
  40047c:	0f23      	lsrs	r3, r4, #28
  40047e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  400482:	937e      	str	r3, [sp, #504]	; 0x1f8
  400484:	0f2b      	lsrs	r3, r5, #28
  400486:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  40048a:	937f      	str	r3, [sp, #508]	; 0x1fc

0040048c <.LBB369>:
  40048c:	07ab      	lsls	r3, r5, #30
  40048e:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  400492:	9381      	str	r3, [sp, #516]	; 0x204
  400494:	07a3      	lsls	r3, r4, #30
  400496:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  40049a:	9380      	str	r3, [sp, #512]	; 0x200

0040049c <.LBE369>:
  40049c:	ab7e      	add	r3, sp, #504	; 0x1f8
  40049e:	e9d3 1200 	ldrd	r1, r2, [r3]
  4004a2:	ab80      	add	r3, sp, #512	; 0x200
  4004a4:	e9d3 ab00 	ldrd	sl, fp, [r3]
  4004a8:	ea81 010a 	eor.w	r1, r1, sl
  4004ac:	ea82 020b 	eor.w	r2, r2, fp
  4004b0:	4613      	mov	r3, r2
  4004b2:	460a      	mov	r2, r1

004004b4 <.LBB371>:
  4004b4:	0669      	lsls	r1, r5, #25
  4004b6:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  4004ba:	9183      	str	r1, [sp, #524]	; 0x20c
  4004bc:	0661      	lsls	r1, r4, #25
  4004be:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  4004c2:	9182      	str	r1, [sp, #520]	; 0x208

004004c4 <.LBE371>:
  4004c4:	a982      	add	r1, sp, #520	; 0x208
  4004c6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4004ca:	4050      	eors	r0, r2
  4004cc:	4059      	eors	r1, r3
  4004ce:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  4004d2:	e9dd ab18 	ldrd	sl, fp, [sp, #96]	; 0x60
  4004d6:	4650      	mov	r0, sl
  4004d8:	4659      	mov	r1, fp
  4004da:	4320      	orrs	r0, r4
  4004dc:	4329      	orrs	r1, r5
  4004de:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4004e2:	4002      	ands	r2, r0
  4004e4:	400b      	ands	r3, r1
  4004e6:	4650      	mov	r0, sl
  4004e8:	4659      	mov	r1, fp
  4004ea:	4020      	ands	r0, r4
  4004ec:	4029      	ands	r1, r5
  4004ee:	4310      	orrs	r0, r2
  4004f0:	4319      	orrs	r1, r3
  4004f2:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  4004f6:	1812      	adds	r2, r2, r0
  4004f8:	414b      	adcs	r3, r1
  4004fa:	4610      	mov	r0, r2
  4004fc:	4619      	mov	r1, r3
  4004fe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  400502:	1812      	adds	r2, r2, r0
  400504:	414b      	adcs	r3, r1
  400506:	e9cd 2306 	strd	r2, r3, [sp, #24]

0040050a <.LBB373>:
  40050a:	e9dd ab2c 	ldrd	sl, fp, [sp, #176]	; 0xb0
  40050e:	4653      	mov	r3, sl
  400510:	0b9b      	lsrs	r3, r3, #14
  400512:	465a      	mov	r2, fp
  400514:	ea43 438b 	orr.w	r3, r3, fp, lsl #18
  400518:	9384      	str	r3, [sp, #528]	; 0x210
  40051a:	0b93      	lsrs	r3, r2, #14
  40051c:	4652      	mov	r2, sl
  40051e:	ea43 438a 	orr.w	r3, r3, sl, lsl #18
  400522:	9385      	str	r3, [sp, #532]	; 0x214

00400524 <.LBB375>:
  400524:	0c93      	lsrs	r3, r2, #18
  400526:	465a      	mov	r2, fp
  400528:	ea43 338b 	orr.w	r3, r3, fp, lsl #14
  40052c:	9386      	str	r3, [sp, #536]	; 0x218
  40052e:	0c93      	lsrs	r3, r2, #18
  400530:	ea43 338a 	orr.w	r3, r3, sl, lsl #14
  400534:	9387      	str	r3, [sp, #540]	; 0x21c

00400536 <.LBE375>:
  400536:	ab84      	add	r3, sp, #528	; 0x210
  400538:	e9d3 2300 	ldrd	r2, r3, [r3]
  40053c:	a986      	add	r1, sp, #536	; 0x218
  40053e:	e9d1 0100 	ldrd	r0, r1, [r1]
  400542:	4042      	eors	r2, r0
  400544:	404b      	eors	r3, r1

00400546 <.LBB377>:
  400546:	4659      	mov	r1, fp
  400548:	05c9      	lsls	r1, r1, #23
  40054a:	4650      	mov	r0, sl
  40054c:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  400550:	9189      	str	r1, [sp, #548]	; 0x224
  400552:	05c1      	lsls	r1, r0, #23
  400554:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  400558:	9188      	str	r1, [sp, #544]	; 0x220

0040055a <.LBE377>:
  40055a:	a988      	add	r1, sp, #544	; 0x220
  40055c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400560:	4050      	eors	r0, r2
  400562:	4059      	eors	r1, r3
  400564:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400568:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40056c:	ea80 0008 	eor.w	r0, r0, r8
  400570:	ea81 0109 	eor.w	r1, r1, r9
  400574:	4652      	mov	r2, sl
  400576:	465b      	mov	r3, fp
  400578:	4002      	ands	r2, r0
  40057a:	400b      	ands	r3, r1
  40057c:	ea82 0a08 	eor.w	sl, r2, r8
  400580:	ea83 0b09 	eor.w	fp, r3, r9
  400584:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
  400588:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40058c:	1880      	adds	r0, r0, r2
  40058e:	4159      	adcs	r1, r3
  400590:	eb1a 0000 	adds.w	r0, sl, r0
  400594:	eb4b 0101 	adc.w	r1, fp, r1
  400598:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40059c:	2f00      	cmp	r7, #0
  40059e:	f002 814b 	beq.w	402838 <.LCFI3+0xc>

004005a2 <.LBB379>:
  4005a2:	e9dd 0128 	ldrd	r0, r1, [sp, #160]	; 0xa0
  4005a6:	0cc3      	lsrs	r3, r0, #19
  4005a8:	ea43 3341 	orr.w	r3, r3, r1, lsl #13
  4005ac:	938a      	str	r3, [sp, #552]	; 0x228
  4005ae:	0ccb      	lsrs	r3, r1, #19
  4005b0:	ea43 3340 	orr.w	r3, r3, r0, lsl #13
  4005b4:	938b      	str	r3, [sp, #556]	; 0x22c

004005b6 <.LBB381>:
  4005b6:	00cb      	lsls	r3, r1, #3
  4005b8:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
  4005bc:	938d      	str	r3, [sp, #564]	; 0x234
  4005be:	00c3      	lsls	r3, r0, #3
  4005c0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
  4005c4:	938c      	str	r3, [sp, #560]	; 0x230

004005c6 <.LBE381>:
  4005c6:	ab8a      	add	r3, sp, #552	; 0x228
  4005c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4005cc:	f50d 7a0c 	add.w	sl, sp, #560	; 0x230
  4005d0:	e9da ab00 	ldrd	sl, fp, [sl]
  4005d4:	ea82 020a 	eor.w	r2, r2, sl
  4005d8:	ea83 030b 	eor.w	r3, r3, fp
  4005dc:	468b      	mov	fp, r1
  4005de:	0981      	lsrs	r1, r0, #6
  4005e0:	4658      	mov	r0, fp
  4005e2:	ea41 618b 	orr.w	r1, r1, fp, lsl #26
  4005e6:	9134      	str	r1, [sp, #208]	; 0xd0
  4005e8:	0981      	lsrs	r1, r0, #6
  4005ea:	9135      	str	r1, [sp, #212]	; 0xd4
  4005ec:	e9dd 0134 	ldrd	r0, r1, [sp, #208]	; 0xd0
  4005f0:	4050      	eors	r0, r2
  4005f2:	4059      	eors	r1, r3
  4005f4:	4602      	mov	r2, r0
  4005f6:	460b      	mov	r3, r1
  4005f8:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	; 0x90
  4005fc:	e9dd ab08 	ldrd	sl, fp, [sp, #32]
  400600:	eb10 000a 	adds.w	r0, r0, sl
  400604:	eb41 010b 	adc.w	r1, r1, fp
  400608:	eb12 0a00 	adds.w	sl, r2, r0
  40060c:	eb43 0b01 	adc.w	fp, r3, r1
  400610:	e9cd ab08 	strd	sl, fp, [sp, #32]

00400614 <.LBB383>:
  400614:	e9dd 231e 	ldrd	r2, r3, [sp, #120]	; 0x78
  400618:	0851      	lsrs	r1, r2, #1
  40061a:	ea41 71c3 	orr.w	r1, r1, r3, lsl #31
  40061e:	918e      	str	r1, [sp, #568]	; 0x238
  400620:	0859      	lsrs	r1, r3, #1
  400622:	ea41 71c2 	orr.w	r1, r1, r2, lsl #31
  400626:	918f      	str	r1, [sp, #572]	; 0x23c

00400628 <.LBB385>:
  400628:	0a11      	lsrs	r1, r2, #8
  40062a:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
  40062e:	9190      	str	r1, [sp, #576]	; 0x240
  400630:	0a19      	lsrs	r1, r3, #8
  400632:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
  400636:	9191      	str	r1, [sp, #580]	; 0x244

00400638 <.LBE385>:
  400638:	a98e      	add	r1, sp, #568	; 0x238
  40063a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40063e:	f50d 7a10 	add.w	sl, sp, #576	; 0x240
  400642:	e9da ab00 	ldrd	sl, fp, [sl]
  400646:	ea80 000a 	eor.w	r0, r0, sl
  40064a:	ea81 010b 	eor.w	r1, r1, fp
  40064e:	469b      	mov	fp, r3
  400650:	09d3      	lsrs	r3, r2, #7
  400652:	465a      	mov	r2, fp
  400654:	ea43 634b 	orr.w	r3, r3, fp, lsl #25
  400658:	9336      	str	r3, [sp, #216]	; 0xd8
  40065a:	09d3      	lsrs	r3, r2, #7
  40065c:	9337      	str	r3, [sp, #220]	; 0xdc
  40065e:	e9dd 2336 	ldrd	r2, r3, [sp, #216]	; 0xd8
  400662:	4042      	eors	r2, r0
  400664:	404b      	eors	r3, r1
  400666:	4610      	mov	r0, r2
  400668:	4619      	mov	r1, r3
  40066a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  40066e:	1812      	adds	r2, r2, r0
  400670:	414b      	adcs	r3, r1
  400672:	e9cd 2308 	strd	r2, r3, [sp, #32]
  400676:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  40067a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40067e:	1812      	adds	r2, r2, r0
  400680:	414b      	adcs	r3, r1
  400682:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  400686:	1880      	adds	r0, r0, r2
  400688:	4159      	adcs	r1, r3
  40068a:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  40068e:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400692:	1812      	adds	r2, r2, r0
  400694:	414b      	adcs	r3, r1
  400696:	e9cd 2304 	strd	r2, r3, [sp, #16]

0040069a <.LBB387>:
  40069a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  40069e:	0f03      	lsrs	r3, r0, #28
  4006a0:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  4006a4:	9392      	str	r3, [sp, #584]	; 0x248
  4006a6:	0f0b      	lsrs	r3, r1, #28
  4006a8:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  4006ac:	9393      	str	r3, [sp, #588]	; 0x24c

004006ae <.LBB389>:
  4006ae:	078b      	lsls	r3, r1, #30
  4006b0:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  4006b4:	9395      	str	r3, [sp, #596]	; 0x254
  4006b6:	0783      	lsls	r3, r0, #30
  4006b8:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  4006bc:	9394      	str	r3, [sp, #592]	; 0x250

004006be <.LBE389>:
  4006be:	ab92      	add	r3, sp, #584	; 0x248
  4006c0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4006c4:	f50d 7a14 	add.w	sl, sp, #592	; 0x250
  4006c8:	e9da ab00 	ldrd	sl, fp, [sl]
  4006cc:	ea82 020a 	eor.w	r2, r2, sl
  4006d0:	ea83 030b 	eor.w	r3, r3, fp

004006d4 <.LBB391>:
  4006d4:	4682      	mov	sl, r0
  4006d6:	0649      	lsls	r1, r1, #25
  4006d8:	ea41 11da 	orr.w	r1, r1, sl, lsr #7
  4006dc:	9197      	str	r1, [sp, #604]	; 0x25c
  4006de:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
  4006e2:	4651      	mov	r1, sl
  4006e4:	0649      	lsls	r1, r1, #25
  4006e6:	ea41 11db 	orr.w	r1, r1, fp, lsr #7
  4006ea:	9196      	str	r1, [sp, #600]	; 0x258

004006ec <.LBE391>:
  4006ec:	a996      	add	r1, sp, #600	; 0x258
  4006ee:	e9d1 0100 	ldrd	r0, r1, [r1]
  4006f2:	4050      	eors	r0, r2
  4006f4:	4059      	eors	r1, r3
  4006f6:	e9cd 012a 	strd	r0, r1, [sp, #168]	; 0xa8
  4006fa:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
  4006fe:	4650      	mov	r0, sl
  400700:	4659      	mov	r1, fp
  400702:	4320      	orrs	r0, r4
  400704:	4329      	orrs	r1, r5
  400706:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  40070a:	4002      	ands	r2, r0
  40070c:	400b      	ands	r3, r1
  40070e:	4610      	mov	r0, r2
  400710:	4619      	mov	r1, r3
  400712:	4652      	mov	r2, sl
  400714:	465b      	mov	r3, fp
  400716:	4022      	ands	r2, r4
  400718:	402b      	ands	r3, r5
  40071a:	4302      	orrs	r2, r0
  40071c:	430b      	orrs	r3, r1
  40071e:	4610      	mov	r0, r2
  400720:	4619      	mov	r1, r3
  400722:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  400726:	1812      	adds	r2, r2, r0
  400728:	414b      	adcs	r3, r1
  40072a:	4610      	mov	r0, r2
  40072c:	4619      	mov	r1, r3
  40072e:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  400732:	1812      	adds	r2, r2, r0
  400734:	414b      	adcs	r3, r1
  400736:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8

0040073a <.LBB393>:
  40073a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40073e:	0b83      	lsrs	r3, r0, #14
  400740:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  400744:	9398      	str	r3, [sp, #608]	; 0x260
  400746:	0b8b      	lsrs	r3, r1, #14
  400748:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  40074c:	9399      	str	r3, [sp, #612]	; 0x264

0040074e <.LBB395>:
  40074e:	0c83      	lsrs	r3, r0, #18
  400750:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  400754:	939a      	str	r3, [sp, #616]	; 0x268
  400756:	0c8b      	lsrs	r3, r1, #18
  400758:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  40075c:	939b      	str	r3, [sp, #620]	; 0x26c

0040075e <.LBE395>:
  40075e:	ab98      	add	r3, sp, #608	; 0x260
  400760:	e9d3 2300 	ldrd	r2, r3, [r3]
  400764:	f50d 7a1a 	add.w	sl, sp, #616	; 0x268
  400768:	e9da ab00 	ldrd	sl, fp, [sl]
  40076c:	ea82 020a 	eor.w	r2, r2, sl
  400770:	ea83 030b 	eor.w	r3, r3, fp

00400774 <.LBB397>:
  400774:	4682      	mov	sl, r0
  400776:	468b      	mov	fp, r1
  400778:	05c9      	lsls	r1, r1, #23
  40077a:	4650      	mov	r0, sl
  40077c:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  400780:	919d      	str	r1, [sp, #628]	; 0x274
  400782:	05c1      	lsls	r1, r0, #23
  400784:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  400788:	919c      	str	r1, [sp, #624]	; 0x270

0040078a <.LBE397>:
  40078a:	a99c      	add	r1, sp, #624	; 0x270
  40078c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400790:	4050      	eors	r0, r2
  400792:	4059      	eors	r1, r3
  400794:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400798:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  40079c:	4650      	mov	r0, sl
  40079e:	4659      	mov	r1, fp
  4007a0:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  4007a4:	4042      	eors	r2, r0
  4007a6:	404b      	eors	r3, r1
  4007a8:	4610      	mov	r0, r2
  4007aa:	4619      	mov	r1, r3
  4007ac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4007b0:	4002      	ands	r2, r0
  4007b2:	400b      	ands	r3, r1
  4007b4:	4610      	mov	r0, r2
  4007b6:	4619      	mov	r1, r3
  4007b8:	4652      	mov	r2, sl
  4007ba:	465b      	mov	r3, fp
  4007bc:	4042      	eors	r2, r0
  4007be:	404b      	eors	r3, r1
  4007c0:	4610      	mov	r0, r2
  4007c2:	4619      	mov	r1, r3
  4007c4:	e9d6 2304 	ldrd	r2, r3, [r6, #16]
  4007c8:	eb18 0802 	adds.w	r8, r8, r2
  4007cc:	eb49 0903 	adc.w	r9, r9, r3
  4007d0:	eb18 0800 	adds.w	r8, r8, r0
  4007d4:	eb49 0901 	adc.w	r9, r9, r1
  4007d8:	2f00      	cmp	r7, #0
  4007da:	f002 8033 	beq.w	402844 <.LCFI3+0x18>

004007de <.LBB399>:
  4007de:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  4007e2:	0843      	lsrs	r3, r0, #1
  4007e4:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  4007e8:	939e      	str	r3, [sp, #632]	; 0x278
  4007ea:	084b      	lsrs	r3, r1, #1
  4007ec:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  4007f0:	939f      	str	r3, [sp, #636]	; 0x27c

004007f2 <.LBB401>:
  4007f2:	0a03      	lsrs	r3, r0, #8
  4007f4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  4007f8:	93a0      	str	r3, [sp, #640]	; 0x280
  4007fa:	0a0b      	lsrs	r3, r1, #8
  4007fc:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  400800:	93a1      	str	r3, [sp, #644]	; 0x284

00400802 <.LBE401>:
  400802:	ab9e      	add	r3, sp, #632	; 0x278
  400804:	e9d3 2300 	ldrd	r2, r3, [r3]
  400808:	f50d 7a20 	add.w	sl, sp, #640	; 0x280
  40080c:	e9da ab00 	ldrd	sl, fp, [sl]
  400810:	ea82 020a 	eor.w	r2, r2, sl
  400814:	ea83 030b 	eor.w	r3, r3, fp
  400818:	468b      	mov	fp, r1
  40081a:	09c1      	lsrs	r1, r0, #7
  40081c:	4658      	mov	r0, fp
  40081e:	ea41 614b 	orr.w	r1, r1, fp, lsl #25
  400822:	9138      	str	r1, [sp, #224]	; 0xe0
  400824:	09c1      	lsrs	r1, r0, #7
  400826:	9139      	str	r1, [sp, #228]	; 0xe4
  400828:	e9dd 0138 	ldrd	r0, r1, [sp, #224]	; 0xe0
  40082c:	4050      	eors	r0, r2
  40082e:	4059      	eors	r1, r3
  400830:	4602      	mov	r2, r0
  400832:	460b      	mov	r3, r1
  400834:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
  400838:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	; 0x50
  40083c:	eb10 000a 	adds.w	r0, r0, sl
  400840:	eb41 010b 	adc.w	r1, r1, fp
  400844:	eb12 0a00 	adds.w	sl, r2, r0
  400848:	eb43 0b01 	adc.w	fp, r3, r1
  40084c:	e9cd ab1e 	strd	sl, fp, [sp, #120]	; 0x78

00400850 <.LBB403>:
  400850:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
  400854:	0cd1      	lsrs	r1, r2, #19
  400856:	ea41 3143 	orr.w	r1, r1, r3, lsl #13
  40085a:	91a2      	str	r1, [sp, #648]	; 0x288
  40085c:	0cd9      	lsrs	r1, r3, #19
  40085e:	ea41 3142 	orr.w	r1, r1, r2, lsl #13
  400862:	91a3      	str	r1, [sp, #652]	; 0x28c

00400864 <.LBB405>:
  400864:	00d9      	lsls	r1, r3, #3
  400866:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  40086a:	91a5      	str	r1, [sp, #660]	; 0x294
  40086c:	00d1      	lsls	r1, r2, #3
  40086e:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
  400872:	91a4      	str	r1, [sp, #656]	; 0x290

00400874 <.LBE405>:
  400874:	a9a2      	add	r1, sp, #648	; 0x288
  400876:	e9d1 0100 	ldrd	r0, r1, [r1]
  40087a:	f50d 7a24 	add.w	sl, sp, #656	; 0x290
  40087e:	e9da ab00 	ldrd	sl, fp, [sl]
  400882:	ea80 000a 	eor.w	r0, r0, sl
  400886:	ea81 010b 	eor.w	r1, r1, fp
  40088a:	469b      	mov	fp, r3
  40088c:	0993      	lsrs	r3, r2, #6
  40088e:	465a      	mov	r2, fp
  400890:	ea43 638b 	orr.w	r3, r3, fp, lsl #26
  400894:	933a      	str	r3, [sp, #232]	; 0xe8
  400896:	0993      	lsrs	r3, r2, #6
  400898:	933b      	str	r3, [sp, #236]	; 0xec
  40089a:	e9dd 233a 	ldrd	r2, r3, [sp, #232]	; 0xe8
  40089e:	4042      	eors	r2, r0
  4008a0:	404b      	eors	r3, r1
  4008a2:	4610      	mov	r0, r2
  4008a4:	4619      	mov	r1, r3
  4008a6:	e9dd 231e 	ldrd	r2, r3, [sp, #120]	; 0x78
  4008aa:	1812      	adds	r2, r2, r0
  4008ac:	414b      	adcs	r3, r1
  4008ae:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  4008b2:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  4008b6:	eb12 0208 	adds.w	r2, r2, r8
  4008ba:	eb43 0309 	adc.w	r3, r3, r9
  4008be:	4690      	mov	r8, r2
  4008c0:	4699      	mov	r9, r3
  4008c2:	e9dd 231e 	ldrd	r2, r3, [sp, #120]	; 0x78
  4008c6:	eb12 0208 	adds.w	r2, r2, r8
  4008ca:	eb43 0309 	adc.w	r3, r3, r9
  4008ce:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  4008d2:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68
  4008d6:	eb18 0802 	adds.w	r8, r8, r2
  4008da:	eb49 0903 	adc.w	r9, r9, r3
  4008de:	e9cd 8918 	strd	r8, r9, [sp, #96]	; 0x60

004008e2 <.LBB407>:
  4008e2:	e9dd 012a 	ldrd	r0, r1, [sp, #168]	; 0xa8
  4008e6:	0f03      	lsrs	r3, r0, #28
  4008e8:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  4008ec:	93a6      	str	r3, [sp, #664]	; 0x298
  4008ee:	0f0b      	lsrs	r3, r1, #28
  4008f0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  4008f4:	93a7      	str	r3, [sp, #668]	; 0x29c

004008f6 <.LBB409>:
  4008f6:	078b      	lsls	r3, r1, #30
  4008f8:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  4008fc:	93a9      	str	r3, [sp, #676]	; 0x2a4
  4008fe:	0783      	lsls	r3, r0, #30
  400900:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  400904:	93a8      	str	r3, [sp, #672]	; 0x2a0

00400906 <.LBE409>:
  400906:	aba6      	add	r3, sp, #664	; 0x298
  400908:	e9d3 2300 	ldrd	r2, r3, [r3]
  40090c:	f50d 7828 	add.w	r8, sp, #672	; 0x2a0
  400910:	e9d8 ab00 	ldrd	sl, fp, [r8]
  400914:	ea82 020a 	eor.w	r2, r2, sl
  400918:	ea83 030b 	eor.w	r3, r3, fp

0040091c <.LBB411>:
  40091c:	4680      	mov	r8, r0
  40091e:	4689      	mov	r9, r1
  400920:	0649      	lsls	r1, r1, #25
  400922:	4640      	mov	r0, r8
  400924:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
  400928:	91ab      	str	r1, [sp, #684]	; 0x2ac
  40092a:	0641      	lsls	r1, r0, #25
  40092c:	ea41 11d9 	orr.w	r1, r1, r9, lsr #7
  400930:	91aa      	str	r1, [sp, #680]	; 0x2a8

00400932 <.LBE411>:
  400932:	a9aa      	add	r1, sp, #680	; 0x2a8
  400934:	e9d1 0100 	ldrd	r0, r1, [r1]
  400938:	4050      	eors	r0, r2
  40093a:	4059      	eors	r1, r3
  40093c:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8
  400940:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
  400944:	4652      	mov	r2, sl
  400946:	465b      	mov	r3, fp
  400948:	4640      	mov	r0, r8
  40094a:	4649      	mov	r1, r9
  40094c:	4302      	orrs	r2, r0
  40094e:	430b      	orrs	r3, r1
  400950:	4022      	ands	r2, r4
  400952:	402b      	ands	r3, r5
  400954:	f50d 61d8 	add.w	r1, sp, #1728	; 0x6c0
  400958:	e9c1 2300 	strd	r2, r3, [r1]
  40095c:	4650      	mov	r0, sl
  40095e:	4659      	mov	r1, fp
  400960:	4642      	mov	r2, r8
  400962:	464b      	mov	r3, r9
  400964:	4010      	ands	r0, r2
  400966:	4019      	ands	r1, r3
  400968:	f50d 63d8 	add.w	r3, sp, #1728	; 0x6c0
  40096c:	e9d3 9a00 	ldrd	r9, sl, [r3]
  400970:	ea49 0900 	orr.w	r9, r9, r0
  400974:	ea4a 0a01 	orr.w	sl, sl, r1
  400978:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  40097c:	eb12 0209 	adds.w	r2, r2, r9
  400980:	eb43 030a 	adc.w	r3, r3, sl
  400984:	4610      	mov	r0, r2
  400986:	4619      	mov	r1, r3
  400988:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  40098c:	1812      	adds	r2, r2, r0
  40098e:	414b      	adcs	r3, r1
  400990:	e9cd 232e 	strd	r2, r3, [sp, #184]	; 0xb8

00400994 <.LBB413>:
  400994:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  400998:	4643      	mov	r3, r8
  40099a:	0b9b      	lsrs	r3, r3, #14
  40099c:	464a      	mov	r2, r9
  40099e:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  4009a2:	93ac      	str	r3, [sp, #688]	; 0x2b0
  4009a4:	0b93      	lsrs	r3, r2, #14
  4009a6:	4642      	mov	r2, r8
  4009a8:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  4009ac:	93ad      	str	r3, [sp, #692]	; 0x2b4

004009ae <.LBB415>:
  4009ae:	0c93      	lsrs	r3, r2, #18
  4009b0:	464a      	mov	r2, r9
  4009b2:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  4009b6:	93ae      	str	r3, [sp, #696]	; 0x2b8
  4009b8:	0c93      	lsrs	r3, r2, #18
  4009ba:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  4009be:	93af      	str	r3, [sp, #700]	; 0x2bc

004009c0 <.LBE415>:
  4009c0:	abac      	add	r3, sp, #688	; 0x2b0
  4009c2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4009c6:	a9ae      	add	r1, sp, #696	; 0x2b8
  4009c8:	e9d1 0100 	ldrd	r0, r1, [r1]
  4009cc:	4042      	eors	r2, r0
  4009ce:	404b      	eors	r3, r1

004009d0 <.LBB417>:
  4009d0:	4649      	mov	r1, r9
  4009d2:	05c9      	lsls	r1, r1, #23
  4009d4:	4640      	mov	r0, r8
  4009d6:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  4009da:	91b1      	str	r1, [sp, #708]	; 0x2c4
  4009dc:	05c1      	lsls	r1, r0, #23
  4009de:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  4009e2:	91b0      	str	r1, [sp, #704]	; 0x2c0

004009e4 <.LBE417>:
  4009e4:	a9b0      	add	r1, sp, #704	; 0x2c0
  4009e6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4009ea:	4050      	eors	r0, r2
  4009ec:	4059      	eors	r1, r3
  4009ee:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  4009f2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4009f6:	e9dd ab2c 	ldrd	sl, fp, [sp, #176]	; 0xb0
  4009fa:	4652      	mov	r2, sl
  4009fc:	465b      	mov	r3, fp
  4009fe:	4042      	eors	r2, r0
  400a00:	404b      	eors	r3, r1
  400a02:	4610      	mov	r0, r2
  400a04:	4619      	mov	r1, r3
  400a06:	4642      	mov	r2, r8
  400a08:	464b      	mov	r3, r9
  400a0a:	4002      	ands	r2, r0
  400a0c:	400b      	ands	r3, r1
  400a0e:	ea8a 0802 	eor.w	r8, sl, r2
  400a12:	ea8b 0903 	eor.w	r9, fp, r3
  400a16:	e9d6 2306 	ldrd	r2, r3, [r6, #24]
  400a1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400a1e:	1880      	adds	r0, r0, r2
  400a20:	4159      	adcs	r1, r3
  400a22:	eb18 0000 	adds.w	r0, r8, r0
  400a26:	eb49 0101 	adc.w	r1, r9, r1
  400a2a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400a2e:	2f00      	cmp	r7, #0
  400a30:	f001 870e 	beq.w	402850 <.LCFI3+0x24>

00400a34 <.LBB419>:
  400a34:	e9dd 8922 	ldrd	r8, r9, [sp, #136]	; 0x88
  400a38:	4643      	mov	r3, r8
  400a3a:	085b      	lsrs	r3, r3, #1
  400a3c:	464a      	mov	r2, r9
  400a3e:	ea43 73c9 	orr.w	r3, r3, r9, lsl #31
  400a42:	93b2      	str	r3, [sp, #712]	; 0x2c8
  400a44:	0853      	lsrs	r3, r2, #1
  400a46:	4642      	mov	r2, r8
  400a48:	ea43 73c8 	orr.w	r3, r3, r8, lsl #31
  400a4c:	93b3      	str	r3, [sp, #716]	; 0x2cc

00400a4e <.LBB421>:
  400a4e:	0a13      	lsrs	r3, r2, #8
  400a50:	464a      	mov	r2, r9
  400a52:	ea43 6309 	orr.w	r3, r3, r9, lsl #24
  400a56:	93b4      	str	r3, [sp, #720]	; 0x2d0
  400a58:	0a13      	lsrs	r3, r2, #8
  400a5a:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
  400a5e:	93b5      	str	r3, [sp, #724]	; 0x2d4

00400a60 <.LBE421>:
  400a60:	abb2      	add	r3, sp, #712	; 0x2c8
  400a62:	e9d3 2300 	ldrd	r2, r3, [r3]
  400a66:	a9b4      	add	r1, sp, #720	; 0x2d0
  400a68:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400a6c:	ea82 020a 	eor.w	r2, r2, sl
  400a70:	ea83 030b 	eor.w	r3, r3, fp
  400a74:	4641      	mov	r1, r8
  400a76:	09c9      	lsrs	r1, r1, #7
  400a78:	4648      	mov	r0, r9
  400a7a:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  400a7e:	913c      	str	r1, [sp, #240]	; 0xf0
  400a80:	09c1      	lsrs	r1, r0, #7
  400a82:	913d      	str	r1, [sp, #244]	; 0xf4
  400a84:	e9dd 013c 	ldrd	r0, r1, [sp, #240]	; 0xf0
  400a88:	4050      	eors	r0, r2
  400a8a:	4059      	eors	r1, r3
  400a8c:	4602      	mov	r2, r0
  400a8e:	460b      	mov	r3, r1
  400a90:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  400a94:	e9dd ab16 	ldrd	sl, fp, [sp, #88]	; 0x58
  400a98:	eb10 000a 	adds.w	r0, r0, sl
  400a9c:	eb41 010b 	adc.w	r1, r1, fp
  400aa0:	eb12 0800 	adds.w	r8, r2, r0
  400aa4:	eb43 0901 	adc.w	r9, r3, r1
  400aa8:	e9cd 8920 	strd	r8, r9, [sp, #128]	; 0x80

00400aac <.LBB423>:
  400aac:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  400ab0:	4641      	mov	r1, r8
  400ab2:	0cc9      	lsrs	r1, r1, #19
  400ab4:	4648      	mov	r0, r9
  400ab6:	ea41 3149 	orr.w	r1, r1, r9, lsl #13
  400aba:	91b6      	str	r1, [sp, #728]	; 0x2d8
  400abc:	0cc1      	lsrs	r1, r0, #19
  400abe:	4640      	mov	r0, r8
  400ac0:	ea41 3148 	orr.w	r1, r1, r8, lsl #13
  400ac4:	91b7      	str	r1, [sp, #732]	; 0x2dc

00400ac6 <.LBB425>:
  400ac6:	4649      	mov	r1, r9
  400ac8:	00c9      	lsls	r1, r1, #3
  400aca:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
  400ace:	91b9      	str	r1, [sp, #740]	; 0x2e4
  400ad0:	00c1      	lsls	r1, r0, #3
  400ad2:	ea41 7159 	orr.w	r1, r1, r9, lsr #29
  400ad6:	91b8      	str	r1, [sp, #736]	; 0x2e0

00400ad8 <.LBE425>:
  400ad8:	abb6      	add	r3, sp, #728	; 0x2d8
  400ada:	e9d3 0100 	ldrd	r0, r1, [r3]
  400ade:	abb8      	add	r3, sp, #736	; 0x2e0
  400ae0:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400ae4:	ea80 000a 	eor.w	r0, r0, sl
  400ae8:	ea81 010b 	eor.w	r1, r1, fp
  400aec:	4643      	mov	r3, r8
  400aee:	099b      	lsrs	r3, r3, #6
  400af0:	464a      	mov	r2, r9
  400af2:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  400af6:	933e      	str	r3, [sp, #248]	; 0xf8
  400af8:	0993      	lsrs	r3, r2, #6
  400afa:	933f      	str	r3, [sp, #252]	; 0xfc
  400afc:	e9dd 233e 	ldrd	r2, r3, [sp, #248]	; 0xf8
  400b00:	4042      	eors	r2, r0
  400b02:	404b      	eors	r3, r1
  400b04:	4610      	mov	r0, r2
  400b06:	4619      	mov	r1, r3
  400b08:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
  400b0c:	1812      	adds	r2, r2, r0
  400b0e:	414b      	adcs	r3, r1
  400b10:	e9cd 2320 	strd	r2, r3, [sp, #128]	; 0x80
  400b14:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  400b18:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400b1c:	1812      	adds	r2, r2, r0
  400b1e:	414b      	adcs	r3, r1
  400b20:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  400b24:	1880      	adds	r0, r0, r2
  400b26:	4159      	adcs	r1, r3
  400b28:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400b2c:	1902      	adds	r2, r0, r4
  400b2e:	eb41 0305 	adc.w	r3, r1, r5
  400b32:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68

00400b36 <.LBB427>:
  400b36:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  400b3a:	0f23      	lsrs	r3, r4, #28
  400b3c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  400b40:	93ba      	str	r3, [sp, #744]	; 0x2e8
  400b42:	0f2b      	lsrs	r3, r5, #28
  400b44:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  400b48:	93bb      	str	r3, [sp, #748]	; 0x2ec

00400b4a <.LBB429>:
  400b4a:	07ab      	lsls	r3, r5, #30
  400b4c:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  400b50:	93bd      	str	r3, [sp, #756]	; 0x2f4
  400b52:	07a3      	lsls	r3, r4, #30
  400b54:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  400b58:	93bc      	str	r3, [sp, #752]	; 0x2f0

00400b5a <.LBE429>:
  400b5a:	abba      	add	r3, sp, #744	; 0x2e8
  400b5c:	e9d3 1200 	ldrd	r1, r2, [r3]
  400b60:	abbc      	add	r3, sp, #752	; 0x2f0
  400b62:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400b66:	ea81 010a 	eor.w	r1, r1, sl
  400b6a:	ea82 020b 	eor.w	r2, r2, fp
  400b6e:	4613      	mov	r3, r2
  400b70:	460a      	mov	r2, r1

00400b72 <.LBB431>:
  400b72:	0669      	lsls	r1, r5, #25
  400b74:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  400b78:	91bf      	str	r1, [sp, #764]	; 0x2fc
  400b7a:	0661      	lsls	r1, r4, #25
  400b7c:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  400b80:	91be      	str	r1, [sp, #760]	; 0x2f8

00400b82 <.LBE431>:
  400b82:	a9be      	add	r1, sp, #760	; 0x2f8
  400b84:	e9d1 0100 	ldrd	r0, r1, [r1]
  400b88:	4050      	eors	r0, r2
  400b8a:	4059      	eors	r1, r3
  400b8c:	f50d 63d8 	add.w	r3, sp, #1728	; 0x6c0
  400b90:	e9c3 0100 	strd	r0, r1, [r3]
  400b94:	e9dd ab2a 	ldrd	sl, fp, [sp, #168]	; 0xa8
  400b98:	4650      	mov	r0, sl
  400b9a:	4659      	mov	r1, fp
  400b9c:	46a0      	mov	r8, r4
  400b9e:	4320      	orrs	r0, r4
  400ba0:	4329      	orrs	r1, r5
  400ba2:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  400ba6:	4003      	ands	r3, r0
  400ba8:	400c      	ands	r4, r1
  400baa:	4618      	mov	r0, r3
  400bac:	4621      	mov	r1, r4
  400bae:	4652      	mov	r2, sl
  400bb0:	465b      	mov	r3, fp
  400bb2:	4644      	mov	r4, r8
  400bb4:	4022      	ands	r2, r4
  400bb6:	402b      	ands	r3, r5
  400bb8:	4310      	orrs	r0, r2
  400bba:	4319      	orrs	r1, r3
  400bbc:	f50d 63d8 	add.w	r3, sp, #1728	; 0x6c0
  400bc0:	e9d3 3400 	ldrd	r3, r4, [r3]
  400bc4:	181b      	adds	r3, r3, r0
  400bc6:	414c      	adcs	r4, r1
  400bc8:	4621      	mov	r1, r4
  400bca:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  400bce:	18e4      	adds	r4, r4, r3
  400bd0:	414d      	adcs	r5, r1

00400bd2 <.LBB433>:
  400bd2:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  400bd6:	0b83      	lsrs	r3, r0, #14
  400bd8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  400bdc:	93c0      	str	r3, [sp, #768]	; 0x300
  400bde:	0b8b      	lsrs	r3, r1, #14
  400be0:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  400be4:	93c1      	str	r3, [sp, #772]	; 0x304

00400be6 <.LBB435>:
  400be6:	0c83      	lsrs	r3, r0, #18
  400be8:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  400bec:	93c2      	str	r3, [sp, #776]	; 0x308
  400bee:	0c8b      	lsrs	r3, r1, #18
  400bf0:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  400bf4:	93c3      	str	r3, [sp, #780]	; 0x30c

00400bf6 <.LBE435>:
        R( 4); R( 5); R( 6); R( 7);
  400bf6:	abc0      	add	r3, sp, #768	; 0x300
  400bf8:	e9d3 2300 	ldrd	r2, r3, [r3]
  400bfc:	f50d 7842 	add.w	r8, sp, #776	; 0x308
  400c00:	e9d8 ab00 	ldrd	sl, fp, [r8]
  400c04:	ea82 020a 	eor.w	r2, r2, sl
  400c08:	ea83 030b 	eor.w	r3, r3, fp

00400c0c <.LBB437>:
  400c0c:	4682      	mov	sl, r0
  400c0e:	468b      	mov	fp, r1
  400c10:	05c9      	lsls	r1, r1, #23
  400c12:	4650      	mov	r0, sl
  400c14:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  400c18:	91c5      	str	r1, [sp, #788]	; 0x314
  400c1a:	05c1      	lsls	r1, r0, #23
  400c1c:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  400c20:	91c4      	str	r1, [sp, #784]	; 0x310

00400c22 <.LBE437>:
  400c22:	a9c4      	add	r1, sp, #784	; 0x310
  400c24:	e9d1 0100 	ldrd	r0, r1, [r1]
  400c28:	4050      	eors	r0, r2
  400c2a:	4059      	eors	r1, r3
  400c2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400c30:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
  400c34:	4640      	mov	r0, r8
  400c36:	4649      	mov	r1, r9
  400c38:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  400c3c:	4042      	eors	r2, r0
  400c3e:	404b      	eors	r3, r1
  400c40:	4610      	mov	r0, r2
  400c42:	4619      	mov	r1, r3
  400c44:	4652      	mov	r2, sl
  400c46:	465b      	mov	r3, fp
  400c48:	4002      	ands	r2, r0
  400c4a:	400b      	ands	r3, r1
  400c4c:	4610      	mov	r0, r2
  400c4e:	4619      	mov	r1, r3
  400c50:	4642      	mov	r2, r8
  400c52:	464b      	mov	r3, r9
  400c54:	4042      	eors	r2, r0
  400c56:	404b      	eors	r3, r1
  400c58:	4610      	mov	r0, r2
  400c5a:	4619      	mov	r1, r3
  400c5c:	e9d6 2308 	ldrd	r2, r3, [r6, #32]
  400c60:	e9dd ab2c 	ldrd	sl, fp, [sp, #176]	; 0xb0
  400c64:	eb1a 0a02 	adds.w	sl, sl, r2
  400c68:	eb4b 0b03 	adc.w	fp, fp, r3
  400c6c:	eb1a 0200 	adds.w	r2, sl, r0
  400c70:	eb4b 0301 	adc.w	r3, fp, r1
  400c74:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0
  400c78:	2f00      	cmp	r7, #0
  400c7a:	f001 85ef 	beq.w	40285c <.LCFI3+0x30>

00400c7e <.LBB439>:
  400c7e:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
  400c82:	4643      	mov	r3, r8
  400c84:	085b      	lsrs	r3, r3, #1
  400c86:	464a      	mov	r2, r9
  400c88:	ea43 73c9 	orr.w	r3, r3, r9, lsl #31
  400c8c:	93c6      	str	r3, [sp, #792]	; 0x318
  400c8e:	0853      	lsrs	r3, r2, #1
  400c90:	4642      	mov	r2, r8
  400c92:	ea43 73c8 	orr.w	r3, r3, r8, lsl #31
  400c96:	93c7      	str	r3, [sp, #796]	; 0x31c

00400c98 <.LBB441>:
  400c98:	0a13      	lsrs	r3, r2, #8
  400c9a:	464a      	mov	r2, r9
  400c9c:	ea43 6309 	orr.w	r3, r3, r9, lsl #24
  400ca0:	93c8      	str	r3, [sp, #800]	; 0x320
  400ca2:	0a13      	lsrs	r3, r2, #8
  400ca4:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
  400ca8:	93c9      	str	r3, [sp, #804]	; 0x324

00400caa <.LBE441>:
  400caa:	abc6      	add	r3, sp, #792	; 0x318
  400cac:	e9d3 2300 	ldrd	r2, r3, [r3]
  400cb0:	a9c8      	add	r1, sp, #800	; 0x320
  400cb2:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400cb6:	ea82 020a 	eor.w	r2, r2, sl
  400cba:	ea83 030b 	eor.w	r3, r3, fp
  400cbe:	4641      	mov	r1, r8
  400cc0:	09c9      	lsrs	r1, r1, #7
  400cc2:	4648      	mov	r0, r9
  400cc4:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  400cc8:	9140      	str	r1, [sp, #256]	; 0x100
  400cca:	09c1      	lsrs	r1, r0, #7
  400ccc:	9141      	str	r1, [sp, #260]	; 0x104
  400cce:	a940      	add	r1, sp, #256	; 0x100
  400cd0:	e9d1 0100 	ldrd	r0, r1, [r1]
  400cd4:	4050      	eors	r0, r2
  400cd6:	4059      	eors	r1, r3
  400cd8:	4602      	mov	r2, r0
  400cda:	460b      	mov	r3, r1
  400cdc:	e9dd 0122 	ldrd	r0, r1, [sp, #136]	; 0x88
  400ce0:	e9dd ab26 	ldrd	sl, fp, [sp, #152]	; 0x98
  400ce4:	eb10 000a 	adds.w	r0, r0, sl
  400ce8:	eb41 010b 	adc.w	r1, r1, fp
  400cec:	eb12 0800 	adds.w	r8, r2, r0
  400cf0:	eb43 0901 	adc.w	r9, r3, r1
  400cf4:	e9cd 8922 	strd	r8, r9, [sp, #136]	; 0x88

00400cf8 <.LBB443>:
  400cf8:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
  400cfc:	4641      	mov	r1, r8
  400cfe:	0cc9      	lsrs	r1, r1, #19
  400d00:	4648      	mov	r0, r9
  400d02:	ea41 3149 	orr.w	r1, r1, r9, lsl #13
  400d06:	91ca      	str	r1, [sp, #808]	; 0x328
  400d08:	0cc1      	lsrs	r1, r0, #19
  400d0a:	4640      	mov	r0, r8
  400d0c:	ea41 3148 	orr.w	r1, r1, r8, lsl #13
  400d10:	91cb      	str	r1, [sp, #812]	; 0x32c

00400d12 <.LBB445>:
  400d12:	4649      	mov	r1, r9
  400d14:	00c9      	lsls	r1, r1, #3
  400d16:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
  400d1a:	91cd      	str	r1, [sp, #820]	; 0x334
  400d1c:	00c1      	lsls	r1, r0, #3
  400d1e:	ea41 7159 	orr.w	r1, r1, r9, lsr #29
  400d22:	91cc      	str	r1, [sp, #816]	; 0x330

00400d24 <.LBE445>:
  400d24:	abca      	add	r3, sp, #808	; 0x328
  400d26:	e9d3 0100 	ldrd	r0, r1, [r3]
  400d2a:	abcc      	add	r3, sp, #816	; 0x330
  400d2c:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400d30:	ea80 000a 	eor.w	r0, r0, sl
  400d34:	ea81 010b 	eor.w	r1, r1, fp
  400d38:	4643      	mov	r3, r8
  400d3a:	099b      	lsrs	r3, r3, #6
  400d3c:	464a      	mov	r2, r9
  400d3e:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  400d42:	9342      	str	r3, [sp, #264]	; 0x108
  400d44:	0993      	lsrs	r3, r2, #6
  400d46:	9343      	str	r3, [sp, #268]	; 0x10c
  400d48:	ab42      	add	r3, sp, #264	; 0x108
  400d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
  400d4e:	4042      	eors	r2, r0
  400d50:	404b      	eors	r3, r1
  400d52:	4610      	mov	r0, r2
  400d54:	4619      	mov	r1, r3
  400d56:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
  400d5a:	1812      	adds	r2, r2, r0
  400d5c:	414b      	adcs	r3, r1
  400d5e:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  400d62:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400d66:	e9dd 012c 	ldrd	r0, r1, [sp, #176]	; 0xb0
  400d6a:	1880      	adds	r0, r0, r2
  400d6c:	4159      	adcs	r1, r3
  400d6e:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
  400d72:	1812      	adds	r2, r2, r0
  400d74:	414b      	adcs	r3, r1
  400d76:	4690      	mov	r8, r2
  400d78:	4699      	mov	r9, r3
  400d7a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  400d7e:	eb12 0208 	adds.w	r2, r2, r8
  400d82:	eb43 0309 	adc.w	r3, r3, r9
  400d86:	e9cd 2306 	strd	r2, r3, [sp, #24]

00400d8a <.LBB447>:
  400d8a:	0f23      	lsrs	r3, r4, #28
  400d8c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  400d90:	93ce      	str	r3, [sp, #824]	; 0x338
  400d92:	0f2b      	lsrs	r3, r5, #28
  400d94:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  400d98:	93cf      	str	r3, [sp, #828]	; 0x33c

00400d9a <.LBB449>:
  400d9a:	07ab      	lsls	r3, r5, #30
  400d9c:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  400da0:	93d1      	str	r3, [sp, #836]	; 0x344
  400da2:	07a3      	lsls	r3, r4, #30
  400da4:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  400da8:	93d0      	str	r3, [sp, #832]	; 0x340

00400daa <.LBE449>:
  400daa:	abce      	add	r3, sp, #824	; 0x338
  400dac:	e9d3 2300 	ldrd	r2, r3, [r3]
  400db0:	a9d0      	add	r1, sp, #832	; 0x340
  400db2:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400db6:	ea82 020a 	eor.w	r2, r2, sl
  400dba:	ea83 030b 	eor.w	r3, r3, fp

00400dbe <.LBB451>:
  400dbe:	0669      	lsls	r1, r5, #25
  400dc0:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  400dc4:	91d3      	str	r1, [sp, #844]	; 0x34c
  400dc6:	0661      	lsls	r1, r4, #25
  400dc8:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  400dcc:	91d2      	str	r1, [sp, #840]	; 0x348

00400dce <.LBE451>:
  400dce:	a9d2      	add	r1, sp, #840	; 0x348
  400dd0:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400dd4:	ea8a 0a02 	eor.w	sl, sl, r2
  400dd8:	ea8b 0b03 	eor.w	fp, fp, r3
  400ddc:	e9cd ab02 	strd	sl, fp, [sp, #8]
  400de0:	e9dd ab2e 	ldrd	sl, fp, [sp, #184]	; 0xb8
  400de4:	4650      	mov	r0, sl
  400de6:	4659      	mov	r1, fp
  400de8:	4320      	orrs	r0, r4
  400dea:	4329      	orrs	r1, r5
  400dec:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  400df0:	4002      	ands	r2, r0
  400df2:	400b      	ands	r3, r1
  400df4:	ea0a 0a04 	and.w	sl, sl, r4
  400df8:	ea0b 0b05 	and.w	fp, fp, r5
  400dfc:	ea4a 0a02 	orr.w	sl, sl, r2
  400e00:	ea4b 0b03 	orr.w	fp, fp, r3
  400e04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400e08:	eb12 020a 	adds.w	r2, r2, sl
  400e0c:	eb43 030b 	adc.w	r3, r3, fp
  400e10:	eb18 0a02 	adds.w	sl, r8, r2
  400e14:	eb49 0b03 	adc.w	fp, r9, r3

00400e18 <.LBB453>:
  400e18:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  400e1c:	4643      	mov	r3, r8
  400e1e:	0b9b      	lsrs	r3, r3, #14
  400e20:	464a      	mov	r2, r9
  400e22:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  400e26:	93d4      	str	r3, [sp, #848]	; 0x350
  400e28:	0b93      	lsrs	r3, r2, #14
  400e2a:	4642      	mov	r2, r8
  400e2c:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  400e30:	93d5      	str	r3, [sp, #852]	; 0x354

00400e32 <.LBB455>:
  400e32:	0c93      	lsrs	r3, r2, #18
  400e34:	464a      	mov	r2, r9
  400e36:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  400e3a:	93d6      	str	r3, [sp, #856]	; 0x358
  400e3c:	0c93      	lsrs	r3, r2, #18
  400e3e:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  400e42:	93d7      	str	r3, [sp, #860]	; 0x35c

00400e44 <.LBE455>:
  400e44:	abd4      	add	r3, sp, #848	; 0x350
  400e46:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e4a:	a9d6      	add	r1, sp, #856	; 0x358
  400e4c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400e50:	4042      	eors	r2, r0
  400e52:	404b      	eors	r3, r1

00400e54 <.LBB457>:
  400e54:	4649      	mov	r1, r9
  400e56:	05c9      	lsls	r1, r1, #23
  400e58:	4640      	mov	r0, r8
  400e5a:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  400e5e:	91d9      	str	r1, [sp, #868]	; 0x364
  400e60:	05c1      	lsls	r1, r0, #23
  400e62:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  400e66:	91d8      	str	r1, [sp, #864]	; 0x360

00400e68 <.LBE457>:
  400e68:	a9d8      	add	r1, sp, #864	; 0x360
  400e6a:	e9d1 0100 	ldrd	r0, r1, [r1]
  400e6e:	4050      	eors	r0, r2
  400e70:	4059      	eors	r1, r3
  400e72:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400e76:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  400e7a:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  400e7e:	4042      	eors	r2, r0
  400e80:	404b      	eors	r3, r1
  400e82:	4610      	mov	r0, r2
  400e84:	4619      	mov	r1, r3
  400e86:	4642      	mov	r2, r8
  400e88:	464b      	mov	r3, r9
  400e8a:	4002      	ands	r2, r0
  400e8c:	400b      	ands	r3, r1
  400e8e:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  400e92:	ea88 0802 	eor.w	r8, r8, r2
  400e96:	ea89 0903 	eor.w	r9, r9, r3
  400e9a:	e9d6 230a 	ldrd	r2, r3, [r6, #40]	; 0x28
  400e9e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400ea2:	1880      	adds	r0, r0, r2
  400ea4:	4159      	adcs	r1, r3
  400ea6:	eb18 0000 	adds.w	r0, r8, r0
  400eaa:	eb49 0101 	adc.w	r1, r9, r1
  400eae:	e9cd 0104 	strd	r0, r1, [sp, #16]
  400eb2:	2f00      	cmp	r7, #0
  400eb4:	f001 84d8 	beq.w	402868 <.LCFI3+0x3c>

00400eb8 <.LBB459>:
  400eb8:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
  400ebc:	4643      	mov	r3, r8
  400ebe:	085b      	lsrs	r3, r3, #1
  400ec0:	464a      	mov	r2, r9
  400ec2:	ea43 73c9 	orr.w	r3, r3, r9, lsl #31
  400ec6:	93da      	str	r3, [sp, #872]	; 0x368
  400ec8:	0853      	lsrs	r3, r2, #1
  400eca:	4642      	mov	r2, r8
  400ecc:	ea43 73c8 	orr.w	r3, r3, r8, lsl #31
  400ed0:	93db      	str	r3, [sp, #876]	; 0x36c

00400ed2 <.LBB461>:
  400ed2:	0a13      	lsrs	r3, r2, #8
  400ed4:	464a      	mov	r2, r9
  400ed6:	ea43 6309 	orr.w	r3, r3, r9, lsl #24
  400eda:	93dc      	str	r3, [sp, #880]	; 0x370
  400edc:	0a13      	lsrs	r3, r2, #8
  400ede:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
  400ee2:	93dd      	str	r3, [sp, #884]	; 0x374

00400ee4 <.LBE461>:
  400ee4:	abda      	add	r3, sp, #872	; 0x368
  400ee6:	e9d3 2300 	ldrd	r2, r3, [r3]
  400eea:	a9dc      	add	r1, sp, #880	; 0x370
  400eec:	e9d1 0100 	ldrd	r0, r1, [r1]
  400ef0:	4042      	eors	r2, r0
  400ef2:	404b      	eors	r3, r1
  400ef4:	4641      	mov	r1, r8
  400ef6:	09c9      	lsrs	r1, r1, #7
  400ef8:	4648      	mov	r0, r9
  400efa:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  400efe:	9144      	str	r1, [sp, #272]	; 0x110
  400f00:	09c1      	lsrs	r1, r0, #7
  400f02:	9145      	str	r1, [sp, #276]	; 0x114
  400f04:	a944      	add	r1, sp, #272	; 0x110
  400f06:	e9d1 0100 	ldrd	r0, r1, [r1]
  400f0a:	4050      	eors	r0, r2
  400f0c:	4059      	eors	r1, r3
  400f0e:	4680      	mov	r8, r0
  400f10:	4689      	mov	r9, r1
  400f12:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  400f16:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  400f1a:	1880      	adds	r0, r0, r2
  400f1c:	4159      	adcs	r1, r3
  400f1e:	eb18 0200 	adds.w	r2, r8, r0
  400f22:	eb49 0301 	adc.w	r3, r9, r1
  400f26:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28

00400f2a <.LBB463>:
  400f2a:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
  400f2e:	4641      	mov	r1, r8
  400f30:	0cc9      	lsrs	r1, r1, #19
  400f32:	4648      	mov	r0, r9
  400f34:	ea41 3149 	orr.w	r1, r1, r9, lsl #13
  400f38:	91de      	str	r1, [sp, #888]	; 0x378
  400f3a:	0cc1      	lsrs	r1, r0, #19
  400f3c:	4640      	mov	r0, r8
  400f3e:	ea41 3148 	orr.w	r1, r1, r8, lsl #13
  400f42:	91df      	str	r1, [sp, #892]	; 0x37c

00400f44 <.LBB465>:
  400f44:	4649      	mov	r1, r9
  400f46:	00c9      	lsls	r1, r1, #3
  400f48:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
  400f4c:	91e1      	str	r1, [sp, #900]	; 0x384
  400f4e:	00c1      	lsls	r1, r0, #3
  400f50:	ea41 7159 	orr.w	r1, r1, r9, lsr #29
  400f54:	91e0      	str	r1, [sp, #896]	; 0x380

00400f56 <.LBE465>:
  400f56:	abde      	add	r3, sp, #888	; 0x378
  400f58:	e9d3 0100 	ldrd	r0, r1, [r3]
  400f5c:	abe0      	add	r3, sp, #896	; 0x380
  400f5e:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f62:	4050      	eors	r0, r2
  400f64:	4059      	eors	r1, r3
  400f66:	4643      	mov	r3, r8
  400f68:	099b      	lsrs	r3, r3, #6
  400f6a:	464a      	mov	r2, r9
  400f6c:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  400f70:	9346      	str	r3, [sp, #280]	; 0x118
  400f72:	0993      	lsrs	r3, r2, #6
  400f74:	9347      	str	r3, [sp, #284]	; 0x11c
  400f76:	ab46      	add	r3, sp, #280	; 0x118
  400f78:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f7c:	4042      	eors	r2, r0
  400f7e:	404b      	eors	r3, r1
  400f80:	4610      	mov	r0, r2
  400f82:	4619      	mov	r1, r3
  400f84:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  400f88:	1812      	adds	r2, r2, r0
  400f8a:	414b      	adcs	r3, r1
  400f8c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  400f90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400f94:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400f98:	1812      	adds	r2, r2, r0
  400f9a:	414b      	adcs	r3, r1
  400f9c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  400fa0:	1880      	adds	r0, r0, r2
  400fa2:	4159      	adcs	r1, r3
  400fa4:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  400fa8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400fac:	1812      	adds	r2, r2, r0
  400fae:	414b      	adcs	r3, r1
  400fb0:	e9cd 2304 	strd	r2, r3, [sp, #16]

00400fb4 <.LBB467>:
  400fb4:	ea4f 731a 	mov.w	r3, sl, lsr #28
  400fb8:	ea43 130b 	orr.w	r3, r3, fp, lsl #4
  400fbc:	93e2      	str	r3, [sp, #904]	; 0x388
  400fbe:	ea4f 731b 	mov.w	r3, fp, lsr #28
  400fc2:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
  400fc6:	93e3      	str	r3, [sp, #908]	; 0x38c

00400fc8 <.LBB469>:
  400fc8:	ea4f 738b 	mov.w	r3, fp, lsl #30
  400fcc:	ea43 039a 	orr.w	r3, r3, sl, lsr #2
  400fd0:	93e5      	str	r3, [sp, #916]	; 0x394
  400fd2:	ea4f 738a 	mov.w	r3, sl, lsl #30
  400fd6:	ea43 039b 	orr.w	r3, r3, fp, lsr #2
  400fda:	93e4      	str	r3, [sp, #912]	; 0x390

00400fdc <.LBE469>:
  400fdc:	abe2      	add	r3, sp, #904	; 0x388
  400fde:	e9d3 1200 	ldrd	r1, r2, [r3]
  400fe2:	abe4      	add	r3, sp, #912	; 0x390
  400fe4:	e9d3 8900 	ldrd	r8, r9, [r3]
  400fe8:	ea81 0108 	eor.w	r1, r1, r8
  400fec:	ea82 0209 	eor.w	r2, r2, r9
  400ff0:	4613      	mov	r3, r2
  400ff2:	460a      	mov	r2, r1

00400ff4 <.LBB471>:
  400ff4:	ea4f 614b 	mov.w	r1, fp, lsl #25
  400ff8:	ea41 11da 	orr.w	r1, r1, sl, lsr #7
  400ffc:	91e7      	str	r1, [sp, #924]	; 0x39c
  400ffe:	ea4f 614a 	mov.w	r1, sl, lsl #25
  401002:	ea41 11db 	orr.w	r1, r1, fp, lsr #7
  401006:	91e6      	str	r1, [sp, #920]	; 0x398

00401008 <.LBE471>:
  401008:	a9e6      	add	r1, sp, #920	; 0x398
  40100a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40100e:	4050      	eors	r0, r2
  401010:	4059      	eors	r1, r3
  401012:	4680      	mov	r8, r0
  401014:	4689      	mov	r9, r1
  401016:	ea44 000a 	orr.w	r0, r4, sl
  40101a:	ea45 010b 	orr.w	r1, r5, fp
  40101e:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  401022:	4002      	ands	r2, r0
  401024:	400b      	ands	r3, r1
  401026:	4610      	mov	r0, r2
  401028:	4619      	mov	r1, r3
  40102a:	ea04 020a 	and.w	r2, r4, sl
  40102e:	ea05 030b 	and.w	r3, r5, fp
  401032:	4302      	orrs	r2, r0
  401034:	430b      	orrs	r3, r1
  401036:	eb12 0008 	adds.w	r0, r2, r8
  40103a:	eb43 0109 	adc.w	r1, r3, r9
  40103e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401042:	1812      	adds	r2, r2, r0
  401044:	414b      	adcs	r3, r1
  401046:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8

0040104a <.LBB473>:
  40104a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40104e:	0b83      	lsrs	r3, r0, #14
  401050:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  401054:	93e8      	str	r3, [sp, #928]	; 0x3a0
  401056:	0b8b      	lsrs	r3, r1, #14
  401058:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  40105c:	93e9      	str	r3, [sp, #932]	; 0x3a4

0040105e <.LBB475>:
  40105e:	0c83      	lsrs	r3, r0, #18
  401060:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  401064:	93ea      	str	r3, [sp, #936]	; 0x3a8
  401066:	0c8b      	lsrs	r3, r1, #18
  401068:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  40106c:	93eb      	str	r3, [sp, #940]	; 0x3ac

0040106e <.LBE475>:
  40106e:	abe8      	add	r3, sp, #928	; 0x3a0
  401070:	e9d3 2300 	ldrd	r2, r3, [r3]
  401074:	f50d 786a 	add.w	r8, sp, #936	; 0x3a8
  401078:	e9d8 8900 	ldrd	r8, r9, [r8]
  40107c:	ea82 0208 	eor.w	r2, r2, r8
  401080:	ea83 0309 	eor.w	r3, r3, r9

00401084 <.LBB477>:
  401084:	4680      	mov	r8, r0
  401086:	4689      	mov	r9, r1
  401088:	05c9      	lsls	r1, r1, #23
  40108a:	4640      	mov	r0, r8
  40108c:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  401090:	91ed      	str	r1, [sp, #948]	; 0x3b4
  401092:	05c1      	lsls	r1, r0, #23
  401094:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  401098:	91ec      	str	r1, [sp, #944]	; 0x3b0

0040109a <.LBE477>:
  40109a:	a9ec      	add	r1, sp, #944	; 0x3b0
  40109c:	e9d1 0100 	ldrd	r0, r1, [r1]
  4010a0:	4050      	eors	r0, r2
  4010a2:	4059      	eors	r1, r3
  4010a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4010a8:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  4010ac:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  4010b0:	ea80 0008 	eor.w	r0, r0, r8
  4010b4:	ea81 0109 	eor.w	r1, r1, r9
  4010b8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4010bc:	4002      	ands	r2, r0
  4010be:	400b      	ands	r3, r1
  4010c0:	4610      	mov	r0, r2
  4010c2:	4619      	mov	r1, r3
  4010c4:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  4010c8:	4042      	eors	r2, r0
  4010ca:	404b      	eors	r3, r1
  4010cc:	4610      	mov	r0, r2
  4010ce:	4619      	mov	r1, r3
  4010d0:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	; 0x30
  4010d4:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  4010d8:	eb18 0802 	adds.w	r8, r8, r2
  4010dc:	eb49 0903 	adc.w	r9, r9, r3
  4010e0:	eb18 0200 	adds.w	r2, r8, r0
  4010e4:	eb49 0301 	adc.w	r3, r9, r1
  4010e8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  4010ec:	2f00      	cmp	r7, #0
  4010ee:	f001 83c1 	beq.w	402874 <.LCFI3+0x48>

004010f2 <.LBB479>:
  4010f2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4010f6:	0843      	lsrs	r3, r0, #1
  4010f8:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  4010fc:	93ee      	str	r3, [sp, #952]	; 0x3b8
  4010fe:	084b      	lsrs	r3, r1, #1
  401100:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  401104:	93ef      	str	r3, [sp, #956]	; 0x3bc

00401106 <.LBB481>:
  401106:	0a03      	lsrs	r3, r0, #8
  401108:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  40110c:	93f0      	str	r3, [sp, #960]	; 0x3c0
  40110e:	0a0b      	lsrs	r3, r1, #8
  401110:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  401114:	93f1      	str	r3, [sp, #964]	; 0x3c4

00401116 <.LBE481>:
  401116:	abee      	add	r3, sp, #952	; 0x3b8
  401118:	e9d3 2300 	ldrd	r2, r3, [r3]
  40111c:	f50d 7870 	add.w	r8, sp, #960	; 0x3c0
  401120:	e9d8 8900 	ldrd	r8, r9, [r8]
  401124:	ea82 0208 	eor.w	r2, r2, r8
  401128:	ea83 0309 	eor.w	r3, r3, r9
  40112c:	4689      	mov	r9, r1
  40112e:	09c1      	lsrs	r1, r0, #7
  401130:	4648      	mov	r0, r9
  401132:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  401136:	9148      	str	r1, [sp, #288]	; 0x120
  401138:	09c1      	lsrs	r1, r0, #7
  40113a:	9149      	str	r1, [sp, #292]	; 0x124
  40113c:	a948      	add	r1, sp, #288	; 0x120
  40113e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401142:	4050      	eors	r0, r2
  401144:	4059      	eors	r1, r3
  401146:	4602      	mov	r2, r0
  401148:	460b      	mov	r3, r1
  40114a:	e9dd 0128 	ldrd	r0, r1, [sp, #160]	; 0xa0
  40114e:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
  401152:	eb10 0008 	adds.w	r0, r0, r8
  401156:	eb41 0109 	adc.w	r1, r1, r9
  40115a:	eb12 0800 	adds.w	r8, r2, r0
  40115e:	eb43 0901 	adc.w	r9, r3, r1
  401162:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38

00401166 <.LBB483>:
  401166:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
  40116a:	0cd1      	lsrs	r1, r2, #19
  40116c:	ea41 3143 	orr.w	r1, r1, r3, lsl #13
  401170:	91f2      	str	r1, [sp, #968]	; 0x3c8
  401172:	0cd9      	lsrs	r1, r3, #19
  401174:	ea41 3142 	orr.w	r1, r1, r2, lsl #13
  401178:	91f3      	str	r1, [sp, #972]	; 0x3cc

0040117a <.LBB485>:
  40117a:	00d9      	lsls	r1, r3, #3
  40117c:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  401180:	91f5      	str	r1, [sp, #980]	; 0x3d4
  401182:	00d1      	lsls	r1, r2, #3
  401184:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
  401188:	91f4      	str	r1, [sp, #976]	; 0x3d0

0040118a <.LBE485>:
  40118a:	a9f2      	add	r1, sp, #968	; 0x3c8
  40118c:	e9d1 0100 	ldrd	r0, r1, [r1]
  401190:	f50d 7874 	add.w	r8, sp, #976	; 0x3d0
  401194:	e9d8 8900 	ldrd	r8, r9, [r8]
  401198:	ea80 0008 	eor.w	r0, r0, r8
  40119c:	ea81 0109 	eor.w	r1, r1, r9
  4011a0:	4699      	mov	r9, r3
  4011a2:	0993      	lsrs	r3, r2, #6
  4011a4:	464a      	mov	r2, r9
  4011a6:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  4011aa:	934a      	str	r3, [sp, #296]	; 0x128
  4011ac:	0993      	lsrs	r3, r2, #6
  4011ae:	934b      	str	r3, [sp, #300]	; 0x12c
  4011b0:	ab4a      	add	r3, sp, #296	; 0x128
  4011b2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011b6:	4042      	eors	r2, r0
  4011b8:	404b      	eors	r3, r1
  4011ba:	4610      	mov	r0, r2
  4011bc:	4619      	mov	r1, r3
  4011be:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  4011c2:	1812      	adds	r2, r2, r0
  4011c4:	414b      	adcs	r3, r1
  4011c6:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  4011ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4011ce:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  4011d2:	1880      	adds	r0, r0, r2
  4011d4:	4159      	adcs	r1, r3
  4011d6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  4011da:	1812      	adds	r2, r2, r0
  4011dc:	414b      	adcs	r3, r1
  4011de:	4610      	mov	r0, r2
  4011e0:	4619      	mov	r1, r3
  4011e2:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  4011e6:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  4011ea:	1880      	adds	r0, r0, r2
  4011ec:	4159      	adcs	r1, r3
  4011ee:	4602      	mov	r2, r0
  4011f0:	460b      	mov	r3, r1
  4011f2:	e9cd 2302 	strd	r2, r3, [sp, #8]

004011f6 <.LBB487>:
  4011f6:	e9dd 892a 	ldrd	r8, r9, [sp, #168]	; 0xa8
  4011fa:	4643      	mov	r3, r8
  4011fc:	0f1b      	lsrs	r3, r3, #28
  4011fe:	464a      	mov	r2, r9
  401200:	ea43 1309 	orr.w	r3, r3, r9, lsl #4
  401204:	93f6      	str	r3, [sp, #984]	; 0x3d8
  401206:	0f13      	lsrs	r3, r2, #28
  401208:	4642      	mov	r2, r8
  40120a:	ea43 1308 	orr.w	r3, r3, r8, lsl #4
  40120e:	93f7      	str	r3, [sp, #988]	; 0x3dc

00401210 <.LBB489>:
  401210:	464b      	mov	r3, r9
  401212:	079b      	lsls	r3, r3, #30
  401214:	ea43 0398 	orr.w	r3, r3, r8, lsr #2
  401218:	93f9      	str	r3, [sp, #996]	; 0x3e4
  40121a:	0793      	lsls	r3, r2, #30
  40121c:	ea43 0399 	orr.w	r3, r3, r9, lsr #2
  401220:	93f8      	str	r3, [sp, #992]	; 0x3e0

00401222 <.LBE489>:
  401222:	abf6      	add	r3, sp, #984	; 0x3d8
  401224:	e9d3 2300 	ldrd	r2, r3, [r3]
  401228:	a9f8      	add	r1, sp, #992	; 0x3e0
  40122a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40122e:	4042      	eors	r2, r0
  401230:	404b      	eors	r3, r1

00401232 <.LBB491>:
  401232:	4649      	mov	r1, r9
  401234:	0649      	lsls	r1, r1, #25
  401236:	4640      	mov	r0, r8
  401238:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
  40123c:	91fb      	str	r1, [sp, #1004]	; 0x3ec
  40123e:	0641      	lsls	r1, r0, #25
  401240:	ea41 11d9 	orr.w	r1, r1, r9, lsr #7
  401244:	91fa      	str	r1, [sp, #1000]	; 0x3e8

00401246 <.LBE491>:
  401246:	a9fa      	add	r1, sp, #1000	; 0x3e8
  401248:	e9d1 0100 	ldrd	r0, r1, [r1]
  40124c:	4050      	eors	r0, r2
  40124e:	4059      	eors	r1, r3
  401250:	4602      	mov	r2, r0
  401252:	460b      	mov	r3, r1
  401254:	ea48 000a 	orr.w	r0, r8, sl
  401258:	ea49 010b 	orr.w	r1, r9, fp
  40125c:	4020      	ands	r0, r4
  40125e:	4029      	ands	r1, r5
  401260:	ea08 080a 	and.w	r8, r8, sl
  401264:	ea09 090b 	and.w	r9, r9, fp
  401268:	ea48 0800 	orr.w	r8, r8, r0
  40126c:	ea49 0901 	orr.w	r9, r9, r1
  401270:	eb18 0002 	adds.w	r0, r8, r2
  401274:	eb49 0103 	adc.w	r1, r9, r3
  401278:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  40127c:	eb18 0800 	adds.w	r8, r8, r0
  401280:	eb49 0901 	adc.w	r9, r9, r1

00401284 <.LBB493>:
  401284:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401288:	0b83      	lsrs	r3, r0, #14
  40128a:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  40128e:	93fc      	str	r3, [sp, #1008]	; 0x3f0
  401290:	0b8b      	lsrs	r3, r1, #14
  401292:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  401296:	93fd      	str	r3, [sp, #1012]	; 0x3f4

00401298 <.LBB495>:
  401298:	0c83      	lsrs	r3, r0, #18
  40129a:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  40129e:	93fe      	str	r3, [sp, #1016]	; 0x3f8
  4012a0:	0c8b      	lsrs	r3, r1, #18
  4012a2:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  4012a6:	93ff      	str	r3, [sp, #1020]	; 0x3fc

004012a8 <.LBE495>:
  4012a8:	abfc      	add	r3, sp, #1008	; 0x3f0
  4012aa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012ae:	a9fe      	add	r1, sp, #1016	; 0x3f8
  4012b0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4012b4:	4042      	eors	r2, r0
  4012b6:	404b      	eors	r3, r1

004012b8 <.LBB497>:
  4012b8:	9903      	ldr	r1, [sp, #12]
  4012ba:	05c9      	lsls	r1, r1, #23
  4012bc:	9802      	ldr	r0, [sp, #8]
  4012be:	ea41 2150 	orr.w	r1, r1, r0, lsr #9
  4012c2:	f8cd 1404 	str.w	r1, [sp, #1028]	; 0x404
  4012c6:	05c1      	lsls	r1, r0, #23
  4012c8:	9803      	ldr	r0, [sp, #12]
  4012ca:	ea41 2150 	orr.w	r1, r1, r0, lsr #9
  4012ce:	f8cd 1400 	str.w	r1, [sp, #1024]	; 0x400

004012d2 <.LBE497>:
  4012d2:	f50d 6180 	add.w	r1, sp, #1024	; 0x400
  4012d6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4012da:	4050      	eors	r0, r2
  4012dc:	4059      	eors	r1, r3
  4012de:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  4012e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  4012e6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4012ea:	4050      	eors	r0, r2
  4012ec:	4059      	eors	r1, r3
  4012ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4012f2:	4002      	ands	r2, r0
  4012f4:	400b      	ands	r3, r1
  4012f6:	4610      	mov	r0, r2
  4012f8:	4619      	mov	r1, r3
  4012fa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  4012fe:	4042      	eors	r2, r0
  401300:	404b      	eors	r3, r1
  401302:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0
  401306:	e9d6 230e 	ldrd	r2, r3, [r6, #56]	; 0x38
  40130a:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  40130e:	1880      	adds	r0, r0, r2
  401310:	4159      	adcs	r1, r3
  401312:	4602      	mov	r2, r0
  401314:	460b      	mov	r3, r1
  401316:	e9dd 012c 	ldrd	r0, r1, [sp, #176]	; 0xb0
  40131a:	1880      	adds	r0, r0, r2
  40131c:	4159      	adcs	r1, r3
  40131e:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  401322:	2f00      	cmp	r7, #0
  401324:	f001 82ac 	beq.w	402880 <.LCFI3+0x54>

00401328 <.LBB499>:
  401328:	e9dd 0100 	ldrd	r0, r1, [sp]
  40132c:	0843      	lsrs	r3, r0, #1
  40132e:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  401332:	f8cd 3408 	str.w	r3, [sp, #1032]	; 0x408
  401336:	084b      	lsrs	r3, r1, #1
  401338:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  40133c:	f8cd 340c 	str.w	r3, [sp, #1036]	; 0x40c

00401340 <.LBB501>:
  401340:	0a03      	lsrs	r3, r0, #8
  401342:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  401346:	f8cd 3410 	str.w	r3, [sp, #1040]	; 0x410
  40134a:	0a0b      	lsrs	r3, r1, #8
  40134c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  401350:	f8cd 3414 	str.w	r3, [sp, #1044]	; 0x414

00401354 <.LBE501>:
  401354:	f50d 6381 	add.w	r3, sp, #1032	; 0x408
  401358:	e9d3 2300 	ldrd	r2, r3, [r3]
  40135c:	f50d 6182 	add.w	r1, sp, #1040	; 0x410
  401360:	e9d1 0100 	ldrd	r0, r1, [r1]
  401364:	4042      	eors	r2, r0
  401366:	404b      	eors	r3, r1
  401368:	9900      	ldr	r1, [sp, #0]
  40136a:	09c9      	lsrs	r1, r1, #7
  40136c:	9801      	ldr	r0, [sp, #4]
  40136e:	ea41 6140 	orr.w	r1, r1, r0, lsl #25
  401372:	914c      	str	r1, [sp, #304]	; 0x130
  401374:	09c1      	lsrs	r1, r0, #7
  401376:	914d      	str	r1, [sp, #308]	; 0x134
  401378:	a94c      	add	r1, sp, #304	; 0x130
  40137a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40137e:	4050      	eors	r0, r2
  401380:	4059      	eors	r1, r3
  401382:	4602      	mov	r2, r0
  401384:	460b      	mov	r3, r1
  401386:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  40138a:	1880      	adds	r0, r0, r2
  40138c:	4159      	adcs	r1, r3
  40138e:	4602      	mov	r2, r0
  401390:	460b      	mov	r3, r1
  401392:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  401396:	1880      	adds	r0, r0, r2
  401398:	4159      	adcs	r1, r3
  40139a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40

0040139e <.LBB503>:
  40139e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  4013a2:	0cd1      	lsrs	r1, r2, #19
  4013a4:	ea41 3143 	orr.w	r1, r1, r3, lsl #13
  4013a8:	f8cd 1418 	str.w	r1, [sp, #1048]	; 0x418
  4013ac:	0cd9      	lsrs	r1, r3, #19
  4013ae:	ea41 3142 	orr.w	r1, r1, r2, lsl #13
  4013b2:	f8cd 141c 	str.w	r1, [sp, #1052]	; 0x41c

004013b6 <.LBB505>:
  4013b6:	00d9      	lsls	r1, r3, #3
  4013b8:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  4013bc:	f8cd 1424 	str.w	r1, [sp, #1060]	; 0x424
  4013c0:	00d1      	lsls	r1, r2, #3
  4013c2:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
  4013c6:	f8cd 1420 	str.w	r1, [sp, #1056]	; 0x420

004013ca <.LBE505>:
  4013ca:	f50d 6383 	add.w	r3, sp, #1048	; 0x418
  4013ce:	e9d3 0100 	ldrd	r0, r1, [r3]
  4013d2:	f50d 6384 	add.w	r3, sp, #1056	; 0x420
  4013d6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4013da:	4050      	eors	r0, r2
  4013dc:	4059      	eors	r1, r3
  4013de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4013e0:	099b      	lsrs	r3, r3, #6
  4013e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4013e4:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
  4013e8:	934e      	str	r3, [sp, #312]	; 0x138
  4013ea:	0993      	lsrs	r3, r2, #6
  4013ec:	934f      	str	r3, [sp, #316]	; 0x13c
  4013ee:	ab4e      	add	r3, sp, #312	; 0x138
  4013f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4013f4:	4042      	eors	r2, r0
  4013f6:	404b      	eors	r3, r1
  4013f8:	4610      	mov	r0, r2
  4013fa:	4619      	mov	r1, r3
  4013fc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  401400:	1812      	adds	r2, r2, r0
  401402:	414b      	adcs	r3, r1
  401404:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  401408:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  40140c:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  401410:	1812      	adds	r2, r2, r0
  401412:	414b      	adcs	r3, r1
  401414:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  401418:	1880      	adds	r0, r0, r2
  40141a:	4159      	adcs	r1, r3
  40141c:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  401420:	1902      	adds	r2, r0, r4
  401422:	eb41 0305 	adc.w	r3, r1, r5
  401426:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60

0040142a <.LBB507>:
  40142a:	ea4f 7318 	mov.w	r3, r8, lsr #28
  40142e:	ea43 1309 	orr.w	r3, r3, r9, lsl #4
  401432:	f8cd 3428 	str.w	r3, [sp, #1064]	; 0x428
  401436:	ea4f 7319 	mov.w	r3, r9, lsr #28
  40143a:	ea43 1308 	orr.w	r3, r3, r8, lsl #4
  40143e:	f8cd 342c 	str.w	r3, [sp, #1068]	; 0x42c

00401442 <.LBB509>:
  401442:	ea4f 7389 	mov.w	r3, r9, lsl #30
  401446:	ea43 0398 	orr.w	r3, r3, r8, lsr #2
  40144a:	f8cd 3434 	str.w	r3, [sp, #1076]	; 0x434
  40144e:	ea4f 7388 	mov.w	r3, r8, lsl #30
  401452:	ea43 0399 	orr.w	r3, r3, r9, lsr #2
  401456:	f8cd 3430 	str.w	r3, [sp, #1072]	; 0x430

0040145a <.LBE509>:
  40145a:	f50d 6385 	add.w	r3, sp, #1064	; 0x428
  40145e:	e9d3 1200 	ldrd	r1, r2, [r3]
  401462:	f50d 6386 	add.w	r3, sp, #1072	; 0x430
  401466:	e9d3 3400 	ldrd	r3, r4, [r3]
  40146a:	4059      	eors	r1, r3
  40146c:	4062      	eors	r2, r4
  40146e:	4613      	mov	r3, r2
  401470:	460a      	mov	r2, r1

00401472 <.LBB511>:
  401472:	ea4f 6149 	mov.w	r1, r9, lsl #25
  401476:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
  40147a:	f8cd 143c 	str.w	r1, [sp, #1084]	; 0x43c
  40147e:	ea4f 6148 	mov.w	r1, r8, lsl #25
  401482:	ea41 11d9 	orr.w	r1, r1, r9, lsr #7
  401486:	f8cd 1438 	str.w	r1, [sp, #1080]	; 0x438

0040148a <.LBE511>:
  40148a:	f50d 6187 	add.w	r1, sp, #1080	; 0x438
  40148e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401492:	4050      	eors	r0, r2
  401494:	4059      	eors	r1, r3
  401496:	4602      	mov	r2, r0
  401498:	460b      	mov	r3, r1
  40149a:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  40149e:	ea44 0008 	orr.w	r0, r4, r8
  4014a2:	ea45 0109 	orr.w	r1, r5, r9
  4014a6:	ea00 000a 	and.w	r0, r0, sl
  4014aa:	ea01 010b 	and.w	r1, r1, fp
  4014ae:	ea04 0408 	and.w	r4, r4, r8
  4014b2:	ea05 0509 	and.w	r5, r5, r9
  4014b6:	4320      	orrs	r0, r4
  4014b8:	4329      	orrs	r1, r5
  4014ba:	1880      	adds	r0, r0, r2
  4014bc:	4159      	adcs	r1, r3
  4014be:	e9dd 341a 	ldrd	r3, r4, [sp, #104]	; 0x68
  4014c2:	181b      	adds	r3, r3, r0
  4014c4:	414c      	adcs	r4, r1
  4014c6:	e9cd 341a 	strd	r3, r4, [sp, #104]	; 0x68

004014ca <.LBB513>:
  4014ca:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  4014ce:	0ba3      	lsrs	r3, r4, #14
  4014d0:	ea43 4385 	orr.w	r3, r3, r5, lsl #18
  4014d4:	f8cd 3440 	str.w	r3, [sp, #1088]	; 0x440
  4014d8:	0bab      	lsrs	r3, r5, #14
  4014da:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  4014de:	f8cd 3444 	str.w	r3, [sp, #1092]	; 0x444

004014e2 <.LBB515>:
  4014e2:	0ca3      	lsrs	r3, r4, #18
  4014e4:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
  4014e8:	f8cd 3448 	str.w	r3, [sp, #1096]	; 0x448
  4014ec:	0cab      	lsrs	r3, r5, #18
  4014ee:	ea43 3384 	orr.w	r3, r3, r4, lsl #14
  4014f2:	f8cd 344c 	str.w	r3, [sp, #1100]	; 0x44c

004014f6 <.LBE515>:
        R( 8); R( 9); R(10); R(11);
  4014f6:	f50d 6388 	add.w	r3, sp, #1088	; 0x440
  4014fa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014fe:	f50d 6189 	add.w	r1, sp, #1096	; 0x448
  401502:	e9d1 0100 	ldrd	r0, r1, [r1]
  401506:	4042      	eors	r2, r0
  401508:	404b      	eors	r3, r1

0040150a <.LBB517>:
  40150a:	05e9      	lsls	r1, r5, #23
  40150c:	ea41 2154 	orr.w	r1, r1, r4, lsr #9
  401510:	f8cd 1454 	str.w	r1, [sp, #1108]	; 0x454
  401514:	05e1      	lsls	r1, r4, #23
  401516:	ea41 2155 	orr.w	r1, r1, r5, lsr #9
  40151a:	f8cd 1450 	str.w	r1, [sp, #1104]	; 0x450

0040151e <.LBE517>:
  40151e:	f50d 618a 	add.w	r1, sp, #1104	; 0x450
  401522:	e9d1 0100 	ldrd	r0, r1, [r1]
  401526:	4050      	eors	r0, r2
  401528:	4059      	eors	r1, r3
  40152a:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  40152e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
  401532:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
  401536:	404b      	eors	r3, r1
  401538:	4054      	eors	r4, r2
  40153a:	4625      	mov	r5, r4
  40153c:	461c      	mov	r4, r3
  40153e:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  401542:	4022      	ands	r2, r4
  401544:	402b      	ands	r3, r5
  401546:	4614      	mov	r4, r2
  401548:	461d      	mov	r5, r3
  40154a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  40154e:	4062      	eors	r2, r4
  401550:	406b      	eors	r3, r5
  401552:	4614      	mov	r4, r2
  401554:	461d      	mov	r5, r3
  401556:	e9d6 2310 	ldrd	r2, r3, [r6, #64]	; 0x40
  40155a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  40155e:	1880      	adds	r0, r0, r2
  401560:	4159      	adcs	r1, r3
  401562:	1820      	adds	r0, r4, r0
  401564:	eb45 0101 	adc.w	r1, r5, r1
  401568:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40156c:	2f00      	cmp	r7, #0
  40156e:	f001 818d 	beq.w	40288c <.LCFI3+0x60>

00401572 <.LBB519>:
  401572:	e9dd 4512 	ldrd	r4, r5, [sp, #72]	; 0x48
  401576:	0863      	lsrs	r3, r4, #1
  401578:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  40157c:	f8cd 3458 	str.w	r3, [sp, #1112]	; 0x458
  401580:	086b      	lsrs	r3, r5, #1
  401582:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  401586:	f8cd 345c 	str.w	r3, [sp, #1116]	; 0x45c

0040158a <.LBB521>:
  40158a:	0a23      	lsrs	r3, r4, #8
  40158c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401590:	f8cd 3460 	str.w	r3, [sp, #1120]	; 0x460
  401594:	0a2b      	lsrs	r3, r5, #8
  401596:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  40159a:	f8cd 3464 	str.w	r3, [sp, #1124]	; 0x464

0040159e <.LBE521>:
  40159e:	f50d 638b 	add.w	r3, sp, #1112	; 0x458
  4015a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4015a6:	f50d 618c 	add.w	r1, sp, #1120	; 0x460
  4015aa:	e9d1 0100 	ldrd	r0, r1, [r1]
  4015ae:	4042      	eors	r2, r0
  4015b0:	404b      	eors	r3, r1
  4015b2:	09e1      	lsrs	r1, r4, #7
  4015b4:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4015b8:	9150      	str	r1, [sp, #320]	; 0x140
  4015ba:	09e9      	lsrs	r1, r5, #7
  4015bc:	9151      	str	r1, [sp, #324]	; 0x144
  4015be:	a950      	add	r1, sp, #320	; 0x140
  4015c0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4015c4:	4050      	eors	r0, r2
  4015c6:	4059      	eors	r1, r3
  4015c8:	4602      	mov	r2, r0
  4015ca:	460b      	mov	r3, r1
  4015cc:	e9dd 0100 	ldrd	r0, r1, [sp]
  4015d0:	1880      	adds	r0, r0, r2
  4015d2:	4159      	adcs	r1, r3
  4015d4:	4602      	mov	r2, r0
  4015d6:	460b      	mov	r3, r1
  4015d8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4015dc:	1880      	adds	r0, r0, r2
  4015de:	4159      	adcs	r1, r3
  4015e0:	e9cd 0100 	strd	r0, r1, [sp]

004015e4 <.LBB523>:
  4015e4:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
  4015e8:	0ce1      	lsrs	r1, r4, #19
  4015ea:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  4015ee:	f8cd 1468 	str.w	r1, [sp, #1128]	; 0x468
  4015f2:	0ce9      	lsrs	r1, r5, #19
  4015f4:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  4015f8:	f8cd 146c 	str.w	r1, [sp, #1132]	; 0x46c

004015fc <.LBB525>:
  4015fc:	00e9      	lsls	r1, r5, #3
  4015fe:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401602:	f8cd 1474 	str.w	r1, [sp, #1140]	; 0x474
  401606:	00e1      	lsls	r1, r4, #3
  401608:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  40160c:	f8cd 1470 	str.w	r1, [sp, #1136]	; 0x470

00401610 <.LBE525>:
  401610:	f50d 638d 	add.w	r3, sp, #1128	; 0x468
  401614:	e9d3 0100 	ldrd	r0, r1, [r3]
  401618:	f50d 638e 	add.w	r3, sp, #1136	; 0x470
  40161c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401620:	4050      	eors	r0, r2
  401622:	4059      	eors	r1, r3
  401624:	09a4      	lsrs	r4, r4, #6
  401626:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  401628:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  40162c:	9452      	str	r4, [sp, #328]	; 0x148
  40162e:	09ac      	lsrs	r4, r5, #6
  401630:	9453      	str	r4, [sp, #332]	; 0x14c
  401632:	ab52      	add	r3, sp, #328	; 0x148
  401634:	e9d3 4500 	ldrd	r4, r5, [r3]
  401638:	4044      	eors	r4, r0
  40163a:	404d      	eors	r5, r1
  40163c:	4620      	mov	r0, r4
  40163e:	e9dd 3400 	ldrd	r3, r4, [sp]
  401642:	181b      	adds	r3, r3, r0
  401644:	416c      	adcs	r4, r5
  401646:	e9cd 3400 	strd	r3, r4, [sp]
  40164a:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  40164e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401652:	1912      	adds	r2, r2, r4
  401654:	416b      	adcs	r3, r5
  401656:	4614      	mov	r4, r2
  401658:	461d      	mov	r5, r3
  40165a:	e9dd 2300 	ldrd	r2, r3, [sp]
  40165e:	1912      	adds	r2, r2, r4
  401660:	416b      	adcs	r3, r5
  401662:	461c      	mov	r4, r3
  401664:	4613      	mov	r3, r2
  401666:	e9cd 3406 	strd	r3, r4, [sp, #24]
  40166a:	eb12 020a 	adds.w	r2, r2, sl
  40166e:	eb44 030b 	adc.w	r3, r4, fp
  401672:	4692      	mov	sl, r2
  401674:	469b      	mov	fp, r3

00401676 <.LBB527>:
  401676:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  40167a:	0f23      	lsrs	r3, r4, #28
  40167c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  401680:	f8cd 3478 	str.w	r3, [sp, #1144]	; 0x478
  401684:	0f2b      	lsrs	r3, r5, #28
  401686:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  40168a:	f8cd 347c 	str.w	r3, [sp, #1148]	; 0x47c

0040168e <.LBB529>:
  40168e:	07ab      	lsls	r3, r5, #30
  401690:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  401694:	f8cd 3484 	str.w	r3, [sp, #1156]	; 0x484
  401698:	07a3      	lsls	r3, r4, #30
  40169a:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  40169e:	f8cd 3480 	str.w	r3, [sp, #1152]	; 0x480

004016a2 <.LBE529>:
  4016a2:	f50d 638f 	add.w	r3, sp, #1144	; 0x478
  4016a6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4016aa:	f50d 6190 	add.w	r1, sp, #1152	; 0x480
  4016ae:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016b2:	4042      	eors	r2, r0
  4016b4:	404b      	eors	r3, r1

004016b6 <.LBB531>:
  4016b6:	0669      	lsls	r1, r5, #25
  4016b8:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  4016bc:	f8cd 148c 	str.w	r1, [sp, #1164]	; 0x48c
  4016c0:	0661      	lsls	r1, r4, #25
  4016c2:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  4016c6:	f8cd 1488 	str.w	r1, [sp, #1160]	; 0x488

004016ca <.LBE531>:
  4016ca:	f50d 6191 	add.w	r1, sp, #1160	; 0x488
  4016ce:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016d2:	4050      	eors	r0, r2
  4016d4:	4059      	eors	r1, r3
  4016d6:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  4016da:	ea44 0008 	orr.w	r0, r4, r8
  4016de:	ea45 0109 	orr.w	r1, r5, r9
  4016e2:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4016e6:	4002      	ands	r2, r0
  4016e8:	400b      	ands	r3, r1
  4016ea:	ea04 0408 	and.w	r4, r4, r8
  4016ee:	ea05 0509 	and.w	r5, r5, r9
  4016f2:	4314      	orrs	r4, r2
  4016f4:	431d      	orrs	r5, r3
  4016f6:	4620      	mov	r0, r4
  4016f8:	4629      	mov	r1, r5
  4016fa:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  4016fe:	1824      	adds	r4, r4, r0
  401700:	414d      	adcs	r5, r1
  401702:	4620      	mov	r0, r4
  401704:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  401708:	181b      	adds	r3, r3, r0
  40170a:	416c      	adcs	r4, r5
  40170c:	e9cd 3406 	strd	r3, r4, [sp, #24]

00401710 <.LBB533>:
  401710:	ea4f 339a 	mov.w	r3, sl, lsr #14
  401714:	ea43 438b 	orr.w	r3, r3, fp, lsl #18
  401718:	f8cd 3490 	str.w	r3, [sp, #1168]	; 0x490
  40171c:	ea4f 339b 	mov.w	r3, fp, lsr #14
  401720:	ea43 438a 	orr.w	r3, r3, sl, lsl #18
  401724:	f8cd 3494 	str.w	r3, [sp, #1172]	; 0x494

00401728 <.LBB535>:
  401728:	ea4f 439a 	mov.w	r3, sl, lsr #18
  40172c:	ea43 338b 	orr.w	r3, r3, fp, lsl #14
  401730:	f8cd 3498 	str.w	r3, [sp, #1176]	; 0x498
  401734:	ea4f 439b 	mov.w	r3, fp, lsr #18
  401738:	ea43 338a 	orr.w	r3, r3, sl, lsl #14
  40173c:	f8cd 349c 	str.w	r3, [sp, #1180]	; 0x49c

00401740 <.LBE535>:
  401740:	f50d 6392 	add.w	r3, sp, #1168	; 0x490
  401744:	e9d3 2300 	ldrd	r2, r3, [r3]
  401748:	f50d 6193 	add.w	r1, sp, #1176	; 0x498
  40174c:	e9d1 0100 	ldrd	r0, r1, [r1]
  401750:	4042      	eors	r2, r0
  401752:	404b      	eors	r3, r1

00401754 <.LBB537>:
  401754:	ea4f 51cb 	mov.w	r1, fp, lsl #23
  401758:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  40175c:	f8cd 14a4 	str.w	r1, [sp, #1188]	; 0x4a4
  401760:	ea4f 51ca 	mov.w	r1, sl, lsl #23
  401764:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  401768:	f8cd 14a0 	str.w	r1, [sp, #1184]	; 0x4a0

0040176c <.LBE537>:
  40176c:	f50d 6194 	add.w	r1, sp, #1184	; 0x4a0
  401770:	e9d1 0100 	ldrd	r0, r1, [r1]
  401774:	4050      	eors	r0, r2
  401776:	4059      	eors	r1, r3
  401778:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  40177c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401780:	4614      	mov	r4, r2
  401782:	461d      	mov	r5, r3
  401784:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  401788:	4044      	eors	r4, r0
  40178a:	404d      	eors	r5, r1
  40178c:	ea04 040a 	and.w	r4, r4, sl
  401790:	ea05 050b 	and.w	r5, r5, fp
  401794:	4062      	eors	r2, r4
  401796:	406b      	eors	r3, r5
  401798:	4614      	mov	r4, r2
  40179a:	461d      	mov	r5, r3
  40179c:	e9d6 2312 	ldrd	r2, r3, [r6, #72]	; 0x48
  4017a0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4017a4:	1880      	adds	r0, r0, r2
  4017a6:	4159      	adcs	r1, r3
  4017a8:	1820      	adds	r0, r4, r0
  4017aa:	eb45 0101 	adc.w	r1, r5, r1
  4017ae:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4017b2:	2f00      	cmp	r7, #0
  4017b4:	f001 8070 	beq.w	402898 <.LCFI3+0x6c>

004017b8 <.LBB539>:
  4017b8:	e9dd 4524 	ldrd	r4, r5, [sp, #144]	; 0x90
  4017bc:	0863      	lsrs	r3, r4, #1
  4017be:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  4017c2:	f8cd 34a8 	str.w	r3, [sp, #1192]	; 0x4a8
  4017c6:	086b      	lsrs	r3, r5, #1
  4017c8:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  4017cc:	f8cd 34ac 	str.w	r3, [sp, #1196]	; 0x4ac

004017d0 <.LBB541>:
  4017d0:	0a23      	lsrs	r3, r4, #8
  4017d2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  4017d6:	f8cd 34b0 	str.w	r3, [sp, #1200]	; 0x4b0
  4017da:	0a2b      	lsrs	r3, r5, #8
  4017dc:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  4017e0:	f8cd 34b4 	str.w	r3, [sp, #1204]	; 0x4b4

004017e4 <.LBE541>:
  4017e4:	f50d 6395 	add.w	r3, sp, #1192	; 0x4a8
  4017e8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017ec:	f50d 6196 	add.w	r1, sp, #1200	; 0x4b0
  4017f0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4017f4:	4042      	eors	r2, r0
  4017f6:	404b      	eors	r3, r1
  4017f8:	09e1      	lsrs	r1, r4, #7
  4017fa:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4017fe:	9154      	str	r1, [sp, #336]	; 0x150
  401800:	09e9      	lsrs	r1, r5, #7
  401802:	9155      	str	r1, [sp, #340]	; 0x154
  401804:	a954      	add	r1, sp, #336	; 0x150
  401806:	e9d1 0100 	ldrd	r0, r1, [r1]
  40180a:	4050      	eors	r0, r2
  40180c:	4059      	eors	r1, r3
  40180e:	4602      	mov	r2, r0
  401810:	460b      	mov	r3, r1
  401812:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  401816:	1880      	adds	r0, r0, r2
  401818:	4159      	adcs	r1, r3
  40181a:	4602      	mov	r2, r0
  40181c:	460b      	mov	r3, r1
  40181e:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
  401822:	1880      	adds	r0, r0, r2
  401824:	4159      	adcs	r1, r3
  401826:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48

0040182a <.LBB543>:
  40182a:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
  40182e:	0ce1      	lsrs	r1, r4, #19
  401830:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  401834:	f8cd 14b8 	str.w	r1, [sp, #1208]	; 0x4b8
  401838:	0ce9      	lsrs	r1, r5, #19
  40183a:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  40183e:	f8cd 14bc 	str.w	r1, [sp, #1212]	; 0x4bc

00401842 <.LBB545>:
  401842:	00e9      	lsls	r1, r5, #3
  401844:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401848:	f8cd 14c4 	str.w	r1, [sp, #1220]	; 0x4c4
  40184c:	00e1      	lsls	r1, r4, #3
  40184e:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  401852:	f8cd 14c0 	str.w	r1, [sp, #1216]	; 0x4c0

00401856 <.LBE545>:
  401856:	f50d 6397 	add.w	r3, sp, #1208	; 0x4b8
  40185a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40185e:	f50d 6398 	add.w	r3, sp, #1216	; 0x4c0
  401862:	e9d3 2300 	ldrd	r2, r3, [r3]
  401866:	4050      	eors	r0, r2
  401868:	4059      	eors	r1, r3
  40186a:	09a4      	lsrs	r4, r4, #6
  40186c:	9d11      	ldr	r5, [sp, #68]	; 0x44
  40186e:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  401872:	9456      	str	r4, [sp, #344]	; 0x158
  401874:	09ac      	lsrs	r4, r5, #6
  401876:	9457      	str	r4, [sp, #348]	; 0x15c
  401878:	ab56      	add	r3, sp, #344	; 0x158
  40187a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40187e:	4044      	eors	r4, r0
  401880:	404d      	eors	r5, r1
  401882:	4620      	mov	r0, r4
  401884:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	; 0x48
  401888:	181b      	adds	r3, r3, r0
  40188a:	416c      	adcs	r4, r5
  40188c:	e9cd 3412 	strd	r3, r4, [sp, #72]	; 0x48
  401890:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401894:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401898:	1912      	adds	r2, r2, r4
  40189a:	416b      	adcs	r3, r5
  40189c:	4614      	mov	r4, r2
  40189e:	461d      	mov	r5, r3
  4018a0:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
  4018a4:	1912      	adds	r2, r2, r4
  4018a6:	416b      	adcs	r3, r5
  4018a8:	4610      	mov	r0, r2
  4018aa:	4619      	mov	r1, r3
  4018ac:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4018b0:	e9cd 012a 	strd	r0, r1, [sp, #168]	; 0xa8
  4018b4:	1880      	adds	r0, r0, r2
  4018b6:	4159      	adcs	r1, r3
  4018b8:	4602      	mov	r2, r0
  4018ba:	460b      	mov	r3, r1
  4018bc:	e9cd 2304 	strd	r2, r3, [sp, #16]

004018c0 <.LBB547>:
  4018c0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  4018c4:	0f03      	lsrs	r3, r0, #28
  4018c6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  4018ca:	f8cd 34c8 	str.w	r3, [sp, #1224]	; 0x4c8
  4018ce:	0f0b      	lsrs	r3, r1, #28
  4018d0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  4018d4:	f8cd 34cc 	str.w	r3, [sp, #1228]	; 0x4cc

004018d8 <.LBB549>:
  4018d8:	078b      	lsls	r3, r1, #30
  4018da:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  4018de:	f8cd 34d4 	str.w	r3, [sp, #1236]	; 0x4d4
  4018e2:	0783      	lsls	r3, r0, #30
  4018e4:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  4018e8:	f8cd 34d0 	str.w	r3, [sp, #1232]	; 0x4d0

004018ec <.LBE549>:
  4018ec:	f50d 6399 	add.w	r3, sp, #1224	; 0x4c8
  4018f0:	e9d3 3400 	ldrd	r3, r4, [r3]
  4018f4:	f50d 629a 	add.w	r2, sp, #1232	; 0x4d0
  4018f8:	e9d2 1200 	ldrd	r1, r2, [r2]
  4018fc:	404b      	eors	r3, r1
  4018fe:	4054      	eors	r4, r2
  401900:	461a      	mov	r2, r3
  401902:	4623      	mov	r3, r4

00401904 <.LBB551>:
  401904:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
  401908:	0669      	lsls	r1, r5, #25
  40190a:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  40190e:	f8cd 14dc 	str.w	r1, [sp, #1244]	; 0x4dc
  401912:	0661      	lsls	r1, r4, #25
  401914:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  401918:	f8cd 14d8 	str.w	r1, [sp, #1240]	; 0x4d8

0040191c <.LBE551>:
  40191c:	f50d 619b 	add.w	r1, sp, #1240	; 0x4d8
  401920:	e9d1 0100 	ldrd	r0, r1, [r1]
  401924:	4050      	eors	r0, r2
  401926:	4059      	eors	r1, r3
  401928:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  40192c:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401930:	4322      	orrs	r2, r4
  401932:	432b      	orrs	r3, r5
  401934:	ea02 0208 	and.w	r2, r2, r8
  401938:	ea03 0309 	and.w	r3, r3, r9
  40193c:	e9cd 232e 	strd	r2, r3, [sp, #184]	; 0xb8
  401940:	e9dd 121a 	ldrd	r1, r2, [sp, #104]	; 0x68
  401944:	4623      	mov	r3, r4
  401946:	4019      	ands	r1, r3
  401948:	402a      	ands	r2, r5
  40194a:	4608      	mov	r0, r1
  40194c:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  401950:	4304      	orrs	r4, r0
  401952:	4315      	orrs	r5, r2
  401954:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  401958:	1912      	adds	r2, r2, r4
  40195a:	416b      	adcs	r3, r5
  40195c:	4619      	mov	r1, r3
  40195e:	e9dd 342a 	ldrd	r3, r4, [sp, #168]	; 0xa8
  401962:	189b      	adds	r3, r3, r2
  401964:	414c      	adcs	r4, r1
  401966:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8

0040196a <.LBB553>:
  40196a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  40196e:	0ba3      	lsrs	r3, r4, #14
  401970:	ea43 4385 	orr.w	r3, r3, r5, lsl #18
  401974:	f8cd 34e0 	str.w	r3, [sp, #1248]	; 0x4e0
  401978:	0bab      	lsrs	r3, r5, #14
  40197a:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  40197e:	f8cd 34e4 	str.w	r3, [sp, #1252]	; 0x4e4

00401982 <.LBB555>:
  401982:	0ca3      	lsrs	r3, r4, #18
  401984:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
  401988:	f8cd 34e8 	str.w	r3, [sp, #1256]	; 0x4e8
  40198c:	0cab      	lsrs	r3, r5, #18
  40198e:	ea43 3384 	orr.w	r3, r3, r4, lsl #14
  401992:	f8cd 34ec 	str.w	r3, [sp, #1260]	; 0x4ec

00401996 <.LBE555>:
  401996:	f50d 639c 	add.w	r3, sp, #1248	; 0x4e0
  40199a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40199e:	f50d 619d 	add.w	r1, sp, #1256	; 0x4e8
  4019a2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4019a6:	4042      	eors	r2, r0
  4019a8:	404b      	eors	r3, r1

004019aa <.LBB557>:
  4019aa:	05e9      	lsls	r1, r5, #23
  4019ac:	ea41 2154 	orr.w	r1, r1, r4, lsr #9
  4019b0:	f8cd 14f4 	str.w	r1, [sp, #1268]	; 0x4f4
  4019b4:	05e1      	lsls	r1, r4, #23
  4019b6:	ea41 2155 	orr.w	r1, r1, r5, lsr #9
  4019ba:	f8cd 14f0 	str.w	r1, [sp, #1264]	; 0x4f0

004019be <.LBE557>:
  4019be:	f50d 619e 	add.w	r1, sp, #1264	; 0x4f0
  4019c2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4019c6:	4050      	eors	r0, r2
  4019c8:	4059      	eors	r1, r3
  4019ca:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  4019ce:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  4019d2:	ea80 030a 	eor.w	r3, r0, sl
  4019d6:	ea81 040b 	eor.w	r4, r1, fp
  4019da:	4625      	mov	r5, r4
  4019dc:	461c      	mov	r4, r3
  4019de:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4019e2:	4022      	ands	r2, r4
  4019e4:	402b      	ands	r3, r5
  4019e6:	4614      	mov	r4, r2
  4019e8:	461d      	mov	r5, r3
  4019ea:	4602      	mov	r2, r0
  4019ec:	460b      	mov	r3, r1
  4019ee:	4062      	eors	r2, r4
  4019f0:	406b      	eors	r3, r5
  4019f2:	4614      	mov	r4, r2
  4019f4:	461d      	mov	r5, r3
  4019f6:	e9d6 2314 	ldrd	r2, r3, [r6, #80]	; 0x50
  4019fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4019fe:	1880      	adds	r0, r0, r2
  401a00:	4159      	adcs	r1, r3
  401a02:	1820      	adds	r0, r4, r0
  401a04:	eb45 0101 	adc.w	r1, r5, r1
  401a08:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401a0c:	2f00      	cmp	r7, #0
  401a0e:	f000 8749 	beq.w	4028a4 <.LCFI3+0x78>

00401a12 <.LBB559>:
  401a12:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
  401a16:	0863      	lsrs	r3, r4, #1
  401a18:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  401a1c:	f8cd 34f8 	str.w	r3, [sp, #1272]	; 0x4f8
  401a20:	086b      	lsrs	r3, r5, #1
  401a22:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  401a26:	f8cd 34fc 	str.w	r3, [sp, #1276]	; 0x4fc

00401a2a <.LBB561>:
  401a2a:	0a23      	lsrs	r3, r4, #8
  401a2c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401a30:	f8cd 3500 	str.w	r3, [sp, #1280]	; 0x500
  401a34:	0a2b      	lsrs	r3, r5, #8
  401a36:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  401a3a:	f8cd 3504 	str.w	r3, [sp, #1284]	; 0x504

00401a3e <.LBE561>:
  401a3e:	f50d 639f 	add.w	r3, sp, #1272	; 0x4f8
  401a42:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a46:	f50d 61a0 	add.w	r1, sp, #1280	; 0x500
  401a4a:	e9d1 0100 	ldrd	r0, r1, [r1]
  401a4e:	4042      	eors	r2, r0
  401a50:	404b      	eors	r3, r1
  401a52:	09e1      	lsrs	r1, r4, #7
  401a54:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  401a58:	9158      	str	r1, [sp, #352]	; 0x160
  401a5a:	09e9      	lsrs	r1, r5, #7
  401a5c:	9159      	str	r1, [sp, #356]	; 0x164
  401a5e:	a958      	add	r1, sp, #352	; 0x160
  401a60:	e9d1 0100 	ldrd	r0, r1, [r1]
  401a64:	4050      	eors	r0, r2
  401a66:	4059      	eors	r1, r3
  401a68:	4602      	mov	r2, r0
  401a6a:	460b      	mov	r3, r1
  401a6c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	; 0x90
  401a70:	1880      	adds	r0, r0, r2
  401a72:	4159      	adcs	r1, r3
  401a74:	4602      	mov	r2, r0
  401a76:	460b      	mov	r3, r1
  401a78:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  401a7c:	1880      	adds	r0, r0, r2
  401a7e:	4159      	adcs	r1, r3
  401a80:	e9cd 0124 	strd	r0, r1, [sp, #144]	; 0x90

00401a84 <.LBB563>:
  401a84:	e9dd 4500 	ldrd	r4, r5, [sp]
  401a88:	0ce1      	lsrs	r1, r4, #19
  401a8a:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  401a8e:	f8cd 1508 	str.w	r1, [sp, #1288]	; 0x508
  401a92:	0ce9      	lsrs	r1, r5, #19
  401a94:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  401a98:	f8cd 150c 	str.w	r1, [sp, #1292]	; 0x50c

00401a9c <.LBB565>:
  401a9c:	00e9      	lsls	r1, r5, #3
  401a9e:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401aa2:	f8cd 1514 	str.w	r1, [sp, #1300]	; 0x514
  401aa6:	00e1      	lsls	r1, r4, #3
  401aa8:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  401aac:	f8cd 1510 	str.w	r1, [sp, #1296]	; 0x510

00401ab0 <.LBE565>:
  401ab0:	f50d 63a1 	add.w	r3, sp, #1288	; 0x508
  401ab4:	e9d3 0100 	ldrd	r0, r1, [r3]
  401ab8:	f50d 63a2 	add.w	r3, sp, #1296	; 0x510
  401abc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ac0:	4050      	eors	r0, r2
  401ac2:	4059      	eors	r1, r3
  401ac4:	09a4      	lsrs	r4, r4, #6
  401ac6:	9d01      	ldr	r5, [sp, #4]
  401ac8:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  401acc:	945a      	str	r4, [sp, #360]	; 0x168
  401ace:	09ac      	lsrs	r4, r5, #6
  401ad0:	945b      	str	r4, [sp, #364]	; 0x16c
  401ad2:	ab5a      	add	r3, sp, #360	; 0x168
  401ad4:	e9d3 4500 	ldrd	r4, r5, [r3]
  401ad8:	4044      	eors	r4, r0
  401ada:	404d      	eors	r5, r1
  401adc:	4620      	mov	r0, r4
  401ade:	e9dd 3424 	ldrd	r3, r4, [sp, #144]	; 0x90
  401ae2:	181b      	adds	r3, r3, r0
  401ae4:	416c      	adcs	r4, r5
  401ae6:	e9cd 3424 	strd	r3, r4, [sp, #144]	; 0x90
  401aea:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401aee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401af2:	1912      	adds	r2, r2, r4
  401af4:	416b      	adcs	r3, r5
  401af6:	4614      	mov	r4, r2
  401af8:	461d      	mov	r5, r3
  401afa:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	; 0x90
  401afe:	1912      	adds	r2, r2, r4
  401b00:	416b      	adcs	r3, r5
  401b02:	461c      	mov	r4, r3
  401b04:	4613      	mov	r3, r2
  401b06:	e9cd 3402 	strd	r3, r4, [sp, #8]
  401b0a:	eb12 0208 	adds.w	r2, r2, r8
  401b0e:	eb44 0309 	adc.w	r3, r4, r9
  401b12:	4690      	mov	r8, r2
  401b14:	4699      	mov	r9, r3

00401b16 <.LBB567>:
  401b16:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  401b1a:	0f23      	lsrs	r3, r4, #28
  401b1c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  401b20:	f8cd 3518 	str.w	r3, [sp, #1304]	; 0x518
  401b24:	0f2b      	lsrs	r3, r5, #28
  401b26:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  401b2a:	f8cd 351c 	str.w	r3, [sp, #1308]	; 0x51c

00401b2e <.LBB569>:
  401b2e:	07ab      	lsls	r3, r5, #30
  401b30:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  401b34:	f8cd 3524 	str.w	r3, [sp, #1316]	; 0x524
  401b38:	07a3      	lsls	r3, r4, #30
  401b3a:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  401b3e:	f8cd 3520 	str.w	r3, [sp, #1312]	; 0x520

00401b42 <.LBE569>:
  401b42:	f50d 63a3 	add.w	r3, sp, #1304	; 0x518
  401b46:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b4a:	f50d 61a4 	add.w	r1, sp, #1312	; 0x520
  401b4e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401b52:	4042      	eors	r2, r0
  401b54:	404b      	eors	r3, r1

00401b56 <.LBB571>:
  401b56:	0669      	lsls	r1, r5, #25
  401b58:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  401b5c:	f8cd 152c 	str.w	r1, [sp, #1324]	; 0x52c
  401b60:	0661      	lsls	r1, r4, #25
  401b62:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  401b66:	f8cd 1528 	str.w	r1, [sp, #1320]	; 0x528

00401b6a <.LBE571>:
  401b6a:	f50d 61a5 	add.w	r1, sp, #1320	; 0x528
  401b6e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401b72:	4050      	eors	r0, r2
  401b74:	4059      	eors	r1, r3
  401b76:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  401b7a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401b7e:	4322      	orrs	r2, r4
  401b80:	432b      	orrs	r3, r5
  401b82:	4610      	mov	r0, r2
  401b84:	4619      	mov	r1, r3
  401b86:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401b8a:	4002      	ands	r2, r0
  401b8c:	400b      	ands	r3, r1
  401b8e:	4610      	mov	r0, r2
  401b90:	4619      	mov	r1, r3
  401b92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401b96:	4022      	ands	r2, r4
  401b98:	402b      	ands	r3, r5
  401b9a:	4302      	orrs	r2, r0
  401b9c:	430b      	orrs	r3, r1
  401b9e:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401ba2:	18a4      	adds	r4, r4, r2
  401ba4:	415d      	adcs	r5, r3
  401ba6:	4620      	mov	r0, r4
  401ba8:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  401bac:	181b      	adds	r3, r3, r0
  401bae:	416c      	adcs	r4, r5
  401bb0:	e9cd 3402 	strd	r3, r4, [sp, #8]

00401bb4 <.LBB573>:
  401bb4:	ea4f 3398 	mov.w	r3, r8, lsr #14
  401bb8:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  401bbc:	f8cd 3530 	str.w	r3, [sp, #1328]	; 0x530
  401bc0:	ea4f 3399 	mov.w	r3, r9, lsr #14
  401bc4:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  401bc8:	f8cd 3534 	str.w	r3, [sp, #1332]	; 0x534

00401bcc <.LBB575>:
  401bcc:	ea4f 4398 	mov.w	r3, r8, lsr #18
  401bd0:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  401bd4:	f8cd 3538 	str.w	r3, [sp, #1336]	; 0x538
  401bd8:	ea4f 4399 	mov.w	r3, r9, lsr #18
  401bdc:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  401be0:	f8cd 353c 	str.w	r3, [sp, #1340]	; 0x53c

00401be4 <.LBE575>:
  401be4:	f50d 63a6 	add.w	r3, sp, #1328	; 0x530
  401be8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401bec:	f50d 61a7 	add.w	r1, sp, #1336	; 0x538
  401bf0:	e9d1 0100 	ldrd	r0, r1, [r1]
  401bf4:	4042      	eors	r2, r0
  401bf6:	404b      	eors	r3, r1

00401bf8 <.LBB577>:
  401bf8:	ea4f 51c9 	mov.w	r1, r9, lsl #23
  401bfc:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  401c00:	f8cd 1544 	str.w	r1, [sp, #1348]	; 0x544
  401c04:	ea4f 51c8 	mov.w	r1, r8, lsl #23
  401c08:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  401c0c:	f8cd 1540 	str.w	r1, [sp, #1344]	; 0x540

00401c10 <.LBE577>:
  401c10:	f50d 61a8 	add.w	r1, sp, #1344	; 0x540
  401c14:	e9d1 0100 	ldrd	r0, r1, [r1]
  401c18:	4050      	eors	r0, r2
  401c1a:	4059      	eors	r1, r3
  401c1c:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  401c20:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  401c24:	ea84 040a 	eor.w	r4, r4, sl
  401c28:	ea85 050b 	eor.w	r5, r5, fp
  401c2c:	ea04 0408 	and.w	r4, r4, r8
  401c30:	ea05 0509 	and.w	r5, r5, r9
  401c34:	ea84 040a 	eor.w	r4, r4, sl
  401c38:	ea85 050b 	eor.w	r5, r5, fp
  401c3c:	e9d6 2316 	ldrd	r2, r3, [r6, #88]	; 0x58
  401c40:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  401c44:	1880      	adds	r0, r0, r2
  401c46:	4159      	adcs	r1, r3
  401c48:	1820      	adds	r0, r4, r0
  401c4a:	eb45 0101 	adc.w	r1, r5, r1
  401c4e:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  401c52:	2f00      	cmp	r7, #0
  401c54:	f000 862c 	beq.w	4028b0 <.LCFI3+0x84>

00401c58 <.LBB579>:
  401c58:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
  401c5c:	0863      	lsrs	r3, r4, #1
  401c5e:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  401c62:	f8cd 3548 	str.w	r3, [sp, #1352]	; 0x548
  401c66:	086b      	lsrs	r3, r5, #1
  401c68:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  401c6c:	f8cd 354c 	str.w	r3, [sp, #1356]	; 0x54c

00401c70 <.LBB581>:
  401c70:	0a23      	lsrs	r3, r4, #8
  401c72:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401c76:	f8cd 3550 	str.w	r3, [sp, #1360]	; 0x550
  401c7a:	0a2b      	lsrs	r3, r5, #8
  401c7c:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  401c80:	f8cd 3554 	str.w	r3, [sp, #1364]	; 0x554

00401c84 <.LBE581>:
  401c84:	f50d 63a9 	add.w	r3, sp, #1352	; 0x548
  401c88:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c8c:	f50d 61aa 	add.w	r1, sp, #1360	; 0x550
  401c90:	e9d1 0100 	ldrd	r0, r1, [r1]
  401c94:	4042      	eors	r2, r0
  401c96:	404b      	eors	r3, r1
  401c98:	09e1      	lsrs	r1, r4, #7
  401c9a:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  401c9e:	915c      	str	r1, [sp, #368]	; 0x170
  401ca0:	09e9      	lsrs	r1, r5, #7
  401ca2:	915d      	str	r1, [sp, #372]	; 0x174
  401ca4:	a95c      	add	r1, sp, #368	; 0x170
  401ca6:	e9d1 0100 	ldrd	r0, r1, [r1]
  401caa:	4050      	eors	r0, r2
  401cac:	4059      	eors	r1, r3
  401cae:	4602      	mov	r2, r0
  401cb0:	460b      	mov	r3, r1
  401cb2:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
  401cb6:	1880      	adds	r0, r0, r2
  401cb8:	4159      	adcs	r1, r3
  401cba:	4602      	mov	r2, r0
  401cbc:	460b      	mov	r3, r1
  401cbe:	e9dd 0122 	ldrd	r0, r1, [sp, #136]	; 0x88
  401cc2:	1880      	adds	r0, r0, r2
  401cc4:	4159      	adcs	r1, r3
  401cc6:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50

00401cca <.LBB583>:
  401cca:	e9dd 4512 	ldrd	r4, r5, [sp, #72]	; 0x48
  401cce:	0ce1      	lsrs	r1, r4, #19
  401cd0:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  401cd4:	f8cd 1558 	str.w	r1, [sp, #1368]	; 0x558
  401cd8:	0ce9      	lsrs	r1, r5, #19
  401cda:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  401cde:	f8cd 155c 	str.w	r1, [sp, #1372]	; 0x55c

00401ce2 <.LBB585>:
  401ce2:	00e9      	lsls	r1, r5, #3
  401ce4:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401ce8:	f8cd 1564 	str.w	r1, [sp, #1380]	; 0x564
  401cec:	00e1      	lsls	r1, r4, #3
  401cee:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  401cf2:	f8cd 1560 	str.w	r1, [sp, #1376]	; 0x560

00401cf6 <.LBE585>:
  401cf6:	f50d 63ab 	add.w	r3, sp, #1368	; 0x558
  401cfa:	e9d3 0100 	ldrd	r0, r1, [r3]
  401cfe:	f50d 63ac 	add.w	r3, sp, #1376	; 0x560
  401d02:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d06:	4050      	eors	r0, r2
  401d08:	4059      	eors	r1, r3
  401d0a:	09a4      	lsrs	r4, r4, #6
  401d0c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  401d0e:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  401d12:	945e      	str	r4, [sp, #376]	; 0x178
  401d14:	09ac      	lsrs	r4, r5, #6
  401d16:	945f      	str	r4, [sp, #380]	; 0x17c
  401d18:	ab5e      	add	r3, sp, #376	; 0x178
  401d1a:	e9d3 4500 	ldrd	r4, r5, [r3]
  401d1e:	4044      	eors	r4, r0
  401d20:	404d      	eors	r5, r1
  401d22:	4620      	mov	r0, r4
  401d24:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
  401d28:	181b      	adds	r3, r3, r0
  401d2a:	416c      	adcs	r4, r5
  401d2c:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
  401d30:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401d34:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  401d38:	1912      	adds	r2, r2, r4
  401d3a:	416b      	adcs	r3, r5
  401d3c:	4614      	mov	r4, r2
  401d3e:	461d      	mov	r5, r3
  401d40:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
  401d44:	1912      	adds	r2, r2, r4
  401d46:	416b      	adcs	r3, r5
  401d48:	4610      	mov	r0, r2
  401d4a:	4619      	mov	r1, r3
  401d4c:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401d50:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  401d54:	1880      	adds	r0, r0, r2
  401d56:	4159      	adcs	r1, r3
  401d58:	4602      	mov	r2, r0
  401d5a:	460b      	mov	r3, r1
  401d5c:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68

00401d60 <.LBB587>:
  401d60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401d64:	0f03      	lsrs	r3, r0, #28
  401d66:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  401d6a:	f8cd 3568 	str.w	r3, [sp, #1384]	; 0x568
  401d6e:	0f0b      	lsrs	r3, r1, #28
  401d70:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  401d74:	f8cd 356c 	str.w	r3, [sp, #1388]	; 0x56c

00401d78 <.LBB589>:
  401d78:	078b      	lsls	r3, r1, #30
  401d7a:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  401d7e:	f8cd 3574 	str.w	r3, [sp, #1396]	; 0x574
  401d82:	0783      	lsls	r3, r0, #30
  401d84:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  401d88:	f8cd 3570 	str.w	r3, [sp, #1392]	; 0x570

00401d8c <.LBE589>:
  401d8c:	f50d 63ad 	add.w	r3, sp, #1384	; 0x568
  401d90:	e9d3 3400 	ldrd	r3, r4, [r3]
  401d94:	f50d 62ae 	add.w	r2, sp, #1392	; 0x570
  401d98:	e9d2 1200 	ldrd	r1, r2, [r2]
  401d9c:	404b      	eors	r3, r1
  401d9e:	4054      	eors	r4, r2
  401da0:	461a      	mov	r2, r3
  401da2:	4623      	mov	r3, r4

00401da4 <.LBB591>:
  401da4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  401da8:	0669      	lsls	r1, r5, #25
  401daa:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  401dae:	f8cd 157c 	str.w	r1, [sp, #1404]	; 0x57c
  401db2:	0661      	lsls	r1, r4, #25
  401db4:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  401db8:	f8cd 1578 	str.w	r1, [sp, #1400]	; 0x578

00401dbc <.LBE591>:
  401dbc:	f50d 61af 	add.w	r1, sp, #1400	; 0x578
  401dc0:	e9d1 0100 	ldrd	r0, r1, [r1]
  401dc4:	4050      	eors	r0, r2
  401dc6:	4059      	eors	r1, r3
  401dc8:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  401dcc:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  401dd0:	4322      	orrs	r2, r4
  401dd2:	432b      	orrs	r3, r5
  401dd4:	4619      	mov	r1, r3
  401dd6:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  401dda:	4013      	ands	r3, r2
  401ddc:	400c      	ands	r4, r1
  401dde:	e9cd 342e 	strd	r3, r4, [sp, #184]	; 0xb8
  401de2:	e9dd 122a 	ldrd	r1, r2, [sp, #168]	; 0xa8
  401de6:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  401dea:	4019      	ands	r1, r3
  401dec:	4022      	ands	r2, r4
  401dee:	4608      	mov	r0, r1
  401df0:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  401df4:	4304      	orrs	r4, r0
  401df6:	4315      	orrs	r5, r2
  401df8:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  401dfc:	1912      	adds	r2, r2, r4
  401dfe:	416b      	adcs	r3, r5
  401e00:	4619      	mov	r1, r3
  401e02:	e9dd 3418 	ldrd	r3, r4, [sp, #96]	; 0x60
  401e06:	189b      	adds	r3, r3, r2
  401e08:	414c      	adcs	r4, r1
  401e0a:	e9cd 342c 	strd	r3, r4, [sp, #176]	; 0xb0

00401e0e <.LBB593>:
  401e0e:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  401e12:	0ba3      	lsrs	r3, r4, #14
  401e14:	ea43 4385 	orr.w	r3, r3, r5, lsl #18
  401e18:	f8cd 3580 	str.w	r3, [sp, #1408]	; 0x580
  401e1c:	0bab      	lsrs	r3, r5, #14
  401e1e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  401e22:	f8cd 3584 	str.w	r3, [sp, #1412]	; 0x584

00401e26 <.LBB595>:
  401e26:	0ca3      	lsrs	r3, r4, #18
  401e28:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
  401e2c:	f8cd 3588 	str.w	r3, [sp, #1416]	; 0x588
  401e30:	0cab      	lsrs	r3, r5, #18
  401e32:	ea43 3384 	orr.w	r3, r3, r4, lsl #14
  401e36:	f8cd 358c 	str.w	r3, [sp, #1420]	; 0x58c

00401e3a <.LBE595>:
        R(12); R(13); R(14); R(15);
  401e3a:	f50d 63b0 	add.w	r3, sp, #1408	; 0x580
  401e3e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e42:	f50d 61b1 	add.w	r1, sp, #1416	; 0x588
  401e46:	e9d1 0100 	ldrd	r0, r1, [r1]
  401e4a:	4042      	eors	r2, r0
  401e4c:	404b      	eors	r3, r1

00401e4e <.LBB597>:
  401e4e:	05e9      	lsls	r1, r5, #23
  401e50:	ea41 2154 	orr.w	r1, r1, r4, lsr #9
  401e54:	f8cd 1594 	str.w	r1, [sp, #1428]	; 0x594
  401e58:	05e1      	lsls	r1, r4, #23
  401e5a:	ea41 2155 	orr.w	r1, r1, r5, lsr #9
  401e5e:	f8cd 1590 	str.w	r1, [sp, #1424]	; 0x590

00401e62 <.LBE597>:
  401e62:	f50d 61b2 	add.w	r1, sp, #1424	; 0x590
  401e66:	e9d1 0100 	ldrd	r0, r1, [r1]
  401e6a:	4050      	eors	r0, r2
  401e6c:	4059      	eors	r1, r3
  401e6e:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  401e72:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401e76:	ea80 0308 	eor.w	r3, r0, r8
  401e7a:	ea81 0409 	eor.w	r4, r1, r9
  401e7e:	4625      	mov	r5, r4
  401e80:	461c      	mov	r4, r3
  401e82:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401e86:	4022      	ands	r2, r4
  401e88:	402b      	ands	r3, r5
  401e8a:	4614      	mov	r4, r2
  401e8c:	461d      	mov	r5, r3
  401e8e:	4602      	mov	r2, r0
  401e90:	460b      	mov	r3, r1
  401e92:	4062      	eors	r2, r4
  401e94:	406b      	eors	r3, r5
  401e96:	4614      	mov	r4, r2
  401e98:	461d      	mov	r5, r3
  401e9a:	e9d6 2318 	ldrd	r2, r3, [r6, #96]	; 0x60
  401e9e:	eb12 020a 	adds.w	r2, r2, sl
  401ea2:	eb43 030b 	adc.w	r3, r3, fp
  401ea6:	18a4      	adds	r4, r4, r2
  401ea8:	415d      	adcs	r5, r3
  401eaa:	2f00      	cmp	r7, #0
  401eac:	f000 8506 	beq.w	4028bc <.LCFI3+0x90>

00401eb0 <.LBB599>:
  401eb0:	e9dd ab26 	ldrd	sl, fp, [sp, #152]	; 0x98
  401eb4:	4653      	mov	r3, sl
  401eb6:	085b      	lsrs	r3, r3, #1
  401eb8:	465a      	mov	r2, fp
  401eba:	ea43 73cb 	orr.w	r3, r3, fp, lsl #31
  401ebe:	f8cd 3598 	str.w	r3, [sp, #1432]	; 0x598
  401ec2:	0853      	lsrs	r3, r2, #1
  401ec4:	4652      	mov	r2, sl
  401ec6:	ea43 73ca 	orr.w	r3, r3, sl, lsl #31
  401eca:	f8cd 359c 	str.w	r3, [sp, #1436]	; 0x59c

00401ece <.LBB601>:
  401ece:	0a13      	lsrs	r3, r2, #8
  401ed0:	465a      	mov	r2, fp
  401ed2:	ea43 630b 	orr.w	r3, r3, fp, lsl #24
  401ed6:	f8cd 35a0 	str.w	r3, [sp, #1440]	; 0x5a0
  401eda:	0a13      	lsrs	r3, r2, #8
  401edc:	ea43 630a 	orr.w	r3, r3, sl, lsl #24
  401ee0:	f8cd 35a4 	str.w	r3, [sp, #1444]	; 0x5a4

00401ee4 <.LBE601>:
  401ee4:	f50d 63b3 	add.w	r3, sp, #1432	; 0x598
  401ee8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401eec:	f50d 61b4 	add.w	r1, sp, #1440	; 0x5a0
  401ef0:	e9d1 0100 	ldrd	r0, r1, [r1]
  401ef4:	4042      	eors	r2, r0
  401ef6:	404b      	eors	r3, r1
  401ef8:	4651      	mov	r1, sl
  401efa:	09c9      	lsrs	r1, r1, #7
  401efc:	4658      	mov	r0, fp
  401efe:	ea41 614b 	orr.w	r1, r1, fp, lsl #25
  401f02:	9160      	str	r1, [sp, #384]	; 0x180
  401f04:	09c1      	lsrs	r1, r0, #7
  401f06:	9161      	str	r1, [sp, #388]	; 0x184
  401f08:	a960      	add	r1, sp, #384	; 0x180
  401f0a:	e9d1 0100 	ldrd	r0, r1, [r1]
  401f0e:	4050      	eors	r0, r2
  401f10:	4059      	eors	r1, r3
  401f12:	4602      	mov	r2, r0
  401f14:	460b      	mov	r3, r1
  401f16:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  401f1a:	1880      	adds	r0, r0, r2
  401f1c:	4159      	adcs	r1, r3
  401f1e:	4602      	mov	r2, r0
  401f20:	460b      	mov	r3, r1
  401f22:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  401f26:	1880      	adds	r0, r0, r2
  401f28:	4159      	adcs	r1, r3
  401f2a:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58

00401f2e <.LBB603>:
  401f2e:	e9dd ab24 	ldrd	sl, fp, [sp, #144]	; 0x90
  401f32:	4651      	mov	r1, sl
  401f34:	0cc9      	lsrs	r1, r1, #19
  401f36:	4658      	mov	r0, fp
  401f38:	ea41 314b 	orr.w	r1, r1, fp, lsl #13
  401f3c:	f8cd 15a8 	str.w	r1, [sp, #1448]	; 0x5a8
  401f40:	0cc1      	lsrs	r1, r0, #19
  401f42:	4650      	mov	r0, sl
  401f44:	ea41 314a 	orr.w	r1, r1, sl, lsl #13
  401f48:	f8cd 15ac 	str.w	r1, [sp, #1452]	; 0x5ac

00401f4c <.LBB605>:
  401f4c:	4659      	mov	r1, fp
  401f4e:	00c9      	lsls	r1, r1, #3
  401f50:	ea41 715a 	orr.w	r1, r1, sl, lsr #29
  401f54:	f8cd 15b4 	str.w	r1, [sp, #1460]	; 0x5b4
  401f58:	00c1      	lsls	r1, r0, #3
  401f5a:	ea41 715b 	orr.w	r1, r1, fp, lsr #29
  401f5e:	f8cd 15b0 	str.w	r1, [sp, #1456]	; 0x5b0

00401f62 <.LBE605>:
  401f62:	f50d 63b5 	add.w	r3, sp, #1448	; 0x5a8
  401f66:	e9d3 0100 	ldrd	r0, r1, [r3]
  401f6a:	f50d 63b6 	add.w	r3, sp, #1456	; 0x5b0
  401f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f72:	4050      	eors	r0, r2
  401f74:	4059      	eors	r1, r3
  401f76:	4653      	mov	r3, sl
  401f78:	099b      	lsrs	r3, r3, #6
  401f7a:	465a      	mov	r2, fp
  401f7c:	ea43 638b 	orr.w	r3, r3, fp, lsl #26
  401f80:	9362      	str	r3, [sp, #392]	; 0x188
  401f82:	0993      	lsrs	r3, r2, #6
  401f84:	9363      	str	r3, [sp, #396]	; 0x18c
  401f86:	ab62      	add	r3, sp, #392	; 0x188
  401f88:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f8c:	4042      	eors	r2, r0
  401f8e:	404b      	eors	r3, r1
  401f90:	4610      	mov	r0, r2
  401f92:	4619      	mov	r1, r3
  401f94:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  401f98:	1812      	adds	r2, r2, r0
  401f9a:	414b      	adcs	r3, r1
  401f9c:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  401fa0:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  401fa4:	1912      	adds	r2, r2, r4
  401fa6:	416b      	adcs	r3, r5
  401fa8:	e9dd ab16 	ldrd	sl, fp, [sp, #88]	; 0x58
  401fac:	eb1a 0a02 	adds.w	sl, sl, r2
  401fb0:	eb4b 0b03 	adc.w	fp, fp, r3
  401fb4:	4651      	mov	r1, sl
  401fb6:	465a      	mov	r2, fp
  401fb8:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  401fbc:	e9cd 1218 	strd	r1, r2, [sp, #96]	; 0x60
  401fc0:	eb1a 0103 	adds.w	r1, sl, r3
  401fc4:	eb4b 0204 	adc.w	r2, fp, r4
  401fc8:	460b      	mov	r3, r1
  401fca:	4614      	mov	r4, r2
  401fcc:	e9cd 3406 	strd	r3, r4, [sp, #24]

00401fd0 <.LBB607>:
  401fd0:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401fd4:	0f23      	lsrs	r3, r4, #28
  401fd6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  401fda:	f8cd 35b8 	str.w	r3, [sp, #1464]	; 0x5b8
  401fde:	0f2b      	lsrs	r3, r5, #28
  401fe0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  401fe4:	f8cd 35bc 	str.w	r3, [sp, #1468]	; 0x5bc

00401fe8 <.LBB609>:
  401fe8:	07ab      	lsls	r3, r5, #30
  401fea:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  401fee:	f8cd 35c4 	str.w	r3, [sp, #1476]	; 0x5c4
  401ff2:	07a3      	lsls	r3, r4, #30
  401ff4:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  401ff8:	f8cd 35c0 	str.w	r3, [sp, #1472]	; 0x5c0

00401ffc <.LBE609>:
  401ffc:	f50d 63b7 	add.w	r3, sp, #1464	; 0x5b8
  402000:	e9d3 2300 	ldrd	r2, r3, [r3]
  402004:	f50d 61b8 	add.w	r1, sp, #1472	; 0x5c0
  402008:	e9d1 ab00 	ldrd	sl, fp, [r1]
  40200c:	ea82 020a 	eor.w	r2, r2, sl
  402010:	ea83 030b 	eor.w	r3, r3, fp

00402014 <.LBB611>:
  402014:	0669      	lsls	r1, r5, #25
  402016:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  40201a:	f8cd 15cc 	str.w	r1, [sp, #1484]	; 0x5cc
  40201e:	0661      	lsls	r1, r4, #25
  402020:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  402024:	f8cd 15c8 	str.w	r1, [sp, #1480]	; 0x5c8

00402028 <.LBE611>:
  402028:	f50d 61b9 	add.w	r1, sp, #1480	; 0x5c8
  40202c:	e9d1 0100 	ldrd	r0, r1, [r1]
  402030:	4050      	eors	r0, r2
  402032:	4059      	eors	r1, r3
  402034:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8
  402038:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40203c:	4610      	mov	r0, r2
  40203e:	4619      	mov	r1, r3
  402040:	4320      	orrs	r0, r4
  402042:	4329      	orrs	r1, r5
  402044:	e9dd ab2a 	ldrd	sl, fp, [sp, #168]	; 0xa8
  402048:	ea0a 0a00 	and.w	sl, sl, r0
  40204c:	ea0b 0b01 	and.w	fp, fp, r1
  402050:	4650      	mov	r0, sl
  402052:	4659      	mov	r1, fp
  402054:	4022      	ands	r2, r4
  402056:	402b      	ands	r3, r5
  402058:	4310      	orrs	r0, r2
  40205a:	4319      	orrs	r1, r3
  40205c:	e9dd 342e 	ldrd	r3, r4, [sp, #184]	; 0xb8
  402060:	181b      	adds	r3, r3, r0
  402062:	414c      	adcs	r4, r1
  402064:	e9dd ab18 	ldrd	sl, fp, [sp, #96]	; 0x60
  402068:	eb1a 0a03 	adds.w	sl, sl, r3
  40206c:	eb4b 0b04 	adc.w	fp, fp, r4

00402070 <.LBB613>:
  402070:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  402074:	0b83      	lsrs	r3, r0, #14
  402076:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  40207a:	f8cd 35d0 	str.w	r3, [sp, #1488]	; 0x5d0
  40207e:	0b8b      	lsrs	r3, r1, #14
  402080:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  402084:	f8cd 35d4 	str.w	r3, [sp, #1492]	; 0x5d4

00402088 <.LBB615>:
  402088:	0c83      	lsrs	r3, r0, #18
  40208a:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  40208e:	f8cd 35d8 	str.w	r3, [sp, #1496]	; 0x5d8
  402092:	0c8b      	lsrs	r3, r1, #18
  402094:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  402098:	f8cd 35dc 	str.w	r3, [sp, #1500]	; 0x5dc

0040209c <.LBE615>:
  40209c:	f50d 63ba 	add.w	r3, sp, #1488	; 0x5d0
  4020a0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4020a4:	f50d 63bb 	add.w	r3, sp, #1496	; 0x5d8
  4020a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4020ac:	4054      	eors	r4, r2
  4020ae:	405d      	eors	r5, r3

004020b0 <.LBB617>:
  4020b0:	05c9      	lsls	r1, r1, #23
  4020b2:	9b06      	ldr	r3, [sp, #24]
  4020b4:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  4020b8:	f8cd 35e4 	str.w	r3, [sp, #1508]	; 0x5e4
  4020bc:	9b06      	ldr	r3, [sp, #24]
  4020be:	05d9      	lsls	r1, r3, #23
  4020c0:	9b07      	ldr	r3, [sp, #28]
  4020c2:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  4020c6:	f8cd 35e0 	str.w	r3, [sp, #1504]	; 0x5e0

004020ca <.LBE617>:
  4020ca:	f50d 63bc 	add.w	r3, sp, #1504	; 0x5e0
  4020ce:	e9d3 2300 	ldrd	r2, r3, [r3]
  4020d2:	4062      	eors	r2, r4
  4020d4:	406b      	eors	r3, r5
  4020d6:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  4020da:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  4020de:	ea80 0008 	eor.w	r0, r0, r8
  4020e2:	ea81 0109 	eor.w	r1, r1, r9
  4020e6:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  4020ea:	4003      	ands	r3, r0
  4020ec:	400c      	ands	r4, r1
  4020ee:	ea83 0008 	eor.w	r0, r3, r8
  4020f2:	ea84 0109 	eor.w	r1, r4, r9
  4020f6:	e9d6 231a 	ldrd	r2, r3, [r6, #104]	; 0x68
  4020fa:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  4020fe:	18a4      	adds	r4, r4, r2
  402100:	415d      	adcs	r5, r3
  402102:	1904      	adds	r4, r0, r4
  402104:	eb41 0505 	adc.w	r5, r1, r5
  402108:	e9cd 4504 	strd	r4, r5, [sp, #16]
  40210c:	2f00      	cmp	r7, #0
  40210e:	f000 83db 	beq.w	4028c8 <.LCFI3+0x9c>

00402112 <.LBB619>:
  402112:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
  402116:	0863      	lsrs	r3, r4, #1
  402118:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  40211c:	f8cd 35e8 	str.w	r3, [sp, #1512]	; 0x5e8
  402120:	086b      	lsrs	r3, r5, #1
  402122:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  402126:	f8cd 35ec 	str.w	r3, [sp, #1516]	; 0x5ec

0040212a <.LBB621>:
  40212a:	0a23      	lsrs	r3, r4, #8
  40212c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  402130:	f8cd 35f0 	str.w	r3, [sp, #1520]	; 0x5f0
  402134:	0a2b      	lsrs	r3, r5, #8
  402136:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  40213a:	f8cd 35f4 	str.w	r3, [sp, #1524]	; 0x5f4

0040213e <.LBE621>:
  40213e:	f50d 63bd 	add.w	r3, sp, #1512	; 0x5e8
  402142:	e9d3 2300 	ldrd	r2, r3, [r3]
  402146:	f50d 61be 	add.w	r1, sp, #1520	; 0x5f0
  40214a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40214e:	4042      	eors	r2, r0
  402150:	404b      	eors	r3, r1
  402152:	09e1      	lsrs	r1, r4, #7
  402154:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  402158:	9164      	str	r1, [sp, #400]	; 0x190
  40215a:	09e9      	lsrs	r1, r5, #7
  40215c:	9165      	str	r1, [sp, #404]	; 0x194
  40215e:	a964      	add	r1, sp, #400	; 0x190
  402160:	e9d1 0100 	ldrd	r0, r1, [r1]
  402164:	4050      	eors	r0, r2
  402166:	4059      	eors	r1, r3
  402168:	4602      	mov	r2, r0
  40216a:	460b      	mov	r3, r1
  40216c:	e9dd 0126 	ldrd	r0, r1, [sp, #152]	; 0x98
  402170:	1880      	adds	r0, r0, r2
  402172:	4159      	adcs	r1, r3
  402174:	4602      	mov	r2, r0
  402176:	460b      	mov	r3, r1
  402178:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  40217c:	1880      	adds	r0, r0, r2
  40217e:	4159      	adcs	r1, r3
  402180:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98

00402184 <.LBB623>:
  402184:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
  402188:	0ce1      	lsrs	r1, r4, #19
  40218a:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  40218e:	f8cd 15f8 	str.w	r1, [sp, #1528]	; 0x5f8
  402192:	0ce9      	lsrs	r1, r5, #19
  402194:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  402198:	f8cd 15fc 	str.w	r1, [sp, #1532]	; 0x5fc

0040219c <.LBB625>:
  40219c:	00e9      	lsls	r1, r5, #3
  40219e:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  4021a2:	f8cd 1604 	str.w	r1, [sp, #1540]	; 0x604
  4021a6:	00e1      	lsls	r1, r4, #3
  4021a8:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  4021ac:	f8cd 1600 	str.w	r1, [sp, #1536]	; 0x600

004021b0 <.LBE625>:
  4021b0:	f50d 63bf 	add.w	r3, sp, #1528	; 0x5f8
  4021b4:	e9d3 0100 	ldrd	r0, r1, [r3]
  4021b8:	f50d 63c0 	add.w	r3, sp, #1536	; 0x600
  4021bc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4021c0:	4050      	eors	r0, r2
  4021c2:	4059      	eors	r1, r3
  4021c4:	09a4      	lsrs	r4, r4, #6
  4021c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4021c8:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  4021cc:	9466      	str	r4, [sp, #408]	; 0x198
  4021ce:	09ac      	lsrs	r4, r5, #6
  4021d0:	9467      	str	r4, [sp, #412]	; 0x19c
  4021d2:	ab66      	add	r3, sp, #408	; 0x198
  4021d4:	e9d3 4500 	ldrd	r4, r5, [r3]
  4021d8:	4044      	eors	r4, r0
  4021da:	404d      	eors	r5, r1
  4021dc:	4620      	mov	r0, r4
  4021de:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
  4021e2:	181b      	adds	r3, r3, r0
  4021e4:	416c      	adcs	r4, r5
  4021e6:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
  4021ea:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  4021ee:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  4021f2:	1912      	adds	r2, r2, r4
  4021f4:	416b      	adcs	r3, r5
  4021f6:	4614      	mov	r4, r2
  4021f8:	461d      	mov	r5, r3
  4021fa:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
  4021fe:	1912      	adds	r2, r2, r4
  402200:	416b      	adcs	r3, r5
  402202:	4610      	mov	r0, r2
  402204:	4619      	mov	r1, r3
  402206:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  40220a:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  40220e:	1880      	adds	r0, r0, r2
  402210:	4159      	adcs	r1, r3
  402212:	4602      	mov	r2, r0
  402214:	460b      	mov	r3, r1
  402216:	e9cd 2304 	strd	r2, r3, [sp, #16]

0040221a <.LBB627>:
  40221a:	ea4f 731a 	mov.w	r3, sl, lsr #28
  40221e:	ea43 130b 	orr.w	r3, r3, fp, lsl #4
  402222:	f8cd 3608 	str.w	r3, [sp, #1544]	; 0x608
  402226:	ea4f 731b 	mov.w	r3, fp, lsr #28
  40222a:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
  40222e:	f8cd 360c 	str.w	r3, [sp, #1548]	; 0x60c

00402232 <.LBB629>:
  402232:	ea4f 738b 	mov.w	r3, fp, lsl #30
  402236:	ea43 039a 	orr.w	r3, r3, sl, lsr #2
  40223a:	f8cd 3614 	str.w	r3, [sp, #1556]	; 0x614
  40223e:	ea4f 738a 	mov.w	r3, sl, lsl #30
  402242:	ea43 039b 	orr.w	r3, r3, fp, lsr #2
  402246:	f8cd 3610 	str.w	r3, [sp, #1552]	; 0x610

0040224a <.LBE629>:
  40224a:	f50d 63c1 	add.w	r3, sp, #1544	; 0x608
  40224e:	e9d3 3400 	ldrd	r3, r4, [r3]
  402252:	f50d 62c2 	add.w	r2, sp, #1552	; 0x610
  402256:	e9d2 1200 	ldrd	r1, r2, [r2]
  40225a:	404b      	eors	r3, r1
  40225c:	4054      	eors	r4, r2
  40225e:	461a      	mov	r2, r3
  402260:	4623      	mov	r3, r4

00402262 <.LBB631>:
  402262:	ea4f 614b 	mov.w	r1, fp, lsl #25
  402266:	ea41 11da 	orr.w	r1, r1, sl, lsr #7
  40226a:	f8cd 161c 	str.w	r1, [sp, #1564]	; 0x61c
  40226e:	ea4f 614a 	mov.w	r1, sl, lsl #25
  402272:	ea41 11db 	orr.w	r1, r1, fp, lsr #7
  402276:	f8cd 1618 	str.w	r1, [sp, #1560]	; 0x618

0040227a <.LBE631>:
  40227a:	f50d 61c3 	add.w	r1, sp, #1560	; 0x618
  40227e:	e9d1 4500 	ldrd	r4, r5, [r1]
  402282:	4054      	eors	r4, r2
  402284:	405d      	eors	r5, r3
  402286:	e9cd 452a 	strd	r4, r5, [sp, #168]	; 0xa8
  40228a:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  40228e:	ea44 000a 	orr.w	r0, r4, sl
  402292:	ea45 010b 	orr.w	r1, r5, fp
  402296:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40229a:	4002      	ands	r2, r0
  40229c:	400b      	ands	r3, r1
  40229e:	ea04 040a 	and.w	r4, r4, sl
  4022a2:	ea05 050b 	and.w	r5, r5, fp
  4022a6:	4314      	orrs	r4, r2
  4022a8:	431d      	orrs	r5, r3
  4022aa:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4022ae:	1912      	adds	r2, r2, r4
  4022b0:	416b      	adcs	r3, r5
  4022b2:	4619      	mov	r1, r3
  4022b4:	e9dd 3418 	ldrd	r3, r4, [sp, #96]	; 0x60
  4022b8:	189b      	adds	r3, r3, r2
  4022ba:	414c      	adcs	r4, r1
  4022bc:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8

004022c0 <.LBB633>:
  4022c0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4022c4:	0b83      	lsrs	r3, r0, #14
  4022c6:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  4022ca:	f8cd 3620 	str.w	r3, [sp, #1568]	; 0x620
  4022ce:	0b8b      	lsrs	r3, r1, #14
  4022d0:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  4022d4:	f8cd 3624 	str.w	r3, [sp, #1572]	; 0x624

004022d8 <.LBB635>:
  4022d8:	0c83      	lsrs	r3, r0, #18
  4022da:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  4022de:	f8cd 3628 	str.w	r3, [sp, #1576]	; 0x628
  4022e2:	0c8b      	lsrs	r3, r1, #18
  4022e4:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  4022e8:	f8cd 362c 	str.w	r3, [sp, #1580]	; 0x62c

004022ec <.LBE635>:
  4022ec:	f50d 63c4 	add.w	r3, sp, #1568	; 0x620
  4022f0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4022f4:	f50d 63c5 	add.w	r3, sp, #1576	; 0x628
  4022f8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4022fc:	4054      	eors	r4, r2
  4022fe:	405d      	eors	r5, r3

00402300 <.LBB637>:
  402300:	05c9      	lsls	r1, r1, #23
  402302:	9b04      	ldr	r3, [sp, #16]
  402304:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  402308:	f8cd 3634 	str.w	r3, [sp, #1588]	; 0x634
  40230c:	9b04      	ldr	r3, [sp, #16]
  40230e:	05d9      	lsls	r1, r3, #23
  402310:	9b05      	ldr	r3, [sp, #20]
  402312:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  402316:	f8cd 3630 	str.w	r3, [sp, #1584]	; 0x630

0040231a <.LBE637>:
  40231a:	f50d 63c6 	add.w	r3, sp, #1584	; 0x630
  40231e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402322:	4062      	eors	r2, r4
  402324:	406b      	eors	r3, r5
  402326:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  40232a:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  40232e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  402332:	4050      	eors	r0, r2
  402334:	4059      	eors	r1, r3
  402336:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
  40233a:	4003      	ands	r3, r0
  40233c:	400c      	ands	r4, r1
  40233e:	4618      	mov	r0, r3
  402340:	4621      	mov	r1, r4
  402342:	e9dd 341a 	ldrd	r3, r4, [sp, #104]	; 0x68
  402346:	4043      	eors	r3, r0
  402348:	404c      	eors	r4, r1
  40234a:	4618      	mov	r0, r3
  40234c:	e9d6 231c 	ldrd	r2, r3, [r6, #112]	; 0x70
  402350:	eb18 0802 	adds.w	r8, r8, r2
  402354:	eb49 0903 	adc.w	r9, r9, r3
  402358:	eb18 0800 	adds.w	r8, r8, r0
  40235c:	eb49 0904 	adc.w	r9, r9, r4
  402360:	2f00      	cmp	r7, #0
  402362:	f000 82b6 	beq.w	4028d2 <.LCFI3+0xa6>

00402366 <.LBB639>:
  402366:	e9dd 4528 	ldrd	r4, r5, [sp, #160]	; 0xa0
  40236a:	0863      	lsrs	r3, r4, #1
  40236c:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  402370:	f8cd 3638 	str.w	r3, [sp, #1592]	; 0x638
  402374:	086b      	lsrs	r3, r5, #1
  402376:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  40237a:	f8cd 363c 	str.w	r3, [sp, #1596]	; 0x63c

0040237e <.LBB641>:
  40237e:	0a23      	lsrs	r3, r4, #8
  402380:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  402384:	f8cd 3640 	str.w	r3, [sp, #1600]	; 0x640
  402388:	0a2b      	lsrs	r3, r5, #8
  40238a:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  40238e:	f8cd 3644 	str.w	r3, [sp, #1604]	; 0x644

00402392 <.LBE641>:
  402392:	f50d 63c7 	add.w	r3, sp, #1592	; 0x638
  402396:	e9d3 2300 	ldrd	r2, r3, [r3]
  40239a:	f50d 61c8 	add.w	r1, sp, #1600	; 0x640
  40239e:	e9d1 0100 	ldrd	r0, r1, [r1]
  4023a2:	4042      	eors	r2, r0
  4023a4:	404b      	eors	r3, r1
  4023a6:	09e1      	lsrs	r1, r4, #7
  4023a8:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4023ac:	9168      	str	r1, [sp, #416]	; 0x1a0
  4023ae:	09e9      	lsrs	r1, r5, #7
  4023b0:	9169      	str	r1, [sp, #420]	; 0x1a4
  4023b2:	a968      	add	r1, sp, #416	; 0x1a0
  4023b4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4023b8:	4050      	eors	r0, r2
  4023ba:	4059      	eors	r1, r3
  4023bc:	4602      	mov	r2, r0
  4023be:	460b      	mov	r3, r1
  4023c0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  4023c4:	1880      	adds	r0, r0, r2
  4023c6:	4159      	adcs	r1, r3
  4023c8:	4602      	mov	r2, r0
  4023ca:	460b      	mov	r3, r1
  4023cc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4023d0:	1880      	adds	r0, r0, r2
  4023d2:	4159      	adcs	r1, r3
  4023d4:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30

004023d8 <.LBB643>:
  4023d8:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
  4023dc:	0ce1      	lsrs	r1, r4, #19
  4023de:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  4023e2:	f8cd 1648 	str.w	r1, [sp, #1608]	; 0x648
  4023e6:	0ce9      	lsrs	r1, r5, #19
  4023e8:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  4023ec:	f8cd 164c 	str.w	r1, [sp, #1612]	; 0x64c

004023f0 <.LBB645>:
  4023f0:	00e9      	lsls	r1, r5, #3
  4023f2:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  4023f6:	f8cd 1654 	str.w	r1, [sp, #1620]	; 0x654
  4023fa:	00e1      	lsls	r1, r4, #3
  4023fc:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  402400:	f8cd 1650 	str.w	r1, [sp, #1616]	; 0x650

00402404 <.LBE645>:
  402404:	f50d 63c9 	add.w	r3, sp, #1608	; 0x648
  402408:	e9d3 0100 	ldrd	r0, r1, [r3]
  40240c:	f50d 63ca 	add.w	r3, sp, #1616	; 0x650
  402410:	e9d3 2300 	ldrd	r2, r3, [r3]
  402414:	4050      	eors	r0, r2
  402416:	4059      	eors	r1, r3
  402418:	09a4      	lsrs	r4, r4, #6
  40241a:	9d17      	ldr	r5, [sp, #92]	; 0x5c
  40241c:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  402420:	946a      	str	r4, [sp, #424]	; 0x1a8
  402422:	09ac      	lsrs	r4, r5, #6
  402424:	946b      	str	r4, [sp, #428]	; 0x1ac
  402426:	ab6a      	add	r3, sp, #424	; 0x1a8
  402428:	e9d3 4500 	ldrd	r4, r5, [r3]
  40242c:	4044      	eors	r4, r0
  40242e:	404d      	eors	r5, r1
  402430:	4620      	mov	r0, r4
  402432:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
  402436:	181b      	adds	r3, r3, r0
  402438:	416c      	adcs	r4, r5
  40243a:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
  40243e:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  402442:	eb14 0408 	adds.w	r4, r4, r8
  402446:	eb45 0509 	adc.w	r5, r5, r9
  40244a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  40244e:	1912      	adds	r2, r2, r4
  402450:	416b      	adcs	r3, r5
  402452:	461c      	mov	r4, r3
  402454:	4613      	mov	r3, r2
  402456:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  40245a:	e9cd 3402 	strd	r3, r4, [sp, #8]
  40245e:	eb12 0208 	adds.w	r2, r2, r8
  402462:	eb44 0309 	adc.w	r3, r4, r9
  402466:	4690      	mov	r8, r2
  402468:	4699      	mov	r9, r3

0040246a <.LBB647>:
  40246a:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  40246e:	0f23      	lsrs	r3, r4, #28
  402470:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  402474:	f8cd 3658 	str.w	r3, [sp, #1624]	; 0x658
  402478:	0f2b      	lsrs	r3, r5, #28
  40247a:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  40247e:	f8cd 365c 	str.w	r3, [sp, #1628]	; 0x65c

00402482 <.LBB649>:
  402482:	07ab      	lsls	r3, r5, #30
  402484:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  402488:	f8cd 3664 	str.w	r3, [sp, #1636]	; 0x664
  40248c:	07a3      	lsls	r3, r4, #30
  40248e:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  402492:	f8cd 3660 	str.w	r3, [sp, #1632]	; 0x660

00402496 <.LBE649>:
  402496:	f50d 63cb 	add.w	r3, sp, #1624	; 0x658
  40249a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40249e:	f50d 61cc 	add.w	r1, sp, #1632	; 0x660
  4024a2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4024a6:	4042      	eors	r2, r0
  4024a8:	404b      	eors	r3, r1

004024aa <.LBB651>:
  4024aa:	0669      	lsls	r1, r5, #25
  4024ac:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  4024b0:	f8cd 166c 	str.w	r1, [sp, #1644]	; 0x66c
  4024b4:	0661      	lsls	r1, r4, #25
  4024b6:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  4024ba:	f8cd 1668 	str.w	r1, [sp, #1640]	; 0x668

004024be <.LBE651>:
  4024be:	f50d 61cd 	add.w	r1, sp, #1640	; 0x668
  4024c2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4024c6:	4050      	eors	r0, r2
  4024c8:	4059      	eors	r1, r3
  4024ca:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  4024ce:	ea44 000a 	orr.w	r0, r4, sl
  4024d2:	ea45 010b 	orr.w	r1, r5, fp
  4024d6:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  4024da:	4002      	ands	r2, r0
  4024dc:	400b      	ands	r3, r1
  4024de:	ea04 040a 	and.w	r4, r4, sl
  4024e2:	ea05 050b 	and.w	r5, r5, fp
  4024e6:	4314      	orrs	r4, r2
  4024e8:	431d      	orrs	r5, r3
  4024ea:	4620      	mov	r0, r4
  4024ec:	4629      	mov	r1, r5
  4024ee:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  4024f2:	1824      	adds	r4, r4, r0
  4024f4:	414d      	adcs	r5, r1
  4024f6:	4620      	mov	r0, r4
  4024f8:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  4024fc:	181b      	adds	r3, r3, r0
  4024fe:	416c      	adcs	r4, r5
  402500:	e9cd 3418 	strd	r3, r4, [sp, #96]	; 0x60

00402504 <.LBB653>:
  402504:	ea4f 3398 	mov.w	r3, r8, lsr #14
  402508:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  40250c:	f8cd 3670 	str.w	r3, [sp, #1648]	; 0x670
  402510:	ea4f 3399 	mov.w	r3, r9, lsr #14
  402514:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  402518:	f8cd 3674 	str.w	r3, [sp, #1652]	; 0x674

0040251c <.LBB655>:
  40251c:	ea4f 4398 	mov.w	r3, r8, lsr #18
  402520:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  402524:	f8cd 3678 	str.w	r3, [sp, #1656]	; 0x678
  402528:	ea4f 4399 	mov.w	r3, r9, lsr #18
  40252c:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  402530:	f8cd 367c 	str.w	r3, [sp, #1660]	; 0x67c

00402534 <.LBE655>:
  402534:	f50d 63ce 	add.w	r3, sp, #1648	; 0x670
  402538:	e9d3 2300 	ldrd	r2, r3, [r3]
  40253c:	f50d 61cf 	add.w	r1, sp, #1656	; 0x678
  402540:	e9d1 0100 	ldrd	r0, r1, [r1]
  402544:	4042      	eors	r2, r0
  402546:	404b      	eors	r3, r1

00402548 <.LBB657>:
  402548:	ea4f 51c9 	mov.w	r1, r9, lsl #23
  40254c:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  402550:	f8cd 1684 	str.w	r1, [sp, #1668]	; 0x684
  402554:	ea4f 51c8 	mov.w	r1, r8, lsl #23
  402558:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  40255c:	f8cd 1680 	str.w	r1, [sp, #1664]	; 0x680

00402560 <.LBE657>:
  402560:	f50d 61d0 	add.w	r1, sp, #1664	; 0x680
  402564:	e9d1 0100 	ldrd	r0, r1, [r1]
  402568:	4050      	eors	r0, r2
  40256a:	4059      	eors	r1, r3
  40256c:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8
  402570:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  402574:	4602      	mov	r2, r0
  402576:	460b      	mov	r3, r1
  402578:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  40257c:	4062      	eors	r2, r4
  40257e:	406b      	eors	r3, r5
  402580:	ea02 0208 	and.w	r2, r2, r8
  402584:	ea03 0309 	and.w	r3, r3, r9
  402588:	4050      	eors	r0, r2
  40258a:	4059      	eors	r1, r3
  40258c:	4602      	mov	r2, r0
  40258e:	460b      	mov	r3, r1
  402590:	e9d6 011e 	ldrd	r0, r1, [r6, #120]	; 0x78
  402594:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  402598:	1824      	adds	r4, r4, r0
  40259a:	414d      	adcs	r5, r1
  40259c:	1914      	adds	r4, r2, r4
  40259e:	eb43 0505 	adc.w	r5, r3, r5
  4025a2:	e9cd 4502 	strd	r4, r5, [sp, #8]
  4025a6:	2f00      	cmp	r7, #0
  4025a8:	f000 8198 	beq.w	4028dc <.LCFI3+0xb0>

004025ac <.LBB659>:
  4025ac:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  4025b0:	0843      	lsrs	r3, r0, #1
  4025b2:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  4025b6:	f8cd 3688 	str.w	r3, [sp, #1672]	; 0x688
  4025ba:	084b      	lsrs	r3, r1, #1
  4025bc:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  4025c0:	f8cd 368c 	str.w	r3, [sp, #1676]	; 0x68c

004025c4 <.LBB661>:
  4025c4:	0a03      	lsrs	r3, r0, #8
  4025c6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  4025ca:	f8cd 3690 	str.w	r3, [sp, #1680]	; 0x690
  4025ce:	0a0b      	lsrs	r3, r1, #8
  4025d0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  4025d4:	f8cd 3694 	str.w	r3, [sp, #1684]	; 0x694

004025d8 <.LBE661>:
  4025d8:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  4025dc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4025e0:	f50d 64d2 	add.w	r4, sp, #1680	; 0x690
  4025e4:	e9d4 4500 	ldrd	r4, r5, [r4]
  4025e8:	4062      	eors	r2, r4
  4025ea:	406b      	eors	r3, r5
  4025ec:	460d      	mov	r5, r1
  4025ee:	09c1      	lsrs	r1, r0, #7
  4025f0:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4025f4:	916c      	str	r1, [sp, #432]	; 0x1b0
  4025f6:	09e9      	lsrs	r1, r5, #7
  4025f8:	916d      	str	r1, [sp, #436]	; 0x1b4
  4025fa:	a96c      	add	r1, sp, #432	; 0x1b0
  4025fc:	e9d1 0100 	ldrd	r0, r1, [r1]
  402600:	4050      	eors	r0, r2
  402602:	4059      	eors	r1, r3
  402604:	4602      	mov	r2, r0
  402606:	460b      	mov	r3, r1
  402608:	e9dd 0128 	ldrd	r0, r1, [sp, #160]	; 0xa0
  40260c:	1880      	adds	r0, r0, r2
  40260e:	4159      	adcs	r1, r3
  402610:	4602      	mov	r2, r0
  402612:	460b      	mov	r3, r1
  402614:	e9dd 0100 	ldrd	r0, r1, [sp]
  402618:	1880      	adds	r0, r0, r2
  40261a:	4159      	adcs	r1, r3
  40261c:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68

00402620 <.LBB663>:
  402620:	e9dd 5626 	ldrd	r5, r6, [sp, #152]	; 0x98
  402624:	0ce9      	lsrs	r1, r5, #19
  402626:	ea41 3146 	orr.w	r1, r1, r6, lsl #13
  40262a:	f8cd 1698 	str.w	r1, [sp, #1688]	; 0x698
  40262e:	0cf1      	lsrs	r1, r6, #19
  402630:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  402634:	f8cd 169c 	str.w	r1, [sp, #1692]	; 0x69c

00402638 <.LBB665>:
  402638:	00f1      	lsls	r1, r6, #3
  40263a:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  40263e:	f8cd 16a4 	str.w	r1, [sp, #1700]	; 0x6a4
  402642:	00e9      	lsls	r1, r5, #3
  402644:	ea41 7156 	orr.w	r1, r1, r6, lsr #29
  402648:	f8cd 16a0 	str.w	r1, [sp, #1696]	; 0x6a0

0040264c <.LBE665>:
  40264c:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  402650:	e9d3 0100 	ldrd	r0, r1, [r3]
  402654:	f50d 63d4 	add.w	r3, sp, #1696	; 0x6a0
  402658:	e9d3 3400 	ldrd	r3, r4, [r3]
  40265c:	4058      	eors	r0, r3
  40265e:	4061      	eors	r1, r4
  402660:	462c      	mov	r4, r5
  402662:	4635      	mov	r5, r6
  402664:	09a6      	lsrs	r6, r4, #6
  402666:	4633      	mov	r3, r6
  402668:	ea43 6685 	orr.w	r6, r3, r5, lsl #26
  40266c:	966e      	str	r6, [sp, #440]	; 0x1b8
  40266e:	09ae      	lsrs	r6, r5, #6
  402670:	966f      	str	r6, [sp, #444]	; 0x1bc
  402672:	ab6e      	add	r3, sp, #440	; 0x1b8
  402674:	e9d3 3400 	ldrd	r3, r4, [r3]
  402678:	4043      	eors	r3, r0
  40267a:	404c      	eors	r4, r1
  40267c:	4618      	mov	r0, r3
  40267e:	4621      	mov	r1, r4
  402680:	e9dd 341a 	ldrd	r3, r4, [sp, #104]	; 0x68
  402684:	181b      	adds	r3, r3, r0
  402686:	414c      	adcs	r4, r1
  402688:	e9cd 3428 	strd	r3, r4, [sp, #160]	; 0xa0
  40268c:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  402690:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  402694:	1912      	adds	r2, r2, r4
  402696:	416b      	adcs	r3, r5
  402698:	4614      	mov	r4, r2
  40269a:	461d      	mov	r5, r3
  40269c:	e9dd 2328 	ldrd	r2, r3, [sp, #160]	; 0xa0
  4026a0:	1912      	adds	r2, r2, r4
  4026a2:	416b      	adcs	r3, r5
  4026a4:	4611      	mov	r1, r2
  4026a6:	461a      	mov	r2, r3
  4026a8:	e9dd 342c 	ldrd	r3, r4, [sp, #176]	; 0xb0
  4026ac:	e9cd 121a 	strd	r1, r2, [sp, #104]	; 0x68
  4026b0:	18c9      	adds	r1, r1, r3
  4026b2:	4162      	adcs	r2, r4
  4026b4:	460b      	mov	r3, r1
  4026b6:	4614      	mov	r4, r2
  4026b8:	e9cd 3402 	strd	r3, r4, [sp, #8]

004026bc <.LBB667>:
  4026bc:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  4026c0:	0f23      	lsrs	r3, r4, #28
  4026c2:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  4026c6:	f8cd 36a8 	str.w	r3, [sp, #1704]	; 0x6a8
  4026ca:	0f2b      	lsrs	r3, r5, #28
  4026cc:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  4026d0:	f8cd 36ac 	str.w	r3, [sp, #1708]	; 0x6ac

004026d4 <.LBB669>:
  4026d4:	07ab      	lsls	r3, r5, #30
  4026d6:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  4026da:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  4026de:	07a3      	lsls	r3, r4, #30
  4026e0:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  4026e4:	f8cd 36b0 	str.w	r3, [sp, #1712]	; 0x6b0

004026e8 <.LBE669>:
  4026e8:	f50d 63d5 	add.w	r3, sp, #1704	; 0x6a8
  4026ec:	e9d3 2300 	ldrd	r2, r3, [r3]
  4026f0:	f50d 61d6 	add.w	r1, sp, #1712	; 0x6b0
  4026f4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4026f8:	4042      	eors	r2, r0
  4026fa:	404b      	eors	r3, r1

004026fc <.LBB671>:
  4026fc:	0669      	lsls	r1, r5, #25
  4026fe:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  402702:	f8cd 16bc 	str.w	r1, [sp, #1724]	; 0x6bc
  402706:	0661      	lsls	r1, r4, #25
  402708:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  40270c:	f8cd 16b8 	str.w	r1, [sp, #1720]	; 0x6b8

00402710 <.LBE671>:
  402710:	f50d 61d7 	add.w	r1, sp, #1720	; 0x6b8
  402714:	e9d1 4500 	ldrd	r4, r5, [r1]
  402718:	4054      	eors	r4, r2
  40271a:	405d      	eors	r5, r3
  40271c:	e9cd 452c 	strd	r4, r5, [sp, #176]	; 0xb0
  402720:	e9dd 562a 	ldrd	r5, r6, [sp, #168]	; 0xa8
  402724:	462a      	mov	r2, r5
  402726:	4633      	mov	r3, r6
  402728:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  40272c:	4302      	orrs	r2, r0
  40272e:	430b      	orrs	r3, r1
  402730:	ea02 000a 	and.w	r0, r2, sl
  402734:	ea03 010b 	and.w	r1, r3, fp
  402738:	e9dd 3418 	ldrd	r3, r4, [sp, #96]	; 0x60
  40273c:	401d      	ands	r5, r3
  40273e:	4026      	ands	r6, r4
  402740:	4305      	orrs	r5, r0
  402742:	430e      	orrs	r6, r1
  402744:	e9dd 342c 	ldrd	r3, r4, [sp, #176]	; 0xb0
  402748:	195b      	adds	r3, r3, r5
  40274a:	4174      	adcs	r4, r6
  40274c:	4621      	mov	r1, r4
  40274e:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  402752:	18e4      	adds	r4, r4, r3
  402754:	414d      	adcs	r5, r1
    for (j = 0; j < 80; j += 16) {
  402756:	3710      	adds	r7, #16
  402758:	f10e 0e80 	add.w	lr, lr, #128	; 0x80
  40275c:	2f50      	cmp	r7, #80	; 0x50
  40275e:	f47d adc2 	bne.w	4002e6 <.LBB353>
    }
#endif /* USE_SLOW_SHA2 */

    /* Add the working vars back into digest */

    sha512->digest[0] += a(0);
  402762:	f8dd 06cc 	ldr.w	r0, [sp, #1740]	; 0x6cc
  402766:	e9d0 2306 	ldrd	r2, r3, [r0, #24]
  40276a:	18a4      	adds	r4, r4, r2
  40276c:	415d      	adcs	r5, r3
  40276e:	4622      	mov	r2, r4
  402770:	462b      	mov	r3, r5
  402772:	e9c0 2306 	strd	r2, r3, [r0, #24]
    sha512->digest[1] += b(0);
  402776:	e9d0 2308 	ldrd	r2, r3, [r0, #32]
  40277a:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  40277e:	18a4      	adds	r4, r4, r2
  402780:	415d      	adcs	r5, r3
  402782:	4622      	mov	r2, r4
  402784:	462b      	mov	r3, r5
  402786:	e9c0 2308 	strd	r2, r3, [r0, #32]
    sha512->digest[2] += c(0);
  40278a:	e9d0 230a 	ldrd	r2, r3, [r0, #40]	; 0x28
  40278e:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  402792:	18a4      	adds	r4, r4, r2
  402794:	415d      	adcs	r5, r3
  402796:	4622      	mov	r2, r4
  402798:	462b      	mov	r3, r5
  40279a:	e9c0 230a 	strd	r2, r3, [r0, #40]	; 0x28
    sha512->digest[3] += d(0);
  40279e:	e9d0 230c 	ldrd	r2, r3, [r0, #48]	; 0x30
  4027a2:	eb12 020a 	adds.w	r2, r2, sl
  4027a6:	eb43 030b 	adc.w	r3, r3, fp
  4027aa:	e9c0 230c 	strd	r2, r3, [r0, #48]	; 0x30
    sha512->digest[4] += e(0);
  4027ae:	e9d0 230e 	ldrd	r2, r3, [r0, #56]	; 0x38
  4027b2:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  4027b6:	18a4      	adds	r4, r4, r2
  4027b8:	415d      	adcs	r5, r3
  4027ba:	4622      	mov	r2, r4
  4027bc:	462b      	mov	r3, r5
  4027be:	e9c0 230e 	strd	r2, r3, [r0, #56]	; 0x38
    sha512->digest[5] += f(0);
  4027c2:	e9d0 2310 	ldrd	r2, r3, [r0, #64]	; 0x40
  4027c6:	eb12 0208 	adds.w	r2, r2, r8
  4027ca:	eb43 0309 	adc.w	r3, r3, r9
  4027ce:	e9c0 2310 	strd	r2, r3, [r0, #64]	; 0x40
    sha512->digest[6] += g(0);
  4027d2:	e9d0 2312 	ldrd	r2, r3, [r0, #72]	; 0x48
  4027d6:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  4027da:	18a4      	adds	r4, r4, r2
  4027dc:	415d      	adcs	r5, r3
  4027de:	4622      	mov	r2, r4
  4027e0:	462b      	mov	r3, r5
  4027e2:	e9c0 2312 	strd	r2, r3, [r0, #72]	; 0x48
    sha512->digest[7] += h(0);
  4027e6:	e9d0 2314 	ldrd	r2, r3, [r0, #80]	; 0x50
  4027ea:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
  4027ee:	18a4      	adds	r4, r4, r2
  4027f0:	415d      	adcs	r5, r3
  4027f2:	4622      	mov	r2, r4
  4027f4:	462b      	mov	r3, r5
  4027f6:	e9c0 2314 	strd	r2, r3, [r0, #80]	; 0x50

004027fa <.LBB673>:


/* Make sure compiler doesn't skip */
STATIC INLINE void ForceZero(const void* mem, word32 len)
{
    volatile byte* z = (volatile byte*)mem;
  4027fa:	f50d 63da 	add.w	r3, sp, #1744	; 0x6d0

004027fe <.LVL8>:

    for (w = (volatile word64*)z; len >= sizeof(*w); len -= sizeof(*w))
        *w++ = 0;
    z = (volatile byte*)w;
#endif
    while (len--) *z++ = 0;
  4027fe:	2000      	movs	r0, #0
  402800:	f50d 61ea 	add.w	r1, sp, #1872	; 0x750

00402804 <.LVL9>:
  402804:	1c5a      	adds	r2, r3, #1

00402806 <.LVL10>:
  402806:	7018      	strb	r0, [r3, #0]

00402808 <.LVL11>:
  402808:	4613      	mov	r3, r2
  40280a:	428a      	cmp	r2, r1
  40280c:	d1fa      	bne.n	402804 <.LVL9>
  40280e:	f50d 63ea 	add.w	r3, sp, #1872	; 0x750

00402812 <.LBB675>:
  402812:	2100      	movs	r1, #0

00402814 <.LVL12>:
  402814:	1c5a      	adds	r2, r3, #1

00402816 <.LVL13>:
  402816:	7019      	strb	r1, [r3, #0]

00402818 <.LVL14>:
  402818:	4613      	mov	r3, r2
  40281a:	f50d 60f2 	add.w	r0, sp, #1936	; 0x790
  40281e:	4282      	cmp	r2, r0
  402820:	d1f8      	bne.n	402814 <.LVL12>

00402822 <.LBE675>:
#ifdef WOLFSSL_SMALL_STACK
    XFREE(W, NULL, DYNAMIC_TYPE_TMP_BUFFER);
#endif

    return 0;
}
  402822:	2000      	movs	r0, #0
  402824:	f20d 7d94 	addw	sp, sp, #1940	; 0x794

00402828 <.LCFI2>:
  402828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040282c <.LCFI3>:
        R( 0); R( 1); R( 2); R( 3);
  40282c:	e9dc 2316 	ldrd	r2, r3, [ip, #88]	; 0x58
  402830:	e9cd 231c 	strd	r2, r3, [sp, #112]	; 0x70
  402834:	f7fd be08 	b.w	400448 <.LBE365+0x52>
  402838:	e9dc 2318 	ldrd	r2, r3, [ip, #96]	; 0x60
  40283c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  402840:	f7fd bf19 	b.w	400676 <.LBE385+0x3e>
  402844:	e9dc 231a 	ldrd	r2, r3, [ip, #104]	; 0x68
  402848:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  40284c:	f7fe b831 	b.w	4008b2 <.LBE405+0x3e>
  402850:	e9dc 231c 	ldrd	r2, r3, [ip, #112]	; 0x70
  402854:	e9cd 2320 	strd	r2, r3, [sp, #128]	; 0x80
  402858:	f7fe b95c 	b.w	400b14 <.LBE425+0x3c>
        R( 4); R( 5); R( 6); R( 7);
  40285c:	e9dc 231e 	ldrd	r2, r3, [ip, #120]	; 0x78
  402860:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  402864:	f7fe ba7d 	b.w	400d62 <.LBE445+0x3e>
  402868:	e9dc 2320 	ldrd	r2, r3, [ip, #128]	; 0x80
  40286c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  402870:	f7fe bb8e 	b.w	400f90 <.LBE465+0x3a>
  402874:	e9dc 2322 	ldrd	r2, r3, [ip, #136]	; 0x88
  402878:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  40287c:	f7fe bca5 	b.w	4011ca <.LBE485+0x40>
  402880:	e9dc 2324 	ldrd	r2, r3, [ip, #144]	; 0x90
  402884:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  402888:	f7fe bdbe 	b.w	401408 <.LBE505+0x3e>
        R( 8); R( 9); R(10); R(11);
  40288c:	e9dc 3426 	ldrd	r3, r4, [ip, #152]	; 0x98
  402890:	e9cd 3400 	strd	r3, r4, [sp]
  402894:	f7fe bed9 	b.w	40164a <.LBE525+0x3a>
  402898:	e9dc 3428 	ldrd	r3, r4, [ip, #160]	; 0xa0
  40289c:	e9cd 3412 	strd	r3, r4, [sp, #72]	; 0x48
  4028a0:	f7fe bff6 	b.w	401890 <.LBE545+0x3a>
  4028a4:	e9dc 342a 	ldrd	r3, r4, [ip, #168]	; 0xa8
  4028a8:	e9cd 3424 	strd	r3, r4, [sp, #144]	; 0x90
  4028ac:	f7ff b91d 	b.w	401aea <.LBE565+0x3a>
  4028b0:	e9dc 342c 	ldrd	r3, r4, [ip, #176]	; 0xb0
  4028b4:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
  4028b8:	f7ff ba3a 	b.w	401d30 <.LBE585+0x3a>
        R(12); R(13); R(14); R(15);
  4028bc:	e9dc 232e 	ldrd	r2, r3, [ip, #184]	; 0xb8
  4028c0:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  4028c4:	f7ff bb6c 	b.w	401fa0 <.LBE605+0x3e>
  4028c8:	e9dc 3430 	ldrd	r3, r4, [ip, #192]	; 0xc0
  4028cc:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
  4028d0:	e48b      	b.n	4021ea <.LBE625+0x3a>
  4028d2:	e9dc 3432 	ldrd	r3, r4, [ip, #200]	; 0xc8
  4028d6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
  4028da:	e5b0      	b.n	40243e <.LBE645+0x3a>
  4028dc:	e9dc 3434 	ldrd	r3, r4, [ip, #208]	; 0xd0
  4028e0:	e9cd 3428 	strd	r3, r4, [sp, #160]	; 0xa0
  4028e4:	e6d2      	b.n	40268c <.LBE665+0x40>

004028e6 <.LFE16>:
  4028e6:	bf00      	nop

Disassembly of section .text._svfprintf_r%30:

004028e8 <_svfprintf_r>:
  4028e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

004028ec <.LCFI0>:
  4028ec:	ed2d 8b06 	vpush	{d8-d10}

004028f0 <.LCFI1>:
  4028f0:	b0cf      	sub	sp, #316	; 0x13c

004028f2 <.LCFI2>:
  4028f2:	460c      	mov	r4, r1
  4028f4:	9105      	str	r1, [sp, #20]
  4028f6:	4693      	mov	fp, r2
  4028f8:	930a      	str	r3, [sp, #40]	; 0x28

004028fa <.LVL1>:
  4028fa:	9011      	str	r0, [sp, #68]	; 0x44
  4028fc:	f007 ffec 	bl	40a8d8 <_localeconv_r>

00402900 <.LVL2>:
  402900:	6803      	ldr	r3, [r0, #0]
  402902:	9317      	str	r3, [sp, #92]	; 0x5c

00402904 <.LVL3>:
  402904:	4618      	mov	r0, r3
  402906:	f005 ff5b 	bl	4087c0 <strlen>

0040290a <.LVL4>:
  40290a:	89a3      	ldrh	r3, [r4, #12]
  40290c:	9015      	str	r0, [sp, #84]	; 0x54

0040290e <.LVL5>:
  40290e:	061d      	lsls	r5, r3, #24
  402910:	d503      	bpl.n	40291a <.LVL6>
  402912:	6923      	ldr	r3, [r4, #16]
  402914:	2b00      	cmp	r3, #0
  402916:	f001 8151 	beq.w	403bbc <.LBE47>

0040291a <.LVL6>:
  40291a:	2300      	movs	r3, #0
  40291c:	ed9f 8b7a 	vldr	d8, [pc, #488]	; 402b08 <.LVL46+0x4>
  402920:	ed9f 9b7b 	vldr	d9, [pc, #492]	; 402b10 <.LVL46+0xc>
  402924:	930f      	str	r3, [sp, #60]	; 0x3c
  402926:	9324      	str	r3, [sp, #144]	; 0x90
  402928:	9323      	str	r3, [sp, #140]	; 0x8c

0040292a <.LVL7>:
  40292a:	9314      	str	r3, [sp, #80]	; 0x50
  40292c:	9319      	str	r3, [sp, #100]	; 0x64
  40292e:	9312      	str	r3, [sp, #72]	; 0x48
  402930:	9318      	str	r3, [sp, #96]	; 0x60
  402932:	9316      	str	r3, [sp, #88]	; 0x58
  402934:	9303      	str	r3, [sp, #12]
  402936:	465e      	mov	r6, fp
  402938:	ab25      	add	r3, sp, #148	; 0x94

0040293a <.LVL8>:
  40293a:	f8df a1dc 	ldr.w	sl, [pc, #476]	; 402b18 <.LVL46+0x14>
  40293e:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44

00402942 <.LVL9>:
  402942:	9322      	str	r3, [sp, #136]	; 0x88
  402944:	4699      	mov	r9, r3

00402946 <.LVL10>:
  402946:	7833      	ldrb	r3, [r6, #0]
  402948:	4634      	mov	r4, r6
  40294a:	b1e3      	cbz	r3, 402986 <.LVL18>
  40294c:	2b25      	cmp	r3, #37	; 0x25
  40294e:	d102      	bne.n	402956 <.LVL12>
  402950:	e019      	b.n	402986 <.LVL18>

00402952 <.LVL11>:
  402952:	2b25      	cmp	r3, #37	; 0x25
  402954:	d003      	beq.n	40295e <.LVL14>

00402956 <.LVL12>:
  402956:	f814 3f01 	ldrb.w	r3, [r4, #1]!

0040295a <.LVL13>:
  40295a:	2b00      	cmp	r3, #0
  40295c:	d1f9      	bne.n	402952 <.LVL11>

0040295e <.LVL14>:
  40295e:	1ba5      	subs	r5, r4, r6
  402960:	b18d      	cbz	r5, 402986 <.LVL18>
  402962:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402964:	9a24      	ldr	r2, [sp, #144]	; 0x90
  402966:	f8c9 6000 	str.w	r6, [r9]
  40296a:	3301      	adds	r3, #1
  40296c:	442a      	add	r2, r5
  40296e:	2b07      	cmp	r3, #7
  402970:	f8c9 5004 	str.w	r5, [r9, #4]
  402974:	9224      	str	r2, [sp, #144]	; 0x90

00402976 <.LVL15>:
  402976:	9323      	str	r3, [sp, #140]	; 0x8c
  402978:	f300 809d 	bgt.w	402ab6 <.LVL36>

0040297c <.LVL16>:
  40297c:	f109 0908 	add.w	r9, r9, #8

00402980 <.LVL17>:
  402980:	9b03      	ldr	r3, [sp, #12]
  402982:	442b      	add	r3, r5
  402984:	9303      	str	r3, [sp, #12]

00402986 <.LVL18>:
  402986:	7823      	ldrb	r3, [r4, #0]
  402988:	2b00      	cmp	r3, #0
  40298a:	f001 80ca 	beq.w	403b22 <.LDL1>

0040298e <.LVL19>:
  40298e:	2300      	movs	r3, #0
  402990:	f04f 32ff 	mov.w	r2, #4294967295
  402994:	4698      	mov	r8, r3
  402996:	9307      	str	r3, [sp, #28]
  402998:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  40299c:	1c67      	adds	r7, r4, #1

0040299e <.LVL20>:
  40299e:	7863      	ldrb	r3, [r4, #1]
  4029a0:	9204      	str	r2, [sp, #16]
  4029a2:	242b      	movs	r4, #43	; 0x2b

004029a4 <.LVL21>:
  4029a4:	2520      	movs	r5, #32

004029a6 <.LVL22>:
  4029a6:	3701      	adds	r7, #1
  4029a8:	f1a3 0220 	sub.w	r2, r3, #32
  4029ac:	2a5a      	cmp	r2, #90	; 0x5a
  4029ae:	f200 83e4 	bhi.w	40317a <.LVL218>
  4029b2:	e8df f012 	tbh	[pc, r2, lsl #1]
  4029b6:	02a5      	.short	0x02a5
  4029b8:	03e203e2 	.word	0x03e203e2
  4029bc:	03e202ae 	.word	0x03e202ae
  4029c0:	03e203e2 	.word	0x03e203e2
  4029c4:	03e2005f 	.word	0x03e2005f
  4029c8:	02b203e2 	.word	0x02b203e2
  4029cc:	03e202bf 	.word	0x03e202bf
  4029d0:	02cd007c 	.word	0x02cd007c
  4029d4:	02e703e2 	.word	0x02e703e2
  4029d8:	03d203d2 	.word	0x03d203d2
  4029dc:	03d203d2 	.word	0x03d203d2
  4029e0:	03d203d2 	.word	0x03d203d2
  4029e4:	03d203d2 	.word	0x03d203d2
  4029e8:	03e203d2 	.word	0x03e203d2
  4029ec:	03e203e2 	.word	0x03e203e2
  4029f0:	03e203e2 	.word	0x03e203e2
  4029f4:	03e203e2 	.word	0x03e203e2
  4029f8:	03e2034a 	.word	0x03e2034a
  4029fc:	0392037c 	.word	0x0392037c
  402a00:	034a034a 	.word	0x034a034a
  402a04:	03e2034a 	.word	0x03e2034a
  402a08:	03e203e2 	.word	0x03e203e2
  402a0c:	02eb03e2 	.word	0x02eb03e2
  402a10:	03e203e2 	.word	0x03e203e2
  402a14:	03e202ef 	.word	0x03e202ef
  402a18:	03e203e2 	.word	0x03e203e2
  402a1c:	03e20300 	.word	0x03e20300
  402a20:	03e20327 	.word	0x03e20327
  402a24:	029403e2 	.word	0x029403e2
  402a28:	03e203e2 	.word	0x03e203e2
  402a2c:	03e203e2 	.word	0x03e203e2
  402a30:	03e203e2 	.word	0x03e203e2
  402a34:	03e203e2 	.word	0x03e203e2
  402a38:	03e2034a 	.word	0x03e2034a
  402a3c:	0254037c 	.word	0x0254037c
  402a40:	034a034a 	.word	0x034a034a
  402a44:	02c3034a 	.word	0x02c3034a
  402a48:	005b0254 	.word	0x005b0254
  402a4c:	03b003e2 	.word	0x03b003e2
  402a50:	03ba03e2 	.word	0x03ba03e2
  402a54:	03380223 	.word	0x03380223
  402a58:	03e2005b 	.word	0x03e2005b
  402a5c:	00760300 	.word	0x00760300
  402a60:	03e2023e 	.word	0x03e2023e
  402a64:	00b303e2 	.word	0x00b303e2
  402a68:	007603e2 	.word	0x007603e2
  402a6c:	f048 0820 	orr.w	r8, r8, #32
  402a70:	783b      	ldrb	r3, [r7, #0]
  402a72:	e798      	b.n	4029a6 <.LVL22>
  402a74:	4658      	mov	r0, fp
  402a76:	f007 ff2f 	bl	40a8d8 <_localeconv_r>

00402a7a <.LVL25>:
  402a7a:	6843      	ldr	r3, [r0, #4]
  402a7c:	9316      	str	r3, [sp, #88]	; 0x58

00402a7e <.LVL26>:
  402a7e:	4618      	mov	r0, r3
  402a80:	f005 fe9e 	bl	4087c0 <strlen>

00402a84 <.LVL27>:
  402a84:	9018      	str	r0, [sp, #96]	; 0x60

00402a86 <.LVL28>:
  402a86:	4658      	mov	r0, fp
  402a88:	f007 ff26 	bl	40a8d8 <_localeconv_r>

00402a8c <.LVL29>:
  402a8c:	6883      	ldr	r3, [r0, #8]
  402a8e:	9312      	str	r3, [sp, #72]	; 0x48

00402a90 <.LVL30>:
  402a90:	9b18      	ldr	r3, [sp, #96]	; 0x60

00402a92 <.LVL31>:
  402a92:	b133      	cbz	r3, 402aa2 <.LVL32>
  402a94:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a96:	b123      	cbz	r3, 402aa2 <.LVL32>
  402a98:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a9a:	781b      	ldrb	r3, [r3, #0]
  402a9c:	2b00      	cmp	r3, #0
  402a9e:	f041 8083 	bne.w	403ba8 <.LVL513>

00402aa2 <.LVL32>:
  402aa2:	783b      	ldrb	r3, [r7, #0]
  402aa4:	e77f      	b.n	4029a6 <.LVL22>

00402aa6 <.LVL33>:
  402aa6:	9a07      	ldr	r2, [sp, #28]
  402aa8:	930a      	str	r3, [sp, #40]	; 0x28
  402aaa:	4252      	negs	r2, r2
  402aac:	9207      	str	r2, [sp, #28]

00402aae <.LVL34>:
  402aae:	f048 0804 	orr.w	r8, r8, #4
  402ab2:	783b      	ldrb	r3, [r7, #0]
  402ab4:	e777      	b.n	4029a6 <.LVL22>

00402ab6 <.LVL36>:
  402ab6:	aa22      	add	r2, sp, #136	; 0x88
  402ab8:	9905      	ldr	r1, [sp, #20]
  402aba:	4658      	mov	r0, fp
  402abc:	f005 fca0 	bl	408400 <__ssprint_r>

00402ac0 <.LVL37>:
  402ac0:	b980      	cbnz	r0, 402ae4 <.LVL44>

00402ac2 <.LVL38>:
  402ac2:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00402ac6 <.LVL39>:
  402ac6:	e75b      	b.n	402980 <.LVL17>

00402ac8 <.LVL40>:
  402ac8:	aa22      	add	r2, sp, #136	; 0x88

00402aca <.LVL41>:
  402aca:	9905      	ldr	r1, [sp, #20]
  402acc:	4658      	mov	r0, fp
  402ace:	f005 fc97 	bl	408400 <__ssprint_r>

00402ad2 <.LVL42>:
  402ad2:	2800      	cmp	r0, #0
  402ad4:	f000 8182 	beq.w	402ddc <.LVL119>

00402ad8 <.L189>:
  402ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402ada:	b11b      	cbz	r3, 402ae4 <.LVL44>
  402adc:	9909      	ldr	r1, [sp, #36]	; 0x24
  402ade:	9811      	ldr	r0, [sp, #68]	; 0x44
  402ae0:	f004 fe98 	bl	407814 <.LFE174>

00402ae4 <.LVL44>:
  402ae4:	9b05      	ldr	r3, [sp, #20]
  402ae6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
  402aea:	f013 0f40 	tst.w	r3, #64	; 0x40
  402aee:	9b03      	ldr	r3, [sp, #12]
  402af0:	bf18      	it	ne
  402af2:	f04f 33ff 	movne.w	r3, #4294967295
  402af6:	9303      	str	r3, [sp, #12]

00402af8 <.LVL45>:
  402af8:	9803      	ldr	r0, [sp, #12]
  402afa:	b04f      	add	sp, #316	; 0x13c

00402afc <.LCFI3>:
  402afc:	ecbd 8b06 	vpop	{d8-d10}

00402b00 <.LCFI4>:
  402b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00402b04 <.LVL46>:
  402b04:	f3af 8000 	nop.w
	...
  402b10:	ffffffff 	.word	0xffffffff
  402b14:	7fefffff 	.word	0x7fefffff
  402b18:	0040abb4 	.word	0x0040abb4

00402b1c <.L45>:
  402b1c:	930d      	str	r3, [sp, #52]	; 0x34
  402b1e:	f018 0f20 	tst.w	r8, #32
  402b22:	4bb4      	ldr	r3, [pc, #720]	; (402df4 <.LVL122+0x4>)
  402b24:	9314      	str	r3, [sp, #80]	; 0x50

00402b26 <.LVL48>:
  402b26:	f040 81e1 	bne.w	402eec <.LVL150>
  402b2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402b2c:	f018 0f10 	tst.w	r8, #16
  402b30:	4613      	mov	r3, r2
  402b32:	f040 859d 	bne.w	403670 <.LVL365>
  402b36:	f018 0f40 	tst.w	r8, #64	; 0x40
  402b3a:	f041 801d 	bne.w	403b78 <.LVL506>
  402b3e:	f418 7f00 	tst.w	r8, #512	; 0x200
  402b42:	f000 8595 	beq.w	403670 <.LVL365>

00402b46 <.LVL49>:
  402b46:	3304      	adds	r3, #4

00402b48 <.LVL50>:
  402b48:	7814      	ldrb	r4, [r2, #0]
  402b4a:	930a      	str	r3, [sp, #40]	; 0x28
  402b4c:	2500      	movs	r5, #0

00402b4e <.LVL51>:
  402b4e:	f018 0f01 	tst.w	r8, #1
  402b52:	d00b      	beq.n	402b6c <.LVL51+0x1e>
  402b54:	ea54 0305 	orrs.w	r3, r4, r5
  402b58:	d008      	beq.n	402b6c <.LVL51+0x1e>
  402b5a:	2330      	movs	r3, #48	; 0x30
  402b5c:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
  402b60:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
  402b64:	f048 0802 	orr.w	r8, r8, #2
  402b68:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  402b6c:	f428 6180 	bic.w	r1, r8, #1024	; 0x400

00402b70 <.LVL53>:
  402b70:	2302      	movs	r3, #2

00402b72 <.L150>:
  402b72:	2200      	movs	r2, #0
  402b74:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b

00402b78 <.L65>:
  402b78:	9804      	ldr	r0, [sp, #16]
  402b7a:	1c42      	adds	r2, r0, #1
  402b7c:	f000 8190 	beq.w	402ea0 <.LVL139>

00402b80 <.LVL56>:
  402b80:	ea54 0205 	orrs.w	r2, r4, r5
  402b84:	f021 0880 	bic.w	r8, r1, #128	; 0x80

00402b88 <.LVL57>:
  402b88:	f040 818f 	bne.w	402eaa <.LVL140>
  402b8c:	2800      	cmp	r0, #0
  402b8e:	f040 8409 	bne.w	4033a4 <.LVL271>
  402b92:	2b00      	cmp	r3, #0
  402b94:	f040 84a2 	bne.w	4034dc <.LBE13>
  402b98:	f011 0301 	ands.w	r3, r1, #1

00402b9c <.LVL58>:
  402b9c:	ae4e      	add	r6, sp, #312	; 0x138

00402b9e <.LVL59>:
  402b9e:	9308      	str	r3, [sp, #32]
  402ba0:	d002      	beq.n	402ba8 <.LVL61>

00402ba2 <.LVL60>:
  402ba2:	2330      	movs	r3, #48	; 0x30
  402ba4:	f806 3d01 	strb.w	r3, [r6, #-1]!

00402ba8 <.LVL61>:
  402ba8:	2300      	movs	r3, #0
  402baa:	9a08      	ldr	r2, [sp, #32]
  402bac:	9309      	str	r3, [sp, #36]	; 0x24
  402bae:	9313      	str	r3, [sp, #76]	; 0x4c
  402bb0:	9310      	str	r3, [sp, #64]	; 0x40
  402bb2:	930e      	str	r3, [sp, #56]	; 0x38
  402bb4:	9b04      	ldr	r3, [sp, #16]
  402bb6:	4293      	cmp	r3, r2
  402bb8:	bfb8      	it	lt
  402bba:	4613      	movlt	r3, r2
  402bbc:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  402bc0:	9302      	str	r3, [sp, #8]

00402bc2 <.L59>:
  402bc2:	b112      	cbz	r2, 402bca <.LVL64>

00402bc4 <.LVL63>:
  402bc4:	9b02      	ldr	r3, [sp, #8]
  402bc6:	3301      	adds	r3, #1
  402bc8:	9302      	str	r3, [sp, #8]

00402bca <.LVL64>:
  402bca:	f018 0302 	ands.w	r3, r8, #2
  402bce:	930b      	str	r3, [sp, #44]	; 0x2c
  402bd0:	d002      	beq.n	402bd8 <.LVL64+0xe>
  402bd2:	9b02      	ldr	r3, [sp, #8]
  402bd4:	3302      	adds	r3, #2
  402bd6:	9302      	str	r3, [sp, #8]
  402bd8:	f018 0384 	ands.w	r3, r8, #132	; 0x84
  402bdc:	930c      	str	r3, [sp, #48]	; 0x30
  402bde:	f040 82ea 	bne.w	4031b6 <.LVL227>
  402be2:	9b07      	ldr	r3, [sp, #28]
  402be4:	9902      	ldr	r1, [sp, #8]
  402be6:	1a5c      	subs	r4, r3, r1

00402be8 <.LVL66>:
  402be8:	2c00      	cmp	r4, #0
  402bea:	f340 82e4 	ble.w	4031b6 <.LVL227>
  402bee:	2c10      	cmp	r4, #16
  402bf0:	9924      	ldr	r1, [sp, #144]	; 0x90
  402bf2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402bf4:	4d80      	ldr	r5, [pc, #512]	; (402df8 <.LVL122+0x8>)
  402bf6:	dd25      	ble.n	402c44 <.LVL80>
  402bf8:	4648      	mov	r0, r9
  402bfa:	2310      	movs	r3, #16
  402bfc:	46c1      	mov	r9, r8
  402bfe:	46b0      	mov	r8, r6

00402c00 <.LVL67>:
  402c00:	9e05      	ldr	r6, [sp, #20]
  402c02:	e004      	b.n	402c0e <.LVL71>

00402c04 <.LVL68>:
  402c04:	3c10      	subs	r4, #16

00402c06 <.LVL69>:
  402c06:	2c10      	cmp	r4, #16
  402c08:	f100 0008 	add.w	r0, r0, #8

00402c0c <.LVL70>:
  402c0c:	dd17      	ble.n	402c3e <.LVL79>

00402c0e <.LVL71>:
  402c0e:	3201      	adds	r2, #1
  402c10:	3110      	adds	r1, #16
  402c12:	2a07      	cmp	r2, #7
  402c14:	9124      	str	r1, [sp, #144]	; 0x90

00402c16 <.LVL72>:
  402c16:	9223      	str	r2, [sp, #140]	; 0x8c
  402c18:	6005      	str	r5, [r0, #0]
  402c1a:	6043      	str	r3, [r0, #4]
  402c1c:	ddf2      	ble.n	402c04 <.LVL68>
  402c1e:	aa22      	add	r2, sp, #136	; 0x88
  402c20:	4631      	mov	r1, r6
  402c22:	4658      	mov	r0, fp

00402c24 <.LVL73>:
  402c24:	9306      	str	r3, [sp, #24]
  402c26:	f005 fbeb 	bl	408400 <__ssprint_r>

00402c2a <.LVL74>:
  402c2a:	2800      	cmp	r0, #0
  402c2c:	f47f af54 	bne.w	402ad8 <.L189>
  402c30:	3c10      	subs	r4, #16

00402c32 <.LVL75>:
  402c32:	2c10      	cmp	r4, #16
  402c34:	9924      	ldr	r1, [sp, #144]	; 0x90
  402c36:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00402c38 <.LVL76>:
  402c38:	9b06      	ldr	r3, [sp, #24]

00402c3a <.LVL77>:
  402c3a:	a825      	add	r0, sp, #148	; 0x94

00402c3c <.LVL78>:
  402c3c:	dce7      	bgt.n	402c0e <.LVL71>

00402c3e <.LVL79>:
  402c3e:	4646      	mov	r6, r8
  402c40:	46c8      	mov	r8, r9
  402c42:	4681      	mov	r9, r0

00402c44 <.LVL80>:
  402c44:	3201      	adds	r2, #1
  402c46:	1863      	adds	r3, r4, r1
  402c48:	2a07      	cmp	r2, #7
  402c4a:	9324      	str	r3, [sp, #144]	; 0x90
  402c4c:	9223      	str	r2, [sp, #140]	; 0x8c
  402c4e:	f8c9 5000 	str.w	r5, [r9]
  402c52:	f8c9 4004 	str.w	r4, [r9, #4]
  402c56:	f300 848f 	bgt.w	403578 <.LVL333>

00402c5a <.LVL81>:
  402c5a:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  402c5e:	f109 0908 	add.w	r9, r9, #8

00402c62 <.LVL82>:
  402c62:	b172      	cbz	r2, 402c82 <.LVL84>
  402c64:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402c66:	3201      	adds	r2, #1
  402c68:	3301      	adds	r3, #1
  402c6a:	f10d 006b 	add.w	r0, sp, #107	; 0x6b
  402c6e:	2101      	movs	r1, #1
  402c70:	2a07      	cmp	r2, #7
  402c72:	9324      	str	r3, [sp, #144]	; 0x90
  402c74:	9223      	str	r2, [sp, #140]	; 0x8c
  402c76:	e889 0003 	stmia.w	r9, {r0, r1}
  402c7a:	f300 83a9 	bgt.w	4033d0 <.LVL278>

00402c7e <.LVL83>:
  402c7e:	f109 0908 	add.w	r9, r9, #8

00402c82 <.LVL84>:
  402c82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402c84:	b16a      	cbz	r2, 402ca2 <.LVL86>
  402c86:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402c88:	3201      	adds	r2, #1
  402c8a:	3302      	adds	r3, #2
  402c8c:	a81b      	add	r0, sp, #108	; 0x6c
  402c8e:	2102      	movs	r1, #2
  402c90:	2a07      	cmp	r2, #7
  402c92:	9324      	str	r3, [sp, #144]	; 0x90
  402c94:	9223      	str	r2, [sp, #140]	; 0x8c
  402c96:	e889 0003 	stmia.w	r9, {r0, r1}
  402c9a:	f300 83a5 	bgt.w	4033e8 <.LVL282>

00402c9e <.LVL85>:
  402c9e:	f109 0908 	add.w	r9, r9, #8

00402ca2 <.LVL86>:
  402ca2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402ca4:	2a80      	cmp	r2, #128	; 0x80
  402ca6:	f000 82eb 	beq.w	403280 <.LVL243>
  402caa:	9a04      	ldr	r2, [sp, #16]
  402cac:	9908      	ldr	r1, [sp, #32]
  402cae:	1a54      	subs	r4, r2, r1

00402cb0 <.LVL87>:
  402cb0:	2c00      	cmp	r4, #0
  402cb2:	dd36      	ble.n	402d22 <.LVL102>
  402cb4:	2c10      	cmp	r4, #16
  402cb6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402cb8:	dd26      	ble.n	402d08 <.LVL100>
  402cba:	4649      	mov	r1, r9
  402cbc:	2510      	movs	r5, #16
  402cbe:	46a1      	mov	r9, r4
  402cc0:	9c05      	ldr	r4, [sp, #20]

00402cc2 <.LVL88>:
  402cc2:	e006      	b.n	402cd2 <.LVL92>

00402cc4 <.LVL89>:
  402cc4:	f1a9 0910 	sub.w	r9, r9, #16

00402cc8 <.LVL90>:
  402cc8:	f1b9 0f10 	cmp.w	r9, #16
  402ccc:	f101 0108 	add.w	r1, r1, #8

00402cd0 <.LVL91>:
  402cd0:	dd18      	ble.n	402d04 <.LVL99>

00402cd2 <.LVL92>:
  402cd2:	3201      	adds	r2, #1
  402cd4:	3310      	adds	r3, #16
  402cd6:	2a07      	cmp	r2, #7
  402cd8:	9324      	str	r3, [sp, #144]	; 0x90

00402cda <.LVL93>:
  402cda:	9223      	str	r2, [sp, #140]	; 0x8c
  402cdc:	f8c1 a000 	str.w	sl, [r1]
  402ce0:	604d      	str	r5, [r1, #4]
  402ce2:	ddef      	ble.n	402cc4 <.LVL89>
  402ce4:	aa22      	add	r2, sp, #136	; 0x88
  402ce6:	4621      	mov	r1, r4

00402ce8 <.LVL94>:
  402ce8:	4658      	mov	r0, fp
  402cea:	f005 fb89 	bl	408400 <__ssprint_r>

00402cee <.LVL95>:
  402cee:	2800      	cmp	r0, #0
  402cf0:	f47f aef2 	bne.w	402ad8 <.L189>
  402cf4:	f1a9 0910 	sub.w	r9, r9, #16

00402cf8 <.LVL96>:
  402cf8:	f1b9 0f10 	cmp.w	r9, #16
  402cfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402cfe:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00402d00 <.LVL97>:
  402d00:	a925      	add	r1, sp, #148	; 0x94

00402d02 <.LVL98>:
  402d02:	dce6      	bgt.n	402cd2 <.LVL92>

00402d04 <.LVL99>:
  402d04:	464c      	mov	r4, r9
  402d06:	4689      	mov	r9, r1

00402d08 <.LVL100>:
  402d08:	3201      	adds	r2, #1
  402d0a:	4423      	add	r3, r4
  402d0c:	2a07      	cmp	r2, #7
  402d0e:	9324      	str	r3, [sp, #144]	; 0x90
  402d10:	9223      	str	r2, [sp, #140]	; 0x8c
  402d12:	f8c9 a000 	str.w	sl, [r9]
  402d16:	f8c9 4004 	str.w	r4, [r9, #4]
  402d1a:	f300 834d 	bgt.w	4033b8 <.LVL274>

00402d1e <.LVL101>:
  402d1e:	f109 0908 	add.w	r9, r9, #8

00402d22 <.LVL102>:
  402d22:	f418 7f80 	tst.w	r8, #256	; 0x100
  402d26:	f040 824f 	bne.w	4031c8 <.LVL228>
  402d2a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402d2c:	9808      	ldr	r0, [sp, #32]
  402d2e:	f8c9 6000 	str.w	r6, [r9]
  402d32:	3201      	adds	r2, #1
  402d34:	4403      	add	r3, r0
  402d36:	2a07      	cmp	r2, #7
  402d38:	9324      	str	r3, [sp, #144]	; 0x90
  402d3a:	f8c9 0004 	str.w	r0, [r9, #4]
  402d3e:	9223      	str	r2, [sp, #140]	; 0x8c
  402d40:	f300 8324 	bgt.w	40338c <.LVL269>

00402d44 <.LVL103>:
  402d44:	f109 0908 	add.w	r9, r9, #8

00402d48 <.LVL104>:
  402d48:	f018 0f04 	tst.w	r8, #4
  402d4c:	d03b      	beq.n	402dc6 <.LVL117>
  402d4e:	9a07      	ldr	r2, [sp, #28]
  402d50:	9902      	ldr	r1, [sp, #8]
  402d52:	1a54      	subs	r4, r2, r1

00402d54 <.LVL105>:
  402d54:	2c00      	cmp	r4, #0
  402d56:	dd36      	ble.n	402dc6 <.LVL117>
  402d58:	2c10      	cmp	r4, #16
  402d5a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402d5c:	4d26      	ldr	r5, [pc, #152]	; (402df8 <.LVL122+0x8>)
  402d5e:	dd1f      	ble.n	402da0 <.LVL115>
  402d60:	2610      	movs	r6, #16
  402d62:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402d66:	e004      	b.n	402d72 <.LVL109>

00402d68 <.LVL106>:
  402d68:	3c10      	subs	r4, #16

00402d6a <.LVL107>:
  402d6a:	2c10      	cmp	r4, #16
  402d6c:	f109 0908 	add.w	r9, r9, #8

00402d70 <.LVL108>:
  402d70:	dd16      	ble.n	402da0 <.LVL115>

00402d72 <.LVL109>:
  402d72:	3201      	adds	r2, #1
  402d74:	3310      	adds	r3, #16
  402d76:	2a07      	cmp	r2, #7
  402d78:	9324      	str	r3, [sp, #144]	; 0x90

00402d7a <.LVL110>:
  402d7a:	9223      	str	r2, [sp, #140]	; 0x8c
  402d7c:	e889 0060 	stmia.w	r9, {r5, r6}
  402d80:	ddf2      	ble.n	402d68 <.LVL106>
  402d82:	aa22      	add	r2, sp, #136	; 0x88
  402d84:	4641      	mov	r1, r8
  402d86:	4658      	mov	r0, fp
  402d88:	f005 fb3a 	bl	408400 <__ssprint_r>

00402d8c <.LVL111>:
  402d8c:	2800      	cmp	r0, #0
  402d8e:	f47f aea3 	bne.w	402ad8 <.L189>
  402d92:	3c10      	subs	r4, #16

00402d94 <.LVL112>:
  402d94:	2c10      	cmp	r4, #16
  402d96:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d98:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00402d9a <.LVL113>:
  402d9a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00402d9e <.LVL114>:
  402d9e:	dce8      	bgt.n	402d72 <.LVL109>

00402da0 <.LVL115>:
  402da0:	3201      	adds	r2, #1
  402da2:	4423      	add	r3, r4
  402da4:	2a07      	cmp	r2, #7
  402da6:	9324      	str	r3, [sp, #144]	; 0x90
  402da8:	9223      	str	r2, [sp, #140]	; 0x8c
  402daa:	f8c9 5000 	str.w	r5, [r9]
  402dae:	f8c9 4004 	str.w	r4, [r9, #4]
  402db2:	dd08      	ble.n	402dc6 <.LVL117>
  402db4:	aa22      	add	r2, sp, #136	; 0x88
  402db6:	9905      	ldr	r1, [sp, #20]
  402db8:	4658      	mov	r0, fp
  402dba:	f005 fb21 	bl	408400 <__ssprint_r>

00402dbe <.LVL116>:
  402dbe:	2800      	cmp	r0, #0
  402dc0:	f47f ae8a 	bne.w	402ad8 <.L189>
  402dc4:	9b24      	ldr	r3, [sp, #144]	; 0x90

00402dc6 <.LVL117>:
  402dc6:	9a03      	ldr	r2, [sp, #12]
  402dc8:	9907      	ldr	r1, [sp, #28]
  402dca:	9802      	ldr	r0, [sp, #8]
  402dcc:	4281      	cmp	r1, r0
  402dce:	bfac      	ite	ge
  402dd0:	1852      	addge	r2, r2, r1
  402dd2:	1812      	addlt	r2, r2, r0
  402dd4:	9203      	str	r2, [sp, #12]

00402dd6 <.LVL118>:
  402dd6:	2b00      	cmp	r3, #0
  402dd8:	f47f ae76 	bne.w	402ac8 <.LVL40>

00402ddc <.LVL119>:
  402ddc:	2300      	movs	r3, #0
  402dde:	9323      	str	r3, [sp, #140]	; 0x8c

00402de0 <.LVL120>:
  402de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402de2:	b11b      	cbz	r3, 402dec <.LVL121>
  402de4:	9909      	ldr	r1, [sp, #36]	; 0x24
  402de6:	4658      	mov	r0, fp
  402de8:	f004 fd14 	bl	407814 <.LFE174>

00402dec <.LVL121>:
  402dec:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00402df0 <.LVL122>:
  402df0:	463e      	mov	r6, r7
  402df2:	e5a8      	b.n	402946 <.LVL10>
  402df4:	0040a2a0 	.word	0x0040a2a0
  402df8:	0040aba4 	.word	0x0040aba4

00402dfc <.LVL123>:
  402dfc:	f018 0f20 	tst.w	r8, #32
  402e00:	930d      	str	r3, [sp, #52]	; 0x34
  402e02:	f040 80ce 	bne.w	402fa2 <.LVL168+0x1e>
  402e06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402e08:	f018 0f10 	tst.w	r8, #16
  402e0c:	4613      	mov	r3, r2
  402e0e:	f040 8419 	bne.w	403644 <.LVL358>
  402e12:	f018 0f40 	tst.w	r8, #64	; 0x40
  402e16:	f040 86a2 	bne.w	403b5e <.LVL502>
  402e1a:	f418 7f00 	tst.w	r8, #512	; 0x200
  402e1e:	f000 8411 	beq.w	403644 <.LVL358>

00402e22 <.LVL124>:
  402e22:	3304      	adds	r3, #4

00402e24 <.LVL125>:
  402e24:	7814      	ldrb	r4, [r2, #0]
  402e26:	930a      	str	r3, [sp, #40]	; 0x28
  402e28:	2500      	movs	r5, #0

00402e2a <.LVL126>:
  402e2a:	f428 6180 	bic.w	r1, r8, #1024	; 0x400

00402e2e <.LVL127>:
  402e2e:	2300      	movs	r3, #0
  402e30:	e69f      	b.n	402b72 <.L150>

00402e32 <.LVL128>:
  402e32:	4641      	mov	r1, r8

00402e34 <.LVL129>:
  402e34:	068e      	lsls	r6, r1, #26

00402e36 <.LVL130>:
  402e36:	930d      	str	r3, [sp, #52]	; 0x34
  402e38:	f100 80ea 	bmi.w	403010 <.LVL180+0x6>
  402e3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402e3e:	06cd      	lsls	r5, r1, #27
  402e40:	4613      	mov	r3, r2
  402e42:	f100 8405 	bmi.w	403650 <.LVL360>
  402e46:	064c      	lsls	r4, r1, #25
  402e48:	f100 868f 	bmi.w	403b6a <.LVL504>
  402e4c:	0588      	lsls	r0, r1, #22
  402e4e:	f140 83ff 	bpl.w	403650 <.LVL360>

00402e52 <.LVL131>:
  402e52:	7814      	ldrb	r4, [r2, #0]
  402e54:	3204      	adds	r2, #4

00402e56 <.LVL132>:
  402e56:	2500      	movs	r5, #0
  402e58:	2301      	movs	r3, #1
  402e5a:	920a      	str	r2, [sp, #40]	; 0x28
  402e5c:	e689      	b.n	402b72 <.L150>

00402e5e <.LVL133>:
  402e5e:	4641      	mov	r1, r8

00402e60 <.LVL134>:
  402e60:	068c      	lsls	r4, r1, #26
  402e62:	930d      	str	r3, [sp, #52]	; 0x34
  402e64:	f100 813f 	bmi.w	4030e6 <.LVL198+0x8>
  402e68:	06c8      	lsls	r0, r1, #27
  402e6a:	f100 83f8 	bmi.w	40365e <.LVL362>
  402e6e:	064a      	lsls	r2, r1, #25
  402e70:	f100 8688 	bmi.w	403b84 <.LVL508>
  402e74:	058b      	lsls	r3, r1, #22
  402e76:	f140 83f2 	bpl.w	40365e <.LVL362>

00402e7a <.LVL135>:
  402e7a:	980a      	ldr	r0, [sp, #40]	; 0x28
  402e7c:	f990 4000 	ldrsb.w	r4, [r0]

00402e80 <.LVL136>:
  402e80:	17e5      	asrs	r5, r4, #31
  402e82:	3004      	adds	r0, #4
  402e84:	4622      	mov	r2, r4
  402e86:	462b      	mov	r3, r5
  402e88:	900a      	str	r0, [sp, #40]	; 0x28

00402e8a <.LVL137>:
  402e8a:	2a00      	cmp	r2, #0
  402e8c:	f173 0300 	sbcs.w	r3, r3, #0
  402e90:	f2c0 8139 	blt.w	403106 <.LVL201>
  402e94:	9804      	ldr	r0, [sp, #16]
  402e96:	1c42      	adds	r2, r0, #1
  402e98:	f04f 0301 	mov.w	r3, #1

00402e9c <.LVL138>:
  402e9c:	f47f ae70 	bne.w	402b80 <.LVL56>

00402ea0 <.LVL139>:
  402ea0:	ea54 0205 	orrs.w	r2, r4, r5
  402ea4:	f000 827f 	beq.w	4033a6 <.LVL272>
  402ea8:	4688      	mov	r8, r1

00402eaa <.LVL140>:
  402eaa:	2b01      	cmp	r3, #1
  402eac:	f000 831e 	beq.w	4034ec <.LVL316>
  402eb0:	2b02      	cmp	r3, #2
  402eb2:	f040 82a8 	bne.w	403406 <.LVL288>

00402eb6 <.LVL141>:
  402eb6:	9814      	ldr	r0, [sp, #80]	; 0x50

00402eb8 <.LVL142>:
  402eb8:	ae4e      	add	r6, sp, #312	; 0x138

00402eba <.LVL143>:
  402eba:	0923      	lsrs	r3, r4, #4
  402ebc:	f004 010f 	and.w	r1, r4, #15
  402ec0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402ec4:	092a      	lsrs	r2, r5, #4
  402ec6:	461c      	mov	r4, r3

00402ec8 <.LVL144>:
  402ec8:	4615      	mov	r5, r2

00402eca <.LVL145>:
  402eca:	5c43      	ldrb	r3, [r0, r1]
  402ecc:	f806 3d01 	strb.w	r3, [r6, #-1]!

00402ed0 <.LVL146>:
  402ed0:	ea54 0305 	orrs.w	r3, r4, r5
  402ed4:	d1f1      	bne.n	402eba <.LVL143>

00402ed6 <.LVL147>:
  402ed6:	ab4e      	add	r3, sp, #312	; 0x138
  402ed8:	1b9b      	subs	r3, r3, r6
  402eda:	9308      	str	r3, [sp, #32]
  402edc:	e664      	b.n	402ba8 <.LVL61>

00402ede <.LVL148>:
  402ede:	930d      	str	r3, [sp, #52]	; 0x34
  402ee0:	f018 0f20 	tst.w	r8, #32
  402ee4:	4bb5      	ldr	r3, [pc, #724]	; (4031bc <.LVL227+0x6>)
  402ee6:	9314      	str	r3, [sp, #80]	; 0x50

00402ee8 <.LVL149>:
  402ee8:	f43f ae1f 	beq.w	402b2a <.LVL48+0x4>

00402eec <.LVL150>:
  402eec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402eee:	3507      	adds	r5, #7
  402ef0:	f025 0307 	bic.w	r3, r5, #7
  402ef4:	f103 0208 	add.w	r2, r3, #8
  402ef8:	920a      	str	r2, [sp, #40]	; 0x28

00402efa <.LVL151>:
  402efa:	e9d3 4500 	ldrd	r4, r5, [r3]
  402efe:	e626      	b.n	402b4e <.LVL51>

00402f00 <.LVL152>:
  402f00:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
  402f04:	2b00      	cmp	r3, #0
  402f06:	f47f adcc 	bne.w	402aa2 <.LVL32>
  402f0a:	f88d 506b 	strb.w	r5, [sp, #107]	; 0x6b
  402f0e:	783b      	ldrb	r3, [r7, #0]
  402f10:	e549      	b.n	4029a6 <.LVL22>
  402f12:	f048 0801 	orr.w	r8, r8, #1
  402f16:	783b      	ldrb	r3, [r7, #0]
  402f18:	e545      	b.n	4029a6 <.LVL22>
  402f1a:	990a      	ldr	r1, [sp, #40]	; 0x28
  402f1c:	680b      	ldr	r3, [r1, #0]
  402f1e:	9307      	str	r3, [sp, #28]
  402f20:	461a      	mov	r2, r3
  402f22:	2a00      	cmp	r2, #0
  402f24:	460b      	mov	r3, r1
  402f26:	f103 0304 	add.w	r3, r3, #4

00402f2a <.LVL154>:
  402f2a:	f6ff adbc 	blt.w	402aa6 <.LVL33>
  402f2e:	930a      	str	r3, [sp, #40]	; 0x28
  402f30:	783b      	ldrb	r3, [r7, #0]

00402f32 <.LVL155>:
  402f32:	e538      	b.n	4029a6 <.LVL22>
  402f34:	f88d 406b 	strb.w	r4, [sp, #107]	; 0x6b
  402f38:	783b      	ldrb	r3, [r7, #0]
  402f3a:	e534      	b.n	4029a6 <.LVL22>

00402f3c <.LVL156>:
  402f3c:	783b      	ldrb	r3, [r7, #0]
  402f3e:	2b68      	cmp	r3, #104	; 0x68
  402f40:	bf03      	ittte	eq
  402f42:	787b      	ldrbeq	r3, [r7, #1]
  402f44:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
  402f48:	3701      	addeq	r7, #1

00402f4a <.LVL158>:
  402f4a:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
  402f4e:	e52a      	b.n	4029a6 <.LVL22>

00402f50 <.LVL160>:
  402f50:	783b      	ldrb	r3, [r7, #0]
  402f52:	2b2a      	cmp	r3, #42	; 0x2a
  402f54:	f107 0101 	add.w	r1, r7, #1

00402f58 <.LVL161>:
  402f58:	f001 811c 	beq.w	404194 <.LVL687>

00402f5c <.LVL162>:
  402f5c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  402f60:	2a09      	cmp	r2, #9
  402f62:	460f      	mov	r7, r1
  402f64:	f201 804a 	bhi.w	403ffc <.LVL637>
  402f68:	2300      	movs	r3, #0

00402f6a <.LVL163>:
  402f6a:	4619      	mov	r1, r3

00402f6c <.LVL164>:
  402f6c:	f817 3b01 	ldrb.w	r3, [r7], #1

00402f70 <.LVL165>:
  402f70:	eb01 0181 	add.w	r1, r1, r1, lsl #2

00402f74 <.LVL166>:
  402f74:	eb02 0141 	add.w	r1, r2, r1, lsl #1

00402f78 <.LVL167>:
  402f78:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  402f7c:	2a09      	cmp	r2, #9
  402f7e:	d9f5      	bls.n	402f6c <.LVL164>
  402f80:	9104      	str	r1, [sp, #16]
  402f82:	e511      	b.n	4029a8 <.LVL22+0x2>

00402f84 <.LVL168>:
  402f84:	f048 0880 	orr.w	r8, r8, #128	; 0x80
  402f88:	783b      	ldrb	r3, [r7, #0]
  402f8a:	e50c      	b.n	4029a6 <.LVL22>
  402f8c:	f048 0808 	orr.w	r8, r8, #8
  402f90:	783b      	ldrb	r3, [r7, #0]
  402f92:	e508      	b.n	4029a6 <.LVL22>
  402f94:	f048 0810 	orr.w	r8, r8, #16
  402f98:	f018 0f20 	tst.w	r8, #32
  402f9c:	930d      	str	r3, [sp, #52]	; 0x34
  402f9e:	f43f af32 	beq.w	402e06 <.LVL123+0xa>
  402fa2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402fa4:	3507      	adds	r5, #7
  402fa6:	f025 0307 	bic.w	r3, r5, #7
  402faa:	f103 0208 	add.w	r2, r3, #8
  402fae:	920a      	str	r2, [sp, #40]	; 0x28

00402fb0 <.LVL172>:
  402fb0:	e9d3 4500 	ldrd	r4, r5, [r3]
  402fb4:	e739      	b.n	402e2a <.LVL126>

00402fb6 <.LVL173>:
  402fb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402fb8:	930d      	str	r3, [sp, #52]	; 0x34
  402fba:	6816      	ldr	r6, [r2, #0]

00402fbc <.LVL174>:
  402fbc:	2400      	movs	r4, #0
  402fbe:	f88d 406b 	strb.w	r4, [sp, #107]	; 0x6b
  402fc2:	1d15      	adds	r5, r2, #4

00402fc4 <.LVL175>:
  402fc4:	2e00      	cmp	r6, #0
  402fc6:	f000 873d 	beq.w	403e44 <.LVL593>
  402fca:	9a04      	ldr	r2, [sp, #16]
  402fcc:	1c53      	adds	r3, r2, #1
  402fce:	f000 869b 	beq.w	403d08 <.LVL549>

00402fd2 <.LBB11>:
  402fd2:	4621      	mov	r1, r4
  402fd4:	4630      	mov	r0, r6
  402fd6:	f006 f863 	bl	4090a0 <memchr>

00402fda <.LVL176>:
  402fda:	9009      	str	r0, [sp, #36]	; 0x24
  402fdc:	2800      	cmp	r0, #0
  402fde:	f000 8782 	beq.w	403ee6 <.LBB63>
  402fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402fe4:	9404      	str	r4, [sp, #16]
  402fe6:	1b9b      	subs	r3, r3, r6
  402fe8:	461a      	mov	r2, r3
  402fea:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
  402fee:	9308      	str	r3, [sp, #32]

00402ff0 <.LBE11>:
  402ff0:	950a      	str	r5, [sp, #40]	; 0x28

00402ff2 <.LBB12>:
  402ff2:	4623      	mov	r3, r4
  402ff4:	9202      	str	r2, [sp, #8]

00402ff6 <.LBE12>:
  402ff6:	9309      	str	r3, [sp, #36]	; 0x24
  402ff8:	9313      	str	r3, [sp, #76]	; 0x4c
  402ffa:	9310      	str	r3, [sp, #64]	; 0x40
  402ffc:	930e      	str	r3, [sp, #56]	; 0x38
  402ffe:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403002:	e5de      	b.n	402bc2 <.L59>

00403004 <.LVL178>:
  403004:	f048 0110 	orr.w	r1, r8, #16

00403008 <.LVL179>:
  403008:	068e      	lsls	r6, r1, #26

0040300a <.LVL180>:
  40300a:	930d      	str	r3, [sp, #52]	; 0x34
  40300c:	f57f af16 	bpl.w	402e3c <.LVL130+0x6>
  403010:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403012:	3507      	adds	r5, #7
  403014:	f025 0307 	bic.w	r3, r5, #7
  403018:	f103 0208 	add.w	r2, r3, #8
  40301c:	e9d3 4500 	ldrd	r4, r5, [r3]
  403020:	920a      	str	r2, [sp, #40]	; 0x28

00403022 <.LVL181>:
  403022:	2301      	movs	r3, #1
  403024:	e5a5      	b.n	402b72 <.L150>

00403026 <.LVL182>:
  403026:	980a      	ldr	r0, [sp, #40]	; 0x28
  403028:	4b65      	ldr	r3, [pc, #404]	; (4031c0 <.LVL227+0xa>)
  40302a:	6804      	ldr	r4, [r0, #0]
  40302c:	9314      	str	r3, [sp, #80]	; 0x50

0040302e <.LVL183>:
  40302e:	2230      	movs	r2, #48	; 0x30
  403030:	2378      	movs	r3, #120	; 0x78
  403032:	3004      	adds	r0, #4

00403034 <.LVL184>:
  403034:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
  403038:	930d      	str	r3, [sp, #52]	; 0x34
  40303a:	f048 0102 	orr.w	r1, r8, #2
  40303e:	900a      	str	r0, [sp, #40]	; 0x28
  403040:	2500      	movs	r5, #0

00403042 <.LVL185>:
  403042:	f88d 206c 	strb.w	r2, [sp, #108]	; 0x6c

00403046 <.LVL186>:
  403046:	2302      	movs	r3, #2
  403048:	e593      	b.n	402b72 <.L150>

0040304a <.LVL187>:
  40304a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40304c:	930d      	str	r3, [sp, #52]	; 0x34
  40304e:	f018 0f08 	tst.w	r8, #8
  403052:	f105 0507 	add.w	r5, r5, #7
  403056:	f000 84ed 	beq.w	403a34 <.LVL468>
  40305a:	f025 0307 	bic.w	r3, r5, #7
  40305e:	ed93 8b00 	vldr	d8, [r3]

00403062 <.LVL188>:
  403062:	f103 0208 	add.w	r2, r3, #8
  403066:	920a      	str	r2, [sp, #40]	; 0x28

00403068 <.LVL189>:
  403068:	eeb0 7bc8 	vabs.f64	d7, d8
  40306c:	eeb4 7b49 	vcmp.f64	d7, d9
  403070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403074:	f340 8439 	ble.w	4038ea <.LBE27>
  403078:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
  40307c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403080:	f100 86f0 	bmi.w	403e64 <.LVL595>
  403084:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403088:	4e4e      	ldr	r6, [pc, #312]	; (4031c4 <.LVL227+0xe>)

0040308a <.LVL190>:
  40308a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  40308c:	2303      	movs	r3, #3
  40308e:	2100      	movs	r1, #0
  403090:	4618      	mov	r0, r3
  403092:	9302      	str	r3, [sp, #8]
  403094:	1f33      	subs	r3, r6, #4
  403096:	9109      	str	r1, [sp, #36]	; 0x24
  403098:	f028 0880 	bic.w	r8, r8, #128	; 0x80

0040309c <.LVL191>:
  40309c:	2c47      	cmp	r4, #71	; 0x47
  40309e:	bfd8      	it	le
  4030a0:	461e      	movle	r6, r3

004030a2 <.LVL192>:
  4030a2:	9008      	str	r0, [sp, #32]
  4030a4:	9104      	str	r1, [sp, #16]
  4030a6:	9113      	str	r1, [sp, #76]	; 0x4c
  4030a8:	9110      	str	r1, [sp, #64]	; 0x40
  4030aa:	910e      	str	r1, [sp, #56]	; 0x38
  4030ac:	e589      	b.n	402bc2 <.L59>

004030ae <.LVL193>:
  4030ae:	980a      	ldr	r0, [sp, #40]	; 0x28
  4030b0:	930d      	str	r3, [sp, #52]	; 0x34
  4030b2:	6801      	ldr	r1, [r0, #0]
  4030b4:	f88d 10d4 	strb.w	r1, [sp, #212]	; 0xd4

004030b8 <.LVL194>:
  4030b8:	2300      	movs	r3, #0
  4030ba:	4601      	mov	r1, r0
  4030bc:	461a      	mov	r2, r3
  4030be:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  4030c2:	3104      	adds	r1, #4

004030c4 <.LVL195>:
  4030c4:	2301      	movs	r3, #1
  4030c6:	9302      	str	r3, [sp, #8]
  4030c8:	9209      	str	r2, [sp, #36]	; 0x24
  4030ca:	9204      	str	r2, [sp, #16]
  4030cc:	9213      	str	r2, [sp, #76]	; 0x4c
  4030ce:	9210      	str	r2, [sp, #64]	; 0x40
  4030d0:	920e      	str	r2, [sp, #56]	; 0x38
  4030d2:	910a      	str	r1, [sp, #40]	; 0x28
  4030d4:	9308      	str	r3, [sp, #32]
  4030d6:	ae35      	add	r6, sp, #212	; 0xd4

004030d8 <.LVL196>:
  4030d8:	e577      	b.n	402bca <.LVL64>

004030da <.LVL197>:
  4030da:	f048 0110 	orr.w	r1, r8, #16

004030de <.LVL198>:
  4030de:	068c      	lsls	r4, r1, #26
  4030e0:	930d      	str	r3, [sp, #52]	; 0x34
  4030e2:	f57f aec1 	bpl.w	402e68 <.LVL134+0x8>
  4030e6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4030e8:	3507      	adds	r5, #7
  4030ea:	f025 0507 	bic.w	r5, r5, #7
  4030ee:	e9d5 2300 	ldrd	r2, r3, [r5]
  4030f2:	2a00      	cmp	r2, #0
  4030f4:	f105 0008 	add.w	r0, r5, #8
  4030f8:	461d      	mov	r5, r3
  4030fa:	f173 0300 	sbcs.w	r3, r3, #0
  4030fe:	900a      	str	r0, [sp, #40]	; 0x28

00403100 <.LVL199>:
  403100:	4614      	mov	r4, r2

00403102 <.LVL200>:
  403102:	f6bf aec7 	bge.w	402e94 <.LVL137+0xa>

00403106 <.LVL201>:
  403106:	232d      	movs	r3, #45	; 0x2d
  403108:	4264      	negs	r4, r4

0040310a <.LVL202>:
  40310a:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  40310e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1

00403112 <.LVL203>:
  403112:	2301      	movs	r3, #1
  403114:	e530      	b.n	402b78 <.L65>

00403116 <.LVL204>:
  403116:	783b      	ldrb	r3, [r7, #0]
  403118:	2b6c      	cmp	r3, #108	; 0x6c
  40311a:	bf03      	ittte	eq
  40311c:	787b      	ldrbeq	r3, [r7, #1]
  40311e:	f048 0820 	orreq.w	r8, r8, #32
  403122:	3701      	addeq	r7, #1

00403124 <.LVL206>:
  403124:	f048 0810 	orrne.w	r8, r8, #16
  403128:	e43d      	b.n	4029a6 <.LVL22>

0040312a <.LVL208>:
  40312a:	f018 0f20 	tst.w	r8, #32
  40312e:	f040 8509 	bne.w	403b44 <.LVL499>
  403132:	f018 0f10 	tst.w	r8, #16
  403136:	d135      	bne.n	4031a4 <.LVL222>
  403138:	f018 0f40 	tst.w	r8, #64	; 0x40
  40313c:	f040 8678 	bne.w	403e30 <.LBE23>
  403140:	f418 7f00 	tst.w	r8, #512	; 0x200
  403144:	d02e      	beq.n	4031a4 <.LVL222>

00403146 <.LVL209>:
  403146:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403148:	6813      	ldr	r3, [r2, #0]
  40314a:	3204      	adds	r2, #4

0040314c <.LVL210>:
  40314c:	920a      	str	r2, [sp, #40]	; 0x28
  40314e:	f89d 200c 	ldrb.w	r2, [sp, #12]

00403152 <.LVL211>:
  403152:	701a      	strb	r2, [r3, #0]
  403154:	463e      	mov	r6, r7

00403156 <.LVL212>:
  403156:	f7ff bbf6 	b.w	402946 <.LVL10>

0040315a <.LVL213>:
  40315a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40315e:	2300      	movs	r3, #0
  403160:	4619      	mov	r1, r3

00403162 <.LVL214>:
  403162:	f817 3b01 	ldrb.w	r3, [r7], #1

00403166 <.LVL215>:
  403166:	eb01 0181 	add.w	r1, r1, r1, lsl #2

0040316a <.LVL216>:
  40316a:	eb02 0141 	add.w	r1, r2, r1, lsl #1

0040316e <.LVL217>:
  40316e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  403172:	2a09      	cmp	r2, #9
  403174:	d9f5      	bls.n	403162 <.LVL214>
  403176:	9107      	str	r1, [sp, #28]
  403178:	e416      	b.n	4029a8 <.LVL22+0x2>

0040317a <.LVL218>:
  40317a:	4619      	mov	r1, r3
  40317c:	930d      	str	r3, [sp, #52]	; 0x34
  40317e:	2b00      	cmp	r3, #0
  403180:	f000 84cf 	beq.w	403b22 <.LDL1>

00403184 <.LVL219>:
  403184:	2300      	movs	r3, #0
  403186:	2001      	movs	r0, #1
  403188:	461a      	mov	r2, r3
  40318a:	9002      	str	r0, [sp, #8]
  40318c:	f88d 10d4 	strb.w	r1, [sp, #212]	; 0xd4

00403190 <.LVL220>:
  403190:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  403194:	9309      	str	r3, [sp, #36]	; 0x24
  403196:	9304      	str	r3, [sp, #16]
  403198:	9313      	str	r3, [sp, #76]	; 0x4c
  40319a:	9310      	str	r3, [sp, #64]	; 0x40
  40319c:	930e      	str	r3, [sp, #56]	; 0x38
  40319e:	9008      	str	r0, [sp, #32]
  4031a0:	ae35      	add	r6, sp, #212	; 0xd4

004031a2 <.LVL221>:
  4031a2:	e512      	b.n	402bca <.LVL64>

004031a4 <.LVL222>:
  4031a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4031a6:	6813      	ldr	r3, [r2, #0]
  4031a8:	3204      	adds	r2, #4

004031aa <.LVL223>:
  4031aa:	920a      	str	r2, [sp, #40]	; 0x28
  4031ac:	9a03      	ldr	r2, [sp, #12]

004031ae <.LVL224>:
  4031ae:	601a      	str	r2, [r3, #0]

004031b0 <.LVL225>:
  4031b0:	463e      	mov	r6, r7

004031b2 <.LVL226>:
  4031b2:	f7ff bbc8 	b.w	402946 <.LVL10>

004031b6 <.LVL227>:
  4031b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4031b8:	e553      	b.n	402c62 <.LVL82>
  4031ba:	bf00      	nop
  4031bc:	0040a28c 	.word	0x0040a28c
  4031c0:	0040a2a0 	.word	0x0040a2a0
  4031c4:	0040a280 	.word	0x0040a280

004031c8 <.LVL228>:
  4031c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4031ca:	2a65      	cmp	r2, #101	; 0x65
  4031cc:	f340 8096 	ble.w	4032fc <.LVL260>
  4031d0:	eeb5 8b40 	vcmp.f64	d8, #0.0
  4031d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4031d8:	f040 8139 	bne.w	40344e <.LVL295>
  4031dc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4031de:	49c2      	ldr	r1, [pc, #776]	; (4034e8 <.LVL315+0x6>)
  4031e0:	f8c9 1000 	str.w	r1, [r9]
  4031e4:	3201      	adds	r2, #1
  4031e6:	3301      	adds	r3, #1
  4031e8:	2101      	movs	r1, #1
  4031ea:	2a07      	cmp	r2, #7
  4031ec:	9324      	str	r3, [sp, #144]	; 0x90
  4031ee:	9223      	str	r2, [sp, #140]	; 0x8c
  4031f0:	f8c9 1004 	str.w	r1, [r9, #4]
  4031f4:	f300 8444 	bgt.w	403a80 <.LBE21>

004031f8 <.LVL229>:
  4031f8:	f109 0908 	add.w	r9, r9, #8

004031fc <.LVL230>:
  4031fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4031fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403200:	4293      	cmp	r3, r2
  403202:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403204:	db03      	blt.n	40320e <.LVL230+0x12>
  403206:	f018 0f01 	tst.w	r8, #1
  40320a:	f43f ad9d 	beq.w	402d48 <.LVL104>
  40320e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403210:	9815      	ldr	r0, [sp, #84]	; 0x54
  403212:	9917      	ldr	r1, [sp, #92]	; 0x5c
  403214:	f8c9 1000 	str.w	r1, [r9]
  403218:	3201      	adds	r2, #1
  40321a:	4403      	add	r3, r0
  40321c:	2a07      	cmp	r2, #7
  40321e:	f8c9 0004 	str.w	r0, [r9, #4]
  403222:	9324      	str	r3, [sp, #144]	; 0x90

00403224 <.LVL231>:
  403224:	9223      	str	r2, [sp, #140]	; 0x8c
  403226:	f300 84b2 	bgt.w	403b8e <.LVL509>

0040322a <.LVL232>:
  40322a:	f109 0908 	add.w	r9, r9, #8

0040322e <.LVL233>:
  40322e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403230:	1e54      	subs	r4, r2, #1
  403232:	2c00      	cmp	r4, #0
  403234:	f77f ad88 	ble.w	402d48 <.LVL104>
  403238:	2c10      	cmp	r4, #16
  40323a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  40323c:	f340 8308 	ble.w	403850 <.LVL421>
  403240:	2510      	movs	r5, #16
  403242:	9e05      	ldr	r6, [sp, #20]
  403244:	e005      	b.n	403252 <.LVL238>

00403246 <.LVL235>:
  403246:	f109 0908 	add.w	r9, r9, #8

0040324a <.LVL236>:
  40324a:	3c10      	subs	r4, #16
  40324c:	2c10      	cmp	r4, #16
  40324e:	f340 82ff 	ble.w	403850 <.LVL421>

00403252 <.LVL238>:
  403252:	3201      	adds	r2, #1
  403254:	3310      	adds	r3, #16
  403256:	2a07      	cmp	r2, #7
  403258:	9324      	str	r3, [sp, #144]	; 0x90

0040325a <.LVL239>:
  40325a:	9223      	str	r2, [sp, #140]	; 0x8c
  40325c:	f8c9 a000 	str.w	sl, [r9]
  403260:	f8c9 5004 	str.w	r5, [r9, #4]
  403264:	ddef      	ble.n	403246 <.LVL235>
  403266:	aa22      	add	r2, sp, #136	; 0x88
  403268:	4631      	mov	r1, r6
  40326a:	4658      	mov	r0, fp
  40326c:	f005 f8c8 	bl	408400 <__ssprint_r>

00403270 <.LVL240>:
  403270:	2800      	cmp	r0, #0
  403272:	f47f ac31 	bne.w	402ad8 <.L189>
  403276:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403278:	9a23      	ldr	r2, [sp, #140]	; 0x8c

0040327a <.LVL241>:
  40327a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

0040327e <.LVL242>:
  40327e:	e7e4      	b.n	40324a <.LVL236>

00403280 <.LVL243>:
  403280:	9a07      	ldr	r2, [sp, #28]
  403282:	9902      	ldr	r1, [sp, #8]
  403284:	1a54      	subs	r4, r2, r1

00403286 <.LVL244>:
  403286:	2c00      	cmp	r4, #0
  403288:	f77f ad0f 	ble.w	402caa <.LVL86+0x8>
  40328c:	2c10      	cmp	r4, #16
  40328e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403290:	dd26      	ble.n	4032e0 <.LVL257>
  403292:	4649      	mov	r1, r9
  403294:	2510      	movs	r5, #16
  403296:	46a1      	mov	r9, r4
  403298:	9c05      	ldr	r4, [sp, #20]

0040329a <.LVL245>:
  40329a:	e006      	b.n	4032aa <.LVL249>

0040329c <.LVL246>:
  40329c:	f1a9 0910 	sub.w	r9, r9, #16

004032a0 <.LVL247>:
  4032a0:	f1b9 0f10 	cmp.w	r9, #16
  4032a4:	f101 0108 	add.w	r1, r1, #8

004032a8 <.LVL248>:
  4032a8:	dd18      	ble.n	4032dc <.LVL256>

004032aa <.LVL249>:
  4032aa:	3201      	adds	r2, #1
  4032ac:	3310      	adds	r3, #16
  4032ae:	2a07      	cmp	r2, #7
  4032b0:	9324      	str	r3, [sp, #144]	; 0x90

004032b2 <.LVL250>:
  4032b2:	9223      	str	r2, [sp, #140]	; 0x8c
  4032b4:	f8c1 a000 	str.w	sl, [r1]
  4032b8:	604d      	str	r5, [r1, #4]
  4032ba:	ddef      	ble.n	40329c <.LVL246>
  4032bc:	aa22      	add	r2, sp, #136	; 0x88
  4032be:	4621      	mov	r1, r4

004032c0 <.LVL251>:
  4032c0:	4658      	mov	r0, fp
  4032c2:	f005 f89d 	bl	408400 <__ssprint_r>

004032c6 <.LVL252>:
  4032c6:	2800      	cmp	r0, #0
  4032c8:	f47f ac06 	bne.w	402ad8 <.L189>
  4032cc:	f1a9 0910 	sub.w	r9, r9, #16

004032d0 <.LVL253>:
  4032d0:	f1b9 0f10 	cmp.w	r9, #16
  4032d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4032d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c

004032d8 <.LVL254>:
  4032d8:	a925      	add	r1, sp, #148	; 0x94

004032da <.LVL255>:
  4032da:	dce6      	bgt.n	4032aa <.LVL249>

004032dc <.LVL256>:
  4032dc:	464c      	mov	r4, r9
  4032de:	4689      	mov	r9, r1

004032e0 <.LVL257>:
  4032e0:	3201      	adds	r2, #1
  4032e2:	4423      	add	r3, r4
  4032e4:	2a07      	cmp	r2, #7
  4032e6:	9324      	str	r3, [sp, #144]	; 0x90
  4032e8:	9223      	str	r2, [sp, #140]	; 0x8c
  4032ea:	f8c9 a000 	str.w	sl, [r9]
  4032ee:	f8c9 4004 	str.w	r4, [r9, #4]
  4032f2:	f300 82e6 	bgt.w	4038c2 <.LVL432>

004032f6 <.LVL258>:
  4032f6:	f109 0908 	add.w	r9, r9, #8

004032fa <.LVL259>:
  4032fa:	e4d6      	b.n	402caa <.LVL86+0x8>

004032fc <.LVL260>:
  4032fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4032fe:	f8c9 6000 	str.w	r6, [r9]
  403302:	2a01      	cmp	r2, #1
  403304:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403306:	f103 0301 	add.w	r3, r3, #1
  40330a:	f102 0201 	add.w	r2, r2, #1
  40330e:	f04f 0101 	mov.w	r1, #1
  403312:	9324      	str	r3, [sp, #144]	; 0x90
  403314:	9223      	str	r2, [sp, #140]	; 0x8c
  403316:	f8c9 1004 	str.w	r1, [r9, #4]
  40331a:	f340 82a5 	ble.w	403868 <.LBE19>
  40331e:	2a07      	cmp	r2, #7
  403320:	f300 82b5 	bgt.w	40388e <.LBE26>
  403324:	f109 0908 	add.w	r9, r9, #8

00403328 <.LVL261>:
  403328:	9815      	ldr	r0, [sp, #84]	; 0x54
  40332a:	9917      	ldr	r1, [sp, #92]	; 0x5c
  40332c:	f8c9 1000 	str.w	r1, [r9]
  403330:	3201      	adds	r2, #1
  403332:	4403      	add	r3, r0
  403334:	2a07      	cmp	r2, #7
  403336:	9324      	str	r3, [sp, #144]	; 0x90

00403338 <.LVL262>:
  403338:	9223      	str	r2, [sp, #140]	; 0x8c
  40333a:	f8c9 0004 	str.w	r0, [r9, #4]
  40333e:	f300 82b3 	bgt.w	4038a8 <.LVL429>
  403342:	f109 0908 	add.w	r9, r9, #8

00403346 <.LVL263>:
  403346:	eeb5 8b40 	vcmp.f64	d8, #0.0
  40334a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40334e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403350:	f000 8121 	beq.w	403596 <.LVL337>
  403354:	3901      	subs	r1, #1
  403356:	3201      	adds	r2, #1
  403358:	3601      	adds	r6, #1

0040335a <.LVL264>:
  40335a:	440b      	add	r3, r1
  40335c:	2a07      	cmp	r2, #7
  40335e:	f8c9 6000 	str.w	r6, [r9]
  403362:	9223      	str	r2, [sp, #140]	; 0x8c
  403364:	9324      	str	r3, [sp, #144]	; 0x90

00403366 <.LVL265>:
  403366:	f8c9 1004 	str.w	r1, [r9, #4]
  40336a:	f300 8146 	bgt.w	4035fa <.LVL348>

0040336e <.LVL266>:
  40336e:	f109 0908 	add.w	r9, r9, #8

00403372 <.LVL267>:
  403372:	9819      	ldr	r0, [sp, #100]	; 0x64
  403374:	f8c9 0004 	str.w	r0, [r9, #4]
  403378:	3201      	adds	r2, #1
  40337a:	4403      	add	r3, r0
  40337c:	a91e      	add	r1, sp, #120	; 0x78
  40337e:	2a07      	cmp	r2, #7
  403380:	9324      	str	r3, [sp, #144]	; 0x90

00403382 <.LVL268>:
  403382:	9223      	str	r2, [sp, #140]	; 0x8c
  403384:	f8c9 1000 	str.w	r1, [r9]
  403388:	f77f acdc 	ble.w	402d44 <.LVL103>

0040338c <.LVL269>:
  40338c:	aa22      	add	r2, sp, #136	; 0x88
  40338e:	9905      	ldr	r1, [sp, #20]
  403390:	4658      	mov	r0, fp
  403392:	f005 f835 	bl	408400 <__ssprint_r>

00403396 <.LVL270>:
  403396:	2800      	cmp	r0, #0
  403398:	f47f ab9e 	bne.w	402ad8 <.L189>
  40339c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40339e:	f10d 0994 	add.w	r9, sp, #148	; 0x94
  4033a2:	e4d1      	b.n	402d48 <.LVL104>

004033a4 <.LVL271>:
  4033a4:	4641      	mov	r1, r8

004033a6 <.LVL272>:
  4033a6:	2b01      	cmp	r3, #1
  4033a8:	f000 8135 	beq.w	403616 <.LVL351>
  4033ac:	2b02      	cmp	r3, #2
  4033ae:	d127      	bne.n	403400 <.LVL286>
  4033b0:	4688      	mov	r8, r1
  4033b2:	2400      	movs	r4, #0

004033b4 <.LVL273>:
  4033b4:	2500      	movs	r5, #0
  4033b6:	e57e      	b.n	402eb6 <.LVL141>

004033b8 <.LVL274>:
  4033b8:	aa22      	add	r2, sp, #136	; 0x88
  4033ba:	9905      	ldr	r1, [sp, #20]
  4033bc:	4658      	mov	r0, fp
  4033be:	f005 f81f 	bl	408400 <__ssprint_r>

004033c2 <.LVL275>:
  4033c2:	2800      	cmp	r0, #0
  4033c4:	f47f ab88 	bne.w	402ad8 <.L189>
  4033c8:	9b24      	ldr	r3, [sp, #144]	; 0x90

004033ca <.LVL276>:
  4033ca:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004033ce <.LVL277>:
  4033ce:	e4a8      	b.n	402d22 <.LVL102>

004033d0 <.LVL278>:
  4033d0:	aa22      	add	r2, sp, #136	; 0x88
  4033d2:	9905      	ldr	r1, [sp, #20]
  4033d4:	4658      	mov	r0, fp
  4033d6:	f005 f813 	bl	408400 <__ssprint_r>

004033da <.LVL279>:
  4033da:	2800      	cmp	r0, #0
  4033dc:	f47f ab7c 	bne.w	402ad8 <.L189>
  4033e0:	9b24      	ldr	r3, [sp, #144]	; 0x90

004033e2 <.LVL280>:
  4033e2:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004033e6 <.LVL281>:
  4033e6:	e44c      	b.n	402c82 <.LVL84>

004033e8 <.LVL282>:
  4033e8:	aa22      	add	r2, sp, #136	; 0x88
  4033ea:	9905      	ldr	r1, [sp, #20]
  4033ec:	4658      	mov	r0, fp
  4033ee:	f005 f807 	bl	408400 <__ssprint_r>

004033f2 <.LVL283>:
  4033f2:	2800      	cmp	r0, #0
  4033f4:	f47f ab70 	bne.w	402ad8 <.L189>
  4033f8:	9b24      	ldr	r3, [sp, #144]	; 0x90

004033fa <.LVL284>:
  4033fa:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004033fe <.LVL285>:
  4033fe:	e450      	b.n	402ca2 <.LVL86>

00403400 <.LVL286>:
  403400:	4688      	mov	r8, r1
  403402:	2400      	movs	r4, #0

00403404 <.LVL287>:
  403404:	2500      	movs	r5, #0

00403406 <.LVL288>:
  403406:	a94e      	add	r1, sp, #312	; 0x138

00403408 <.LVL289>:
  403408:	e000      	b.n	40340c <.LVL291>

0040340a <.LVL290>:
  40340a:	4631      	mov	r1, r6

0040340c <.LVL291>:
  40340c:	08e2      	lsrs	r2, r4, #3
  40340e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  403412:	08e8      	lsrs	r0, r5, #3
  403414:	f004 0307 	and.w	r3, r4, #7
  403418:	4605      	mov	r5, r0
  40341a:	4614      	mov	r4, r2

0040341c <.LVL292>:
  40341c:	3330      	adds	r3, #48	; 0x30
  40341e:	ea54 0205 	orrs.w	r2, r4, r5
  403422:	f801 3c01 	strb.w	r3, [r1, #-1]
  403426:	f101 36ff 	add.w	r6, r1, #4294967295

0040342a <.LVL293>:
  40342a:	d1ee      	bne.n	40340a <.LVL290>
  40342c:	f018 0f01 	tst.w	r8, #1
  403430:	f43f ad51 	beq.w	402ed6 <.LVL147>
  403434:	2b30      	cmp	r3, #48	; 0x30
  403436:	f43f ad4e 	beq.w	402ed6 <.LVL147>
  40343a:	2330      	movs	r3, #48	; 0x30
  40343c:	3902      	subs	r1, #2

0040343e <.LVL294>:
  40343e:	f806 3c01 	strb.w	r3, [r6, #-1]
  403442:	ab4e      	add	r3, sp, #312	; 0x138
  403444:	1a5b      	subs	r3, r3, r1
  403446:	9308      	str	r3, [sp, #32]
  403448:	460e      	mov	r6, r1
  40344a:	f7ff bbad 	b.w	402ba8 <.LVL61>

0040344e <.LVL295>:
  40344e:	991c      	ldr	r1, [sp, #112]	; 0x70
  403450:	2900      	cmp	r1, #0
  403452:	f340 832f 	ble.w	403ab4 <.LBE46>

00403456 <.LVL296>:
  403456:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403458:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40345a:	428a      	cmp	r2, r1
  40345c:	bfa8      	it	ge
  40345e:	460a      	movge	r2, r1

00403460 <.LBB13>:
  403460:	2a00      	cmp	r2, #0
  403462:	4614      	mov	r4, r2

00403464 <.LVL297>:
  403464:	dd0d      	ble.n	403482 <.LVL300>
  403466:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00403468 <.LVL298>:
  403468:	f8c9 6000 	str.w	r6, [r9]
  40346c:	3201      	adds	r2, #1
  40346e:	4423      	add	r3, r4
  403470:	2a07      	cmp	r2, #7
  403472:	9324      	str	r3, [sp, #144]	; 0x90
  403474:	f8c9 4004 	str.w	r4, [r9, #4]
  403478:	9223      	str	r2, [sp, #140]	; 0x8c
  40347a:	f300 84cc 	bgt.w	403e16 <.LBB23>

0040347e <.LVL299>:
  40347e:	f109 0908 	add.w	r9, r9, #8

00403482 <.LVL300>:
  403482:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403484:	2c00      	cmp	r4, #0
  403486:	bfa8      	it	ge
  403488:	1b12      	subge	r2, r2, r4
  40348a:	2a00      	cmp	r2, #0
  40348c:	4614      	mov	r4, r2

0040348e <.LVL301>:
  40348e:	f340 8100 	ble.w	403692 <.LBE15>
  403492:	2c10      	cmp	r4, #16
  403494:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00403496 <.LVL302>:
  403496:	f340 82d8 	ble.w	403a4a <.LBB20>
  40349a:	4649      	mov	r1, r9
  40349c:	2510      	movs	r5, #16
  40349e:	46a1      	mov	r9, r4
  4034a0:	9c05      	ldr	r4, [sp, #20]

004034a2 <.LVL303>:
  4034a2:	e006      	b.n	4034b2 <.LVL307>

004034a4 <.LVL304>:
  4034a4:	3108      	adds	r1, #8

004034a6 <.LVL305>:
  4034a6:	f1a9 0910 	sub.w	r9, r9, #16
  4034aa:	f1b9 0f10 	cmp.w	r9, #16
  4034ae:	f340 82ca 	ble.w	403a46 <.LVL471>

004034b2 <.LVL307>:
  4034b2:	3201      	adds	r2, #1
  4034b4:	3310      	adds	r3, #16
  4034b6:	2a07      	cmp	r2, #7
  4034b8:	9324      	str	r3, [sp, #144]	; 0x90

004034ba <.LVL308>:
  4034ba:	9223      	str	r2, [sp, #140]	; 0x8c
  4034bc:	f8c1 a000 	str.w	sl, [r1]
  4034c0:	604d      	str	r5, [r1, #4]
  4034c2:	ddef      	ble.n	4034a4 <.LVL304>
  4034c4:	aa22      	add	r2, sp, #136	; 0x88
  4034c6:	4621      	mov	r1, r4

004034c8 <.LVL309>:
  4034c8:	4658      	mov	r0, fp
  4034ca:	f004 ff99 	bl	408400 <__ssprint_r>

004034ce <.LVL310>:
  4034ce:	2800      	cmp	r0, #0
  4034d0:	f47f ab02 	bne.w	402ad8 <.L189>
  4034d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c

004034d8 <.LVL311>:
  4034d8:	a925      	add	r1, sp, #148	; 0x94

004034da <.LVL312>:
  4034da:	e7e4      	b.n	4034a6 <.LVL305>

004034dc <.LBE13>:
  4034dc:	9b04      	ldr	r3, [sp, #16]

004034de <.LVL314>:
  4034de:	9308      	str	r3, [sp, #32]
  4034e0:	ae4e      	add	r6, sp, #312	; 0x138

004034e2 <.LVL315>:
  4034e2:	f7ff bb61 	b.w	402ba8 <.LVL61>
  4034e6:	bf00      	nop
  4034e8:	0040a2bc 	.word	0x0040a2bc

004034ec <.LVL316>:
  4034ec:	2d00      	cmp	r5, #0
  4034ee:	bf08      	it	eq
  4034f0:	2c0a      	cmpeq	r4, #10
  4034f2:	f0c0 808f 	bcc.w	403614 <.LVL350>
  4034f6:	f408 6380 	and.w	r3, r8, #1024	; 0x400

004034fa <.LVL317>:
  4034fa:	2200      	movs	r2, #0
  4034fc:	9702      	str	r7, [sp, #8]
  4034fe:	f8cd 9018 	str.w	r9, [sp, #24]
  403502:	f8cd b020 	str.w	fp, [sp, #32]
  403506:	ae4e      	add	r6, sp, #312	; 0x138

00403508 <.LVL318>:
  403508:	46c3      	mov	fp, r8
  40350a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48

0040350e <.LVL319>:
  40350e:	4617      	mov	r7, r2

00403510 <.LVL320>:
  403510:	4698      	mov	r8, r3

00403512 <.LVL321>:
  403512:	e00a      	b.n	40352a <.LVL325+0x6>

00403514 <.LVL322>:
  403514:	2300      	movs	r3, #0
  403516:	4620      	mov	r0, r4
  403518:	4629      	mov	r1, r5
  40351a:	220a      	movs	r2, #10
  40351c:	f007 f8b6 	bl	40a68c <.LBE14>
  403520:	4604      	mov	r4, r0

00403522 <.LVL324>:
  403522:	460d      	mov	r5, r1

00403524 <.LVL325>:
  403524:	ea54 0305 	orrs.w	r3, r4, r5
  403528:	d07e      	beq.n	403628 <.LVL354>
  40352a:	220a      	movs	r2, #10
  40352c:	2300      	movs	r3, #0
  40352e:	4620      	mov	r0, r4
  403530:	4629      	mov	r1, r5
  403532:	f007 f8ab 	bl	40a68c <.LBE14>
  403536:	3230      	adds	r2, #48	; 0x30
  403538:	f806 2c01 	strb.w	r2, [r6, #-1]
  40353c:	3701      	adds	r7, #1

0040353e <.LVL328>:
  40353e:	3e01      	subs	r6, #1

00403540 <.LVL329>:
  403540:	f1b8 0f00 	cmp.w	r8, #0
  403544:	d0e6      	beq.n	403514 <.LVL322>
  403546:	f899 3000 	ldrb.w	r3, [r9]
  40354a:	429f      	cmp	r7, r3
  40354c:	d1e2      	bne.n	403514 <.LVL322>
  40354e:	2fff      	cmp	r7, #255	; 0xff
  403550:	d0e0      	beq.n	403514 <.LVL322>
  403552:	2d00      	cmp	r5, #0
  403554:	bf08      	it	eq
  403556:	2c0a      	cmpeq	r4, #10
  403558:	d3dc      	bcc.n	403514 <.LVL322>
  40355a:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40355c:	9916      	ldr	r1, [sp, #88]	; 0x58
  40355e:	1af6      	subs	r6, r6, r3
  403560:	4630      	mov	r0, r6
  403562:	461a      	mov	r2, r3
  403564:	f006 fb6a 	bl	409c3c <.LFE165>

00403568 <.LVL331>:
  403568:	f899 7001 	ldrb.w	r7, [r9, #1]
  40356c:	2f00      	cmp	r7, #0
  40356e:	d0d1      	beq.n	403514 <.LVL322>
  403570:	f109 0901 	add.w	r9, r9, #1
  403574:	2700      	movs	r7, #0
  403576:	e7cd      	b.n	403514 <.LVL322>

00403578 <.LVL333>:
  403578:	aa22      	add	r2, sp, #136	; 0x88
  40357a:	9905      	ldr	r1, [sp, #20]
  40357c:	4658      	mov	r0, fp
  40357e:	f004 ff3f 	bl	408400 <__ssprint_r>

00403582 <.LVL334>:
  403582:	2800      	cmp	r0, #0
  403584:	f47f aaa8 	bne.w	402ad8 <.L189>
  403588:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  40358c:	9b24      	ldr	r3, [sp, #144]	; 0x90

0040358e <.LVL335>:
  40358e:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403592 <.LVL336>:
  403592:	f7ff bb66 	b.w	402c62 <.LVL82>

00403596 <.LVL337>:
  403596:	1e4c      	subs	r4, r1, #1
  403598:	2c00      	cmp	r4, #0
  40359a:	f77f aeea 	ble.w	403372 <.LVL267>
  40359e:	2c10      	cmp	r4, #16
  4035a0:	dd20      	ble.n	4035e4 <.LVL346+0x2>
  4035a2:	2510      	movs	r5, #16
  4035a4:	9e05      	ldr	r6, [sp, #20]

004035a6 <.LVL339>:
  4035a6:	e004      	b.n	4035b2 <.LVL342+0x2>

004035a8 <.LVL340>:
  4035a8:	3c10      	subs	r4, #16

004035aa <.LVL341>:
  4035aa:	2c10      	cmp	r4, #16
  4035ac:	f109 0908 	add.w	r9, r9, #8

004035b0 <.LVL342>:
  4035b0:	dd18      	ble.n	4035e4 <.LVL346+0x2>
  4035b2:	3201      	adds	r2, #1
  4035b4:	3310      	adds	r3, #16
  4035b6:	2a07      	cmp	r2, #7
  4035b8:	9324      	str	r3, [sp, #144]	; 0x90

004035ba <.LVL343>:
  4035ba:	9223      	str	r2, [sp, #140]	; 0x8c
  4035bc:	f8c9 a000 	str.w	sl, [r9]
  4035c0:	f8c9 5004 	str.w	r5, [r9, #4]
  4035c4:	ddf0      	ble.n	4035a8 <.LVL340>
  4035c6:	aa22      	add	r2, sp, #136	; 0x88
  4035c8:	4631      	mov	r1, r6
  4035ca:	4658      	mov	r0, fp
  4035cc:	f004 ff18 	bl	408400 <__ssprint_r>

004035d0 <.LVL344>:
  4035d0:	2800      	cmp	r0, #0
  4035d2:	f47f aa81 	bne.w	402ad8 <.L189>
  4035d6:	3c10      	subs	r4, #16

004035d8 <.LVL345>:
  4035d8:	2c10      	cmp	r4, #16
  4035da:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035dc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4035de:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004035e2 <.LVL346>:
  4035e2:	dce6      	bgt.n	4035b2 <.LVL342+0x2>
  4035e4:	3201      	adds	r2, #1
  4035e6:	4423      	add	r3, r4
  4035e8:	2a07      	cmp	r2, #7
  4035ea:	9324      	str	r3, [sp, #144]	; 0x90

004035ec <.LVL347>:
  4035ec:	9223      	str	r2, [sp, #140]	; 0x8c
  4035ee:	f8c9 a000 	str.w	sl, [r9]
  4035f2:	f8c9 4004 	str.w	r4, [r9, #4]
  4035f6:	f77f aeba 	ble.w	40336e <.LVL266>

004035fa <.LVL348>:
  4035fa:	aa22      	add	r2, sp, #136	; 0x88
  4035fc:	9905      	ldr	r1, [sp, #20]
  4035fe:	4658      	mov	r0, fp
  403600:	f004 fefe 	bl	408400 <__ssprint_r>

00403604 <.LVL349>:
  403604:	2800      	cmp	r0, #0
  403606:	f47f aa67 	bne.w	402ad8 <.L189>
  40360a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40360c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  40360e:	f10d 0994 	add.w	r9, sp, #148	; 0x94
  403612:	e6ae      	b.n	403372 <.LVL267>

00403614 <.LVL350>:
  403614:	4641      	mov	r1, r8

00403616 <.LVL351>:
  403616:	ae4e      	add	r6, sp, #312	; 0x138
  403618:	3430      	adds	r4, #48	; 0x30

0040361a <.LVL352>:
  40361a:	2301      	movs	r3, #1

0040361c <.LVL353>:
  40361c:	4688      	mov	r8, r1
  40361e:	f806 4d01 	strb.w	r4, [r6, #-1]!
  403622:	9308      	str	r3, [sp, #32]
  403624:	f7ff bac0 	b.w	402ba8 <.LVL61>

00403628 <.LVL354>:
  403628:	ab4e      	add	r3, sp, #312	; 0x138
  40362a:	1b9b      	subs	r3, r3, r6
  40362c:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403630:	46d8      	mov	r8, fp
  403632:	970f      	str	r7, [sp, #60]	; 0x3c
  403634:	f8dd b020 	ldr.w	fp, [sp, #32]

00403638 <.LVL355>:
  403638:	f8dd 9018 	ldr.w	r9, [sp, #24]

0040363c <.LVL356>:
  40363c:	9f02      	ldr	r7, [sp, #8]

0040363e <.LVL357>:
  40363e:	9308      	str	r3, [sp, #32]
  403640:	f7ff bab2 	b.w	402ba8 <.LVL61>

00403644 <.LVL358>:
  403644:	681c      	ldr	r4, [r3, #0]
  403646:	3304      	adds	r3, #4
  403648:	930a      	str	r3, [sp, #40]	; 0x28

0040364a <.LVL359>:
  40364a:	2500      	movs	r5, #0
  40364c:	f7ff bbed 	b.w	402e2a <.LVL126>

00403650 <.LVL360>:
  403650:	3204      	adds	r2, #4
  403652:	681c      	ldr	r4, [r3, #0]
  403654:	920a      	str	r2, [sp, #40]	; 0x28

00403656 <.LVL361>:
  403656:	2301      	movs	r3, #1
  403658:	2500      	movs	r5, #0
  40365a:	f7ff ba8a 	b.w	402b72 <.L150>

0040365e <.LVL362>:
  40365e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403660:	6814      	ldr	r4, [r2, #0]
  403662:	4613      	mov	r3, r2
  403664:	3304      	adds	r3, #4

00403666 <.LVL363>:
  403666:	17e5      	asrs	r5, r4, #31
  403668:	930a      	str	r3, [sp, #40]	; 0x28
  40366a:	4622      	mov	r2, r4
  40366c:	462b      	mov	r3, r5

0040366e <.LVL364>:
  40366e:	e40c      	b.n	402e8a <.LVL137>

00403670 <.LVL365>:
  403670:	681c      	ldr	r4, [r3, #0]
  403672:	3304      	adds	r3, #4
  403674:	930a      	str	r3, [sp, #40]	; 0x28

00403676 <.LVL366>:
  403676:	2500      	movs	r5, #0
  403678:	f7ff ba69 	b.w	402b4e <.LVL51>

0040367c <.LBB15>:
  40367c:	aa22      	add	r2, sp, #136	; 0x88
  40367e:	9905      	ldr	r1, [sp, #20]
  403680:	4658      	mov	r0, fp
  403682:	f004 febd 	bl	408400 <__ssprint_r>

00403686 <.LVL368>:
  403686:	2800      	cmp	r0, #0
  403688:	f47f aa26 	bne.w	402ad8 <.L189>
  40368c:	9b24      	ldr	r3, [sp, #144]	; 0x90

0040368e <.LVL369>:
  40368e:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403692 <.LBE15>:
  403692:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403694:	f418 6f80 	tst.w	r8, #1024	; 0x400
  403698:	4432      	add	r2, r6
  40369a:	4615      	mov	r5, r2

0040369c <.LVL371>:
  40369c:	f000 8083 	beq.w	4037a6 <.LVL403>

004036a0 <.LBB16>:
  4036a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4036a2:	9608      	str	r6, [sp, #32]
  4036a4:	4618      	mov	r0, r3

004036a6 <.LBE16>:
  4036a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4036a8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c

004036ac <.LBB17>:
  4036ac:	1871      	adds	r1, r6, r1
  4036ae:	9104      	str	r1, [sp, #16]
  4036b0:	9706      	str	r7, [sp, #24]
  4036b2:	4649      	mov	r1, r9
  4036b4:	4616      	mov	r6, r2

004036b6 <.LVL372>:
  4036b6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
  4036ba:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c

004036be <.LVL373>:
  4036be:	9d05      	ldr	r5, [sp, #20]

004036c0 <.LBE17>:
  4036c0:	2b00      	cmp	r3, #0
  4036c2:	d05f      	beq.n	403784 <.LVL399>

004036c4 <.LVL374>:
  4036c4:	f1b8 0f00 	cmp.w	r8, #0
  4036c8:	f000 8108 	beq.w	4038dc <.LBB27>
  4036cc:	f108 38ff 	add.w	r8, r8, #4294967295

004036d0 <.LVL375>:
  4036d0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4036d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4036d4:	600a      	str	r2, [r1, #0]
  4036d6:	3301      	adds	r3, #1
  4036d8:	4448      	add	r0, r9
  4036da:	2b07      	cmp	r3, #7
  4036dc:	9024      	str	r0, [sp, #144]	; 0x90
  4036de:	f8c1 9004 	str.w	r9, [r1, #4]
  4036e2:	9323      	str	r3, [sp, #140]	; 0x8c
  4036e4:	f300 80c8 	bgt.w	403878 <.LBB26>

004036e8 <.LVL376>:
  4036e8:	3108      	adds	r1, #8

004036ea <.LBB18>:
  4036ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4036ec:	9c04      	ldr	r4, [sp, #16]
  4036ee:	7813      	ldrb	r3, [r2, #0]
  4036f0:	1ba4      	subs	r4, r4, r6

004036f2 <.LVL378>:
  4036f2:	429c      	cmp	r4, r3
  4036f4:	bfa8      	it	ge
  4036f6:	461c      	movge	r4, r3
  4036f8:	2c00      	cmp	r4, #0
  4036fa:	dd0b      	ble.n	403714 <.LVL382>
  4036fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4036fe:	600e      	str	r6, [r1, #0]
  403700:	3301      	adds	r3, #1
  403702:	4420      	add	r0, r4
  403704:	2b07      	cmp	r3, #7
  403706:	9024      	str	r0, [sp, #144]	; 0x90

00403708 <.LVL380>:
  403708:	604c      	str	r4, [r1, #4]
  40370a:	9323      	str	r3, [sp, #140]	; 0x8c
  40370c:	f300 81ab 	bgt.w	403a66 <.LBB21>

00403710 <.LVL381>:
  403710:	7813      	ldrb	r3, [r2, #0]
  403712:	3108      	adds	r1, #8

00403714 <.LVL382>:
  403714:	2c00      	cmp	r4, #0
  403716:	bfac      	ite	ge
  403718:	1b1c      	subge	r4, r3, r4

0040371a <.LVL383>:
  40371a:	461c      	movlt	r4, r3

0040371c <.LVL384>:
  40371c:	2c00      	cmp	r4, #0
  40371e:	dd2d      	ble.n	40377c <.LBE18>
  403720:	2c10      	cmp	r4, #16
  403722:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403724:	dd1d      	ble.n	403762 <.LVL395>
  403726:	2710      	movs	r7, #16
  403728:	e004      	b.n	403734 <.LVL388>

0040372a <.LVL385>:
  40372a:	3c10      	subs	r4, #16

0040372c <.LVL386>:
  40372c:	2c10      	cmp	r4, #16
  40372e:	f101 0108 	add.w	r1, r1, #8

00403732 <.LVL387>:
  403732:	dd16      	ble.n	403762 <.LVL395>

00403734 <.LVL388>:
  403734:	3201      	adds	r2, #1
  403736:	3010      	adds	r0, #16
  403738:	2a07      	cmp	r2, #7
  40373a:	9024      	str	r0, [sp, #144]	; 0x90

0040373c <.LVL389>:
  40373c:	9223      	str	r2, [sp, #140]	; 0x8c
  40373e:	f8c1 a000 	str.w	sl, [r1]
  403742:	604f      	str	r7, [r1, #4]
  403744:	ddf1      	ble.n	40372a <.LVL385>
  403746:	aa22      	add	r2, sp, #136	; 0x88
  403748:	4629      	mov	r1, r5

0040374a <.LVL390>:
  40374a:	4658      	mov	r0, fp
  40374c:	f004 fe58 	bl	408400 <__ssprint_r>

00403750 <.LVL391>:
  403750:	2800      	cmp	r0, #0
  403752:	f47f a9c1 	bne.w	402ad8 <.L189>
  403756:	3c10      	subs	r4, #16

00403758 <.LVL392>:
  403758:	2c10      	cmp	r4, #16
  40375a:	9824      	ldr	r0, [sp, #144]	; 0x90
  40375c:	9a23      	ldr	r2, [sp, #140]	; 0x8c

0040375e <.LVL393>:
  40375e:	a925      	add	r1, sp, #148	; 0x94

00403760 <.LVL394>:
  403760:	dce8      	bgt.n	403734 <.LVL388>

00403762 <.LVL395>:
  403762:	3201      	adds	r2, #1
  403764:	4420      	add	r0, r4
  403766:	2a07      	cmp	r2, #7
  403768:	9024      	str	r0, [sp, #144]	; 0x90
  40376a:	9223      	str	r2, [sp, #140]	; 0x8c
  40376c:	f8c1 a000 	str.w	sl, [r1]
  403770:	604c      	str	r4, [r1, #4]
  403772:	f300 8191 	bgt.w	403a98 <.LBB22>

00403776 <.LVL396>:
  403776:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403778:	781b      	ldrb	r3, [r3, #0]
  40377a:	3108      	adds	r1, #8

0040377c <.LBE18>:
  40377c:	441e      	add	r6, r3
  40377e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403780:	2b00      	cmp	r3, #0
  403782:	d19f      	bne.n	4036c4 <.LVL374>

00403784 <.LVL399>:
  403784:	f1b8 0f00 	cmp.w	r8, #0
  403788:	d1a0      	bne.n	4036cc <.LVL374+0x8>
  40378a:	4634      	mov	r4, r6
  40378c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40378e:	9e08      	ldr	r6, [sp, #32]

00403790 <.LVL400>:
  403790:	9f06      	ldr	r7, [sp, #24]
  403792:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c

00403796 <.LVL401>:
  403796:	18b2      	adds	r2, r6, r2
  403798:	4294      	cmp	r4, r2
  40379a:	4689      	mov	r9, r1
  40379c:	4621      	mov	r1, r4
  40379e:	bf28      	it	cs
  4037a0:	4611      	movcs	r1, r2
  4037a2:	4603      	mov	r3, r0

004037a4 <.LVL402>:
  4037a4:	460d      	mov	r5, r1

004037a6 <.LVL403>:
  4037a6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  4037a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4037aa:	428a      	cmp	r2, r1
  4037ac:	f280 8201 	bge.w	403bb2 <.LBB47>
  4037b0:	9923      	ldr	r1, [sp, #140]	; 0x8c
  4037b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4037b4:	9817      	ldr	r0, [sp, #92]	; 0x5c
  4037b6:	f8c9 0000 	str.w	r0, [r9]
  4037ba:	3101      	adds	r1, #1
  4037bc:	4423      	add	r3, r4
  4037be:	2907      	cmp	r1, #7
  4037c0:	9324      	str	r3, [sp, #144]	; 0x90
  4037c2:	f8c9 4004 	str.w	r4, [r9, #4]
  4037c6:	9123      	str	r1, [sp, #140]	; 0x8c
  4037c8:	f300 828d 	bgt.w	403ce6 <.LBB50>

004037cc <.LVL404>:
  4037cc:	f109 0908 	add.w	r9, r9, #8

004037d0 <.LBB19>:
  4037d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4037d2:	1874      	adds	r4, r6, r1
  4037d4:	1b64      	subs	r4, r4, r5

004037d6 <.LVL406>:
  4037d6:	1a8a      	subs	r2, r1, r2
  4037d8:	4294      	cmp	r4, r2
  4037da:	bfa8      	it	ge
  4037dc:	4614      	movge	r4, r2
  4037de:	2c00      	cmp	r4, #0
  4037e0:	dd0d      	ble.n	4037fe <.LVL409>
  4037e2:	9923      	ldr	r1, [sp, #140]	; 0x8c
  4037e4:	f8c9 5000 	str.w	r5, [r9]
  4037e8:	3101      	adds	r1, #1
  4037ea:	4423      	add	r3, r4
  4037ec:	2907      	cmp	r1, #7
  4037ee:	9324      	str	r3, [sp, #144]	; 0x90
  4037f0:	f8c9 4004 	str.w	r4, [r9, #4]
  4037f4:	9123      	str	r1, [sp, #140]	; 0x8c
  4037f6:	f300 83bc 	bgt.w	403f72 <.LBB24>

004037fa <.LVL408>:
  4037fa:	f109 0908 	add.w	r9, r9, #8

004037fe <.LVL409>:
  4037fe:	2c00      	cmp	r4, #0
  403800:	bfac      	ite	ge
  403802:	1b14      	subge	r4, r2, r4

00403804 <.LVL410>:
  403804:	4614      	movlt	r4, r2

00403806 <.LVL411>:
  403806:	2c00      	cmp	r4, #0
  403808:	f77f aa9e 	ble.w	402d48 <.LVL104>
  40380c:	2c10      	cmp	r4, #16
  40380e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403810:	dd1e      	ble.n	403850 <.LVL421>
  403812:	2510      	movs	r5, #16

00403814 <.LVL412>:
  403814:	9e05      	ldr	r6, [sp, #20]
  403816:	e004      	b.n	403822 <.LVL416>

00403818 <.LVL413>:
  403818:	f109 0908 	add.w	r9, r9, #8

0040381c <.LVL414>:
  40381c:	3c10      	subs	r4, #16
  40381e:	2c10      	cmp	r4, #16
  403820:	dd16      	ble.n	403850 <.LVL421>

00403822 <.LVL416>:
  403822:	3201      	adds	r2, #1
  403824:	3310      	adds	r3, #16
  403826:	2a07      	cmp	r2, #7
  403828:	9324      	str	r3, [sp, #144]	; 0x90

0040382a <.LVL417>:
  40382a:	9223      	str	r2, [sp, #140]	; 0x8c
  40382c:	f8c9 a000 	str.w	sl, [r9]
  403830:	f8c9 5004 	str.w	r5, [r9, #4]
  403834:	ddf0      	ble.n	403818 <.LVL413>
  403836:	aa22      	add	r2, sp, #136	; 0x88
  403838:	4631      	mov	r1, r6
  40383a:	4658      	mov	r0, fp
  40383c:	f004 fde0 	bl	408400 <__ssprint_r>

00403840 <.LVL418>:
  403840:	2800      	cmp	r0, #0
  403842:	f47f a949 	bne.w	402ad8 <.L189>
  403846:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403848:	9a23      	ldr	r2, [sp, #140]	; 0x8c

0040384a <.LVL419>:
  40384a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

0040384e <.LVL420>:
  40384e:	e7e5      	b.n	40381c <.LVL414>

00403850 <.LVL421>:
  403850:	3201      	adds	r2, #1
  403852:	4423      	add	r3, r4
  403854:	2a07      	cmp	r2, #7
  403856:	9324      	str	r3, [sp, #144]	; 0x90
  403858:	9223      	str	r2, [sp, #140]	; 0x8c
  40385a:	f8c9 a000 	str.w	sl, [r9]
  40385e:	f8c9 4004 	str.w	r4, [r9, #4]
  403862:	f77f aa6f 	ble.w	402d44 <.LVL103>
  403866:	e591      	b.n	40338c <.LVL269>

00403868 <.LBE19>:
  403868:	f018 0f01 	tst.w	r8, #1
  40386c:	f47f ad57 	bne.w	40331e <.LVL260+0x22>
  403870:	2a07      	cmp	r2, #7
  403872:	f77f ad7c 	ble.w	40336e <.LVL266>
  403876:	e6c0      	b.n	4035fa <.LVL348>

00403878 <.LBB26>:
  403878:	aa22      	add	r2, sp, #136	; 0x88
  40387a:	4629      	mov	r1, r5
  40387c:	4658      	mov	r0, fp
  40387e:	f004 fdbf 	bl	408400 <__ssprint_r>

00403882 <.LVL424>:
  403882:	2800      	cmp	r0, #0
  403884:	f47f a928 	bne.w	402ad8 <.L189>
  403888:	9824      	ldr	r0, [sp, #144]	; 0x90

0040388a <.LVL425>:
  40388a:	a925      	add	r1, sp, #148	; 0x94

0040388c <.LVL426>:
  40388c:	e72d      	b.n	4036ea <.LBB18>

0040388e <.LBE26>:
  40388e:	aa22      	add	r2, sp, #136	; 0x88
  403890:	9905      	ldr	r1, [sp, #20]
  403892:	4658      	mov	r0, fp
  403894:	f004 fdb4 	bl	408400 <__ssprint_r>

00403898 <.LVL428>:
  403898:	2800      	cmp	r0, #0
  40389a:	f47f a91d 	bne.w	402ad8 <.L189>
  40389e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038a0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4038a2:	f10d 0994 	add.w	r9, sp, #148	; 0x94
  4038a6:	e53f      	b.n	403328 <.LVL261>

004038a8 <.LVL429>:
  4038a8:	aa22      	add	r2, sp, #136	; 0x88
  4038aa:	9905      	ldr	r1, [sp, #20]
  4038ac:	4658      	mov	r0, fp
  4038ae:	f004 fda7 	bl	408400 <__ssprint_r>

004038b2 <.LVL430>:
  4038b2:	2800      	cmp	r0, #0
  4038b4:	f47f a910 	bne.w	402ad8 <.L189>
  4038b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4038bc:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004038c0 <.LVL431>:
  4038c0:	e541      	b.n	403346 <.LVL263>

004038c2 <.LVL432>:
  4038c2:	aa22      	add	r2, sp, #136	; 0x88
  4038c4:	9905      	ldr	r1, [sp, #20]
  4038c6:	4658      	mov	r0, fp
  4038c8:	f004 fd9a 	bl	408400 <__ssprint_r>

004038cc <.LVL433>:
  4038cc:	2800      	cmp	r0, #0
  4038ce:	f47f a903 	bne.w	402ad8 <.L189>
  4038d2:	9b24      	ldr	r3, [sp, #144]	; 0x90

004038d4 <.LVL434>:
  4038d4:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004038d8 <.LVL435>:
  4038d8:	f7ff b9e7 	b.w	402caa <.LVL86+0x8>

004038dc <.LBB27>:
  4038dc:	9b12      	ldr	r3, [sp, #72]	; 0x48

004038de <.LVL437>:
  4038de:	3b01      	subs	r3, #1
  4038e0:	9312      	str	r3, [sp, #72]	; 0x48

004038e2 <.LVL438>:
  4038e2:	9b10      	ldr	r3, [sp, #64]	; 0x40

004038e4 <.LVL439>:
  4038e4:	3b01      	subs	r3, #1
  4038e6:	9310      	str	r3, [sp, #64]	; 0x40

004038e8 <.LVL440>:
  4038e8:	e6f2      	b.n	4036d0 <.LVL375>

004038ea <.LBE27>:
  4038ea:	eeb4 8b48 	vcmp.f64	d8, d8
  4038ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4038f2:	f180 83e3 	bvs.w	4040bc <.LBE70>
  4038f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4038f8:	2b61      	cmp	r3, #97	; 0x61
  4038fa:	f000 82b8 	beq.w	403e6e <.LVL595+0xa>
  4038fe:	2b41      	cmp	r3, #65	; 0x41
  403900:	f000 8178 	beq.w	403bf4 <.LVL523>
  403904:	9b04      	ldr	r3, [sp, #16]
  403906:	3301      	adds	r3, #1
  403908:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40390a:	f023 0520 	bic.w	r5, r3, #32
  40390e:	f000 839d 	beq.w	40404c <.LBE69>
  403912:	2d47      	cmp	r5, #71	; 0x47
  403914:	d104      	bne.n	403920 <.LBB28>
  403916:	9b04      	ldr	r3, [sp, #16]
  403918:	2b00      	cmp	r3, #0
  40391a:	bf08      	it	eq
  40391c:	2301      	moveq	r3, #1
  40391e:	9304      	str	r3, [sp, #16]

00403920 <.LBB28>:
  403920:	ee18 3a90 	vmov	r3, s17

00403924 <.LBE28>:
  403924:	f448 7280 	orr.w	r2, r8, #256	; 0x100

00403928 <.LBB43>:
  403928:	2b00      	cmp	r3, #0

0040392a <.LBE43>:
  40392a:	9202      	str	r2, [sp, #8]

0040392c <.LBB44>:
  40392c:	f04f 0300 	mov.w	r3, #0
  403930:	f2c0 82b8 	blt.w	403ea4 <.LBB62>
  403934:	eeb0 ab48 	vmov.f64	d10, d8
  403938:	9306      	str	r3, [sp, #24]
  40393a:	9309      	str	r3, [sp, #36]	; 0x24

0040393c <.LVL445>:
  40393c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40393e:	2b66      	cmp	r3, #102	; 0x66
  403940:	f000 82ef 	beq.w	403f22 <.LBB64>
  403944:	2b46      	cmp	r3, #70	; 0x46
  403946:	f000 83d8 	beq.w	4040fa <.LBB71>
  40394a:	eeb0 0b4a 	vmov.f64	d0, d10
  40394e:	2d45      	cmp	r5, #69	; 0x45
  403950:	bf0a      	itet	eq
  403952:	9b04      	ldreq	r3, [sp, #16]
  403954:	9c04      	ldrne	r4, [sp, #16]
  403956:	1c5c      	addeq	r4, r3, #1

00403958 <.LVL446>:
  403958:	aa20      	add	r2, sp, #128	; 0x80

0040395a <.LVL447>:
  40395a:	ab1d      	add	r3, sp, #116	; 0x74
  40395c:	9201      	str	r2, [sp, #4]
  40395e:	9300      	str	r3, [sp, #0]
  403960:	4622      	mov	r2, r4
  403962:	ab1c      	add	r3, sp, #112	; 0x70

00403964 <.LVL448>:
  403964:	2102      	movs	r1, #2
  403966:	4658      	mov	r0, fp
  403968:	f001 fb0e 	bl	404f88 <_dtoa_r>

0040396c <.LVL449>:
  40396c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40396e:	2b67      	cmp	r3, #103	; 0x67
  403970:	4606      	mov	r6, r0

00403972 <.LVL450>:
  403972:	f040 8395 	bne.w	4040a0 <.LBB70>
  403976:	f018 0f01 	tst.w	r8, #1
  40397a:	f040 8343 	bne.w	404004 <.LBB66>

0040397e <.LVL451>:
  40397e:	9b20      	ldr	r3, [sp, #128]	; 0x80

00403980 <.LVL452>:
  403980:	46c6      	mov	lr, r8
  403982:	1b9b      	subs	r3, r3, r6
  403984:	f8dd 8008 	ldr.w	r8, [sp, #8]
  403988:	930f      	str	r3, [sp, #60]	; 0x3c

0040398a <.LBE44>:
  40398a:	2d47      	cmp	r5, #71	; 0x47
  40398c:	f000 81cf 	beq.w	403d2e <.LVL554>
  403990:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403992:	2b46      	cmp	r3, #70	; 0x46
  403994:	f000 82b3 	beq.w	403efe <.LVL607>
  403998:	2b65      	cmp	r3, #101	; 0x65
  40399a:	f340 8412 	ble.w	4041c2 <.LVL694>
  40399e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4039a0:	2b66      	cmp	r3, #102	; 0x66
  4039a2:	f000 82ac 	beq.w	403efe <.LVL607>
  4039a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4039a8:	930e      	str	r3, [sp, #56]	; 0x38

004039aa <.LVL454>:
  4039aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4039ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4039ae:	4619      	mov	r1, r3
  4039b0:	4291      	cmp	r1, r2
  4039b2:	4613      	mov	r3, r2
  4039b4:	f300 8260 	bgt.w	403e78 <.LVL596>

004039b8 <.LVL455>:
  4039b8:	f01e 0f01 	tst.w	lr, #1
  4039bc:	f000 8363 	beq.w	404086 <.LVL655>
  4039c0:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4039c2:	4413      	add	r3, r2
  4039c4:	9308      	str	r3, [sp, #32]

004039c6 <.LVL456>:
  4039c6:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  4039ca:	f000 8310 	beq.w	403fee <.LVL635>
  4039ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4039d0:	2b00      	cmp	r3, #0
  4039d2:	f340 830c 	ble.w	403fee <.LVL635>
  4039d6:	2367      	movs	r3, #103	; 0x67
  4039d8:	930d      	str	r3, [sp, #52]	; 0x34

004039da <.LVL457>:
  4039da:	9812      	ldr	r0, [sp, #72]	; 0x48
  4039dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4039de:	2300      	movs	r3, #0
  4039e0:	9313      	str	r3, [sp, #76]	; 0x4c
  4039e2:	9310      	str	r3, [sp, #64]	; 0x40
  4039e4:	7803      	ldrb	r3, [r0, #0]

004039e6 <.LVL458>:
  4039e6:	2bff      	cmp	r3, #255	; 0xff
  4039e8:	d00e      	beq.n	403a08 <.LVL461+0x8>
  4039ea:	429a      	cmp	r2, r3
  4039ec:	dd0c      	ble.n	403a08 <.LVL461+0x8>
  4039ee:	7841      	ldrb	r1, [r0, #1]
  4039f0:	1ad2      	subs	r2, r2, r3
  4039f2:	2900      	cmp	r1, #0
  4039f4:	f000 8184 	beq.w	403d00 <.LBE50>
  4039f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4039fa:	3301      	adds	r3, #1
  4039fc:	9310      	str	r3, [sp, #64]	; 0x40

004039fe <.LVL460>:
  4039fe:	460b      	mov	r3, r1

00403a00 <.LVL461>:
  403a00:	2bff      	cmp	r3, #255	; 0xff
  403a02:	f100 0001 	add.w	r0, r0, #1
  403a06:	d1f0      	bne.n	4039ea <.LVL458+0x4>
  403a08:	920e      	str	r2, [sp, #56]	; 0x38
  403a0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403a0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c

00403a0e <.LVL463>:
  403a0e:	9908      	ldr	r1, [sp, #32]
  403a10:	9012      	str	r0, [sp, #72]	; 0x48
  403a12:	4413      	add	r3, r2
  403a14:	9a18      	ldr	r2, [sp, #96]	; 0x60
  403a16:	fb02 1303 	mla	r3, r2, r3, r1
  403a1a:	9308      	str	r3, [sp, #32]

00403a1c <.LVL464>:
  403a1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31

00403a20 <.LVL465>:
  403a20:	9302      	str	r3, [sp, #8]

00403a22 <.LVL466>:
  403a22:	9b06      	ldr	r3, [sp, #24]
  403a24:	2b00      	cmp	r3, #0
  403a26:	f040 817b 	bne.w	403d20 <.LVL552>
  403a2a:	9304      	str	r3, [sp, #16]

00403a2c <.LVL467>:
  403a2c:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403a30:	f7ff b8c7 	b.w	402bc2 <.L59>

00403a34 <.LVL468>:
  403a34:	f025 0507 	bic.w	r5, r5, #7
  403a38:	f105 0308 	add.w	r3, r5, #8
  403a3c:	ed95 8b00 	vldr	d8, [r5]

00403a40 <.LVL469>:
  403a40:	930a      	str	r3, [sp, #40]	; 0x28

00403a42 <.LVL470>:
  403a42:	f7ff bb11 	b.w	403068 <.LVL189>

00403a46 <.LVL471>:
  403a46:	464c      	mov	r4, r9
  403a48:	4689      	mov	r9, r1

00403a4a <.LBB20>:
  403a4a:	3201      	adds	r2, #1
  403a4c:	4423      	add	r3, r4
  403a4e:	2a07      	cmp	r2, #7
  403a50:	9324      	str	r3, [sp, #144]	; 0x90
  403a52:	9223      	str	r2, [sp, #140]	; 0x8c
  403a54:	f8c9 a000 	str.w	sl, [r9]
  403a58:	f8c9 4004 	str.w	r4, [r9, #4]
  403a5c:	f73f ae0e 	bgt.w	40367c <.LBB15>

00403a60 <.LVL473>:
  403a60:	f109 0908 	add.w	r9, r9, #8

00403a64 <.LVL474>:
  403a64:	e615      	b.n	403692 <.LBE15>

00403a66 <.LBB21>:
  403a66:	aa22      	add	r2, sp, #136	; 0x88
  403a68:	4629      	mov	r1, r5

00403a6a <.LVL476>:
  403a6a:	4658      	mov	r0, fp
  403a6c:	f004 fcc8 	bl	408400 <__ssprint_r>

00403a70 <.LVL477>:
  403a70:	2800      	cmp	r0, #0
  403a72:	f47f a831 	bne.w	402ad8 <.L189>
  403a76:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403a78:	9824      	ldr	r0, [sp, #144]	; 0x90

00403a7a <.LVL478>:
  403a7a:	781b      	ldrb	r3, [r3, #0]
  403a7c:	a925      	add	r1, sp, #148	; 0x94

00403a7e <.LVL479>:
  403a7e:	e649      	b.n	403714 <.LVL382>

00403a80 <.LBE21>:
  403a80:	aa22      	add	r2, sp, #136	; 0x88
  403a82:	9905      	ldr	r1, [sp, #20]
  403a84:	4658      	mov	r0, fp
  403a86:	f004 fcbb 	bl	408400 <__ssprint_r>

00403a8a <.LVL481>:
  403a8a:	2800      	cmp	r0, #0
  403a8c:	f47f a824 	bne.w	402ad8 <.L189>

00403a90 <.LVL482>:
  403a90:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403a94 <.LVL483>:
  403a94:	f7ff bbb2 	b.w	4031fc <.LVL230>

00403a98 <.LBB22>:
  403a98:	aa22      	add	r2, sp, #136	; 0x88
  403a9a:	4629      	mov	r1, r5
  403a9c:	4658      	mov	r0, fp
  403a9e:	f004 fcaf 	bl	408400 <__ssprint_r>

00403aa2 <.LVL485>:
  403aa2:	2800      	cmp	r0, #0
  403aa4:	f47f a818 	bne.w	402ad8 <.L189>
  403aa8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403aaa:	9824      	ldr	r0, [sp, #144]	; 0x90

00403aac <.LVL486>:
  403aac:	781b      	ldrb	r3, [r3, #0]
  403aae:	a925      	add	r1, sp, #148	; 0x94

00403ab0 <.LBE22>:
  403ab0:	441e      	add	r6, r3
  403ab2:	e664      	b.n	40377e <.LBE18+0x2>

00403ab4 <.LBE46>:
  403ab4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403ab6:	48c2      	ldr	r0, [pc, #776]	; (403dc0 <.LVL571+0x2>)
  403ab8:	f8c9 0000 	str.w	r0, [r9]
  403abc:	3201      	adds	r2, #1
  403abe:	3301      	adds	r3, #1
  403ac0:	2001      	movs	r0, #1
  403ac2:	2a07      	cmp	r2, #7
  403ac4:	9324      	str	r3, [sp, #144]	; 0x90
  403ac6:	9223      	str	r2, [sp, #140]	; 0x8c
  403ac8:	f8c9 0004 	str.w	r0, [r9, #4]
  403acc:	f300 8085 	bgt.w	403bda <.LVL519>

00403ad0 <.LVL490>:
  403ad0:	f109 0908 	add.w	r9, r9, #8

00403ad4 <.LVL491>:
  403ad4:	b929      	cbnz	r1, 403ae2 <.LVL491+0xe>
  403ad6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403ad8:	b91a      	cbnz	r2, 403ae2 <.LVL491+0xe>
  403ada:	f018 0f01 	tst.w	r8, #1
  403ade:	f43f a933 	beq.w	402d48 <.LVL104>
  403ae2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403ae4:	9c15      	ldr	r4, [sp, #84]	; 0x54

00403ae6 <.LVL492>:
  403ae6:	9817      	ldr	r0, [sp, #92]	; 0x5c
  403ae8:	f8c9 0000 	str.w	r0, [r9]
  403aec:	3201      	adds	r2, #1
  403aee:	4423      	add	r3, r4
  403af0:	2a07      	cmp	r2, #7
  403af2:	9324      	str	r3, [sp, #144]	; 0x90

00403af4 <.LVL493>:
  403af4:	f8c9 4004 	str.w	r4, [r9, #4]
  403af8:	9223      	str	r2, [sp, #140]	; 0x8c
  403afa:	f300 826a 	bgt.w	403fd2 <.LVL632>
  403afe:	f109 0908 	add.w	r9, r9, #8

00403b02 <.LVL494>:
  403b02:	2900      	cmp	r1, #0
  403b04:	f2c0 8244 	blt.w	403f90 <.LBE24>

00403b08 <.LVL495>:
  403b08:	980f      	ldr	r0, [sp, #60]	; 0x3c
  403b0a:	f8c9 6000 	str.w	r6, [r9]
  403b0e:	3201      	adds	r2, #1
  403b10:	4403      	add	r3, r0
  403b12:	2a07      	cmp	r2, #7
  403b14:	9324      	str	r3, [sp, #144]	; 0x90

00403b16 <.LVL496>:
  403b16:	9223      	str	r2, [sp, #140]	; 0x8c
  403b18:	f8c9 0004 	str.w	r0, [r9, #4]
  403b1c:	f77f a912 	ble.w	402d44 <.LVL103>
  403b20:	e434      	b.n	40338c <.LVL269>

00403b22 <.LDL1>:
  403b22:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b24:	2b00      	cmp	r3, #0
  403b26:	f43e afdd 	beq.w	402ae4 <.LVL44>
  403b2a:	9c05      	ldr	r4, [sp, #20]
  403b2c:	9811      	ldr	r0, [sp, #68]	; 0x44
  403b2e:	aa22      	add	r2, sp, #136	; 0x88
  403b30:	4621      	mov	r1, r4
  403b32:	f004 fc65 	bl	408400 <__ssprint_r>

00403b36 <.LVL498>:
  403b36:	2800      	cmp	r0, #0
  403b38:	f43e afd4 	beq.w	402ae4 <.LVL44>
  403b3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b40:	f7fe bfd3 	b.w	402aea <.LVL44+0x6>

00403b44 <.LVL499>:
  403b44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403b46:	9903      	ldr	r1, [sp, #12]
  403b48:	6813      	ldr	r3, [r2, #0]
  403b4a:	17cd      	asrs	r5, r1, #31
  403b4c:	4608      	mov	r0, r1
  403b4e:	3204      	adds	r2, #4

00403b50 <.LVL500>:
  403b50:	4629      	mov	r1, r5
  403b52:	920a      	str	r2, [sp, #40]	; 0x28
  403b54:	e9c3 0100 	strd	r0, r1, [r3]
  403b58:	463e      	mov	r6, r7

00403b5a <.LVL501>:
  403b5a:	f7fe bef4 	b.w	402946 <.LVL10>

00403b5e <.LVL502>:
  403b5e:	3304      	adds	r3, #4
  403b60:	8814      	ldrh	r4, [r2, #0]
  403b62:	930a      	str	r3, [sp, #40]	; 0x28

00403b64 <.LVL503>:
  403b64:	2500      	movs	r5, #0
  403b66:	f7ff b960 	b.w	402e2a <.LVL126>

00403b6a <.LVL504>:
  403b6a:	8814      	ldrh	r4, [r2, #0]
  403b6c:	3204      	adds	r2, #4
  403b6e:	2500      	movs	r5, #0
  403b70:	2301      	movs	r3, #1
  403b72:	920a      	str	r2, [sp, #40]	; 0x28

00403b74 <.LVL505>:
  403b74:	f7fe bffd 	b.w	402b72 <.L150>

00403b78 <.LVL506>:
  403b78:	3304      	adds	r3, #4
  403b7a:	8814      	ldrh	r4, [r2, #0]
  403b7c:	930a      	str	r3, [sp, #40]	; 0x28

00403b7e <.LVL507>:
  403b7e:	2500      	movs	r5, #0
  403b80:	f7fe bfe5 	b.w	402b4e <.LVL51>

00403b84 <.LVL508>:
  403b84:	980a      	ldr	r0, [sp, #40]	; 0x28
  403b86:	f9b0 4000 	ldrsh.w	r4, [r0]
  403b8a:	f7ff b979 	b.w	402e80 <.LVL136>

00403b8e <.LVL509>:
  403b8e:	aa22      	add	r2, sp, #136	; 0x88
  403b90:	9905      	ldr	r1, [sp, #20]
  403b92:	4658      	mov	r0, fp
  403b94:	f004 fc34 	bl	408400 <__ssprint_r>

00403b98 <.LVL510>:
  403b98:	2800      	cmp	r0, #0
  403b9a:	f47e af9d 	bne.w	402ad8 <.L189>
  403b9e:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403ba0 <.LVL511>:
  403ba0:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403ba4 <.LVL512>:
  403ba4:	f7ff bb43 	b.w	40322e <.LVL233>

00403ba8 <.LVL513>:
  403ba8:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
  403bac:	783b      	ldrb	r3, [r7, #0]
  403bae:	f7fe befa 	b.w	4029a6 <.LVL22>

00403bb2 <.LBB47>:
  403bb2:	f018 0f01 	tst.w	r8, #1
  403bb6:	f43f ae0b 	beq.w	4037d0 <.LBB19>
  403bba:	e5f9      	b.n	4037b0 <.LVL403+0xa>

00403bbc <.LBE47>:
  403bbc:	2140      	movs	r1, #64	; 0x40
  403bbe:	9811      	ldr	r0, [sp, #68]	; 0x44

00403bc0 <.LVL517>:
  403bc0:	f002 fb78 	bl	4062b4 <.LFE14>

00403bc4 <.LVL518>:
  403bc4:	9a05      	ldr	r2, [sp, #20]
  403bc6:	6010      	str	r0, [r2, #0]
  403bc8:	6110      	str	r0, [r2, #16]
  403bca:	2800      	cmp	r0, #0
  403bcc:	f000 82f1 	beq.w	4041b2 <.LBE76>
  403bd0:	9a05      	ldr	r2, [sp, #20]
  403bd2:	2340      	movs	r3, #64	; 0x40
  403bd4:	6153      	str	r3, [r2, #20]
  403bd6:	f7fe bea0 	b.w	40291a <.LVL6>

00403bda <.LVL519>:
  403bda:	aa22      	add	r2, sp, #136	; 0x88
  403bdc:	9905      	ldr	r1, [sp, #20]
  403bde:	4658      	mov	r0, fp
  403be0:	f004 fc0e 	bl	408400 <__ssprint_r>

00403be4 <.LVL520>:
  403be4:	2800      	cmp	r0, #0
  403be6:	f47e af77 	bne.w	402ad8 <.L189>
  403bea:	991c      	ldr	r1, [sp, #112]	; 0x70
  403bec:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403bee <.LVL521>:
  403bee:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403bf2 <.LVL522>:
  403bf2:	e76f      	b.n	403ad4 <.LVL491>

00403bf4 <.LVL523>:
  403bf4:	2330      	movs	r3, #48	; 0x30
  403bf6:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  403bfa:	2358      	movs	r3, #88	; 0x58
  403bfc:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
  403c00:	9b04      	ldr	r3, [sp, #16]
  403c02:	2b63      	cmp	r3, #99	; 0x63
  403c04:	f048 0402 	orr.w	r4, r8, #2

00403c08 <.LVL524>:
  403c08:	f300 8240 	bgt.w	40408c <.LVL656>
  403c0c:	2300      	movs	r3, #0
  403c0e:	9309      	str	r3, [sp, #36]	; 0x24
  403c10:	ae35      	add	r6, sp, #212	; 0xd4

00403c12 <.LBB48>:
  403c12:	ee18 3a90 	vmov	r3, s17
  403c16:	2b00      	cmp	r3, #0
  403c18:	9b0d      	ldr	r3, [sp, #52]	; 0x34

00403c1a <.LBE48>:
  403c1a:	f448 7281 	orr.w	r2, r8, #258	; 0x102
  403c1e:	9202      	str	r2, [sp, #8]

00403c20 <.LBB49>:
  403c20:	46a0      	mov	r8, r4
  403c22:	f023 0520 	bic.w	r5, r3, #32
  403c26:	f2c0 813e 	blt.w	403ea6 <.LVL602>
  403c2a:	eeb0 ab48 	vmov.f64	d10, d8
  403c2e:	2300      	movs	r3, #0
  403c30:	9306      	str	r3, [sp, #24]

00403c32 <.LVL527>:
  403c32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403c34:	2b61      	cmp	r3, #97	; 0x61
  403c36:	f000 81ec 	beq.w	404012 <.LBB68>
  403c3a:	2b41      	cmp	r3, #65	; 0x41
  403c3c:	f47f ae7e 	bne.w	40393c <.LVL445>
  403c40:	eeb0 0b4a 	vmov.f64	d0, d10
  403c44:	a81c      	add	r0, sp, #112	; 0x70

00403c46 <.LVL528>:
  403c46:	f005 fea3 	bl	409990 <.LFE19>

00403c4a <.LVL529>:
  403c4a:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
  403c4e:	ee20 0b07 	vmul.f64	d0, d0, d7

00403c52 <.LVL530>:
  403c52:	eeb5 0b40 	vcmp.f64	d0, #0.0
  403c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403c5a:	d101      	bne.n	403c60 <.LVL530+0xe>
  403c5c:	2301      	movs	r3, #1
  403c5e:	931c      	str	r3, [sp, #112]	; 0x70
  403c60:	4c58      	ldr	r4, [pc, #352]	; (403dc4 <.LVL571+0x6>)

00403c62 <.LVL531>:
  403c62:	9b04      	ldr	r3, [sp, #16]
  403c64:	eeb3 5b00 	vmov.f64	d5, #48	; 0x41800000  16.0
  403c68:	3b01      	subs	r3, #1
  403c6a:	4631      	mov	r1, r6
  403c6c:	e005      	b.n	403c7a <.LVL533>

00403c6e <.LVL532>:
  403c6e:	eeb5 0b40 	vcmp.f64	d0, #0.0
  403c72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403c76:	d014      	beq.n	403ca2 <.LVL536+0x6>
  403c78:	4611      	mov	r1, r2

00403c7a <.LVL533>:
  403c7a:	ee20 0b05 	vmul.f64	d0, d0, d5
  403c7e:	eefd 6bc0 	vcvt.s32.f64	s13, d0

00403c82 <.LVL535>:
  403c82:	460a      	mov	r2, r1
  403c84:	ee16 0a90 	vmov	r0, s13
  403c88:	f1b3 3fff 	cmp.w	r3, #4294967295
  403c8c:	5c20      	ldrb	r0, [r4, r0]
  403c8e:	f802 0b01 	strb.w	r0, [r2], #1
  403c92:	eeb8 7be6 	vcvt.f64.s32	d7, s13
  403c96:	4618      	mov	r0, r3
  403c98:	ee30 0b47 	vsub.f64	d0, d0, d7

00403c9c <.LVL536>:
  403c9c:	f103 33ff 	add.w	r3, r3, #4294967295
  403ca0:	d1e5      	bne.n	403c6e <.LVL532>
  403ca2:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
  403ca6:	eeb4 0bc7 	vcmpe.f64	d0, d7
  403caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403cae:	f300 80ff 	bgt.w	403eb0 <.LVL604>
  403cb2:	eeb4 0b47 	vcmp.f64	d0, d7
  403cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403cba:	d104      	bne.n	403cc6 <.LVL537>
  403cbc:	ee16 3a90 	vmov	r3, s13
  403cc0:	07db      	lsls	r3, r3, #31
  403cc2:	f100 80f5 	bmi.w	403eb0 <.LVL604>

00403cc6 <.LVL537>:
  403cc6:	2800      	cmp	r0, #0
  403cc8:	db07      	blt.n	403cda <.LVL541>
  403cca:	1814      	adds	r4, r2, r0

00403ccc <.LVL538>:
  403ccc:	2330      	movs	r3, #48	; 0x30

00403cce <.LVL539>:
  403cce:	f801 3f01 	strb.w	r3, [r1, #1]!

00403cd2 <.LVL540>:
  403cd2:	42a1      	cmp	r1, r4
  403cd4:	d1fb      	bne.n	403cce <.LVL539>
  403cd6:	3001      	adds	r0, #1
  403cd8:	4402      	add	r2, r0

00403cda <.LVL541>:
  403cda:	1b93      	subs	r3, r2, r6
  403cdc:	46c6      	mov	lr, r8
  403cde:	930f      	str	r3, [sp, #60]	; 0x3c

00403ce0 <.LVL542>:
  403ce0:	f8dd 8008 	ldr.w	r8, [sp, #8]
  403ce4:	e651      	b.n	40398a <.LBE44>

00403ce6 <.LBB50>:
  403ce6:	aa22      	add	r2, sp, #136	; 0x88
  403ce8:	9905      	ldr	r1, [sp, #20]
  403cea:	4658      	mov	r0, fp
  403cec:	f004 fb88 	bl	408400 <__ssprint_r>

00403cf0 <.LVL544>:
  403cf0:	2800      	cmp	r0, #0
  403cf2:	f47e aef1 	bne.w	402ad8 <.L189>
  403cf6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  403cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403cfa <.LVL545>:
  403cfa:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403cfe <.LVL546>:
  403cfe:	e567      	b.n	4037d0 <.LBB19>

00403d00 <.LBE50>:
  403d00:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403d02:	3101      	adds	r1, #1
  403d04:	9113      	str	r1, [sp, #76]	; 0x4c

00403d06 <.LVL548>:
  403d06:	e66e      	b.n	4039e6 <.LVL458>

00403d08 <.LVL549>:
  403d08:	4630      	mov	r0, r6
  403d0a:	9404      	str	r4, [sp, #16]
  403d0c:	f004 fd58 	bl	4087c0 <strlen>

00403d10 <.LVL550>:
  403d10:	ea20 72e0 	bic.w	r2, r0, r0, asr #31
  403d14:	9008      	str	r0, [sp, #32]

00403d16 <.LVL551>:
  403d16:	950a      	str	r5, [sp, #40]	; 0x28
  403d18:	9202      	str	r2, [sp, #8]
  403d1a:	4623      	mov	r3, r4
  403d1c:	f7ff b96b 	b.w	402ff6 <.LBE12>

00403d20 <.LVL552>:
  403d20:	222d      	movs	r2, #45	; 0x2d
  403d22:	2300      	movs	r3, #0
  403d24:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
  403d28:	9304      	str	r3, [sp, #16]

00403d2a <.LVL553>:
  403d2a:	f7fe bf4b 	b.w	402bc4 <.LVL63>

00403d2e <.LVL554>:
  403d2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  403d30:	930e      	str	r3, [sp, #56]	; 0x38
  403d32:	1cda      	adds	r2, r3, #3
  403d34:	db03      	blt.n	403d3e <.LVL555>
  403d36:	9a04      	ldr	r2, [sp, #16]
  403d38:	4293      	cmp	r3, r2
  403d3a:	f77f ae36 	ble.w	4039aa <.LVL454>

00403d3e <.LVL555>:
  403d3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403d40:	3b02      	subs	r3, #2

00403d42 <.LVL556>:
  403d42:	930d      	str	r3, [sp, #52]	; 0x34
  403d44:	f023 0520 	bic.w	r5, r3, #32

00403d48 <.LVL557>:
  403d48:	9b0e      	ldr	r3, [sp, #56]	; 0x38

00403d4a <.LBB51>:
  403d4a:	2d41      	cmp	r5, #65	; 0x41

00403d4c <.LBE51>:
  403d4c:	f103 33ff 	add.w	r3, r3, #4294967295
  403d50:	931c      	str	r3, [sp, #112]	; 0x70

00403d52 <.LBB59>:
  403d52:	f000 8159 	beq.w	404008 <.LBB67>

00403d56 <.LVL559>:
  403d56:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
  403d5a:	2100      	movs	r1, #0

00403d5c <.LVL560>:
  403d5c:	2b00      	cmp	r3, #0
  403d5e:	bfb8      	it	lt
  403d60:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38

00403d62 <.LVL561>:
  403d62:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  403d66:	bfba      	itte	lt
  403d68:	f1c3 0301 	rsblt	r3, r3, #1

00403d6c <.LVL562>:
  403d6c:	222d      	movlt	r2, #45	; 0x2d
  403d6e:	222b      	movge	r2, #43	; 0x2b
  403d70:	2b09      	cmp	r3, #9
  403d72:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79

00403d76 <.LVL563>:
  403d76:	f340 815d 	ble.w	404034 <.LBB69>
  403d7a:	f10d 0487 	add.w	r4, sp, #135	; 0x87

00403d7e <.LVL564>:
  403d7e:	4620      	mov	r0, r4
  403d80:	4d11      	ldr	r5, [pc, #68]	; (403dc8 <.LVL571+0xa>)
  403d82:	e000      	b.n	403d86 <.LVL566>

00403d84 <.LVL565>:
  403d84:	4610      	mov	r0, r2

00403d86 <.LVL566>:
  403d86:	fb85 1203 	smull	r1, r2, r5, r3
  403d8a:	17d9      	asrs	r1, r3, #31
  403d8c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403d90:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403d94:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403d98:	3230      	adds	r2, #48	; 0x30
  403d9a:	2909      	cmp	r1, #9
  403d9c:	f800 2c01 	strb.w	r2, [r0, #-1]
  403da0:	460b      	mov	r3, r1

00403da2 <.LVL567>:
  403da2:	f100 32ff 	add.w	r2, r0, #4294967295

00403da6 <.LVL568>:
  403da6:	dced      	bgt.n	403d84 <.LVL565>

00403da8 <.LVL569>:
  403da8:	3330      	adds	r3, #48	; 0x30
  403daa:	3802      	subs	r0, #2
  403dac:	b2db      	uxtb	r3, r3
  403dae:	4284      	cmp	r4, r0
  403db0:	f802 3c01 	strb.w	r3, [r2, #-1]
  403db4:	f240 81fa 	bls.w	4041ac <.LBB76>
  403db8:	f10d 007a 	add.w	r0, sp, #122	; 0x7a

00403dbc <.LVL570>:
  403dbc:	4611      	mov	r1, r2

00403dbe <.LVL571>:
  403dbe:	e007      	b.n	403dd0 <.LVL573>
  403dc0:	0040a2bc 	.word	0x0040a2bc
  403dc4:	0040a28c 	.word	0x0040a28c
  403dc8:	66666667 	.word	0x66666667

00403dcc <.LVL572>:
  403dcc:	f811 3b01 	ldrb.w	r3, [r1], #1

00403dd0 <.LVL573>:
  403dd0:	f800 3b01 	strb.w	r3, [r0], #1

00403dd4 <.LVL574>:
  403dd4:	428c      	cmp	r4, r1
  403dd6:	d1f9      	bne.n	403dcc <.LVL572>
  403dd8:	3401      	adds	r4, #1
  403dda:	1aa2      	subs	r2, r4, r2

00403ddc <.LVL575>:
  403ddc:	f10d 037a 	add.w	r3, sp, #122	; 0x7a
  403de0:	441a      	add	r2, r3

00403de2 <.LVL576>:
  403de2:	ab1e      	add	r3, sp, #120	; 0x78

00403de4 <.LVL577>:
  403de4:	1ad3      	subs	r3, r2, r3

00403de6 <.LBE59>:
  403de6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c

00403de8 <.LBB60>:
  403de8:	9319      	str	r3, [sp, #100]	; 0x64

00403dea <.LBE60>:
  403dea:	2a01      	cmp	r2, #1
  403dec:	4413      	add	r3, r2
  403dee:	9308      	str	r3, [sp, #32]

00403df0 <.LVL581>:
  403df0:	f340 81ad 	ble.w	40414e <.LBE72>
  403df4:	9b08      	ldr	r3, [sp, #32]

00403df6 <.LVL582>:
  403df6:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403df8:	4413      	add	r3, r2
  403dfa:	9308      	str	r3, [sp, #32]
  403dfc:	2300      	movs	r3, #0
  403dfe:	9313      	str	r3, [sp, #76]	; 0x4c
  403e00:	9310      	str	r3, [sp, #64]	; 0x40
  403e02:	930e      	str	r3, [sp, #56]	; 0x38
  403e04:	9b08      	ldr	r3, [sp, #32]
  403e06:	f42e 6e80 	bic.w	lr, lr, #1024	; 0x400
  403e0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403e0e:	f44e 7880 	orr.w	r8, lr, #256	; 0x100

00403e12 <.LVL584>:
  403e12:	9302      	str	r3, [sp, #8]
  403e14:	e605      	b.n	403a22 <.LVL466>

00403e16 <.LBB23>:
  403e16:	aa22      	add	r2, sp, #136	; 0x88
  403e18:	9905      	ldr	r1, [sp, #20]
  403e1a:	4658      	mov	r0, fp
  403e1c:	f004 faf0 	bl	408400 <__ssprint_r>

00403e20 <.LVL586>:
  403e20:	2800      	cmp	r0, #0
  403e22:	f47e ae59 	bne.w	402ad8 <.L189>
  403e26:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403e28 <.LVL587>:
  403e28:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403e2c <.LVL588>:
  403e2c:	f7ff bb29 	b.w	403482 <.LVL300>

00403e30 <.LBE23>:
  403e30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403e32:	6813      	ldr	r3, [r2, #0]
  403e34:	3204      	adds	r2, #4

00403e36 <.LVL590>:
  403e36:	920a      	str	r2, [sp, #40]	; 0x28
  403e38:	f8bd 200c 	ldrh.w	r2, [sp, #12]

00403e3c <.LVL591>:
  403e3c:	801a      	strh	r2, [r3, #0]
  403e3e:	463e      	mov	r6, r7

00403e40 <.LVL592>:
  403e40:	f7fe bd81 	b.w	402946 <.LVL10>

00403e44 <.LVL593>:
  403e44:	9b04      	ldr	r3, [sp, #16]
  403e46:	9613      	str	r6, [sp, #76]	; 0x4c
  403e48:	2b06      	cmp	r3, #6
  403e4a:	bf28      	it	cs
  403e4c:	2306      	movcs	r3, #6
  403e4e:	4632      	mov	r2, r6
  403e50:	9604      	str	r6, [sp, #16]
  403e52:	9610      	str	r6, [sp, #64]	; 0x40
  403e54:	960e      	str	r6, [sp, #56]	; 0x38
  403e56:	9609      	str	r6, [sp, #36]	; 0x24
  403e58:	9302      	str	r3, [sp, #8]

00403e5a <.LVL594>:
  403e5a:	950a      	str	r5, [sp, #40]	; 0x28
  403e5c:	9308      	str	r3, [sp, #32]
  403e5e:	4eae      	ldr	r6, [pc, #696]	; (404118 <.LVL671+0x2>)
  403e60:	f7fe beaf 	b.w	402bc2 <.L59>

00403e64 <.LVL595>:
  403e64:	222d      	movs	r2, #45	; 0x2d
  403e66:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
  403e6a:	f7ff b90d 	b.w	403088 <.LVL189+0x20>
  403e6e:	2330      	movs	r3, #48	; 0x30
  403e70:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  403e74:	2378      	movs	r3, #120	; 0x78
  403e76:	e6c1      	b.n	403bfc <.LVL523+0x8>

00403e78 <.LVL596>:
  403e78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e7a:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403e7c:	4413      	add	r3, r2
  403e7e:	9308      	str	r3, [sp, #32]

00403e80 <.LVL597>:
  403e80:	9b0e      	ldr	r3, [sp, #56]	; 0x38

00403e82 <.LVL598>:
  403e82:	2b00      	cmp	r3, #0
  403e84:	f340 814e 	ble.w	404124 <.LBE71>
  403e88:	2367      	movs	r3, #103	; 0x67
  403e8a:	930d      	str	r3, [sp, #52]	; 0x34

00403e8c <.LVL599>:
  403e8c:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  403e90:	f47f ada3 	bne.w	4039da <.LVL457>
  403e94:	9b08      	ldr	r3, [sp, #32]
  403e96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403e9a:	9302      	str	r3, [sp, #8]

00403e9c <.LVL600>:
  403e9c:	2300      	movs	r3, #0
  403e9e:	9313      	str	r3, [sp, #76]	; 0x4c
  403ea0:	9310      	str	r3, [sp, #64]	; 0x40
  403ea2:	e5be      	b.n	403a22 <.LVL466>

00403ea4 <.LBB62>:
  403ea4:	9309      	str	r3, [sp, #36]	; 0x24

00403ea6 <.LVL602>:
  403ea6:	232d      	movs	r3, #45	; 0x2d
  403ea8:	9306      	str	r3, [sp, #24]
  403eaa:	eeb1 ab48 	vneg.f64	d10, d8

00403eae <.LVL603>:
  403eae:	e6c0      	b.n	403c32 <.LVL527>

00403eb0 <.LVL604>:
  403eb0:	9120      	str	r1, [sp, #128]	; 0x80
  403eb2:	f812 0c01 	ldrb.w	r0, [r2, #-1]

00403eb6 <.LVL605>:
  403eb6:	7be3      	ldrb	r3, [r4, #15]
  403eb8:	4283      	cmp	r3, r0
  403eba:	f040 8150 	bne.w	40415e <.LBB74>
  403ebe:	4613      	mov	r3, r2
  403ec0:	f04f 0e30 	mov.w	lr, #48	; 0x30
  403ec4:	f803 ec01 	strb.w	lr, [r3, #-1]
  403ec8:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403eca:	1e59      	subs	r1, r3, #1
  403ecc:	9120      	str	r1, [sp, #128]	; 0x80
  403ece:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  403ed2:	4281      	cmp	r1, r0
  403ed4:	d0f6      	beq.n	403ec4 <.LVL605+0xe>
  403ed6:	2939      	cmp	r1, #57	; 0x39
  403ed8:	bf16      	itet	ne
  403eda:	3101      	addne	r1, #1
  403edc:	7aa1      	ldrbeq	r1, [r4, #10]
  403ede:	b2c9      	uxtbne	r1, r1
  403ee0:	f803 1c01 	strb.w	r1, [r3, #-1]
  403ee4:	e6f9      	b.n	403cda <.LVL541>

00403ee6 <.LBB63>:
  403ee6:	9b04      	ldr	r3, [sp, #16]
  403ee8:	9302      	str	r3, [sp, #8]
  403eea:	9308      	str	r3, [sp, #32]

00403eec <.LBE63>:
  403eec:	9004      	str	r0, [sp, #16]
  403eee:	950a      	str	r5, [sp, #40]	; 0x28
  403ef0:	9013      	str	r0, [sp, #76]	; 0x4c
  403ef2:	9010      	str	r0, [sp, #64]	; 0x40
  403ef4:	900e      	str	r0, [sp, #56]	; 0x38
  403ef6:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403efa:	f7fe be62 	b.w	402bc2 <.L59>

00403efe <.LVL607>:
  403efe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  403f00:	930e      	str	r3, [sp, #56]	; 0x38
  403f02:	2b00      	cmp	r3, #0
  403f04:	9b04      	ldr	r3, [sp, #16]
  403f06:	f340 812d 	ble.w	404164 <.LBE74>

00403f0a <.LVL608>:
  403f0a:	2b00      	cmp	r3, #0
  403f0c:	f040 80ec 	bne.w	4040e8 <.LVL665>
  403f10:	f01e 0f01 	tst.w	lr, #1
  403f14:	f040 80e8 	bne.w	4040e8 <.LVL665>
  403f18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403f1a:	9308      	str	r3, [sp, #32]
  403f1c:	2366      	movs	r3, #102	; 0x66
  403f1e:	930d      	str	r3, [sp, #52]	; 0x34
  403f20:	e7b4      	b.n	403e8c <.LVL599>

00403f22 <.LBB64>:
  403f22:	9c04      	ldr	r4, [sp, #16]
  403f24:	eeb0 0b4a 	vmov.f64	d0, d10
  403f28:	aa20      	add	r2, sp, #128	; 0x80

00403f2a <.LVL610>:
  403f2a:	ab1d      	add	r3, sp, #116	; 0x74
  403f2c:	9201      	str	r2, [sp, #4]
  403f2e:	9300      	str	r3, [sp, #0]
  403f30:	2103      	movs	r1, #3
  403f32:	ab1c      	add	r3, sp, #112	; 0x70

00403f34 <.LVL611>:
  403f34:	4622      	mov	r2, r4
  403f36:	4658      	mov	r0, fp
  403f38:	f001 f826 	bl	404f88 <_dtoa_r>

00403f3c <.LVL612>:
  403f3c:	4606      	mov	r6, r0

00403f3e <.LVL613>:
  403f3e:	1901      	adds	r1, r0, r4

00403f40 <.LVL614>:
  403f40:	7833      	ldrb	r3, [r6, #0]
  403f42:	2b30      	cmp	r3, #48	; 0x30
  403f44:	f000 80f9 	beq.w	40413a <.LBB72>
  403f48:	9c1c      	ldr	r4, [sp, #112]	; 0x70

00403f4a <.LVL615>:
  403f4a:	4421      	add	r1, r4
  403f4c:	eeb5 ab40 	vcmp.f64	d10, #0.0
  403f50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403f54:	d00b      	beq.n	403f6e <.LVL618>
  403f56:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403f58:	4299      	cmp	r1, r3
  403f5a:	f67f ad11 	bls.w	403980 <.LVL452>
  403f5e:	2030      	movs	r0, #48	; 0x30

00403f60 <.LVL617>:
  403f60:	1c5a      	adds	r2, r3, #1
  403f62:	9220      	str	r2, [sp, #128]	; 0x80
  403f64:	7018      	strb	r0, [r3, #0]
  403f66:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403f68:	4299      	cmp	r1, r3
  403f6a:	d8f9      	bhi.n	403f60 <.LVL617>
  403f6c:	e508      	b.n	403980 <.LVL452>

00403f6e <.LVL618>:
  403f6e:	460b      	mov	r3, r1
  403f70:	e506      	b.n	403980 <.LVL452>

00403f72 <.LBB24>:
  403f72:	aa22      	add	r2, sp, #136	; 0x88
  403f74:	9905      	ldr	r1, [sp, #20]
  403f76:	4658      	mov	r0, fp
  403f78:	f004 fa42 	bl	408400 <__ssprint_r>

00403f7c <.LVL620>:
  403f7c:	2800      	cmp	r0, #0
  403f7e:	f47e adab 	bne.w	402ad8 <.L189>
  403f82:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  403f84:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403f86:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403f88 <.LVL621>:
  403f88:	1a8a      	subs	r2, r1, r2
  403f8a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403f8e <.LVL622>:
  403f8e:	e436      	b.n	4037fe <.LVL409>

00403f90 <.LBE24>:
  403f90:	424c      	negs	r4, r1
  403f92:	3110      	adds	r1, #16

00403f94 <.LVL624>:
  403f94:	da5d      	bge.n	404052 <.LVL651>
  403f96:	2510      	movs	r5, #16
  403f98:	e004      	b.n	403fa4 <.LVL626+0x6>

00403f9a <.LVL625>:
  403f9a:	f109 0908 	add.w	r9, r9, #8

00403f9e <.LVL626>:
  403f9e:	3c10      	subs	r4, #16
  403fa0:	2c10      	cmp	r4, #16
  403fa2:	dd56      	ble.n	404052 <.LVL651>
  403fa4:	3201      	adds	r2, #1
  403fa6:	3310      	adds	r3, #16
  403fa8:	2a07      	cmp	r2, #7
  403faa:	9324      	str	r3, [sp, #144]	; 0x90

00403fac <.LVL629>:
  403fac:	9223      	str	r2, [sp, #140]	; 0x8c
  403fae:	f8c9 a000 	str.w	sl, [r9]
  403fb2:	f8c9 5004 	str.w	r5, [r9, #4]
  403fb6:	ddf0      	ble.n	403f9a <.LVL625>
  403fb8:	aa22      	add	r2, sp, #136	; 0x88
  403fba:	9905      	ldr	r1, [sp, #20]
  403fbc:	4658      	mov	r0, fp
  403fbe:	f004 fa1f 	bl	408400 <__ssprint_r>

00403fc2 <.LVL630>:
  403fc2:	2800      	cmp	r0, #0
  403fc4:	f47e ad88 	bne.w	402ad8 <.L189>
  403fc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403fcc:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403fd0 <.LVL631>:
  403fd0:	e7e5      	b.n	403f9e <.LVL626>

00403fd2 <.LVL632>:
  403fd2:	aa22      	add	r2, sp, #136	; 0x88
  403fd4:	9905      	ldr	r1, [sp, #20]
  403fd6:	4658      	mov	r0, fp
  403fd8:	f004 fa12 	bl	408400 <__ssprint_r>

00403fdc <.LVL633>:
  403fdc:	2800      	cmp	r0, #0
  403fde:	f47e ad7b 	bne.w	402ad8 <.L189>
  403fe2:	991c      	ldr	r1, [sp, #112]	; 0x70
  403fe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fe6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403fe8:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403fec <.LVL634>:
  403fec:	e589      	b.n	403b02 <.LVL494>

00403fee <.LVL635>:
  403fee:	9b08      	ldr	r3, [sp, #32]
  403ff0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403ff4:	9302      	str	r3, [sp, #8]

00403ff6 <.LVL636>:
  403ff6:	2367      	movs	r3, #103	; 0x67
  403ff8:	930d      	str	r3, [sp, #52]	; 0x34
  403ffa:	e74f      	b.n	403e9c <.LVL600>

00403ffc <.LVL637>:
  403ffc:	2200      	movs	r2, #0
  403ffe:	9204      	str	r2, [sp, #16]
  404000:	f7fe bcd2 	b.w	4029a8 <.LVL22+0x2>

00404004 <.LBB66>:
  404004:	1931      	adds	r1, r6, r4

00404006 <.LVL639>:
  404006:	e7a1      	b.n	403f4c <.LVL615+0x2>

00404008 <.LBB67>:
  404008:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40400a:	320f      	adds	r2, #15
  40400c:	b2d2      	uxtb	r2, r2
  40400e:	2101      	movs	r1, #1
  404010:	e6a4      	b.n	403d5c <.LVL560>

00404012 <.LBB68>:
  404012:	eeb0 0b4a 	vmov.f64	d0, d10
  404016:	a81c      	add	r0, sp, #112	; 0x70

00404018 <.LVL642>:
  404018:	f005 fcba 	bl	409990 <.LFE19>

0040401c <.LVL643>:
  40401c:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
  404020:	ee20 0b07 	vmul.f64	d0, d0, d7

00404024 <.LVL644>:
  404024:	eeb5 0b40 	vcmp.f64	d0, #0.0
  404028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40402c:	f000 80af 	beq.w	40418e <.LBB75>
  404030:	4c3a      	ldr	r4, [pc, #232]	; (40411c <.LVL671+0x6>)
  404032:	e616      	b.n	403c62 <.LVL531>

00404034 <.LBB69>:
  404034:	2900      	cmp	r1, #0
  404036:	f040 808f 	bne.w	404158 <.LBB73>

0040403a <.LVL646>:
  40403a:	2230      	movs	r2, #48	; 0x30
  40403c:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
  404040:	f10d 027b 	add.w	r2, sp, #123	; 0x7b

00404044 <.LVL647>:
  404044:	3330      	adds	r3, #48	; 0x30

00404046 <.LVL648>:
  404046:	7013      	strb	r3, [r2, #0]
  404048:	3201      	adds	r2, #1
  40404a:	e6ca      	b.n	403de2 <.LVL576>

0040404c <.LBE69>:
  40404c:	2306      	movs	r3, #6
  40404e:	9304      	str	r3, [sp, #16]
  404050:	e466      	b.n	403920 <.LBB28>

00404052 <.LVL651>:
  404052:	3201      	adds	r2, #1
  404054:	4423      	add	r3, r4
  404056:	2a07      	cmp	r2, #7
  404058:	f8c9 a000 	str.w	sl, [r9]
  40405c:	f8c9 4004 	str.w	r4, [r9, #4]
  404060:	9324      	str	r3, [sp, #144]	; 0x90
  404062:	9223      	str	r2, [sp, #140]	; 0x8c
  404064:	f109 0908 	add.w	r9, r9, #8
  404068:	f77f ad4e 	ble.w	403b08 <.LVL495>
  40406c:	aa22      	add	r2, sp, #136	; 0x88
  40406e:	9905      	ldr	r1, [sp, #20]
  404070:	4658      	mov	r0, fp
  404072:	f004 f9c5 	bl	408400 <__ssprint_r>

00404076 <.LVL653>:
  404076:	2800      	cmp	r0, #0
  404078:	f47e ad2e 	bne.w	402ad8 <.L189>
  40407c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40407e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  404080:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00404084 <.LVL654>:
  404084:	e540      	b.n	403b08 <.LVL495>

00404086 <.LVL655>:
  404086:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404088:	9308      	str	r3, [sp, #32]
  40408a:	e49c      	b.n	4039c6 <.LVL456>

0040408c <.LVL656>:
  40408c:	1c59      	adds	r1, r3, #1
  40408e:	4658      	mov	r0, fp
  404090:	f002 f910 	bl	4062b4 <.LFE14>

00404094 <.LVL657>:
  404094:	4606      	mov	r6, r0

00404096 <.LVL658>:
  404096:	2800      	cmp	r0, #0
  404098:	f000 8096 	beq.w	4041c8 <.LVL695>
  40409c:	9009      	str	r0, [sp, #36]	; 0x24
  40409e:	e5b8      	b.n	403c12 <.LBB48>

004040a0 <.LBB70>:
  4040a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4040a2:	2b47      	cmp	r3, #71	; 0x47
  4040a4:	d1ae      	bne.n	404004 <.LBB66>
  4040a6:	f018 0f01 	tst.w	r8, #1
  4040aa:	f43f ac68 	beq.w	40397e <.LVL451>
  4040ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4040b0:	2b46      	cmp	r3, #70	; 0x46
  4040b2:	eb06 0104 	add.w	r1, r6, r4

004040b6 <.LVL660>:
  4040b6:	f43f af43 	beq.w	403f40 <.LVL614>
  4040ba:	e747      	b.n	403f4c <.LVL615+0x2>

004040bc <.LBE70>:
  4040bc:	4e18      	ldr	r6, [pc, #96]	; (404120 <.LVL671+0xa>)

004040be <.LVL662>:
  4040be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  4040c0:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  4040c4:	2300      	movs	r3, #0
  4040c6:	4619      	mov	r1, r3
  4040c8:	2003      	movs	r0, #3
  4040ca:	9309      	str	r3, [sp, #36]	; 0x24
  4040cc:	1f33      	subs	r3, r6, #4
  4040ce:	9104      	str	r1, [sp, #16]
  4040d0:	9002      	str	r0, [sp, #8]
  4040d2:	f028 0880 	bic.w	r8, r8, #128	; 0x80

004040d6 <.LVL663>:
  4040d6:	2c47      	cmp	r4, #71	; 0x47
  4040d8:	bfd8      	it	le
  4040da:	461e      	movle	r6, r3

004040dc <.LVL664>:
  4040dc:	9113      	str	r1, [sp, #76]	; 0x4c
  4040de:	9110      	str	r1, [sp, #64]	; 0x40
  4040e0:	910e      	str	r1, [sp, #56]	; 0x38
  4040e2:	9008      	str	r0, [sp, #32]
  4040e4:	f7fe bd6d 	b.w	402bc2 <.L59>

004040e8 <.LVL665>:
  4040e8:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4040ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4040ec:	4413      	add	r3, r2
  4040ee:	9a04      	ldr	r2, [sp, #16]
  4040f0:	441a      	add	r2, r3
  4040f2:	2366      	movs	r3, #102	; 0x66
  4040f4:	9208      	str	r2, [sp, #32]

004040f6 <.LVL666>:
  4040f6:	930d      	str	r3, [sp, #52]	; 0x34
  4040f8:	e6c8      	b.n	403e8c <.LVL599>

004040fa <.LBB71>:
  4040fa:	9c04      	ldr	r4, [sp, #16]
  4040fc:	eeb0 0b4a 	vmov.f64	d0, d10
  404100:	aa20      	add	r2, sp, #128	; 0x80

00404102 <.LVL668>:
  404102:	ab1d      	add	r3, sp, #116	; 0x74
  404104:	9201      	str	r2, [sp, #4]
  404106:	9300      	str	r3, [sp, #0]
  404108:	4622      	mov	r2, r4
  40410a:	ab1c      	add	r3, sp, #112	; 0x70

0040410c <.LVL669>:
  40410c:	2103      	movs	r1, #3
  40410e:	4658      	mov	r0, fp
  404110:	f000 ff3a 	bl	404f88 <_dtoa_r>

00404114 <.LVL670>:
  404114:	4606      	mov	r6, r0

00404116 <.LVL671>:
  404116:	e7ca      	b.n	4040ae <.LBB70+0xe>
  404118:	0040a2b4 	.word	0x0040a2b4
  40411c:	0040a2a0 	.word	0x0040a2a0
  404120:	0040a288 	.word	0x0040a288

00404124 <.LBE71>:
  404124:	9a08      	ldr	r2, [sp, #32]
  404126:	f1c3 0301 	rsb	r3, r3, #1
  40412a:	441a      	add	r2, r3
  40412c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404130:	9302      	str	r3, [sp, #8]

00404132 <.LVL673>:
  404132:	2367      	movs	r3, #103	; 0x67
  404134:	9208      	str	r2, [sp, #32]

00404136 <.LVL674>:
  404136:	930d      	str	r3, [sp, #52]	; 0x34
  404138:	e6b0      	b.n	403e9c <.LVL600>

0040413a <.LBB72>:
  40413a:	eeb5 ab40 	vcmp.f64	d10, #0.0
  40413e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  404142:	f43f af01 	beq.w	403f48 <.LVL614+0x8>
  404146:	f1c4 0401 	rsb	r4, r4, #1

0040414a <.LVL676>:
  40414a:	941c      	str	r4, [sp, #112]	; 0x70
  40414c:	e6fd      	b.n	403f4a <.LVL615>

0040414e <.LBE72>:
  40414e:	f01e 0f01 	tst.w	lr, #1
  404152:	f43f ae53 	beq.w	403dfc <.LVL582+0x6>
  404156:	e64d      	b.n	403df4 <.LVL581+0x4>

00404158 <.LBB73>:
  404158:	f10d 027a 	add.w	r2, sp, #122	; 0x7a

0040415c <.LVL679>:
  40415c:	e772      	b.n	404044 <.LVL647>

0040415e <.LBB74>:
  40415e:	4601      	mov	r1, r0
  404160:	4613      	mov	r3, r2
  404162:	e6b8      	b.n	403ed6 <.LVL605+0x20>

00404164 <.LBE74>:
  404164:	b913      	cbnz	r3, 40416c <.LBE74+0x8>
  404166:	f01e 0f01 	tst.w	lr, #1
  40416a:	d00a      	beq.n	404182 <.LVL683>
  40416c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40416e:	9a04      	ldr	r2, [sp, #16]
  404170:	3301      	adds	r3, #1
  404172:	441a      	add	r2, r3
  404174:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404178:	9302      	str	r3, [sp, #8]

0040417a <.LVL682>:
  40417a:	2366      	movs	r3, #102	; 0x66
  40417c:	9208      	str	r2, [sp, #32]
  40417e:	930d      	str	r3, [sp, #52]	; 0x34
  404180:	e68c      	b.n	403e9c <.LVL600>

00404182 <.LVL683>:
  404182:	2301      	movs	r3, #1
  404184:	9302      	str	r3, [sp, #8]

00404186 <.LVL684>:
  404186:	9308      	str	r3, [sp, #32]

00404188 <.LVL685>:
  404188:	2366      	movs	r3, #102	; 0x66
  40418a:	930d      	str	r3, [sp, #52]	; 0x34
  40418c:	e686      	b.n	403e9c <.LVL600>

0040418e <.LBB75>:
  40418e:	2301      	movs	r3, #1
  404190:	931c      	str	r3, [sp, #112]	; 0x70
  404192:	e74d      	b.n	404030 <.LVL644+0xc>

00404194 <.LVL687>:
  404194:	980a      	ldr	r0, [sp, #40]	; 0x28
  404196:	787b      	ldrb	r3, [r7, #1]

00404198 <.LVL688>:
  404198:	6802      	ldr	r2, [r0, #0]
  40419a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
  40419e:	9204      	str	r2, [sp, #16]

004041a0 <.LBE75>:
  4041a0:	4602      	mov	r2, r0
  4041a2:	3204      	adds	r2, #4

004041a4 <.LVL689>:
  4041a4:	460f      	mov	r7, r1

004041a6 <.LVL690>:
  4041a6:	920a      	str	r2, [sp, #40]	; 0x28
  4041a8:	f7fe bbfd 	b.w	4029a6 <.LVL22>

004041ac <.LBB76>:
  4041ac:	f10d 027a 	add.w	r2, sp, #122	; 0x7a

004041b0 <.LVL692>:
  4041b0:	e617      	b.n	403de2 <.LVL576>

004041b2 <.LBE76>:
  4041b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4041b4:	230c      	movs	r3, #12
  4041b6:	6013      	str	r3, [r2, #0]
  4041b8:	f04f 33ff 	mov.w	r3, #4294967295
  4041bc:	9303      	str	r3, [sp, #12]
  4041be:	f7fe bc9b 	b.w	402af8 <.LVL45>

004041c2 <.LVL694>:
  4041c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4041c4:	930e      	str	r3, [sp, #56]	; 0x38
  4041c6:	e5bf      	b.n	403d48 <.LVL557>

004041c8 <.LVL695>:
  4041c8:	9a05      	ldr	r2, [sp, #20]
  4041ca:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4041ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4041d2:	8193      	strh	r3, [r2, #12]
  4041d4:	f7fe bc89 	b.w	402aea <.LVL44+0x6>

Disassembly of section .dinit%31:

004041d8 <.dinit>:
  4041d8:	2040dc1c 	.word	0x2040dc1c
  4041dc:	0000001c 	.word	0x0000001c
  4041e0:	00000000 	.word	0x00000000
  4041e4:	2040dc88 	.word	0x2040dc88
  4041e8:	00000008 	.word	0x00000008
  4041ec:	00000001 	.word	0x00000001
  4041f0:	00000000 	.word	0x00000000
  4041f4:	2040dbfc 	.word	0x2040dbfc
  4041f8:	2040dc98 	.word	0x2040dc98
  4041fc:	00000004 	.word	0x00000004
  404200:	00000001 	.word	0x00000001
  404204:	00000400 	.word	0x00000400
  404208:	2040dc90 	.word	0x2040dc90
  40420c:	00000008 	.word	0x00000008
  404210:	00000001 	.word	0x00000001
  404214:	2040dc38 	.word	0x2040dc38
  404218:	00000017 	.word	0x00000017
  40421c:	2040dc38 	.word	0x2040dc38
  404220:	0000001c 	.word	0x0000001c
  404224:	00000001 	.word	0x00000001
  404228:	0040ac5d 	.word	0x0040ac5d
  40422c:	0040ac39 	.word	0x0040ac39
  404230:	0040ac8d 	.word	0x0040ac8d
  404234:	0040ac45 	.word	0x0040ac45
  404238:	0040ac21 	.word	0x0040ac21
  40423c:	0040ac2d 	.word	0x0040ac2d
  404240:	0040ac51 	.word	0x0040ac51
  404244:	20400000 	.word	0x20400000
  404248:	0000000c 	.word	0x0000000c
  40424c:	00000000 	.word	0x00000000
  404250:	2040dc9c 	.word	0x2040dc9c
  404254:	00000004 	.word	0x00000004
  404258:	00000000 	.word	0x00000000
  40425c:	20400488 	.word	0x20400488
  404260:	0000c800 	.word	0x0000c800
  404264:	00000000 	.word	0x00000000
  404268:	2040d6b8 	.word	0x2040d6b8
  40426c:	00000198 	.word	0x00000198
  404270:	00000001 	.word	0x00000001
  404274:	00010100 	.word	0x00010100
	...
  40440c:	20400040 	.word	0x20400040
  404410:	00000400 	.word	0x00000400
  404414:	00000000 	.word	0x00000000
  404418:	2040dc7c 	.word	0x2040dc7c
  40441c:	0000000c 	.word	0x0000000c
  404420:	00000000 	.word	0x00000000
  404424:	2040dafc 	.word	0x2040dafc
  404428:	00000050 	.word	0x00000050
  40442c:	00000000 	.word	0x00000000
  404430:	2040d4b8 	.word	0x2040d4b8
  404434:	00000200 	.word	0x00000200
  404438:	00000000 	.word	0x00000000
  40443c:	2040db4c 	.word	0x2040db4c
  404440:	00000050 	.word	0x00000050
  404444:	00000001 	.word	0x00000001
	...
  40448c:	00000101 	.word	0x00000101
	...
  404498:	2040dbfc 	.word	0x2040dbfc
  40449c:	00000020 	.word	0x00000020
  4044a0:	00000001 	.word	0x00000001
  4044a4:	00000300 	.word	0x00000300
  4044a8:	0040a809 	.word	0x0040a809
  4044ac:	00409f39 	.word	0x00409f39
  4044b0:	0040a039 	.word	0x0040a039
  4044b4:	0040aa15 	.word	0x0040aa15
  4044b8:	004079e1 	.word	0x004079e1
  4044bc:	0040a165 	.word	0x0040a165
  4044c0:	0040a381 	.word	0x0040a381
  4044c4:	2040dc54 	.word	0x2040dc54
  4044c8:	00000014 	.word	0x00000014
  4044cc:	00000001 	.word	0x00000001
	...
  4044dc:	2040dafc 	.word	0x2040dafc
  4044e0:	0000000a 	.word	0x0000000a
  4044e4:	2040dc68 	.word	0x2040dc68
  4044e8:	00000014 	.word	0x00000014
  4044ec:	00000001 	.word	0x00000001
	...
  4044fc:	2040d4b8 	.word	0x2040d4b8
  404500:	00000040 	.word	0x00000040
  404504:	20400440 	.word	0x20400440
  404508:	00000009 	.word	0x00000009
  40450c:	00000000 	.word	0x00000000
  404510:	2040db9c 	.word	0x2040db9c
  404514:	00000038 	.word	0x00000038
  404518:	00000000 	.word	0x00000000
  40451c:	2040d9bc 	.word	0x2040d9bc
  404520:	00000140 	.word	0x00000140
  404524:	00000000 	.word	0x00000000
  404528:	2040044c 	.word	0x2040044c
  40452c:	00000008 	.word	0x00000008
  404530:	00000000 	.word	0x00000000
  404534:	20400454 	.word	0x20400454
  404538:	00000030 	.word	0x00000030
  40453c:	00000000 	.word	0x00000000
  404540:	2040dca0 	.word	0x2040dca0
  404544:	00000004 	.word	0x00000004
  404548:	00000001 	.word	0x00000001
  40454c:	2040cc88 	.word	0x2040cc88
  404550:	2040cc88 	.word	0x2040cc88
  404554:	00000428 	.word	0x00000428
  404558:	00000001 	.word	0x00000001
  40455c:	00000000 	.word	0x00000000
  404560:	2040cf74 	.word	0x2040cf74
  404564:	2040cfdc 	.word	0x2040cfdc
  404568:	2040d044 	.word	0x2040d044
	...
  404604:	00000001 	.word	0x00000001
  404608:	00000000 	.word	0x00000000
  40460c:	abcd330e 	.word	0xabcd330e
  404610:	e66d1234 	.word	0xe66d1234
  404614:	0005deec 	.word	0x0005deec
  404618:	0000000b 	.word	0x0000000b
	...
  404984:	2040d850 	.word	0x2040d850
  404988:	0000016c 	.word	0x0000016c
  40498c:	00000001 	.word	0x00000001
  404990:	00000043 	.word	0x00000043
	...
  4049b0:	00000043 	.word	0x00000043
	...
  4049d0:	00000043 	.word	0x00000043
	...
  4049f0:	00000043 	.word	0x00000043
	...
  404a10:	00000043 	.word	0x00000043
	...
  404a30:	00000043 	.word	0x00000043
	...
  404a50:	00000043 	.word	0x00000043
	...
  404a70:	0040a8bd 	.word	0x0040a8bd
  404a74:	0040a715 	.word	0x0040a715
  404a78:	00000000 	.word	0x00000000
  404a7c:	004082fc 	.word	0x004082fc
  404a80:	0040aa98 	.word	0x0040aa98
  404a84:	0040aa94 	.word	0x0040aa94
  404a88:	0040aa94 	.word	0x0040aa94
  404a8c:	0040aa94 	.word	0x0040aa94
  404a90:	0040aa94 	.word	0x0040aa94
  404a94:	0040aa94 	.word	0x0040aa94
  404a98:	0040aa94 	.word	0x0040aa94
  404a9c:	0040aa94 	.word	0x0040aa94
  404aa0:	0040aa94 	.word	0x0040aa94
  404aa4:	0040aa94 	.word	0x0040aa94
  404aa8:	ffffffff 	.word	0xffffffff
  404aac:	ffffffff 	.word	0xffffffff
  404ab0:	ffffffff 	.word	0xffffffff
  404ab4:	0000ffff 	.word	0x0000ffff
  404ab8:	53410001 	.word	0x53410001
  404abc:	00494943 	.word	0x00494943
	...
  404ad8:	53410000 	.word	0x53410000
  404adc:	00494943 	.word	0x00494943
	...
  404afc:	2040dbd4 	.word	0x2040dbd4
  404b00:	00000028 	.word	0x00000028
  404b04:	00000000 	.word	0x00000000
  404b08:	2040dca4 	.word	0x2040dca4
  404b0c:	00000004 	.word	0x00000004
  404b10:	00000000 	.word	0x00000000
  404b14:	2040dca8 	.word	0x2040dca8
  404b18:	00000004 	.word	0x00000004
  404b1c:	00000000 	.word	0x00000000
  404b20:	2040dcac 	.word	0x2040dcac
  404b24:	00000004 	.word	0x00000004
  404b28:	00000000 	.word	0x00000000
  404b2c:	2040d0b0 	.word	0x2040d0b0
  404b30:	00000408 	.word	0x00000408
  404b34:	00000001 	.word	0x00000001
	...
  404b40:	2040d0b0 	.word	0x2040d0b0
  404b44:	2040d0b0 	.word	0x2040d0b0
  404b48:	2040d0b8 	.word	0x2040d0b8
  404b4c:	2040d0b8 	.word	0x2040d0b8
  404b50:	2040d0c0 	.word	0x2040d0c0
  404b54:	2040d0c0 	.word	0x2040d0c0
  404b58:	2040d0c8 	.word	0x2040d0c8
  404b5c:	2040d0c8 	.word	0x2040d0c8
  404b60:	2040d0d0 	.word	0x2040d0d0
  404b64:	2040d0d0 	.word	0x2040d0d0
  404b68:	2040d0d8 	.word	0x2040d0d8
  404b6c:	2040d0d8 	.word	0x2040d0d8
  404b70:	2040d0e0 	.word	0x2040d0e0
  404b74:	2040d0e0 	.word	0x2040d0e0
  404b78:	2040d0e8 	.word	0x2040d0e8
  404b7c:	2040d0e8 	.word	0x2040d0e8
  404b80:	2040d0f0 	.word	0x2040d0f0
  404b84:	2040d0f0 	.word	0x2040d0f0
  404b88:	2040d0f8 	.word	0x2040d0f8
  404b8c:	2040d0f8 	.word	0x2040d0f8
  404b90:	2040d100 	.word	0x2040d100
  404b94:	2040d100 	.word	0x2040d100
  404b98:	2040d108 	.word	0x2040d108
  404b9c:	2040d108 	.word	0x2040d108
  404ba0:	2040d110 	.word	0x2040d110
  404ba4:	2040d110 	.word	0x2040d110
  404ba8:	2040d118 	.word	0x2040d118
  404bac:	2040d118 	.word	0x2040d118
  404bb0:	2040d120 	.word	0x2040d120
  404bb4:	2040d120 	.word	0x2040d120
  404bb8:	2040d128 	.word	0x2040d128
  404bbc:	2040d128 	.word	0x2040d128
  404bc0:	2040d130 	.word	0x2040d130
  404bc4:	2040d130 	.word	0x2040d130
  404bc8:	2040d138 	.word	0x2040d138
  404bcc:	2040d138 	.word	0x2040d138
  404bd0:	2040d140 	.word	0x2040d140
  404bd4:	2040d140 	.word	0x2040d140
  404bd8:	2040d148 	.word	0x2040d148
  404bdc:	2040d148 	.word	0x2040d148
  404be0:	2040d150 	.word	0x2040d150
  404be4:	2040d150 	.word	0x2040d150
  404be8:	2040d158 	.word	0x2040d158
  404bec:	2040d158 	.word	0x2040d158
  404bf0:	2040d160 	.word	0x2040d160
  404bf4:	2040d160 	.word	0x2040d160
  404bf8:	2040d168 	.word	0x2040d168
  404bfc:	2040d168 	.word	0x2040d168
  404c00:	2040d170 	.word	0x2040d170
  404c04:	2040d170 	.word	0x2040d170
  404c08:	2040d178 	.word	0x2040d178
  404c0c:	2040d178 	.word	0x2040d178
  404c10:	2040d180 	.word	0x2040d180
  404c14:	2040d180 	.word	0x2040d180
  404c18:	2040d188 	.word	0x2040d188
  404c1c:	2040d188 	.word	0x2040d188
  404c20:	2040d190 	.word	0x2040d190
  404c24:	2040d190 	.word	0x2040d190
  404c28:	2040d198 	.word	0x2040d198
  404c2c:	2040d198 	.word	0x2040d198
  404c30:	2040d1a0 	.word	0x2040d1a0
  404c34:	2040d1a0 	.word	0x2040d1a0
  404c38:	2040d1a8 	.word	0x2040d1a8
  404c3c:	2040d1a8 	.word	0x2040d1a8
  404c40:	2040d1b0 	.word	0x2040d1b0
  404c44:	2040d1b0 	.word	0x2040d1b0
  404c48:	2040d1b8 	.word	0x2040d1b8
  404c4c:	2040d1b8 	.word	0x2040d1b8
  404c50:	2040d1c0 	.word	0x2040d1c0
  404c54:	2040d1c0 	.word	0x2040d1c0
  404c58:	2040d1c8 	.word	0x2040d1c8
  404c5c:	2040d1c8 	.word	0x2040d1c8
  404c60:	2040d1d0 	.word	0x2040d1d0
  404c64:	2040d1d0 	.word	0x2040d1d0
  404c68:	2040d1d8 	.word	0x2040d1d8
  404c6c:	2040d1d8 	.word	0x2040d1d8
  404c70:	2040d1e0 	.word	0x2040d1e0
  404c74:	2040d1e0 	.word	0x2040d1e0
  404c78:	2040d1e8 	.word	0x2040d1e8
  404c7c:	2040d1e8 	.word	0x2040d1e8
  404c80:	2040d1f0 	.word	0x2040d1f0
  404c84:	2040d1f0 	.word	0x2040d1f0
  404c88:	2040d1f8 	.word	0x2040d1f8
  404c8c:	2040d1f8 	.word	0x2040d1f8
  404c90:	2040d200 	.word	0x2040d200
  404c94:	2040d200 	.word	0x2040d200
  404c98:	2040d208 	.word	0x2040d208
  404c9c:	2040d208 	.word	0x2040d208
  404ca0:	2040d210 	.word	0x2040d210
  404ca4:	2040d210 	.word	0x2040d210
  404ca8:	2040d218 	.word	0x2040d218
  404cac:	2040d218 	.word	0x2040d218
  404cb0:	2040d220 	.word	0x2040d220
  404cb4:	2040d220 	.word	0x2040d220
  404cb8:	2040d228 	.word	0x2040d228
  404cbc:	2040d228 	.word	0x2040d228
  404cc0:	2040d230 	.word	0x2040d230
  404cc4:	2040d230 	.word	0x2040d230
  404cc8:	2040d238 	.word	0x2040d238
  404ccc:	2040d238 	.word	0x2040d238
  404cd0:	2040d240 	.word	0x2040d240
  404cd4:	2040d240 	.word	0x2040d240
  404cd8:	2040d248 	.word	0x2040d248
  404cdc:	2040d248 	.word	0x2040d248
  404ce0:	2040d250 	.word	0x2040d250
  404ce4:	2040d250 	.word	0x2040d250
  404ce8:	2040d258 	.word	0x2040d258
  404cec:	2040d258 	.word	0x2040d258
  404cf0:	2040d260 	.word	0x2040d260
  404cf4:	2040d260 	.word	0x2040d260
  404cf8:	2040d268 	.word	0x2040d268
  404cfc:	2040d268 	.word	0x2040d268
  404d00:	2040d270 	.word	0x2040d270
  404d04:	2040d270 	.word	0x2040d270
  404d08:	2040d278 	.word	0x2040d278
  404d0c:	2040d278 	.word	0x2040d278
  404d10:	2040d280 	.word	0x2040d280
  404d14:	2040d280 	.word	0x2040d280
  404d18:	2040d288 	.word	0x2040d288
  404d1c:	2040d288 	.word	0x2040d288
  404d20:	2040d290 	.word	0x2040d290
  404d24:	2040d290 	.word	0x2040d290
  404d28:	2040d298 	.word	0x2040d298
  404d2c:	2040d298 	.word	0x2040d298
  404d30:	2040d2a0 	.word	0x2040d2a0
  404d34:	2040d2a0 	.word	0x2040d2a0
  404d38:	2040d2a8 	.word	0x2040d2a8
  404d3c:	2040d2a8 	.word	0x2040d2a8
  404d40:	2040d2b0 	.word	0x2040d2b0
  404d44:	2040d2b0 	.word	0x2040d2b0
  404d48:	2040d2b8 	.word	0x2040d2b8
  404d4c:	2040d2b8 	.word	0x2040d2b8
  404d50:	2040d2c0 	.word	0x2040d2c0
  404d54:	2040d2c0 	.word	0x2040d2c0
  404d58:	2040d2c8 	.word	0x2040d2c8
  404d5c:	2040d2c8 	.word	0x2040d2c8
  404d60:	2040d2d0 	.word	0x2040d2d0
  404d64:	2040d2d0 	.word	0x2040d2d0
  404d68:	2040d2d8 	.word	0x2040d2d8
  404d6c:	2040d2d8 	.word	0x2040d2d8
  404d70:	2040d2e0 	.word	0x2040d2e0
  404d74:	2040d2e0 	.word	0x2040d2e0
  404d78:	2040d2e8 	.word	0x2040d2e8
  404d7c:	2040d2e8 	.word	0x2040d2e8
  404d80:	2040d2f0 	.word	0x2040d2f0
  404d84:	2040d2f0 	.word	0x2040d2f0
  404d88:	2040d2f8 	.word	0x2040d2f8
  404d8c:	2040d2f8 	.word	0x2040d2f8
  404d90:	2040d300 	.word	0x2040d300
  404d94:	2040d300 	.word	0x2040d300
  404d98:	2040d308 	.word	0x2040d308
  404d9c:	2040d308 	.word	0x2040d308
  404da0:	2040d310 	.word	0x2040d310
  404da4:	2040d310 	.word	0x2040d310
  404da8:	2040d318 	.word	0x2040d318
  404dac:	2040d318 	.word	0x2040d318
  404db0:	2040d320 	.word	0x2040d320
  404db4:	2040d320 	.word	0x2040d320
  404db8:	2040d328 	.word	0x2040d328
  404dbc:	2040d328 	.word	0x2040d328
  404dc0:	2040d330 	.word	0x2040d330
  404dc4:	2040d330 	.word	0x2040d330
  404dc8:	2040d338 	.word	0x2040d338
  404dcc:	2040d338 	.word	0x2040d338
  404dd0:	2040d340 	.word	0x2040d340
  404dd4:	2040d340 	.word	0x2040d340
  404dd8:	2040d348 	.word	0x2040d348
  404ddc:	2040d348 	.word	0x2040d348
  404de0:	2040d350 	.word	0x2040d350
  404de4:	2040d350 	.word	0x2040d350
  404de8:	2040d358 	.word	0x2040d358
  404dec:	2040d358 	.word	0x2040d358
  404df0:	2040d360 	.word	0x2040d360
  404df4:	2040d360 	.word	0x2040d360
  404df8:	2040d368 	.word	0x2040d368
  404dfc:	2040d368 	.word	0x2040d368
  404e00:	2040d370 	.word	0x2040d370
  404e04:	2040d370 	.word	0x2040d370
  404e08:	2040d378 	.word	0x2040d378
  404e0c:	2040d378 	.word	0x2040d378
  404e10:	2040d380 	.word	0x2040d380
  404e14:	2040d380 	.word	0x2040d380
  404e18:	2040d388 	.word	0x2040d388
  404e1c:	2040d388 	.word	0x2040d388
  404e20:	2040d390 	.word	0x2040d390
  404e24:	2040d390 	.word	0x2040d390
  404e28:	2040d398 	.word	0x2040d398
  404e2c:	2040d398 	.word	0x2040d398
  404e30:	2040d3a0 	.word	0x2040d3a0
  404e34:	2040d3a0 	.word	0x2040d3a0
  404e38:	2040d3a8 	.word	0x2040d3a8
  404e3c:	2040d3a8 	.word	0x2040d3a8
  404e40:	2040d3b0 	.word	0x2040d3b0
  404e44:	2040d3b0 	.word	0x2040d3b0
  404e48:	2040d3b8 	.word	0x2040d3b8
  404e4c:	2040d3b8 	.word	0x2040d3b8
  404e50:	2040d3c0 	.word	0x2040d3c0
  404e54:	2040d3c0 	.word	0x2040d3c0
  404e58:	2040d3c8 	.word	0x2040d3c8
  404e5c:	2040d3c8 	.word	0x2040d3c8
  404e60:	2040d3d0 	.word	0x2040d3d0
  404e64:	2040d3d0 	.word	0x2040d3d0
  404e68:	2040d3d8 	.word	0x2040d3d8
  404e6c:	2040d3d8 	.word	0x2040d3d8
  404e70:	2040d3e0 	.word	0x2040d3e0
  404e74:	2040d3e0 	.word	0x2040d3e0
  404e78:	2040d3e8 	.word	0x2040d3e8
  404e7c:	2040d3e8 	.word	0x2040d3e8
  404e80:	2040d3f0 	.word	0x2040d3f0
  404e84:	2040d3f0 	.word	0x2040d3f0
  404e88:	2040d3f8 	.word	0x2040d3f8
  404e8c:	2040d3f8 	.word	0x2040d3f8
  404e90:	2040d400 	.word	0x2040d400
  404e94:	2040d400 	.word	0x2040d400
  404e98:	2040d408 	.word	0x2040d408
  404e9c:	2040d408 	.word	0x2040d408
  404ea0:	2040d410 	.word	0x2040d410
  404ea4:	2040d410 	.word	0x2040d410
  404ea8:	2040d418 	.word	0x2040d418
  404eac:	2040d418 	.word	0x2040d418
  404eb0:	2040d420 	.word	0x2040d420
  404eb4:	2040d420 	.word	0x2040d420
  404eb8:	2040d428 	.word	0x2040d428
  404ebc:	2040d428 	.word	0x2040d428
  404ec0:	2040d430 	.word	0x2040d430
  404ec4:	2040d430 	.word	0x2040d430
  404ec8:	2040d438 	.word	0x2040d438
  404ecc:	2040d438 	.word	0x2040d438
  404ed0:	2040d440 	.word	0x2040d440
  404ed4:	2040d440 	.word	0x2040d440
  404ed8:	2040d448 	.word	0x2040d448
  404edc:	2040d448 	.word	0x2040d448
  404ee0:	2040d450 	.word	0x2040d450
  404ee4:	2040d450 	.word	0x2040d450
  404ee8:	2040d458 	.word	0x2040d458
  404eec:	2040d458 	.word	0x2040d458
  404ef0:	2040d460 	.word	0x2040d460
  404ef4:	2040d460 	.word	0x2040d460
  404ef8:	2040d468 	.word	0x2040d468
  404efc:	2040d468 	.word	0x2040d468
  404f00:	2040d470 	.word	0x2040d470
  404f04:	2040d470 	.word	0x2040d470
  404f08:	2040d478 	.word	0x2040d478
  404f0c:	2040d478 	.word	0x2040d478
  404f10:	2040d480 	.word	0x2040d480
  404f14:	2040d480 	.word	0x2040d480
  404f18:	2040d488 	.word	0x2040d488
  404f1c:	2040d488 	.word	0x2040d488
  404f20:	2040d490 	.word	0x2040d490
  404f24:	2040d490 	.word	0x2040d490
  404f28:	2040d498 	.word	0x2040d498
  404f2c:	2040d498 	.word	0x2040d498
  404f30:	2040d4a0 	.word	0x2040d4a0
  404f34:	2040d4a0 	.word	0x2040d4a0
  404f38:	2040d4a8 	.word	0x2040d4a8
  404f3c:	2040d4a8 	.word	0x2040d4a8
  404f40:	2040dcb0 	.word	0x2040dcb0
  404f44:	00000004 	.word	0x00000004
  404f48:	00000001 	.word	0x00000001
  404f4c:	ffffffff 	.word	0xffffffff
  404f50:	2040dcb4 	.word	0x2040dcb4
  404f54:	00000004 	.word	0x00000004
  404f58:	00000001 	.word	0x00000001
  404f5c:	00020000 	.word	0x00020000
  404f60:	20400484 	.word	0x20400484
  404f64:	00000004 	.word	0x00000004
  404f68:	00000000 	.word	0x00000000
  404f6c:	2040dcb8 	.word	0x2040dcb8
  404f70:	00000004 	.word	0x00000004
	...
  404f80:	22222222 	.word	0x22222222
  404f84:	22222222 	.word	0x22222222

Disassembly of section .text._dtoa_r%32:

00404f88 <_dtoa_r>:
  404f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00404f8c <.LCFI4>:
  404f8c:	6c05      	ldr	r5, [r0, #64]	; 0x40
  404f8e:	b093      	sub	sp, #76	; 0x4c

00404f90 <.LCFI5>:
  404f90:	4604      	mov	r4, r0
  404f92:	ec5b ab10 	vmov	sl, fp, d0
  404f96:	9f1c      	ldr	r7, [sp, #112]	; 0x70
  404f98:	9101      	str	r1, [sp, #4]
  404f9a:	4691      	mov	r9, r2
  404f9c:	9304      	str	r3, [sp, #16]
  404f9e:	b14d      	cbz	r5, 404fb4 <.LVL53+0x4>
  404fa0:	6c42      	ldr	r2, [r0, #68]	; 0x44

00404fa2 <.LVL50>:
  404fa2:	606a      	str	r2, [r5, #4]
  404fa4:	2301      	movs	r3, #1

00404fa6 <.LVL51>:
  404fa6:	4093      	lsls	r3, r2
  404fa8:	60ab      	str	r3, [r5, #8]
  404faa:	4629      	mov	r1, r5

00404fac <.LVL52>:
  404fac:	f005 fd8a 	bl	40aac4 <_Bfree>

00404fb0 <.LVL53>:
  404fb0:	2300      	movs	r3, #0
  404fb2:	6423      	str	r3, [r4, #64]	; 0x40
  404fb4:	f1bb 0f00 	cmp.w	fp, #0
  404fb8:	465e      	mov	r6, fp
  404fba:	db35      	blt.n	405028 <.LVL63>
  404fbc:	2300      	movs	r3, #0
  404fbe:	603b      	str	r3, [r7, #0]
  404fc0:	4bc1      	ldr	r3, [pc, #772]	; (4052c8 <.LVL134+0x20>)
  404fc2:	43b3      	bics	r3, r6
  404fc4:	d015      	beq.n	404ff2 <.LCFI7>
  404fc6:	ec4b ab17 	vmov	d7, sl, fp
  404fca:	eeb5 7b40 	vcmp.f64	d7, #0.0
  404fce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr

00404fd2 <.LVL55>:
  404fd2:	e9cd ab02 	strd	sl, fp, [sp, #8]
  404fd6:	d12d      	bne.n	405034 <.LVL64>
  404fd8:	9a04      	ldr	r2, [sp, #16]
  404fda:	2301      	movs	r3, #1
  404fdc:	6013      	str	r3, [r2, #0]

00404fde <.LVL56>:
  404fde:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  404fe0:	2b00      	cmp	r3, #0
  404fe2:	f000 80b3 	beq.w	40514c <.LVL99>
  404fe6:	48b9      	ldr	r0, [pc, #740]	; (4052cc <.LVL134+0x24>)
  404fe8:	6018      	str	r0, [r3, #0]
  404fea:	3801      	subs	r0, #1

00404fec <.LVL57>:
  404fec:	b013      	add	sp, #76	; 0x4c

00404fee <.LCFI6>:
  404fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404ff2 <.LCFI7>:
  404ff2:	9a04      	ldr	r2, [sp, #16]
  404ff4:	f242 730f 	movw	r3, #9999	; 0x270f
  404ff8:	6013      	str	r3, [r2, #0]

00404ffa <.LVL59>:
  404ffa:	f1ba 0f00 	cmp.w	sl, #0
  404ffe:	d10d      	bne.n	40501c <.LCFI9>
  405000:	f3c6 0613 	ubfx	r6, r6, #0, #20
  405004:	b956      	cbnz	r6, 40501c <.LCFI9>

00405006 <.LVL60>:
  405006:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  405008:	48b1      	ldr	r0, [pc, #708]	; (4052d0 <.LVL134+0x28>)
  40500a:	2b00      	cmp	r3, #0
  40500c:	d0ee      	beq.n	404fec <.LVL57>
  40500e:	f100 0308 	add.w	r3, r0, #8

00405012 <.LVL61>:
  405012:	9a1d      	ldr	r2, [sp, #116]	; 0x74
  405014:	6013      	str	r3, [r2, #0]
  405016:	b013      	add	sp, #76	; 0x4c

00405018 <.LCFI8>:
  405018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040501c <.LCFI9>:
  40501c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40501e:	48ad      	ldr	r0, [pc, #692]	; (4052d4 <.LVL134+0x2c>)
  405020:	2b00      	cmp	r3, #0
  405022:	d0e3      	beq.n	404fec <.LVL57>
  405024:	1cc3      	adds	r3, r0, #3
  405026:	e7f4      	b.n	405012 <.LVL61>

00405028 <.LVL63>:
  405028:	2301      	movs	r3, #1
  40502a:	f02b 4600 	bic.w	r6, fp, #2147483648	; 0x80000000
  40502e:	603b      	str	r3, [r7, #0]
  405030:	46b3      	mov	fp, r6
  405032:	e7c5      	b.n	404fc0 <.LVL53+0x10>

00405034 <.LVL64>:
  405034:	a911      	add	r1, sp, #68	; 0x44
  405036:	aa10      	add	r2, sp, #64	; 0x40
  405038:	ed9d 0b02 	vldr	d0, [sp, #8]
  40503c:	4620      	mov	r0, r4
  40503e:	f003 fe21 	bl	408c84 <.LFE19>

00405042 <.LVL65>:
  405042:	0d31      	lsrs	r1, r6, #20
  405044:	4680      	mov	r8, r0

00405046 <.LVL66>:
  405046:	d065      	beq.n	405114 <.LVL92>
  405048:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40504c:	f3c3 0013 	ubfx	r0, r3, #0, #20

00405050 <.LVL68>:
  405050:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
  405054:	2500      	movs	r5, #0
  405056:	9810      	ldr	r0, [sp, #64]	; 0x40
  405058:	950d      	str	r5, [sp, #52]	; 0x34
  40505a:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff

0040505e <.LVL69>:
  40505e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000

00405062 <.LVL70>:
  405062:	ec43 2b17 	vmov	d7, r2, r3
  405066:	eeb7 6b08 	vmov.f64	d6, #120	; 0x3fc00000  1.5
  40506a:	ed9f 4b91 	vldr	d4, [pc, #580]	; 4052b0 <.LVL134+0x8>
  40506e:	ee37 6b46 	vsub.f64	d6, d7, d6
  405072:	ed9f 7b91 	vldr	d7, [pc, #580]	; 4052b8 <.LVL134+0x10>
  405076:	ed9f 5b92 	vldr	d5, [pc, #584]	; 4052c0 <.LVL134+0x18>
  40507a:	eea6 7b04 	vfma.f64	d7, d6, d4
  40507e:	ee06 1a90 	vmov	s13, r1
  405082:	eeb8 6be6 	vcvt.f64.s32	d6, s13
  405086:	eea6 7b05 	vfma.f64	d7, d6, d5

0040508a <.LVL71>:
  40508a:	eefd 6bc7 	vcvt.s32.f64	s13, d7
  40508e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
  405092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405096:	edcd 6a02 	vstr	s13, [sp, #8]

0040509a <.LVL72>:
  40509a:	f100 8130 	bmi.w	4052fe <.LVL143>

0040509e <.LVL73>:
  40509e:	9d02      	ldr	r5, [sp, #8]
  4050a0:	2d16      	cmp	r5, #22
  4050a2:	f200 8101 	bhi.w	4052a8 <.LVL134>
  4050a6:	4b8c      	ldr	r3, [pc, #560]	; (4052d8 <.LVL134+0x30>)
  4050a8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4050ac:	ed93 7b00 	vldr	d7, [r3]

004050b0 <.LVL74>:
  4050b0:	ec4b ab16 	vmov	d6, sl, fp
  4050b4:	eeb4 7bc6 	vcmpe.f64	d7, d6
  4050b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4050bc:	f340 8183 	ble.w	4053c6 <.LVL173>
  4050c0:	1e6b      	subs	r3, r5, #1
  4050c2:	9302      	str	r3, [sp, #8]

004050c4 <.LVL75>:
  4050c4:	2300      	movs	r3, #0

004050c6 <.LVL76>:
  4050c6:	930b      	str	r3, [sp, #44]	; 0x2c

004050c8 <.LVL77>:
  4050c8:	1a41      	subs	r1, r0, r1

004050ca <.LVL78>:
  4050ca:	1e4b      	subs	r3, r1, #1

004050cc <.LVL79>:
  4050cc:	9306      	str	r3, [sp, #24]
  4050ce:	f100 8110 	bmi.w	4052f2 <.LVL138>
  4050d2:	2300      	movs	r3, #0

004050d4 <.LVL80>:
  4050d4:	9307      	str	r3, [sp, #28]

004050d6 <.LVL81>:
  4050d6:	9b02      	ldr	r3, [sp, #8]
  4050d8:	2b00      	cmp	r3, #0
  4050da:	f2c0 8101 	blt.w	4052e0 <.LVL135>

004050de <.LVL82>:
  4050de:	9a06      	ldr	r2, [sp, #24]

004050e0 <.LVL83>:
  4050e0:	930a      	str	r3, [sp, #40]	; 0x28
  4050e2:	4611      	mov	r1, r2

004050e4 <.LVL84>:
  4050e4:	4419      	add	r1, r3
  4050e6:	2300      	movs	r3, #0

004050e8 <.LVL85>:
  4050e8:	9106      	str	r1, [sp, #24]

004050ea <.LVL86>:
  4050ea:	9305      	str	r3, [sp, #20]

004050ec <.LVL87>:
  4050ec:	9b01      	ldr	r3, [sp, #4]
  4050ee:	2b09      	cmp	r3, #9
  4050f0:	d82e      	bhi.n	405150 <.LVL100>

004050f2 <.LVL88>:
  4050f2:	2b05      	cmp	r3, #5
  4050f4:	f340 8550 	ble.w	405b98 <.LVL445>
  4050f8:	3b04      	subs	r3, #4

004050fa <.LVL89>:
  4050fa:	9301      	str	r3, [sp, #4]

004050fc <.LVL90>:
  4050fc:	2500      	movs	r5, #0

004050fe <.LVL91>:
  4050fe:	9b01      	ldr	r3, [sp, #4]
  405100:	3b02      	subs	r3, #2
  405102:	2b03      	cmp	r3, #3
  405104:	f200 8550 	bhi.w	405ba8 <.LVL447>
  405108:	e8df f013 	tbh	[pc, r3, lsl #1]
  40510c:	02860349 	.word	0x02860349
  405110:	03d80356 	.word	0x03d80356

00405114 <.LVL92>:
  405114:	9810      	ldr	r0, [sp, #64]	; 0x40

00405116 <.LVL93>:
  405116:	9911      	ldr	r1, [sp, #68]	; 0x44

00405118 <.LVL94>:
  405118:	4401      	add	r1, r0
  40511a:	f201 4332 	addw	r3, r1, #1074	; 0x432

0040511e <.LVL95>:
  40511e:	2b20      	cmp	r3, #32
  405120:	f340 814a 	ble.w	4053b8 <.LVL171>
  405124:	f1c3 0340 	rsb	r3, r3, #64	; 0x40

00405128 <.LVL96>:
  405128:	f201 4212 	addw	r2, r1, #1042	; 0x412
  40512c:	409e      	lsls	r6, r3
  40512e:	fa2a f302 	lsr.w	r3, sl, r2
  405132:	4333      	orrs	r3, r6
  405134:	ee07 3a90 	vmov	s15, r3

00405138 <.LVL97>:
  405138:	eeb8 7b67 	vcvt.f64.u32	d7, s15
  40513c:	2501      	movs	r5, #1
  40513e:	ec53 2b17 	vmov	r2, r3, d7
  405142:	3901      	subs	r1, #1

00405144 <.LVL98>:
  405144:	f1a3 73f8 	sub.w	r3, r3, #32505856	; 0x1f00000
  405148:	950d      	str	r5, [sp, #52]	; 0x34
  40514a:	e78a      	b.n	405062 <.LVL70>

0040514c <.LVL99>:
  40514c:	4863      	ldr	r0, [pc, #396]	; (4052dc <.LVL134+0x34>)
  40514e:	e74d      	b.n	404fec <.LVL57>

00405150 <.LVL100>:
  405150:	2100      	movs	r1, #0
  405152:	6461      	str	r1, [r4, #68]	; 0x44
  405154:	4620      	mov	r0, r4
  405156:	4689      	mov	r9, r1
  405158:	f004 ffba 	bl	40a0d0 <.LFE2>

0040515c <.LVL101>:
  40515c:	f04f 36ff 	mov.w	r6, #4294967295
  405160:	2301      	movs	r3, #1
  405162:	9008      	str	r0, [sp, #32]
  405164:	6420      	str	r0, [r4, #64]	; 0x40

00405166 <.LVL102>:
  405166:	f8cd 9004 	str.w	r9, [sp, #4]

0040516a <.LVL103>:
  40516a:	960c      	str	r6, [sp, #48]	; 0x30
  40516c:	9309      	str	r3, [sp, #36]	; 0x24

0040516e <.LVL104>:
  40516e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405170:	2b00      	cmp	r3, #0
  405172:	db7a      	blt.n	40526a <.LCFI11>
  405174:	9a02      	ldr	r2, [sp, #8]
  405176:	2a0e      	cmp	r2, #14
  405178:	dc77      	bgt.n	40526a <.LCFI11>
  40517a:	4b57      	ldr	r3, [pc, #348]	; (4052d8 <.LVL134+0x30>)
  40517c:	f1b9 0f00 	cmp.w	r9, #0
  405180:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405184:	ed93 4b00 	vldr	d4, [r3]

00405188 <.LVL105>:
  405188:	f2c0 8332 	blt.w	4057f0 <.LVL300>

0040518c <.LVL106>:
  40518c:	ec4b ab17 	vmov	d7, sl, fp
  405190:	ee87 6b04 	vdiv.f64	d6, d7, d4
  405194:	eebd 6bc6 	vcvt.s32.f64	s12, d6

00405198 <.LVL107>:
  405198:	9a08      	ldr	r2, [sp, #32]
  40519a:	ee16 3a10 	vmov	r3, s12
  40519e:	2e01      	cmp	r6, #1
  4051a0:	f103 0330 	add.w	r3, r3, #48	; 0x30
  4051a4:	eeb8 5bc6 	vcvt.f64.s32	d5, s12
  4051a8:	f102 0b01 	add.w	fp, r2, #1

004051ac <.LVL108>:
  4051ac:	7013      	strb	r3, [r2, #0]
  4051ae:	eea5 7b44 	vfms.f64	d7, d5, d4
  4051b2:	d024      	beq.n	4051fe <.LVL115>
  4051b4:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
  4051b8:	ee27 7b03 	vmul.f64	d7, d7, d3
  4051bc:	eeb5 7b40 	vcmp.f64	d7, #0.0
  4051c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4051c4:	d03c      	beq.n	405240 <.L76>
  4051c6:	eeb1 2b44 	vneg.f64	d2, d4
  4051ca:	9a08      	ldr	r2, [sp, #32]
  4051cc:	e006      	b.n	4051dc <.LVL110>

004051ce <.LVL109>:
  4051ce:	ee27 7b03 	vmul.f64	d7, d7, d3
  4051d2:	eeb5 7b40 	vcmp.f64	d7, #0.0
  4051d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4051da:	d031      	beq.n	405240 <.L76>

004051dc <.LVL110>:
  4051dc:	ee87 6b04 	vdiv.f64	d6, d7, d4

004051e0 <.LVL111>:
  4051e0:	eebd 6bc6 	vcvt.s32.f64	s12, d6

004051e4 <.LVL112>:
  4051e4:	ee16 3a10 	vmov	r3, s12
  4051e8:	3330      	adds	r3, #48	; 0x30
  4051ea:	f80b 3b01 	strb.w	r3, [fp], #1

004051ee <.LVL113>:
  4051ee:	ebab 0302 	sub.w	r3, fp, r2
  4051f2:	42b3      	cmp	r3, r6
  4051f4:	eeb8 5bc6 	vcvt.f64.s32	d5, s12
  4051f8:	eea2 7b05 	vfma.f64	d7, d2, d5

004051fc <.LVL114>:
  4051fc:	d1e7      	bne.n	4051ce <.LVL109>

004051fe <.LVL115>:
  4051fe:	ee37 7b07 	vadd.f64	d7, d7, d7
  405202:	eeb4 4bc7 	vcmpe.f64	d4, d7
  405206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40520a:	d408      	bmi.n	40521e <.LVL115+0x20>
  40520c:	eeb4 4b47 	vcmp.f64	d4, d7
  405210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405214:	d114      	bne.n	405240 <.L76>
  405216:	ee16 3a10 	vmov	r3, s12
  40521a:	07db      	lsls	r3, r3, #31
  40521c:	d510      	bpl.n	405240 <.L76>
  40521e:	f81b 3c01 	ldrb.w	r3, [fp, #-1]

00405222 <.L77>:
  405222:	9908      	ldr	r1, [sp, #32]
  405224:	f10b 32ff 	add.w	r2, fp, #4294967295
  405228:	e004      	b.n	405234 <.LVL118>

0040522a <.LVL117>:
  40522a:	4291      	cmp	r1, r2
  40522c:	f000 83da 	beq.w	4059e4 <.LVL375>
  405230:	f812 3d01 	ldrb.w	r3, [r2, #-1]!

00405234 <.LVL118>:
  405234:	2b39      	cmp	r3, #57	; 0x39
  405236:	f102 0b01 	add.w	fp, r2, #1

0040523a <.LVL119>:
  40523a:	d0f6      	beq.n	40522a <.LVL117>

0040523c <.LVL120>:
  40523c:	3301      	adds	r3, #1
  40523e:	7013      	strb	r3, [r2, #0]

00405240 <.L76>:
  405240:	4641      	mov	r1, r8
  405242:	4620      	mov	r0, r4

00405244 <.LVL122>:
  405244:	f005 fc3e 	bl	40aac4 <_Bfree>

00405248 <.LVL123>:
  405248:	2200      	movs	r2, #0
  40524a:	9b02      	ldr	r3, [sp, #8]
  40524c:	f88b 2000 	strb.w	r2, [fp]
  405250:	9a04      	ldr	r2, [sp, #16]
  405252:	3301      	adds	r3, #1
  405254:	6013      	str	r3, [r2, #0]
  405256:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  405258:	2b00      	cmp	r3, #0
  40525a:	f000 8355 	beq.w	405908 <.LVL340>
  40525e:	9808      	ldr	r0, [sp, #32]
  405260:	f8c3 b000 	str.w	fp, [r3]
  405264:	b013      	add	sp, #76	; 0x4c

00405266 <.LCFI10>:
  405266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040526a <.LCFI11>:
  40526a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40526c:	2a00      	cmp	r2, #0
  40526e:	d052      	beq.n	405316 <.LVL145>
  405270:	9a01      	ldr	r2, [sp, #4]
  405272:	2a01      	cmp	r2, #1
  405274:	f340 82e2 	ble.w	40583c <.LVL312>
  405278:	9905      	ldr	r1, [sp, #20]
  40527a:	1e72      	subs	r2, r6, #1

0040527c <.LVL125>:
  40527c:	4291      	cmp	r1, r2
  40527e:	f2c0 8346 	blt.w	40590e <.LVL341>
  405282:	1a8b      	subs	r3, r1, r2
  405284:	930d      	str	r3, [sp, #52]	; 0x34

00405286 <.LVL126>:
  405286:	2e00      	cmp	r6, #0
  405288:	f2c0 8415 	blt.w	405ab6 <.LVL411>
  40528c:	9f07      	ldr	r7, [sp, #28]
  40528e:	4633      	mov	r3, r6

00405290 <.LVL127>:
  405290:	9a07      	ldr	r2, [sp, #28]
  405292:	441a      	add	r2, r3
  405294:	9207      	str	r2, [sp, #28]

00405296 <.LVL128>:
  405296:	9a06      	ldr	r2, [sp, #24]

00405298 <.LVL129>:
  405298:	2101      	movs	r1, #1
  40529a:	441a      	add	r2, r3
  40529c:	4620      	mov	r0, r4

0040529e <.LVL130>:
  40529e:	9206      	str	r2, [sp, #24]

004052a0 <.LVL131>:
  4052a0:	f005 fc1a 	bl	40aad8 <__i2b>

004052a4 <.LVL132>:
  4052a4:	4605      	mov	r5, r0

004052a6 <.LVL133>:
  4052a6:	e03a      	b.n	40531e <.LVL146>

004052a8 <.LVL134>:
  4052a8:	2301      	movs	r3, #1
  4052aa:	930b      	str	r3, [sp, #44]	; 0x2c
  4052ac:	e70c      	b.n	4050c8 <.LVL77>
  4052ae:	bf00      	nop
  4052b0:	636f4361 	.word	0x636f4361
  4052b4:	3fd287a7 	.word	0x3fd287a7
  4052b8:	8b60c8b3 	.word	0x8b60c8b3
  4052bc:	3fc68a28 	.word	0x3fc68a28
  4052c0:	509f79fb 	.word	0x509f79fb
  4052c4:	3fd34413 	.word	0x3fd34413
  4052c8:	7ff00000 	.word	0x7ff00000
  4052cc:	0040aac1 	.word	0x0040aac1
  4052d0:	0040aab0 	.word	0x0040aab0
  4052d4:	0040aabc 	.word	0x0040aabc
  4052d8:	00408af8 	.word	0x00408af8
  4052dc:	0040aac0 	.word	0x0040aac0

004052e0 <.LVL135>:
  4052e0:	9a07      	ldr	r2, [sp, #28]

004052e2 <.LVL136>:
  4052e2:	9b02      	ldr	r3, [sp, #8]
  4052e4:	1ad2      	subs	r2, r2, r3
  4052e6:	425b      	negs	r3, r3
  4052e8:	9305      	str	r3, [sp, #20]
  4052ea:	2300      	movs	r3, #0
  4052ec:	9207      	str	r2, [sp, #28]

004052ee <.LVL137>:
  4052ee:	930a      	str	r3, [sp, #40]	; 0x28
  4052f0:	e6fc      	b.n	4050ec <.LVL87>

004052f2 <.LVL138>:
  4052f2:	f1c1 0301 	rsb	r3, r1, #1

004052f6 <.LVL139>:
  4052f6:	9307      	str	r3, [sp, #28]

004052f8 <.LVL140>:
  4052f8:	2300      	movs	r3, #0

004052fa <.LVL141>:
  4052fa:	9306      	str	r3, [sp, #24]

004052fc <.LVL142>:
  4052fc:	e6eb      	b.n	4050d6 <.LVL81>

004052fe <.LVL143>:
  4052fe:	eeb8 6be6 	vcvt.f64.s32	d6, s13
  405302:	eeb4 7b46 	vcmp.f64	d7, d6
  405306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40530a:	f43f aec8 	beq.w	40509e <.LVL73>
  40530e:	9b02      	ldr	r3, [sp, #8]
  405310:	3b01      	subs	r3, #1
  405312:	9302      	str	r3, [sp, #8]

00405314 <.LVL144>:
  405314:	e6c3      	b.n	40509e <.LVL73>

00405316 <.LVL145>:
  405316:	9b05      	ldr	r3, [sp, #20]
  405318:	9f07      	ldr	r7, [sp, #28]
  40531a:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40531c:	930d      	str	r3, [sp, #52]	; 0x34

0040531e <.LVL146>:
  40531e:	2f00      	cmp	r7, #0
  405320:	dd0c      	ble.n	40533c <.LVL151>
  405322:	9906      	ldr	r1, [sp, #24]
  405324:	2900      	cmp	r1, #0
  405326:	460b      	mov	r3, r1
  405328:	dd08      	ble.n	40533c <.LVL151>
  40532a:	42b9      	cmp	r1, r7
  40532c:	9a07      	ldr	r2, [sp, #28]
  40532e:	bfa8      	it	ge
  405330:	463b      	movge	r3, r7

00405332 <.LVL147>:
  405332:	1ad2      	subs	r2, r2, r3
  405334:	1aff      	subs	r7, r7, r3

00405336 <.LVL148>:
  405336:	1acb      	subs	r3, r1, r3

00405338 <.LVL149>:
  405338:	9207      	str	r2, [sp, #28]

0040533a <.LVL150>:
  40533a:	9306      	str	r3, [sp, #24]

0040533c <.LVL151>:
  40533c:	9b05      	ldr	r3, [sp, #20]
  40533e:	b1eb      	cbz	r3, 40537c <.LVL162>
  405340:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405342:	2b00      	cmp	r3, #0
  405344:	f000 8273 	beq.w	40582e <.LVL308>
  405348:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40534a:	2b00      	cmp	r3, #0
  40534c:	dd11      	ble.n	405372 <.LVL160>
  40534e:	461a      	mov	r2, r3
  405350:	4629      	mov	r1, r5
  405352:	4620      	mov	r0, r4

00405354 <.LVL152>:
  405354:	f003 fef4 	bl	409140 <__pow5mult>

00405358 <.LVL153>:
  405358:	4642      	mov	r2, r8
  40535a:	4601      	mov	r1, r0
  40535c:	4605      	mov	r5, r0

0040535e <.LVL154>:
  40535e:	4620      	mov	r0, r4

00405360 <.LVL155>:
  405360:	f002 fda8 	bl	407eb4 <.LBE11>

00405364 <.LVL156>:
  405364:	4641      	mov	r1, r8
  405366:	900e      	str	r0, [sp, #56]	; 0x38

00405368 <.LVL157>:
  405368:	4620      	mov	r0, r4

0040536a <.LVL158>:
  40536a:	f005 fbab 	bl	40aac4 <_Bfree>

0040536e <.LVL159>:
  40536e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405370:	4698      	mov	r8, r3

00405372 <.LVL160>:
  405372:	9b05      	ldr	r3, [sp, #20]
  405374:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405376:	1a9a      	subs	r2, r3, r2

00405378 <.LVL161>:
  405378:	f040 825a 	bne.w	405830 <.LVL308+0x2>

0040537c <.LVL162>:
  40537c:	2101      	movs	r1, #1
  40537e:	4620      	mov	r0, r4

00405380 <.LVL163>:
  405380:	f005 fbaa 	bl	40aad8 <__i2b>

00405384 <.LVL164>:
  405384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405386:	9005      	str	r0, [sp, #20]

00405388 <.LVL165>:
  405388:	2b00      	cmp	r3, #0
  40538a:	dd1f      	ble.n	4053cc <.LVL174>
  40538c:	4601      	mov	r1, r0
  40538e:	461a      	mov	r2, r3
  405390:	4620      	mov	r0, r4

00405392 <.LVL166>:
  405392:	f003 fed5 	bl	409140 <__pow5mult>

00405396 <.LVL167>:
  405396:	9b01      	ldr	r3, [sp, #4]
  405398:	9005      	str	r0, [sp, #20]

0040539a <.LVL168>:
  40539a:	2b01      	cmp	r3, #1
  40539c:	f340 820f 	ble.w	4057be <.LVL293>
  4053a0:	2300      	movs	r3, #0
  4053a2:	930d      	str	r3, [sp, #52]	; 0x34

004053a4 <.LVL169>:
  4053a4:	9a05      	ldr	r2, [sp, #20]
  4053a6:	6913      	ldr	r3, [r2, #16]
  4053a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4053ac:	6918      	ldr	r0, [r3, #16]
  4053ae:	f004 ffc7 	bl	40a340 <__hi0bits>

004053b2 <.LVL170>:
  4053b2:	f1c0 0020 	rsb	r0, r0, #32
  4053b6:	e013      	b.n	4053e0 <.LVL175+0x8>

004053b8 <.LVL171>:
  4053b8:	f1c3 0320 	rsb	r3, r3, #32

004053bc <.LVL172>:
  4053bc:	fa0a f303 	lsl.w	r3, sl, r3
  4053c0:	ee07 3a90 	vmov	s15, r3
  4053c4:	e6b8      	b.n	405138 <.LVL97>

004053c6 <.LVL173>:
  4053c6:	2300      	movs	r3, #0
  4053c8:	930b      	str	r3, [sp, #44]	; 0x2c
  4053ca:	e67d      	b.n	4050c8 <.LVL77>

004053cc <.LVL174>:
  4053cc:	9b01      	ldr	r3, [sp, #4]
  4053ce:	2b01      	cmp	r3, #1
  4053d0:	f340 823e 	ble.w	405850 <.LVL314>
  4053d4:	2300      	movs	r3, #0
  4053d6:	930d      	str	r3, [sp, #52]	; 0x34

004053d8 <.LVL175>:
  4053d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4053da:	2001      	movs	r0, #1
  4053dc:	2b00      	cmp	r3, #0
  4053de:	d1e1      	bne.n	4053a4 <.LVL169>
  4053e0:	9a06      	ldr	r2, [sp, #24]
  4053e2:	4410      	add	r0, r2

004053e4 <.LVL176>:
  4053e4:	f010 001f 	ands.w	r0, r0, #31

004053e8 <.LVL177>:
  4053e8:	f000 809e 	beq.w	405528 <.LVL217>
  4053ec:	f1c0 0320 	rsb	r3, r0, #32

004053f0 <.LVL178>:
  4053f0:	2b04      	cmp	r3, #4
  4053f2:	f340 83d4 	ble.w	405b9e <.LVL446>
  4053f6:	9b07      	ldr	r3, [sp, #28]

004053f8 <.LVL179>:
  4053f8:	f1c0 001c 	rsb	r0, r0, #28

004053fc <.LVL180>:
  4053fc:	4403      	add	r3, r0
  4053fe:	9307      	str	r3, [sp, #28]

00405400 <.LVL181>:
  405400:	4613      	mov	r3, r2

00405402 <.LVL182>:
  405402:	4403      	add	r3, r0
  405404:	4407      	add	r7, r0
  405406:	9306      	str	r3, [sp, #24]

00405408 <.LVL184>:
  405408:	9b07      	ldr	r3, [sp, #28]
  40540a:	2b00      	cmp	r3, #0
  40540c:	dd05      	ble.n	40541a <.LVL185+0x2>
  40540e:	4641      	mov	r1, r8
  405410:	461a      	mov	r2, r3
  405412:	4620      	mov	r0, r4
  405414:	f003 fd4c 	bl	408eb0 <.LFE27>

00405418 <.LVL185>:
  405418:	4680      	mov	r8, r0
  40541a:	9b06      	ldr	r3, [sp, #24]
  40541c:	2b00      	cmp	r3, #0
  40541e:	dd05      	ble.n	40542c <.LVL187+0x2>
  405420:	461a      	mov	r2, r3
  405422:	9905      	ldr	r1, [sp, #20]
  405424:	4620      	mov	r0, r4
  405426:	f003 fd43 	bl	408eb0 <.LFE27>

0040542a <.LVL187>:
  40542a:	9005      	str	r0, [sp, #20]
  40542c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40542e:	2b00      	cmp	r3, #0
  405430:	f040 8083 	bne.w	40553a <.LVL223>
  405434:	2e00      	cmp	r6, #0
  405436:	f340 821e 	ble.w	405876 <.LVL322>
  40543a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40543c:	2b00      	cmp	r3, #0
  40543e:	f000 8096 	beq.w	40556e <.LVL230>

00405442 <.LVL189>:
  405442:	2f00      	cmp	r7, #0
  405444:	dd05      	ble.n	405452 <.LVL191>
  405446:	4629      	mov	r1, r5
  405448:	463a      	mov	r2, r7
  40544a:	4620      	mov	r0, r4
  40544c:	f003 fd30 	bl	408eb0 <.LFE27>

00405450 <.LVL190>:
  405450:	4605      	mov	r5, r0

00405452 <.LVL191>:
  405452:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  405454:	2b00      	cmp	r3, #0
  405456:	f040 82ce 	bne.w	4059f6 <.LVL378>
  40545a:	462f      	mov	r7, r5

0040545c <.LVL192>:
  40545c:	9b08      	ldr	r3, [sp, #32]
  40545e:	3e01      	subs	r6, #1
  405460:	199a      	adds	r2, r3, r6
  405462:	9209      	str	r2, [sp, #36]	; 0x24
  405464:	f00a 0201 	and.w	r2, sl, #1
  405468:	920a      	str	r2, [sp, #40]	; 0x28

0040546a <.LVL193>:
  40546a:	461e      	mov	r6, r3

0040546c <.LVL194>:
  40546c:	f8dd b014 	ldr.w	fp, [sp, #20]
  405470:	4640      	mov	r0, r8
  405472:	4659      	mov	r1, fp
  405474:	f002 fbf8 	bl	407c68 <L0>

00405478 <.LVL195>:
  405478:	4629      	mov	r1, r5
  40547a:	4682      	mov	sl, r0

0040547c <.LVL196>:
  40547c:	4640      	mov	r0, r8
  40547e:	f005 f86b 	bl	40a558 <.LBE18>

00405482 <.LVL197>:
  405482:	463a      	mov	r2, r7
  405484:	4659      	mov	r1, fp
  405486:	4681      	mov	r9, r0
  405488:	4620      	mov	r0, r4
  40548a:	f002 fe31 	bl	4080f0 <.LFE169>

0040548e <.LVL198>:
  40548e:	68c3      	ldr	r3, [r0, #12]
  405490:	4683      	mov	fp, r0
  405492:	f10a 0230 	add.w	r2, sl, #48	; 0x30

00405496 <.LVL199>:
  405496:	2b00      	cmp	r3, #0
  405498:	f040 81e5 	bne.w	405866 <.LVL318>
  40549c:	4601      	mov	r1, r0
  40549e:	4640      	mov	r0, r8

004054a0 <.LVL200>:
  4054a0:	9207      	str	r2, [sp, #28]
  4054a2:	f005 f859 	bl	40a558 <.LBE18>

004054a6 <.LVL201>:
  4054a6:	4659      	mov	r1, fp
  4054a8:	9006      	str	r0, [sp, #24]

004054aa <.LVL202>:
  4054aa:	4620      	mov	r0, r4

004054ac <.LVL203>:
  4054ac:	f005 fb0a 	bl	40aac4 <_Bfree>

004054b0 <.LVL204>:
  4054b0:	9b06      	ldr	r3, [sp, #24]
  4054b2:	9a07      	ldr	r2, [sp, #28]
  4054b4:	b933      	cbnz	r3, 4054c4 <.LVL205>
  4054b6:	9901      	ldr	r1, [sp, #4]
  4054b8:	b921      	cbnz	r1, 4054c4 <.LVL205>
  4054ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4054bc:	2b00      	cmp	r3, #0
  4054be:	f000 8343 	beq.w	405b48 <.LVL432>
  4054c2:	9b01      	ldr	r3, [sp, #4]

004054c4 <.LVL205>:
  4054c4:	f1b9 0f00 	cmp.w	r9, #0
  4054c8:	f2c0 823b 	blt.w	405942 <.LVL352>
  4054cc:	d105      	bne.n	4054da <.LVL205+0x16>
  4054ce:	9901      	ldr	r1, [sp, #4]
  4054d0:	b919      	cbnz	r1, 4054da <.LVL205+0x16>
  4054d2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4054d4:	2900      	cmp	r1, #0
  4054d6:	f000 8234 	beq.w	405942 <.LVL352>
  4054da:	2b00      	cmp	r3, #0
  4054dc:	f300 829f 	bgt.w	405a1e <.LVL385>
  4054e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4054e2:	7032      	strb	r2, [r6, #0]
  4054e4:	f106 0901 	add.w	r9, r6, #1

004054e8 <.LVL206>:
  4054e8:	429e      	cmp	r6, r3
  4054ea:	46cb      	mov	fp, r9

004054ec <.LVL207>:
  4054ec:	f000 82a2 	beq.w	405a34 <.LVL390>
  4054f0:	4641      	mov	r1, r8
  4054f2:	2300      	movs	r3, #0
  4054f4:	220a      	movs	r2, #10
  4054f6:	4620      	mov	r0, r4
  4054f8:	f004 fa0a 	bl	409910 <__multadd>

004054fc <.LVL208>:
  4054fc:	42bd      	cmp	r5, r7
  4054fe:	4680      	mov	r8, r0

00405500 <.LVL209>:
  405500:	4629      	mov	r1, r5
  405502:	f04f 0300 	mov.w	r3, #0
  405506:	f04f 020a 	mov.w	r2, #10
  40550a:	4620      	mov	r0, r4

0040550c <.LVL210>:
  40550c:	f000 81a5 	beq.w	40585a <.LVL315>

00405510 <.LVL211>:
  405510:	f004 f9fe 	bl	409910 <__multadd>

00405514 <.LVL212>:
  405514:	4639      	mov	r1, r7
  405516:	4605      	mov	r5, r0

00405518 <.LVL213>:
  405518:	2300      	movs	r3, #0
  40551a:	220a      	movs	r2, #10
  40551c:	4620      	mov	r0, r4

0040551e <.LVL214>:
  40551e:	f004 f9f7 	bl	409910 <__multadd>

00405522 <.LVL215>:
  405522:	464e      	mov	r6, r9
  405524:	4607      	mov	r7, r0

00405526 <.LVL216>:
  405526:	e7a1      	b.n	40546c <.LVL194>

00405528 <.LVL217>:
  405528:	201c      	movs	r0, #28

0040552a <.LVL218>:
  40552a:	9b07      	ldr	r3, [sp, #28]
  40552c:	4403      	add	r3, r0
  40552e:	9307      	str	r3, [sp, #28]

00405530 <.LVL219>:
  405530:	9b06      	ldr	r3, [sp, #24]

00405532 <.LVL220>:
  405532:	4403      	add	r3, r0
  405534:	4407      	add	r7, r0
  405536:	9306      	str	r3, [sp, #24]

00405538 <.LVL222>:
  405538:	e766      	b.n	405408 <.LVL184>

0040553a <.LVL223>:
  40553a:	9905      	ldr	r1, [sp, #20]
  40553c:	4640      	mov	r0, r8
  40553e:	f005 f80b 	bl	40a558 <.LBE18>

00405542 <.LVL224>:
  405542:	2800      	cmp	r0, #0
  405544:	f6bf af76 	bge.w	405434 <.LVL187+0xa>
  405548:	9e02      	ldr	r6, [sp, #8]

0040554a <.LVL225>:
  40554a:	4641      	mov	r1, r8
  40554c:	2300      	movs	r3, #0
  40554e:	220a      	movs	r2, #10
  405550:	4620      	mov	r0, r4
  405552:	3e01      	subs	r6, #1
  405554:	9602      	str	r6, [sp, #8]

00405556 <.LVL226>:
  405556:	f004 f9db 	bl	409910 <__multadd>

0040555a <.LVL227>:
  40555a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40555c:	4680      	mov	r8, r0

0040555e <.LVL228>:
  40555e:	2b00      	cmp	r3, #0
  405560:	f040 8302 	bne.w	405b68 <.LVL436>

00405564 <.LVL229>:
  405564:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405566:	2b00      	cmp	r3, #0
  405568:	f340 830a 	ble.w	405b80 <.LVL440>
  40556c:	461e      	mov	r6, r3

0040556e <.LVL230>:
  40556e:	f8dd a020 	ldr.w	sl, [sp, #32]

00405572 <.LVL231>:
  405572:	f8dd b014 	ldr.w	fp, [sp, #20]
  405576:	4657      	mov	r7, sl

00405578 <.LVL232>:
  405578:	e002      	b.n	405580 <.LVL235>

0040557a <.LVL233>:
  40557a:	f004 f9c9 	bl	409910 <__multadd>

0040557e <.LVL234>:
  40557e:	4680      	mov	r8, r0

00405580 <.LVL235>:
  405580:	4659      	mov	r1, fp
  405582:	4640      	mov	r0, r8
  405584:	f002 fb70 	bl	407c68 <L0>

00405588 <.LVL236>:
  405588:	f100 0930 	add.w	r9, r0, #48	; 0x30

0040558c <.LVL237>:
  40558c:	f807 9b01 	strb.w	r9, [r7], #1

00405590 <.LVL238>:
  405590:	eba7 030a 	sub.w	r3, r7, sl
  405594:	42b3      	cmp	r3, r6
  405596:	f04f 020a 	mov.w	r2, #10
  40559a:	f04f 0300 	mov.w	r3, #0
  40559e:	4641      	mov	r1, r8
  4055a0:	4620      	mov	r0, r4
  4055a2:	dbea      	blt.n	40557a <.LVL233>

004055a4 <.LVL239>:
  4055a4:	9b08      	ldr	r3, [sp, #32]
  4055a6:	2e01      	cmp	r6, #1
  4055a8:	bfac      	ite	ge
  4055aa:	199b      	addge	r3, r3, r6
  4055ac:	3301      	addlt	r3, #1
  4055ae:	469b      	mov	fp, r3
  4055b0:	f04f 0a00 	mov.w	sl, #0

004055b4 <.LVL240>:
  4055b4:	4641      	mov	r1, r8
  4055b6:	2201      	movs	r2, #1
  4055b8:	4620      	mov	r0, r4
  4055ba:	f003 fc79 	bl	408eb0 <.LFE27>

004055be <.LVL241>:
  4055be:	9905      	ldr	r1, [sp, #20]
  4055c0:	4680      	mov	r8, r0

004055c2 <.LVL242>:
  4055c2:	f004 ffc9 	bl	40a558 <.LBE18>

004055c6 <.LVL243>:
  4055c6:	2800      	cmp	r0, #0
  4055c8:	f340 81d7 	ble.w	40597a <.LVL362>
  4055cc:	f81b 2c01 	ldrb.w	r2, [fp, #-1]

004055d0 <.L142>:
  4055d0:	9908      	ldr	r1, [sp, #32]
  4055d2:	f10b 33ff 	add.w	r3, fp, #4294967295
  4055d6:	e004      	b.n	4055e2 <.LVL246>

004055d8 <.LVL245>:
  4055d8:	428b      	cmp	r3, r1
  4055da:	f000 8168 	beq.w	4058ae <.LVL331>
  4055de:	f813 2d01 	ldrb.w	r2, [r3, #-1]!

004055e2 <.LVL246>:
  4055e2:	2a39      	cmp	r2, #57	; 0x39
  4055e4:	f103 0b01 	add.w	fp, r3, #1

004055e8 <.LVL247>:
  4055e8:	d0f6      	beq.n	4055d8 <.LVL245>

004055ea <.LVL248>:
  4055ea:	3201      	adds	r2, #1
  4055ec:	701a      	strb	r2, [r3, #0]

004055ee <.L135>:
  4055ee:	9905      	ldr	r1, [sp, #20]
  4055f0:	4620      	mov	r0, r4
  4055f2:	f005 fa67 	bl	40aac4 <_Bfree>

004055f6 <.LVL250>:
  4055f6:	2d00      	cmp	r5, #0
  4055f8:	f43f ae22 	beq.w	405240 <.L76>
  4055fc:	f1ba 0f00 	cmp.w	sl, #0
  405600:	d005      	beq.n	40560e <.LVL251>
  405602:	45aa      	cmp	sl, r5
  405604:	d003      	beq.n	40560e <.LVL251>
  405606:	4651      	mov	r1, sl
  405608:	4620      	mov	r0, r4
  40560a:	f005 fa5b 	bl	40aac4 <_Bfree>

0040560e <.LVL251>:
  40560e:	4629      	mov	r1, r5
  405610:	4620      	mov	r0, r4
  405612:	f005 fa57 	bl	40aac4 <_Bfree>

00405616 <.LVL252>:
  405616:	e613      	b.n	405240 <.L76>

00405618 <.LVL253>:
  405618:	2300      	movs	r3, #0
  40561a:	9309      	str	r3, [sp, #36]	; 0x24

0040561c <.LVL254>:
  40561c:	9b02      	ldr	r3, [sp, #8]
  40561e:	444b      	add	r3, r9
  405620:	1c5e      	adds	r6, r3, #1

00405622 <.LVL255>:
  405622:	2e01      	cmp	r6, #1
  405624:	4637      	mov	r7, r6
  405626:	930c      	str	r3, [sp, #48]	; 0x30

00405628 <.LVL256>:
  405628:	bfb8      	it	lt
  40562a:	2701      	movlt	r7, #1
  40562c:	960e      	str	r6, [sp, #56]	; 0x38

0040562e <.LVL257>:
  40562e:	2100      	movs	r1, #0
  405630:	2f17      	cmp	r7, #23
  405632:	6461      	str	r1, [r4, #68]	; 0x44
  405634:	d90a      	bls.n	40564c <.LVL260>
  405636:	2201      	movs	r2, #1
  405638:	2304      	movs	r3, #4

0040563a <.LVL258>:
  40563a:	005b      	lsls	r3, r3, #1
  40563c:	f103 0014 	add.w	r0, r3, #20
  405640:	4287      	cmp	r7, r0
  405642:	4611      	mov	r1, r2
  405644:	f102 0201 	add.w	r2, r2, #1
  405648:	d2f7      	bcs.n	40563a <.LVL258>
  40564a:	6461      	str	r1, [r4, #68]	; 0x44

0040564c <.LVL260>:
  40564c:	4620      	mov	r0, r4
  40564e:	f004 fd3f 	bl	40a0d0 <.LFE2>

00405652 <.LVL261>:
  405652:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405654:	9008      	str	r0, [sp, #32]
  405656:	2b0e      	cmp	r3, #14
  405658:	6420      	str	r0, [r4, #64]	; 0x40

0040565a <.LVL262>:
  40565a:	f63f ad88 	bhi.w	40516e <.LVL104>

0040565e <.LVL263>:
  40565e:	2d00      	cmp	r5, #0
  405660:	f43f ad85 	beq.w	40516e <.LVL104>

00405664 <.LVL264>:
  405664:	9802      	ldr	r0, [sp, #8]
  405666:	2800      	cmp	r0, #0
  405668:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38

0040566c <.LVL265>:
  40566c:	f340 819a 	ble.w	4059a4 <.LVL368>
  405670:	4ac8      	ldr	r2, [pc, #800]	; (405994 <.LVL365+0x4>)
  405672:	f000 030f 	and.w	r3, r0, #15
  405676:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
  40567a:	1103      	asrs	r3, r0, #4
  40567c:	06df      	lsls	r7, r3, #27
  40567e:	ed92 7b00 	vldr	d7, [r2]

00405682 <.LVL266>:
  405682:	f140 814d 	bpl.w	405920 <.LVL348>
  405686:	4ac4      	ldr	r2, [pc, #784]	; (405998 <.LVL365+0x8>)
  405688:	ed92 6b08 	vldr	d6, [r2, #32]
  40568c:	ec4b ab14 	vmov	d4, sl, fp

00405690 <.LVL267>:
  405690:	f003 030f 	and.w	r3, r3, #15
  405694:	2103      	movs	r1, #3
  405696:	ee84 5b06 	vdiv.f64	d5, d4, d6

0040569a <.LVL269>:
  40569a:	b15b      	cbz	r3, 4056b4 <.LVL273+0x6>
  40569c:	4abe      	ldr	r2, [pc, #760]	; (405998 <.LVL365+0x8>)

0040569e <.LVL270>:
  40569e:	07dd      	lsls	r5, r3, #31
  4056a0:	d504      	bpl.n	4056ac <.LVL272>
  4056a2:	ed92 6b00 	vldr	d6, [r2]
  4056a6:	3101      	adds	r1, #1
  4056a8:	ee27 7b06 	vmul.f64	d7, d7, d6

004056ac <.LVL272>:
  4056ac:	105b      	asrs	r3, r3, #1

004056ae <.LVL273>:
  4056ae:	f102 0208 	add.w	r2, r2, #8
  4056b2:	d1f4      	bne.n	40569e <.LVL270>
  4056b4:	ee85 6b07 	vdiv.f64	d6, d5, d7

004056b8 <.LVL274>:
  4056b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4056ba:	b13b      	cbz	r3, 4056cc <.LVL275>
  4056bc:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
  4056c0:	eeb4 6bc7 	vcmpe.f64	d6, d7
  4056c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4056c8:	f100 8206 	bmi.w	405ad8 <.LVL416>

004056cc <.LVL275>:
  4056cc:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
  4056d0:	ee07 1a90 	vmov	s15, r1
  4056d4:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  4056d8:	eea7 5b06 	vfma.f64	d5, d7, d6
  4056dc:	ec51 0b15 	vmov	r0, r1, d5
  4056e0:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000

004056e4 <.LVL276>:
  4056e4:	2e00      	cmp	r6, #0
  4056e6:	f000 80f8 	beq.w	4058da <.LVL336>
  4056ea:	9a02      	ldr	r2, [sp, #8]
  4056ec:	4635      	mov	r5, r6

004056ee <.LVL277>:
  4056ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4056f0:	2b00      	cmp	r3, #0
  4056f2:	f000 81a7 	beq.w	405a44 <.LVL396>
  4056f6:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
  4056fa:	4ba6      	ldr	r3, [pc, #664]	; (405994 <.LVL365+0x4>)
  4056fc:	9f08      	ldr	r7, [sp, #32]
  4056fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  405702:	ed13 4b02 	vldr	d4, [r3, #-8]
  405706:	eebd 7bc6 	vcvt.s32.f64	s14, d6
  40570a:	ee83 5b04 	vdiv.f64	d5, d3, d4
  40570e:	ee17 3a10 	vmov	r3, s14

00405712 <.LVL278>:
  405712:	ec41 0b14 	vmov	d4, r0, r1
  405716:	3330      	adds	r3, #48	; 0x30
  405718:	b2db      	uxtb	r3, r3
  40571a:	ee35 5b44 	vsub.f64	d5, d5, d4

0040571e <.LVL279>:
  40571e:	eeb8 7bc7 	vcvt.f64.s32	d7, s14

00405722 <.LVL280>:
  405722:	ee36 7b47 	vsub.f64	d7, d6, d7
  405726:	eeb4 5bc7 	vcmpe.f64	d5, d7
  40572a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40572e:	703b      	strb	r3, [r7, #0]
  405730:	f107 0b01 	add.w	fp, r7, #1

00405734 <.LVL281>:
  405734:	dc31      	bgt.n	40579a <.LVL288+0xe>
  405736:	eeb7 3b00 	vmov.f64	d3, #112	; 0x3f800000  1.0
  40573a:	ee33 6b47 	vsub.f64	d6, d3, d7

0040573e <.LVL282>:
  40573e:	eeb4 5bc6 	vcmpe.f64	d5, d6
  405742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405746:	f300 81fa 	bgt.w	405b3e <.LVL428>

0040574a <.LVL283>:
  40574a:	2d01      	cmp	r5, #1
  40574c:	f000 8126 	beq.w	40599c <.LDL1>
  405750:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
  405754:	9b08      	ldr	r3, [sp, #32]
  405756:	1959      	adds	r1, r3, r5
  405758:	e00a      	b.n	405770 <.LVL285>

0040575a <.LVL284>:
  40575a:	ee33 6b47 	vsub.f64	d6, d3, d7
  40575e:	eeb4 6bc5 	vcmpe.f64	d6, d5
  405762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405766:	f100 81ea 	bmi.w	405b3e <.LVL428>
  40576a:	458b      	cmp	fp, r1
  40576c:	f000 8116 	beq.w	40599c <.LDL1>

00405770 <.LVL285>:
  405770:	ee27 7b04 	vmul.f64	d7, d7, d4
  405774:	ee25 5b04 	vmul.f64	d5, d5, d4
  405778:	eebd 6bc7 	vcvt.s32.f64	s12, d7

0040577c <.LVL286>:
  40577c:	ee16 3a10 	vmov	r3, s12
  405780:	3330      	adds	r3, #48	; 0x30
  405782:	b2db      	uxtb	r3, r3
  405784:	eeb8 6bc6 	vcvt.f64.s32	d6, s12

00405788 <.LVL287>:
  405788:	ee37 7b46 	vsub.f64	d7, d7, d6

0040578c <.LVL288>:
  40578c:	eeb4 7bc5 	vcmpe.f64	d7, d5
  405790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405794:	f80b 3b01 	strb.w	r3, [fp], #1
  405798:	d5df      	bpl.n	40575a <.LVL284>
  40579a:	9202      	str	r2, [sp, #8]

0040579c <.LVL289>:
  40579c:	e550      	b.n	405240 <.L76>

0040579e <.LVL290>:
  40579e:	2300      	movs	r3, #0
  4057a0:	9309      	str	r3, [sp, #36]	; 0x24

004057a2 <.LVL291>:
  4057a2:	f1b9 0f00 	cmp.w	r9, #0
  4057a6:	f340 80bf 	ble.w	405928 <.LVL349>
  4057aa:	464f      	mov	r7, r9
  4057ac:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  4057b0:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
  4057b4:	464e      	mov	r6, r9
  4057b6:	e73a      	b.n	40562e <.LVL257>

004057b8 <.LVL292>:
  4057b8:	2301      	movs	r3, #1
  4057ba:	9309      	str	r3, [sp, #36]	; 0x24
  4057bc:	e7f1      	b.n	4057a2 <.LVL291>

004057be <.LVL293>:
  4057be:	f1ba 0f00 	cmp.w	sl, #0
  4057c2:	f47f aded 	bne.w	4053a0 <.LVL168+0x6>

004057c6 <.LVL294>:
  4057c6:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4057ca:	2b00      	cmp	r3, #0
  4057cc:	f47f ae02 	bne.w	4053d4 <.LVL174+0x8>
  4057d0:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
  4057d4:	0d1b      	lsrs	r3, r3, #20
  4057d6:	051b      	lsls	r3, r3, #20
  4057d8:	2b00      	cmp	r3, #0
  4057da:	f000 81b3 	beq.w	405b44 <.LVL430>
  4057de:	9b07      	ldr	r3, [sp, #28]
  4057e0:	3301      	adds	r3, #1
  4057e2:	9307      	str	r3, [sp, #28]

004057e4 <.LVL295>:
  4057e4:	9b06      	ldr	r3, [sp, #24]

004057e6 <.LVL296>:
  4057e6:	3301      	adds	r3, #1
  4057e8:	9306      	str	r3, [sp, #24]

004057ea <.LVL297>:
  4057ea:	2301      	movs	r3, #1

004057ec <.LVL298>:
  4057ec:	930d      	str	r3, [sp, #52]	; 0x34

004057ee <.LVL299>:
  4057ee:	e5f3      	b.n	4053d8 <.LVL175>

004057f0 <.LVL300>:
  4057f0:	2e00      	cmp	r6, #0
  4057f2:	f73f accb 	bgt.w	40518c <.LVL106>

004057f6 <.LVL301>:
  4057f6:	f040 8083 	bne.w	405900 <.LVL338>
  4057fa:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
  4057fe:	ee24 4b07 	vmul.f64	d4, d4, d7

00405802 <.LVL302>:
  405802:	ec4b ab17 	vmov	d7, sl, fp
  405806:	eeb4 4bc7 	vcmpe.f64	d4, d7
  40580a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40580e:	4635      	mov	r5, r6
  405810:	9605      	str	r6, [sp, #20]

00405812 <.LVL303>:
  405812:	db43      	blt.n	40589c <.L73>

00405814 <.L74>:
  405814:	ea6f 0309 	mvn.w	r3, r9
  405818:	f8dd b020 	ldr.w	fp, [sp, #32]
  40581c:	9302      	str	r3, [sp, #8]

0040581e <.LVL305>:
  40581e:	9905      	ldr	r1, [sp, #20]
  405820:	4620      	mov	r0, r4

00405822 <.LVL306>:
  405822:	f005 f94f 	bl	40aac4 <_Bfree>

00405826 <.LVL307>:
  405826:	2d00      	cmp	r5, #0
  405828:	f43f ad0a 	beq.w	405240 <.L76>
  40582c:	e6ef      	b.n	40560e <.LVL251>

0040582e <.LVL308>:
  40582e:	9a05      	ldr	r2, [sp, #20]
  405830:	4641      	mov	r1, r8
  405832:	4620      	mov	r0, r4

00405834 <.LVL309>:
  405834:	f003 fc84 	bl	409140 <__pow5mult>

00405838 <.LVL310>:
  405838:	4680      	mov	r8, r0

0040583a <.LVL311>:
  40583a:	e59f      	b.n	40537c <.LVL162>

0040583c <.LVL312>:
  40583c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40583e:	2a00      	cmp	r2, #0
  405840:	f000 813e 	beq.w	405ac0 <.LVL413>
  405844:	9a05      	ldr	r2, [sp, #20]
  405846:	920d      	str	r2, [sp, #52]	; 0x34

00405848 <.LVL313>:
  405848:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40584c:	9f07      	ldr	r7, [sp, #28]
  40584e:	e51f      	b.n	405290 <.LVL127>

00405850 <.LVL314>:
  405850:	f1ba 0f00 	cmp.w	sl, #0
  405854:	f47f adbe 	bne.w	4053d4 <.LVL174+0x8>
  405858:	e7b5      	b.n	4057c6 <.LVL294>

0040585a <.LVL315>:
  40585a:	f004 f859 	bl	409910 <__multadd>

0040585e <.LVL316>:
  40585e:	464e      	mov	r6, r9
  405860:	4605      	mov	r5, r0

00405862 <.LVL317>:
  405862:	4607      	mov	r7, r0
  405864:	e602      	b.n	40546c <.LVL194>

00405866 <.LVL318>:
  405866:	4601      	mov	r1, r0
  405868:	4620      	mov	r0, r4

0040586a <.LVL319>:
  40586a:	9206      	str	r2, [sp, #24]

0040586c <.LVL320>:
  40586c:	f005 f92a 	bl	40aac4 <_Bfree>

00405870 <.LVL321>:
  405870:	2301      	movs	r3, #1
  405872:	9a06      	ldr	r2, [sp, #24]
  405874:	e626      	b.n	4054c4 <.LVL205>

00405876 <.LVL322>:
  405876:	9b01      	ldr	r3, [sp, #4]
  405878:	2b02      	cmp	r3, #2
  40587a:	f77f adde 	ble.w	40543a <.LVL187+0x10>

0040587e <.LVL323>:
  40587e:	2e00      	cmp	r6, #0
  405880:	d1c8      	bne.n	405814 <.L74>
  405882:	4633      	mov	r3, r6
  405884:	9905      	ldr	r1, [sp, #20]
  405886:	2205      	movs	r2, #5
  405888:	4620      	mov	r0, r4
  40588a:	f004 f841 	bl	409910 <__multadd>

0040588e <.LVL324>:
  40588e:	4601      	mov	r1, r0
  405890:	9005      	str	r0, [sp, #20]

00405892 <.LVL325>:
  405892:	4640      	mov	r0, r8

00405894 <.LVL326>:
  405894:	f004 fe60 	bl	40a558 <.LBE18>

00405898 <.LVL327>:
  405898:	2800      	cmp	r0, #0
  40589a:	ddbb      	ble.n	405814 <.L74>

0040589c <.L73>:
  40589c:	9a02      	ldr	r2, [sp, #8]
  40589e:	9908      	ldr	r1, [sp, #32]
  4058a0:	2331      	movs	r3, #49	; 0x31
  4058a2:	3201      	adds	r2, #1
  4058a4:	9202      	str	r2, [sp, #8]

004058a6 <.LVL329>:
  4058a6:	700b      	strb	r3, [r1, #0]
  4058a8:	f101 0b01 	add.w	fp, r1, #1

004058ac <.LVL330>:
  4058ac:	e7b7      	b.n	40581e <.LVL305>

004058ae <.LVL331>:
  4058ae:	9a02      	ldr	r2, [sp, #8]
  4058b0:	3201      	adds	r2, #1
  4058b2:	9202      	str	r2, [sp, #8]

004058b4 <.LVL332>:
  4058b4:	9a08      	ldr	r2, [sp, #32]

004058b6 <.LVL333>:
  4058b6:	2331      	movs	r3, #49	; 0x31
  4058b8:	7013      	strb	r3, [r2, #0]
  4058ba:	e698      	b.n	4055ee <.L135>

004058bc <.LVL334>:
  4058bc:	2301      	movs	r3, #1
  4058be:	9309      	str	r3, [sp, #36]	; 0x24
  4058c0:	e6ac      	b.n	40561c <.LVL254>

004058c2 <.LVL335>:
  4058c2:	ee07 1a90 	vmov	s15, r1
  4058c6:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
  4058ca:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  4058ce:	eea6 5b07 	vfma.f64	d5, d6, d7
  4058d2:	ec51 0b15 	vmov	r0, r1, d5
  4058d6:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000

004058da <.LVL336>:
  4058da:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
  4058de:	ee36 7b47 	vsub.f64	d7, d6, d7

004058e2 <.LVL337>:
  4058e2:	ec41 0b16 	vmov	d6, r0, r1
  4058e6:	eeb4 7bc6 	vcmpe.f64	d7, d6
  4058ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4058ee:	f300 80a5 	bgt.w	405a3c <.LVL394>
  4058f2:	eeb1 6b46 	vneg.f64	d6, d6
  4058f6:	eeb4 7bc6 	vcmpe.f64	d7, d6
  4058fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4058fe:	d54d      	bpl.n	40599c <.LDL1>

00405900 <.LVL338>:
  405900:	2300      	movs	r3, #0
  405902:	9305      	str	r3, [sp, #20]

00405904 <.LVL339>:
  405904:	461d      	mov	r5, r3
  405906:	e785      	b.n	405814 <.L74>

00405908 <.LVL340>:
  405908:	9808      	ldr	r0, [sp, #32]
  40590a:	f7ff bb6f 	b.w	404fec <.LVL57>

0040590e <.LVL341>:
  40590e:	9b05      	ldr	r3, [sp, #20]
  405910:	990a      	ldr	r1, [sp, #40]	; 0x28

00405912 <.LVL342>:
  405912:	9205      	str	r2, [sp, #20]

00405914 <.LVL343>:
  405914:	1ad3      	subs	r3, r2, r3

00405916 <.LVL344>:
  405916:	4419      	add	r1, r3
  405918:	2300      	movs	r3, #0

0040591a <.LVL345>:
  40591a:	910a      	str	r1, [sp, #40]	; 0x28

0040591c <.LVL346>:
  40591c:	930d      	str	r3, [sp, #52]	; 0x34

0040591e <.LVL347>:
  40591e:	e4b2      	b.n	405286 <.LVL126>

00405920 <.LVL348>:
  405920:	ed9d 5b0e 	vldr	d5, [sp, #56]	; 0x38
  405924:	2102      	movs	r1, #2
  405926:	e6b8      	b.n	40569a <.LVL269>

00405928 <.LVL349>:
  405928:	2100      	movs	r1, #0
  40592a:	6461      	str	r1, [r4, #68]	; 0x44
  40592c:	4620      	mov	r0, r4
  40592e:	f004 fbcf 	bl	40a0d0 <.LFE2>

00405932 <.LVL350>:
  405932:	f04f 0901 	mov.w	r9, #1
  405936:	9008      	str	r0, [sp, #32]
  405938:	6420      	str	r0, [r4, #64]	; 0x40

0040593a <.LVL351>:
  40593a:	464e      	mov	r6, r9
  40593c:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
  405940:	e68d      	b.n	40565e <.LVL263>

00405942 <.LVL352>:
  405942:	2b00      	cmp	r3, #0
  405944:	4691      	mov	r9, r2

00405946 <.LVL353>:
  405946:	dd11      	ble.n	40596c <.LVL359>
  405948:	4641      	mov	r1, r8
  40594a:	2201      	movs	r2, #1
  40594c:	4620      	mov	r0, r4
  40594e:	f003 faaf 	bl	408eb0 <.LFE27>

00405952 <.LVL354>:
  405952:	9905      	ldr	r1, [sp, #20]
  405954:	4680      	mov	r8, r0

00405956 <.LVL355>:
  405956:	f004 fdff 	bl	40a558 <.LBE18>

0040595a <.LVL356>:
  40595a:	2800      	cmp	r0, #0
  40595c:	f340 80fd 	ble.w	405b5a <.LVL435>

00405960 <.LVL357>:
  405960:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
  405964:	f000 80d4 	beq.w	405b10 <.L133>

00405968 <.LVL358>:
  405968:	f10a 0931 	add.w	r9, sl, #49	; 0x31

0040596c <.LVL359>:
  40596c:	46aa      	mov	sl, r5
  40596e:	f886 9000 	strb.w	r9, [r6]
  405972:	f106 0b01 	add.w	fp, r6, #1

00405976 <.LVL360>:
  405976:	463d      	mov	r5, r7

00405978 <.LVL361>:
  405978:	e639      	b.n	4055ee <.L135>

0040597a <.LVL362>:
  40597a:	d104      	bne.n	405986 <.LVL364>
  40597c:	f019 0f01 	tst.w	r9, #1
  405980:	d001      	beq.n	405986 <.LVL364>
  405982:	e623      	b.n	4055cc <.LVL243+0x6>

00405984 <.LVL363>:
  405984:	4693      	mov	fp, r2

00405986 <.LVL364>:
  405986:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
  40598a:	2b30      	cmp	r3, #48	; 0x30
  40598c:	f10b 32ff 	add.w	r2, fp, #4294967295

00405990 <.LVL365>:
  405990:	d0f8      	beq.n	405984 <.LVL363>
  405992:	e62c      	b.n	4055ee <.L135>
  405994:	00408af8 	.word	0x00408af8
  405998:	0040a798 	.word	0x0040a798

0040599c <.LDL1>:
  40599c:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38

004059a0 <.LVL367>:
  4059a0:	f7ff bbe5 	b.w	40516e <.LVL104>

004059a4 <.LVL368>:
  4059a4:	f000 8094 	beq.w	405ad0 <.LVL415>
  4059a8:	9b02      	ldr	r3, [sp, #8]
  4059aa:	4a88      	ldr	r2, [pc, #544]	; (405bcc <.LVL451+0x4>)
  4059ac:	425b      	negs	r3, r3

004059ae <.LVL369>:
  4059ae:	f003 010f 	and.w	r1, r3, #15
  4059b2:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
  4059b6:	ed92 6b00 	vldr	d6, [r2]
  4059ba:	ed9d 7b0e 	vldr	d7, [sp, #56]	; 0x38
  4059be:	111b      	asrs	r3, r3, #4

004059c0 <.LVL370>:
  4059c0:	ee27 6b06 	vmul.f64	d6, d7, d6
  4059c4:	f000 80e1 	beq.w	405b8a <.LVL442>
  4059c8:	4a81      	ldr	r2, [pc, #516]	; (405bd0 <.LVL451+0x8>)
  4059ca:	2102      	movs	r1, #2

004059cc <.LVL371>:
  4059cc:	07d8      	lsls	r0, r3, #31
  4059ce:	d504      	bpl.n	4059da <.LVL373>
  4059d0:	ed92 7b00 	vldr	d7, [r2]
  4059d4:	3101      	adds	r1, #1
  4059d6:	ee26 6b07 	vmul.f64	d6, d6, d7

004059da <.LVL373>:
  4059da:	105b      	asrs	r3, r3, #1

004059dc <.LVL374>:
  4059dc:	f102 0208 	add.w	r2, r2, #8
  4059e0:	d1f4      	bne.n	4059cc <.LVL371>
  4059e2:	e669      	b.n	4056b8 <.LVL274>

004059e4 <.LVL375>:
  4059e4:	9908      	ldr	r1, [sp, #32]
  4059e6:	2330      	movs	r3, #48	; 0x30
  4059e8:	700b      	strb	r3, [r1, #0]
  4059ea:	9b02      	ldr	r3, [sp, #8]
  4059ec:	3301      	adds	r3, #1
  4059ee:	9302      	str	r3, [sp, #8]

004059f0 <.LVL376>:
  4059f0:	f81b 3c01 	ldrb.w	r3, [fp, #-1]

004059f4 <.LVL377>:
  4059f4:	e422      	b.n	40523c <.LVL120>

004059f6 <.LVL378>:
  4059f6:	6869      	ldr	r1, [r5, #4]
  4059f8:	4620      	mov	r0, r4
  4059fa:	f004 fb69 	bl	40a0d0 <.LFE2>

004059fe <.LVL379>:
  4059fe:	692b      	ldr	r3, [r5, #16]
  405a00:	3302      	adds	r3, #2
  405a02:	4607      	mov	r7, r0

00405a04 <.LVL380>:
  405a04:	009a      	lsls	r2, r3, #2
  405a06:	f105 010c 	add.w	r1, r5, #12
  405a0a:	300c      	adds	r0, #12

00405a0c <.LVL381>:
  405a0c:	f002 f892 	bl	407b34 <.LFE173>

00405a10 <.LVL382>:
  405a10:	4639      	mov	r1, r7
  405a12:	2201      	movs	r2, #1
  405a14:	4620      	mov	r0, r4
  405a16:	f003 fa4b 	bl	408eb0 <.LFE27>

00405a1a <.LVL383>:
  405a1a:	4607      	mov	r7, r0

00405a1c <.LVL384>:
  405a1c:	e51e      	b.n	40545c <.LVL192>

00405a1e <.LVL385>:
  405a1e:	2a39      	cmp	r2, #57	; 0x39
  405a20:	d076      	beq.n	405b10 <.L133>
  405a22:	f102 0901 	add.w	r9, r2, #1

00405a26 <.LVL386>:
  405a26:	46aa      	mov	sl, r5

00405a28 <.LVL387>:
  405a28:	f886 9000 	strb.w	r9, [r6]
  405a2c:	f106 0b01 	add.w	fp, r6, #1

00405a30 <.LVL388>:
  405a30:	463d      	mov	r5, r7

00405a32 <.LVL389>:
  405a32:	e5dc      	b.n	4055ee <.L135>

00405a34 <.LVL390>:
  405a34:	46aa      	mov	sl, r5

00405a36 <.LVL391>:
  405a36:	4691      	mov	r9, r2

00405a38 <.LVL392>:
  405a38:	463d      	mov	r5, r7

00405a3a <.LVL393>:
  405a3a:	e5bb      	b.n	4055b4 <.LVL240>

00405a3c <.LVL394>:
  405a3c:	2300      	movs	r3, #0
  405a3e:	9305      	str	r3, [sp, #20]

00405a40 <.LVL395>:
  405a40:	461d      	mov	r5, r3
  405a42:	e72b      	b.n	40589c <.L73>

00405a44 <.LVL396>:
  405a44:	4b61      	ldr	r3, [pc, #388]	; (405bcc <.LVL451+0x4>)
  405a46:	eebd 7bc6 	vcvt.s32.f64	s14, d6
  405a4a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  405a4e:	ed13 4b02 	vldr	d4, [r3, #-8]
  405a52:	ee17 3a10 	vmov	r3, s14

00405a56 <.LVL397>:
  405a56:	ec41 0b15 	vmov	d5, r0, r1
  405a5a:	9808      	ldr	r0, [sp, #32]

00405a5c <.LVL398>:
  405a5c:	ee24 4b05 	vmul.f64	d4, d4, d5

00405a60 <.LVL399>:
  405a60:	3330      	adds	r3, #48	; 0x30

00405a62 <.LVL400>:
  405a62:	2d01      	cmp	r5, #1
  405a64:	eeb8 7bc7 	vcvt.f64.s32	d7, s14

00405a68 <.LVL401>:
  405a68:	7003      	strb	r3, [r0, #0]
  405a6a:	f100 0b01 	add.w	fp, r0, #1

00405a6e <.LVL402>:
  405a6e:	ee36 7b47 	vsub.f64	d7, d6, d7
  405a72:	d012      	beq.n	405a9a <.LVL409>
  405a74:	eeb2 5b04 	vmov.f64	d5, #36	; 0x41200000  10.0
  405a78:	9b08      	ldr	r3, [sp, #32]

00405a7a <.LVL403>:
  405a7a:	1959      	adds	r1, r3, r5

00405a7c <.LVL404>:
  405a7c:	ee27 7b05 	vmul.f64	d7, d7, d5
  405a80:	eebd 6bc7 	vcvt.s32.f64	s12, d7

00405a84 <.LVL405>:
  405a84:	ee16 3a10 	vmov	r3, s12
  405a88:	3330      	adds	r3, #48	; 0x30
  405a8a:	f80b 3b01 	strb.w	r3, [fp], #1

00405a8e <.LVL406>:
  405a8e:	458b      	cmp	fp, r1
  405a90:	eeb8 6bc6 	vcvt.f64.s32	d6, s12

00405a94 <.LVL407>:
  405a94:	ee37 7b46 	vsub.f64	d7, d7, d6

00405a98 <.LVL408>:
  405a98:	d1f0      	bne.n	405a7c <.LVL404>

00405a9a <.LVL409>:
  405a9a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
  405a9e:	ee34 5b06 	vadd.f64	d5, d4, d6
  405aa2:	eeb4 5bc7 	vcmpe.f64	d5, d7
  405aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405aaa:	d538      	bpl.n	405b1e <.LVL424>
  405aac:	9202      	str	r2, [sp, #8]

00405aae <.LVL410>:
  405aae:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
  405ab2:	f7ff bbb6 	b.w	405222 <.L77>

00405ab6 <.LVL411>:
  405ab6:	9b07      	ldr	r3, [sp, #28]
  405ab8:	1b9f      	subs	r7, r3, r6

00405aba <.LVL412>:
  405aba:	2300      	movs	r3, #0
  405abc:	f7ff bbe8 	b.w	405290 <.LVL127>

00405ac0 <.LVL413>:
  405ac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  405ac2:	9a05      	ldr	r2, [sp, #20]
  405ac4:	920d      	str	r2, [sp, #52]	; 0x34

00405ac6 <.LVL414>:
  405ac6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  405aca:	9f07      	ldr	r7, [sp, #28]
  405acc:	f7ff bbe0 	b.w	405290 <.LVL127>

00405ad0 <.LVL415>:
  405ad0:	ed9d 6b0e 	vldr	d6, [sp, #56]	; 0x38
  405ad4:	2102      	movs	r1, #2
  405ad6:	e5ef      	b.n	4056b8 <.LVL274>

00405ad8 <.LVL416>:
  405ad8:	2e00      	cmp	r6, #0
  405ada:	f43f aef2 	beq.w	4058c2 <.LVL335>
  405ade:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405ae0:	2b00      	cmp	r3, #0
  405ae2:	f77f af5b 	ble.w	40599c <.LDL1>

00405ae6 <.LVL417>:
  405ae6:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
  405aea:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
  405aee:	3101      	adds	r1, #1

00405af0 <.LVL418>:
  405af0:	ee07 1a90 	vmov	s15, r1
  405af4:	ee26 6b04 	vmul.f64	d6, d6, d4
  405af8:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  405afc:	9a02      	ldr	r2, [sp, #8]
  405afe:	eea6 5b07 	vfma.f64	d5, d6, d7
  405b02:	ec51 0b15 	vmov	r0, r1, d5
  405b06:	3a01      	subs	r2, #1

00405b08 <.LVL419>:
  405b08:	461d      	mov	r5, r3
  405b0a:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000

00405b0e <.LVL420>:
  405b0e:	e5ee      	b.n	4056ee <.LVL277>

00405b10 <.L133>:
  405b10:	2239      	movs	r2, #57	; 0x39
  405b12:	46aa      	mov	sl, r5
  405b14:	7032      	strb	r2, [r6, #0]
  405b16:	463d      	mov	r5, r7

00405b18 <.LVL422>:
  405b18:	f106 0b01 	add.w	fp, r6, #1

00405b1c <.LVL423>:
  405b1c:	e558      	b.n	4055d0 <.L142>

00405b1e <.LVL424>:
  405b1e:	ee36 6b44 	vsub.f64	d6, d6, d4
  405b22:	eeb4 6bc7 	vcmpe.f64	d6, d7
  405b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405b2a:	dc01      	bgt.n	405b30 <.LVL426>
  405b2c:	e736      	b.n	40599c <.LDL1>

00405b2e <.LVL425>:
  405b2e:	468b      	mov	fp, r1

00405b30 <.LVL426>:
  405b30:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
  405b34:	2b30      	cmp	r3, #48	; 0x30
  405b36:	f10b 31ff 	add.w	r1, fp, #4294967295

00405b3a <.LVL427>:
  405b3a:	d0f8      	beq.n	405b2e <.LVL425>
  405b3c:	e62d      	b.n	40579a <.LVL288+0xe>

00405b3e <.LVL428>:
  405b3e:	9202      	str	r2, [sp, #8]

00405b40 <.LVL429>:
  405b40:	f7ff bb6f 	b.w	405222 <.L77>

00405b44 <.LVL430>:
  405b44:	930d      	str	r3, [sp, #52]	; 0x34

00405b46 <.LVL431>:
  405b46:	e447      	b.n	4053d8 <.LVL175>

00405b48 <.LVL432>:
  405b48:	2a39      	cmp	r2, #57	; 0x39
  405b4a:	46cb      	mov	fp, r9

00405b4c <.LVL433>:
  405b4c:	4691      	mov	r9, r2

00405b4e <.LVL434>:
  405b4e:	d0df      	beq.n	405b10 <.L133>
  405b50:	f1bb 0f00 	cmp.w	fp, #0
  405b54:	f73f af08 	bgt.w	405968 <.LVL358>
  405b58:	e708      	b.n	40596c <.LVL359>

00405b5a <.LVL435>:
  405b5a:	f47f af07 	bne.w	40596c <.LVL359>
  405b5e:	f019 0f01 	tst.w	r9, #1
  405b62:	f43f af03 	beq.w	40596c <.LVL359>
  405b66:	e6fb      	b.n	405960 <.LVL357>

00405b68 <.LVL436>:
  405b68:	4629      	mov	r1, r5
  405b6a:	2300      	movs	r3, #0
  405b6c:	220a      	movs	r2, #10
  405b6e:	4620      	mov	r0, r4

00405b70 <.LVL437>:
  405b70:	f003 fece 	bl	409910 <__multadd>

00405b74 <.LVL438>:
  405b74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405b76:	2b00      	cmp	r3, #0
  405b78:	4605      	mov	r5, r0

00405b7a <.LVL439>:
  405b7a:	dd08      	ble.n	405b8e <.LVL443>
  405b7c:	461e      	mov	r6, r3
  405b7e:	e460      	b.n	405442 <.LVL189>

00405b80 <.LVL440>:
  405b80:	9b01      	ldr	r3, [sp, #4]

00405b82 <.LVL441>:
  405b82:	2b02      	cmp	r3, #2
  405b84:	dc20      	bgt.n	405bc8 <.LVL451>
  405b86:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  405b88:	e4f1      	b.n	40556e <.LVL230>

00405b8a <.LVL442>:
  405b8a:	2102      	movs	r1, #2
  405b8c:	e594      	b.n	4056b8 <.LVL274>

00405b8e <.LVL443>:
  405b8e:	9b01      	ldr	r3, [sp, #4]

00405b90 <.LVL444>:
  405b90:	2b02      	cmp	r3, #2
  405b92:	dc19      	bgt.n	405bc8 <.LVL451>
  405b94:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  405b96:	e454      	b.n	405442 <.LVL189>

00405b98 <.LVL445>:
  405b98:	2501      	movs	r5, #1
  405b9a:	f7ff bab0 	b.w	4050fe <.LVL91>

00405b9e <.LVL446>:
  405b9e:	f43f ac33 	beq.w	405408 <.LVL184>
  405ba2:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  405ba6:	e4c0      	b.n	40552a <.LVL218>

00405ba8 <.LVL447>:
  405ba8:	2500      	movs	r5, #0

00405baa <.LVL448>:
  405baa:	6465      	str	r5, [r4, #68]	; 0x44
  405bac:	4629      	mov	r1, r5
  405bae:	4620      	mov	r0, r4
  405bb0:	f004 fa8e 	bl	40a0d0 <.LFE2>

00405bb4 <.LVL449>:
  405bb4:	f04f 36ff 	mov.w	r6, #4294967295
  405bb8:	2301      	movs	r3, #1
  405bba:	9008      	str	r0, [sp, #32]
  405bbc:	46a9      	mov	r9, r5
  405bbe:	6420      	str	r0, [r4, #64]	; 0x40

00405bc0 <.LVL450>:
  405bc0:	960c      	str	r6, [sp, #48]	; 0x30
  405bc2:	9309      	str	r3, [sp, #36]	; 0x24
  405bc4:	f7ff bad3 	b.w	40516e <.LVL104>

00405bc8 <.LVL451>:
  405bc8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  405bca:	e658      	b.n	40587e <.LVL323>
  405bcc:	00408af8 	.word	0x00408af8
  405bd0:	0040a798 	.word	0x0040a798

Disassembly of section .text.Transform%33:

00405bd4 <Transform>:

    #define MD5STEP(f, w, x, y, z, data, s) \
        w = rotlFixed(w + f(x, y, z) + data, s) + x

    static int Transform(Md5* md5)
    {
  405bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00405bd8 <.LCFI0>:
  405bd8:	b083      	sub	sp, #12

00405bda <.LCFI1>:
        /* Copy context->state[] to working vars  */
        word32 a = md5->digest[0];
        word32 b = md5->digest[1];
  405bda:	6d05      	ldr	r5, [r0, #80]	; 0x50

00405bdc <.LVL2>:
        word32 c = md5->digest[2];
  405bdc:	6d44      	ldr	r4, [r0, #84]	; 0x54
  405bde:	4627      	mov	r7, r4

00405be0 <.LVL3>:
        word32 d = md5->digest[3];

        MD5STEP(F1, a, b, c, d, md5->buffer[0]  + 0xd76aa478,  7);
  405be0:	6d83      	ldr	r3, [r0, #88]	; 0x58
  405be2:	ea84 0903 	eor.w	r9, r4, r3
  405be6:	ea09 0905 	and.w	r9, r9, r5
  405bea:	ea89 0903 	eor.w	r9, r9, r3
  405bee:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405bf0:	68c2      	ldr	r2, [r0, #12]
  405bf2:	189a      	adds	r2, r3, r2
  405bf4:	4bdf      	ldr	r3, [pc, #892]	; (405f74 <.LVL188+0x10>)
  405bf6:	4413      	add	r3, r2
  405bf8:	4499      	add	r9, r3
  405bfa:	eb05 6979 	add.w	r9, r5, r9, ror #25

00405bfe <.LVL7>:
        MD5STEP(F1, d, a, b, c, md5->buffer[1]  + 0xe8c7b756, 12);
  405bfe:	ea85 0c04 	eor.w	ip, r5, r4
  405c02:	ea0c 0c09 	and.w	ip, ip, r9
  405c06:	ea8c 0c04 	eor.w	ip, ip, r4
  405c0a:	6d83      	ldr	r3, [r0, #88]	; 0x58
  405c0c:	6902      	ldr	r2, [r0, #16]
  405c0e:	4413      	add	r3, r2
  405c10:	4cd9      	ldr	r4, [pc, #868]	; (405f78 <.LVL188+0x14>)

00405c12 <.LVL10>:
  405c12:	441c      	add	r4, r3
  405c14:	44a4      	add	ip, r4
  405c16:	eb09 5c3c 	add.w	ip, r9, ip, ror #20

00405c1a <.LVL12>:
        MD5STEP(F1, c, d, a, b, md5->buffer[2]  + 0x242070db, 17);
  405c1a:	ea85 0609 	eor.w	r6, r5, r9
  405c1e:	ea06 060c 	and.w	r6, r6, ip
  405c22:	406e      	eors	r6, r5
  405c24:	6943      	ldr	r3, [r0, #20]
  405c26:	9701      	str	r7, [sp, #4]
  405c28:	443b      	add	r3, r7
  405c2a:	4ad4      	ldr	r2, [pc, #848]	; (405f7c <.LVL188+0x18>)
  405c2c:	441a      	add	r2, r3
  405c2e:	4416      	add	r6, r2
  405c30:	eb0c 36f6 	add.w	r6, ip, r6, ror #15

00405c34 <.LVL16>:
        MD5STEP(F1, b, c, d, a, md5->buffer[3]  + 0xc1bdceee, 22);
  405c34:	ea89 010c 	eor.w	r1, r9, ip
  405c38:	4031      	ands	r1, r6
  405c3a:	ea81 0109 	eor.w	r1, r1, r9
  405c3e:	6983      	ldr	r3, [r0, #24]
  405c40:	18ea      	adds	r2, r5, r3
  405c42:	4bcf      	ldr	r3, [pc, #828]	; (405f80 <.LVL188+0x1c>)
  405c44:	4413      	add	r3, r2
  405c46:	4419      	add	r1, r3
  405c48:	eb06 21b1 	add.w	r1, r6, r1, ror #10

00405c4c <.LVL20>:
        MD5STEP(F1, a, b, c, d, md5->buffer[4]  + 0xf57c0faf,  7);
  405c4c:	ea8c 0306 	eor.w	r3, ip, r6
  405c50:	400b      	ands	r3, r1
  405c52:	ea83 030c 	eor.w	r3, r3, ip
  405c56:	4acb      	ldr	r2, [pc, #812]	; (405f84 <.LVL188+0x20>)
  405c58:	69c4      	ldr	r4, [r0, #28]
  405c5a:	4422      	add	r2, r4
  405c5c:	4491      	add	r9, r2

00405c5e <.LVL23>:
  405c5e:	444b      	add	r3, r9
  405c60:	eb01 6373 	add.w	r3, r1, r3, ror #25

00405c64 <.LVL25>:
        MD5STEP(F1, d, a, b, c, md5->buffer[5]  + 0x4787c62a, 12);
  405c64:	ea86 0401 	eor.w	r4, r6, r1
  405c68:	401c      	ands	r4, r3
  405c6a:	4074      	eors	r4, r6
  405c6c:	4ac6      	ldr	r2, [pc, #792]	; (405f88 <.LVL188+0x24>)
  405c6e:	6a07      	ldr	r7, [r0, #32]
  405c70:	443a      	add	r2, r7
  405c72:	4494      	add	ip, r2

00405c74 <.LVL28>:
  405c74:	4464      	add	r4, ip
  405c76:	eb03 5434 	add.w	r4, r3, r4, ror #20

00405c7a <.LVL30>:
        MD5STEP(F1, c, d, a, b, md5->buffer[6]  + 0xa8304613, 17);
  405c7a:	ea81 0203 	eor.w	r2, r1, r3
  405c7e:	4022      	ands	r2, r4
  405c80:	404a      	eors	r2, r1
  405c82:	f8df e36c 	ldr.w	lr, [pc, #876]	; 405ff0 <.LVL188+0x8c>
  405c86:	6a47      	ldr	r7, [r0, #36]	; 0x24
  405c88:	44be      	add	lr, r7
  405c8a:	4476      	add	r6, lr

00405c8c <.LVL33>:
  405c8c:	4432      	add	r2, r6
  405c8e:	eb04 32f2 	add.w	r2, r4, r2, ror #15

00405c92 <.LVL35>:
        MD5STEP(F1, b, c, d, a, md5->buffer[7]  + 0xfd469501, 22);
  405c92:	f8d0 a028 	ldr.w	sl, [r0, #40]	; 0x28
  405c96:	ea83 0804 	eor.w	r8, r3, r4
  405c9a:	ea08 0802 	and.w	r8, r8, r2
  405c9e:	ea88 0803 	eor.w	r8, r8, r3
  405ca2:	4eba      	ldr	r6, [pc, #744]	; (405f8c <.LVL188+0x28>)
  405ca4:	4456      	add	r6, sl
  405ca6:	4431      	add	r1, r6

00405ca8 <.LVL39>:
  405ca8:	4488      	add	r8, r1
  405caa:	eb02 28b8 	add.w	r8, r2, r8, ror #10

00405cae <.LVL41>:
        MD5STEP(F1, a, b, c, d, md5->buffer[8]  + 0x698098d8,  7);
  405cae:	ea84 0e02 	eor.w	lr, r4, r2
  405cb2:	ea0e 0e08 	and.w	lr, lr, r8
  405cb6:	ea8e 0e04 	eor.w	lr, lr, r4
  405cba:	49b5      	ldr	r1, [pc, #724]	; (405f90 <.LVL188+0x2c>)
  405cbc:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
  405cbe:	4431      	add	r1, r6
  405cc0:	440b      	add	r3, r1

00405cc2 <.LVL44>:
  405cc2:	449e      	add	lr, r3
  405cc4:	eb08 6e7e 	add.w	lr, r8, lr, ror #25

00405cc8 <.LVL46>:
        MD5STEP(F1, d, a, b, c, md5->buffer[9]  + 0x8b44f7af, 12);
  405cc8:	ea82 0908 	eor.w	r9, r2, r8
  405ccc:	ea09 090e 	and.w	r9, r9, lr
  405cd0:	ea89 0902 	eor.w	r9, r9, r2
  405cd4:	4baf      	ldr	r3, [pc, #700]	; (405f94 <.LVL188+0x30>)
  405cd6:	6b01      	ldr	r1, [r0, #48]	; 0x30
  405cd8:	440b      	add	r3, r1
  405cda:	441c      	add	r4, r3

00405cdc <.LVL49>:
  405cdc:	44a1      	add	r9, r4
  405cde:	eb0e 5939 	add.w	r9, lr, r9, ror #20

00405ce2 <.LVL51>:
        MD5STEP(F1, c, d, a, b, md5->buffer[10] + 0xffff5bb1, 17);
  405ce2:	ea88 0c0e 	eor.w	ip, r8, lr
  405ce6:	ea0c 0c09 	and.w	ip, ip, r9
  405cea:	ea8c 0c08 	eor.w	ip, ip, r8
  405cee:	4baa      	ldr	r3, [pc, #680]	; (405f98 <.LVL188+0x34>)
  405cf0:	6b41      	ldr	r1, [r0, #52]	; 0x34
  405cf2:	440b      	add	r3, r1
  405cf4:	441a      	add	r2, r3

00405cf6 <.LVL54>:
  405cf6:	4494      	add	ip, r2
  405cf8:	eb09 3cfc 	add.w	ip, r9, ip, ror #15

00405cfc <.LVL56>:
        MD5STEP(F1, b, c, d, a, md5->buffer[11] + 0x895cd7be, 22);
  405cfc:	ea8e 0609 	eor.w	r6, lr, r9
  405d00:	ea06 060c 	and.w	r6, r6, ip
  405d04:	ea86 060e 	eor.w	r6, r6, lr
  405d08:	4ba4      	ldr	r3, [pc, #656]	; (405f9c <.LVL188+0x38>)
  405d0a:	6b82      	ldr	r2, [r0, #56]	; 0x38
  405d0c:	4413      	add	r3, r2
  405d0e:	4498      	add	r8, r3

00405d10 <.LVL59>:
  405d10:	4446      	add	r6, r8
  405d12:	eb0c 26b6 	add.w	r6, ip, r6, ror #10

00405d16 <.LVL61>:
        MD5STEP(F1, a, b, c, d, md5->buffer[12] + 0x6b901122,  7);
  405d16:	f8d0 803c 	ldr.w	r8, [r0, #60]	; 0x3c
  405d1a:	ea89 010c 	eor.w	r1, r9, ip
  405d1e:	4031      	ands	r1, r6
  405d20:	ea81 0109 	eor.w	r1, r1, r9
  405d24:	4b9e      	ldr	r3, [pc, #632]	; (405fa0 <.LVL188+0x3c>)
  405d26:	4443      	add	r3, r8
  405d28:	449e      	add	lr, r3

00405d2a <.LVL65>:
  405d2a:	4471      	add	r1, lr
  405d2c:	eb06 6171 	add.w	r1, r6, r1, ror #25

00405d30 <.LVL67>:
        MD5STEP(F1, d, a, b, c, md5->buffer[13] + 0xfd987193, 12);
  405d30:	ea8c 0306 	eor.w	r3, ip, r6
  405d34:	400b      	ands	r3, r1
  405d36:	ea83 030c 	eor.w	r3, r3, ip
  405d3a:	4a9a      	ldr	r2, [pc, #616]	; (405fa4 <.LVL188+0x40>)
  405d3c:	6c04      	ldr	r4, [r0, #64]	; 0x40
  405d3e:	4422      	add	r2, r4
  405d40:	4491      	add	r9, r2

00405d42 <.LVL70>:
  405d42:	444b      	add	r3, r9
  405d44:	eb01 5333 	add.w	r3, r1, r3, ror #20

00405d48 <.LVL72>:
        MD5STEP(F1, c, d, a, b, md5->buffer[14] + 0xa679438e, 17);
  405d48:	f8d0 9044 	ldr.w	r9, [r0, #68]	; 0x44
  405d4c:	ea86 0401 	eor.w	r4, r6, r1
  405d50:	401c      	ands	r4, r3
  405d52:	4074      	eors	r4, r6
  405d54:	4a94      	ldr	r2, [pc, #592]	; (405fa8 <.LVL188+0x44>)
  405d56:	444a      	add	r2, r9
  405d58:	4494      	add	ip, r2

00405d5a <.LVL76>:
  405d5a:	4464      	add	r4, ip
  405d5c:	eb03 34f4 	add.w	r4, r3, r4, ror #15

00405d60 <.LVL78>:
        MD5STEP(F1, b, c, d, a, md5->buffer[15] + 0x49b40821, 22);
  405d60:	f8d0 c048 	ldr.w	ip, [r0, #72]	; 0x48
  405d64:	ea81 0203 	eor.w	r2, r1, r3
  405d68:	4022      	ands	r2, r4
  405d6a:	404a      	eors	r2, r1
  405d6c:	f8df e284 	ldr.w	lr, [pc, #644]	; 405ff4 <.LVL188+0x90>
  405d70:	44e6      	add	lr, ip
  405d72:	4476      	add	r6, lr

00405d74 <.LVL82>:
  405d74:	4432      	add	r2, r6
  405d76:	eb04 22b2 	add.w	r2, r4, r2, ror #10

00405d7a <.LVL84>:

        MD5STEP(F2, a, b, c, d, md5->buffer[1]  + 0xf61e2562,  5);
  405d7a:	ea84 0b02 	eor.w	fp, r4, r2
  405d7e:	ea0b 0b03 	and.w	fp, fp, r3
  405d82:	ea8b 0b04 	eor.w	fp, fp, r4
  405d86:	4e89      	ldr	r6, [pc, #548]	; (405fac <.LVL188+0x48>)
  405d88:	6907      	ldr	r7, [r0, #16]
  405d8a:	443e      	add	r6, r7
  405d8c:	4431      	add	r1, r6

00405d8e <.LVL87>:
  405d8e:	448b      	add	fp, r1
  405d90:	eb02 6bfb 	add.w	fp, r2, fp, ror #27

00405d94 <.LVL89>:
        MD5STEP(F2, d, a, b, c, md5->buffer[6]  + 0xc040b340,  9);
  405d94:	ea82 0e0b 	eor.w	lr, r2, fp
  405d98:	ea0e 0e04 	and.w	lr, lr, r4
  405d9c:	ea8e 0e02 	eor.w	lr, lr, r2
  405da0:	4983      	ldr	r1, [pc, #524]	; (405fb0 <.LVL188+0x4c>)
  405da2:	6a46      	ldr	r6, [r0, #36]	; 0x24
  405da4:	4431      	add	r1, r6
  405da6:	440b      	add	r3, r1

00405da8 <.LVL92>:
  405da8:	449e      	add	lr, r3
  405daa:	eb0b 5efe 	add.w	lr, fp, lr, ror #23

00405dae <.LVL94>:
        MD5STEP(F2, c, d, a, b, md5->buffer[11] + 0x265e5a51, 14);
  405dae:	ea8b 030e 	eor.w	r3, fp, lr
  405db2:	4013      	ands	r3, r2
  405db4:	ea83 030b 	eor.w	r3, r3, fp
  405db8:	497e      	ldr	r1, [pc, #504]	; (405fb4 <.LVL188+0x50>)
  405dba:	6b86      	ldr	r6, [r0, #56]	; 0x38
  405dbc:	4431      	add	r1, r6
  405dbe:	440c      	add	r4, r1

00405dc0 <.LVL97>:
  405dc0:	4423      	add	r3, r4
  405dc2:	eb0e 43b3 	add.w	r3, lr, r3, ror #18

00405dc6 <.LVL99>:
        MD5STEP(F2, b, c, d, a, md5->buffer[0]  + 0xe9b6c7aa, 20);
  405dc6:	ea8e 0603 	eor.w	r6, lr, r3
  405dca:	ea06 060b 	and.w	r6, r6, fp
  405dce:	ea86 060e 	eor.w	r6, r6, lr
  405dd2:	4979      	ldr	r1, [pc, #484]	; (405fb8 <.LVL188+0x54>)
  405dd4:	68c4      	ldr	r4, [r0, #12]
  405dd6:	4421      	add	r1, r4
  405dd8:	440a      	add	r2, r1

00405dda <.LVL102>:
  405dda:	4416      	add	r6, r2
  405ddc:	eb03 3636 	add.w	r6, r3, r6, ror #12

00405de0 <.LVL104>:
        MD5STEP(F2, a, b, c, d, md5->buffer[5]  + 0xd62f105d,  5);
  405de0:	ea83 0206 	eor.w	r2, r3, r6
  405de4:	ea02 020e 	and.w	r2, r2, lr
  405de8:	405a      	eors	r2, r3
  405dea:	4974      	ldr	r1, [pc, #464]	; (405fbc <.LVL188+0x58>)
  405dec:	6a04      	ldr	r4, [r0, #32]
  405dee:	4421      	add	r1, r4
  405df0:	448b      	add	fp, r1

00405df2 <.LVL107>:
  405df2:	445a      	add	r2, fp
  405df4:	eb06 62f2 	add.w	r2, r6, r2, ror #27

00405df8 <.LVL109>:
        MD5STEP(F2, d, a, b, c, md5->buffer[10] + 0x02441453,  9);
  405df8:	ea86 0102 	eor.w	r1, r6, r2
  405dfc:	4019      	ands	r1, r3
  405dfe:	4071      	eors	r1, r6
  405e00:	4c6f      	ldr	r4, [pc, #444]	; (405fc0 <.LVL188+0x5c>)
  405e02:	6b47      	ldr	r7, [r0, #52]	; 0x34
  405e04:	443c      	add	r4, r7
  405e06:	44a6      	add	lr, r4

00405e08 <.LVL112>:
  405e08:	4471      	add	r1, lr
  405e0a:	eb02 51f1 	add.w	r1, r2, r1, ror #23

00405e0e <.LVL114>:
        MD5STEP(F2, c, d, a, b, md5->buffer[15] + 0xd8a1e681, 14);
  405e0e:	ea82 0401 	eor.w	r4, r2, r1
  405e12:	4034      	ands	r4, r6
  405e14:	4054      	eors	r4, r2
  405e16:	f8df e1e0 	ldr.w	lr, [pc, #480]	; 405ff8 <.LVL188+0x94>
  405e1a:	44e6      	add	lr, ip
  405e1c:	4473      	add	r3, lr

00405e1e <.LVL117>:
  405e1e:	441c      	add	r4, r3
  405e20:	eb01 44b4 	add.w	r4, r1, r4, ror #18

00405e24 <.LVL119>:
        MD5STEP(F2, b, c, d, a, md5->buffer[4]  + 0xe7d3fbc8, 20);
  405e24:	ea81 0304 	eor.w	r3, r1, r4
  405e28:	4013      	ands	r3, r2
  405e2a:	404b      	eors	r3, r1
  405e2c:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 405ffc <.LVL188+0x98>
  405e30:	69c7      	ldr	r7, [r0, #28]
  405e32:	44be      	add	lr, r7
  405e34:	4476      	add	r6, lr

00405e36 <.LVL122>:
  405e36:	4433      	add	r3, r6
  405e38:	eb04 3333 	add.w	r3, r4, r3, ror #12

00405e3c <.LVL124>:
        MD5STEP(F2, a, b, c, d, md5->buffer[9]  + 0x21e1cde6,  5);
  405e3c:	ea84 0b03 	eor.w	fp, r4, r3
  405e40:	ea0b 0b01 	and.w	fp, fp, r1
  405e44:	ea8b 0b04 	eor.w	fp, fp, r4
  405e48:	4e5e      	ldr	r6, [pc, #376]	; (405fc4 <.LVL188+0x60>)
  405e4a:	6b07      	ldr	r7, [r0, #48]	; 0x30
  405e4c:	443e      	add	r6, r7
  405e4e:	4432      	add	r2, r6

00405e50 <.LVL127>:
  405e50:	4493      	add	fp, r2
  405e52:	eb03 6bfb 	add.w	fp, r3, fp, ror #27

00405e56 <.LVL129>:
        MD5STEP(F2, d, a, b, c, md5->buffer[14] + 0xc33707d6,  9);
  405e56:	ea83 0e0b 	eor.w	lr, r3, fp
  405e5a:	ea0e 0e04 	and.w	lr, lr, r4
  405e5e:	ea8e 0e03 	eor.w	lr, lr, r3
  405e62:	4a59      	ldr	r2, [pc, #356]	; (405fc8 <.LVL188+0x64>)
  405e64:	444a      	add	r2, r9
  405e66:	4411      	add	r1, r2

00405e68 <.LVL132>:
  405e68:	448e      	add	lr, r1
  405e6a:	eb0b 5efe 	add.w	lr, fp, lr, ror #23

00405e6e <.LVL134>:
        MD5STEP(F2, c, d, a, b, md5->buffer[3]  + 0xf4d50d87, 14);
  405e6e:	ea8b 060e 	eor.w	r6, fp, lr
  405e72:	401e      	ands	r6, r3
  405e74:	ea86 060b 	eor.w	r6, r6, fp
  405e78:	4a54      	ldr	r2, [pc, #336]	; (405fcc <.LVL188+0x68>)
  405e7a:	6981      	ldr	r1, [r0, #24]
  405e7c:	440a      	add	r2, r1
  405e7e:	4414      	add	r4, r2

00405e80 <.LVL137>:
  405e80:	4426      	add	r6, r4
  405e82:	eb0e 46b6 	add.w	r6, lr, r6, ror #18

00405e86 <.LVL139>:
        MD5STEP(F2, b, c, d, a, md5->buffer[8]  + 0x455a14ed, 20);
  405e86:	ea8e 0206 	eor.w	r2, lr, r6
  405e8a:	ea02 020b 	and.w	r2, r2, fp
  405e8e:	ea82 020e 	eor.w	r2, r2, lr
  405e92:	494f      	ldr	r1, [pc, #316]	; (405fd0 <.LVL188+0x6c>)
  405e94:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
  405e96:	4421      	add	r1, r4
  405e98:	440b      	add	r3, r1

00405e9a <.LVL142>:
  405e9a:	441a      	add	r2, r3
  405e9c:	eb06 3232 	add.w	r2, r6, r2, ror #12

00405ea0 <.LVL144>:
        MD5STEP(F2, a, b, c, d, md5->buffer[13] + 0xa9e3e905,  5);
  405ea0:	ea86 0302 	eor.w	r3, r6, r2
  405ea4:	ea03 030e 	and.w	r3, r3, lr
  405ea8:	4073      	eors	r3, r6
  405eaa:	494a      	ldr	r1, [pc, #296]	; (405fd4 <.LVL188+0x70>)
  405eac:	6c04      	ldr	r4, [r0, #64]	; 0x40
  405eae:	4421      	add	r1, r4
  405eb0:	448b      	add	fp, r1

00405eb2 <.LVL147>:
  405eb2:	445b      	add	r3, fp
  405eb4:	eb02 63f3 	add.w	r3, r2, r3, ror #27

00405eb8 <.LVL149>:
        MD5STEP(F2, d, a, b, c, md5->buffer[2]  + 0xfcefa3f8,  9);
  405eb8:	ea82 0103 	eor.w	r1, r2, r3
  405ebc:	4031      	ands	r1, r6
  405ebe:	4051      	eors	r1, r2
  405ec0:	4c45      	ldr	r4, [pc, #276]	; (405fd8 <.LVL188+0x74>)
  405ec2:	6947      	ldr	r7, [r0, #20]
  405ec4:	443c      	add	r4, r7
  405ec6:	44a6      	add	lr, r4

00405ec8 <.LVL152>:
  405ec8:	4471      	add	r1, lr
  405eca:	eb03 51f1 	add.w	r1, r3, r1, ror #23

00405ece <.LVL154>:
        MD5STEP(F2, c, d, a, b, md5->buffer[7]  + 0x676f02d9, 14);
  405ece:	ea83 0401 	eor.w	r4, r3, r1
  405ed2:	4014      	ands	r4, r2
  405ed4:	405c      	eors	r4, r3
  405ed6:	f8df e128 	ldr.w	lr, [pc, #296]	; 406000 <.LVL188+0x9c>
  405eda:	44d6      	add	lr, sl
  405edc:	4476      	add	r6, lr

00405ede <.LVL157>:
  405ede:	4434      	add	r4, r6
  405ee0:	eb01 44b4 	add.w	r4, r1, r4, ror #18

00405ee4 <.LVL159>:
        MD5STEP(F2, b, c, d, a, md5->buffer[12] + 0x8d2a4c8a, 20);
  405ee4:	ea81 0b04 	eor.w	fp, r1, r4
  405ee8:	ea03 060b 	and.w	r6, r3, fp
  405eec:	404e      	eors	r6, r1
  405eee:	f8df e114 	ldr.w	lr, [pc, #276]	; 406004 <.LVL188+0xa0>
  405ef2:	44c6      	add	lr, r8
  405ef4:	4472      	add	r2, lr

00405ef6 <.LVL163>:
  405ef6:	4416      	add	r6, r2
  405ef8:	eb04 3636 	add.w	r6, r4, r6, ror #12

00405efc <.LVL165>:

        MD5STEP(F3, a, b, c, d, md5->buffer[5]  + 0xfffa3942,  4);
  405efc:	4a37      	ldr	r2, [pc, #220]	; (405fdc <.LVL188+0x78>)
  405efe:	6a07      	ldr	r7, [r0, #32]
  405f00:	443a      	add	r2, r7
  405f02:	4413      	add	r3, r2

00405f04 <.LVL166>:
  405f04:	ea8b 0b06 	eor.w	fp, fp, r6
  405f08:	445b      	add	r3, fp
  405f0a:	eb06 7333 	add.w	r3, r6, r3, ror #28

00405f0e <.LVL168>:
        MD5STEP(F3, d, a, b, c, md5->buffer[8]  + 0x8771f681, 11);
  405f0e:	ea84 0206 	eor.w	r2, r4, r6
  405f12:	405a      	eors	r2, r3
  405f14:	f8df e0f0 	ldr.w	lr, [pc, #240]	; 406008 <.LVL188+0xa4>
  405f18:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
  405f1a:	44be      	add	lr, r7
  405f1c:	4471      	add	r1, lr

00405f1e <.LVL171>:
  405f1e:	4411      	add	r1, r2
  405f20:	eb03 5171 	add.w	r1, r3, r1, ror #21

00405f24 <.LVL173>:
        MD5STEP(F3, c, d, a, b, md5->buffer[11] + 0x6d9d6122, 16);
  405f24:	ea86 0b03 	eor.w	fp, r6, r3
  405f28:	ea8b 0b01 	eor.w	fp, fp, r1
  405f2c:	4a2c      	ldr	r2, [pc, #176]	; (405fe0 <.LVL188+0x7c>)
  405f2e:	6b87      	ldr	r7, [r0, #56]	; 0x38
  405f30:	443a      	add	r2, r7
  405f32:	4414      	add	r4, r2

00405f34 <.LVL176>:
  405f34:	445c      	add	r4, fp
  405f36:	eb01 4434 	add.w	r4, r1, r4, ror #16

00405f3a <.LVL178>:
        MD5STEP(F3, b, c, d, a, md5->buffer[14] + 0xfde5380c, 23);
  405f3a:	ea83 0e01 	eor.w	lr, r3, r1
  405f3e:	ea8e 0e04 	eor.w	lr, lr, r4
  405f42:	4a28      	ldr	r2, [pc, #160]	; (405fe4 <.LVL188+0x80>)
  405f44:	444a      	add	r2, r9
  405f46:	4416      	add	r6, r2

00405f48 <.LVL181>:
  405f48:	44b6      	add	lr, r6
  405f4a:	eb04 2e7e 	add.w	lr, r4, lr, ror #9

00405f4e <.LVL183>:
        MD5STEP(F3, a, b, c, d, md5->buffer[1]  + 0xa4beea44,  4);
  405f4e:	ea81 0204 	eor.w	r2, r1, r4
  405f52:	ea82 020e 	eor.w	r2, r2, lr
  405f56:	4e24      	ldr	r6, [pc, #144]	; (405fe8 <.LVL188+0x84>)
  405f58:	6907      	ldr	r7, [r0, #16]
  405f5a:	443e      	add	r6, r7
  405f5c:	4433      	add	r3, r6

00405f5e <.LVL186>:
  405f5e:	4413      	add	r3, r2
  405f60:	eb0e 7333 	add.w	r3, lr, r3, ror #28

00405f64 <.LVL188>:
        MD5STEP(F3, d, a, b, c, md5->buffer[4]  + 0x4bdecfa9, 11);
  405f64:	ea84 020e 	eor.w	r2, r4, lr
  405f68:	405a      	eors	r2, r3
  405f6a:	4e20      	ldr	r6, [pc, #128]	; (405fec <.LVL188+0x88>)
  405f6c:	69c7      	ldr	r7, [r0, #28]
  405f6e:	443e      	add	r6, r7
  405f70:	4431      	add	r1, r6
  405f72:	e04b      	b.n	40600c <.LVL191>
  405f74:	d76aa478 	.word	0xd76aa478
  405f78:	e8c7b756 	.word	0xe8c7b756
  405f7c:	242070db 	.word	0x242070db
  405f80:	c1bdceee 	.word	0xc1bdceee
  405f84:	f57c0faf 	.word	0xf57c0faf
  405f88:	4787c62a 	.word	0x4787c62a
  405f8c:	fd469501 	.word	0xfd469501
  405f90:	698098d8 	.word	0x698098d8
  405f94:	8b44f7af 	.word	0x8b44f7af
  405f98:	ffff5bb1 	.word	0xffff5bb1
  405f9c:	895cd7be 	.word	0x895cd7be
  405fa0:	6b901122 	.word	0x6b901122
  405fa4:	fd987193 	.word	0xfd987193
  405fa8:	a679438e 	.word	0xa679438e
  405fac:	f61e2562 	.word	0xf61e2562
  405fb0:	c040b340 	.word	0xc040b340
  405fb4:	265e5a51 	.word	0x265e5a51
  405fb8:	e9b6c7aa 	.word	0xe9b6c7aa
  405fbc:	d62f105d 	.word	0xd62f105d
  405fc0:	02441453 	.word	0x02441453
  405fc4:	21e1cde6 	.word	0x21e1cde6
  405fc8:	c33707d6 	.word	0xc33707d6
  405fcc:	f4d50d87 	.word	0xf4d50d87
  405fd0:	455a14ed 	.word	0x455a14ed
  405fd4:	a9e3e905 	.word	0xa9e3e905
  405fd8:	fcefa3f8 	.word	0xfcefa3f8
  405fdc:	fffa3942 	.word	0xfffa3942
  405fe0:	6d9d6122 	.word	0x6d9d6122
  405fe4:	fde5380c 	.word	0xfde5380c
  405fe8:	a4beea44 	.word	0xa4beea44
  405fec:	4bdecfa9 	.word	0x4bdecfa9
  405ff0:	a8304613 	.word	0xa8304613
  405ff4:	49b40821 	.word	0x49b40821
  405ff8:	d8a1e681 	.word	0xd8a1e681
  405ffc:	e7d3fbc8 	.word	0xe7d3fbc8
  406000:	676f02d9 	.word	0x676f02d9
  406004:	8d2a4c8a 	.word	0x8d2a4c8a
  406008:	8771f681 	.word	0x8771f681

0040600c <.LVL191>:
  40600c:	4411      	add	r1, r2
  40600e:	eb03 5171 	add.w	r1, r3, r1, ror #21

00406012 <.LVL193>:
        MD5STEP(F3, c, d, a, b, md5->buffer[7]  + 0xf6bb4b60, 16);
  406012:	ea8e 0b03 	eor.w	fp, lr, r3
  406016:	ea8b 0b01 	eor.w	fp, fp, r1
  40601a:	4a8c      	ldr	r2, [pc, #560]	; (40624c <.LVL322>)
  40601c:	4452      	add	r2, sl
  40601e:	4414      	add	r4, r2

00406020 <.LVL196>:
  406020:	44a3      	add	fp, r4
  406022:	eb01 4b3b 	add.w	fp, r1, fp, ror #16

00406026 <.LVL198>:
        MD5STEP(F3, b, c, d, a, md5->buffer[10] + 0xbebfbc70, 23);
  406026:	ea83 0201 	eor.w	r2, r3, r1
  40602a:	ea82 020b 	eor.w	r2, r2, fp
  40602e:	4c88      	ldr	r4, [pc, #544]	; (406250 <.LVL322+0x4>)
  406030:	6b46      	ldr	r6, [r0, #52]	; 0x34
  406032:	4434      	add	r4, r6
  406034:	44a6      	add	lr, r4

00406036 <.LVL201>:
  406036:	4472      	add	r2, lr
  406038:	eb0b 2272 	add.w	r2, fp, r2, ror #9

0040603c <.LVL203>:
        MD5STEP(F3, a, b, c, d, md5->buffer[13] + 0x289b7ec6,  4);
  40603c:	ea81 040b 	eor.w	r4, r1, fp
  406040:	4054      	eors	r4, r2
  406042:	4e84      	ldr	r6, [pc, #528]	; (406254 <.LVL322+0x8>)
  406044:	6c07      	ldr	r7, [r0, #64]	; 0x40
  406046:	443e      	add	r6, r7
  406048:	4433      	add	r3, r6

0040604a <.LVL206>:
  40604a:	4423      	add	r3, r4
  40604c:	eb02 7333 	add.w	r3, r2, r3, ror #28

00406050 <.LVL208>:
        MD5STEP(F3, d, a, b, c, md5->buffer[0]  + 0xeaa127fa, 11);
  406050:	ea8b 0e02 	eor.w	lr, fp, r2
  406054:	ea8e 0e03 	eor.w	lr, lr, r3
  406058:	4c7f      	ldr	r4, [pc, #508]	; (406258 <.LVL322+0xc>)
  40605a:	68c6      	ldr	r6, [r0, #12]
  40605c:	4434      	add	r4, r6
  40605e:	4421      	add	r1, r4

00406060 <.LVL211>:
  406060:	448e      	add	lr, r1
  406062:	eb03 5e7e 	add.w	lr, r3, lr, ror #21

00406066 <.LVL213>:
        MD5STEP(F3, c, d, a, b, md5->buffer[3]  + 0xd4ef3085, 16);
  406066:	ea82 0603 	eor.w	r6, r2, r3
  40606a:	ea86 060e 	eor.w	r6, r6, lr
  40606e:	497b      	ldr	r1, [pc, #492]	; (40625c <.LVL322+0x10>)
  406070:	6984      	ldr	r4, [r0, #24]
  406072:	4421      	add	r1, r4
  406074:	448b      	add	fp, r1

00406076 <.LVL216>:
  406076:	445e      	add	r6, fp
  406078:	eb0e 4636 	add.w	r6, lr, r6, ror #16

0040607c <.LVL218>:
        MD5STEP(F3, b, c, d, a, md5->buffer[6]  + 0x04881d05, 23);
  40607c:	ea83 0b0e 	eor.w	fp, r3, lr
  406080:	ea8b 0b06 	eor.w	fp, fp, r6
  406084:	4976      	ldr	r1, [pc, #472]	; (406260 <.LVL322+0x14>)
  406086:	6a44      	ldr	r4, [r0, #36]	; 0x24
  406088:	4421      	add	r1, r4
  40608a:	440a      	add	r2, r1

0040608c <.LVL221>:
  40608c:	4493      	add	fp, r2
  40608e:	eb06 2b7b 	add.w	fp, r6, fp, ror #9

00406092 <.LVL223>:
        MD5STEP(F3, a, b, c, d, md5->buffer[9]  + 0xd9d4d039,  4);
  406092:	ea8e 0406 	eor.w	r4, lr, r6
  406096:	ea84 040b 	eor.w	r4, r4, fp
  40609a:	4a72      	ldr	r2, [pc, #456]	; (406264 <.LVL322+0x18>)
  40609c:	6b01      	ldr	r1, [r0, #48]	; 0x30
  40609e:	440a      	add	r2, r1
  4060a0:	4413      	add	r3, r2

004060a2 <.LVL226>:
  4060a2:	441c      	add	r4, r3
  4060a4:	eb0b 7434 	add.w	r4, fp, r4, ror #28

004060a8 <.LVL228>:
        MD5STEP(F3, d, a, b, c, md5->buffer[12] + 0xe6db99e5, 11);
  4060a8:	ea86 010b 	eor.w	r1, r6, fp
  4060ac:	4061      	eors	r1, r4
  4060ae:	4b6e      	ldr	r3, [pc, #440]	; (406268 <.LVL322+0x1c>)
  4060b0:	4443      	add	r3, r8
  4060b2:	449e      	add	lr, r3

004060b4 <.LVL231>:
  4060b4:	4471      	add	r1, lr
  4060b6:	eb04 5171 	add.w	r1, r4, r1, ror #21

004060ba <.LVL233>:
        MD5STEP(F3, c, d, a, b, md5->buffer[15] + 0x1fa27cf8, 16);
  4060ba:	ea8b 0304 	eor.w	r3, fp, r4
  4060be:	404b      	eors	r3, r1
  4060c0:	4a6a      	ldr	r2, [pc, #424]	; (40626c <.LVL322+0x20>)
  4060c2:	4462      	add	r2, ip
  4060c4:	4416      	add	r6, r2

004060c6 <.LVL236>:
  4060c6:	441e      	add	r6, r3
  4060c8:	eb01 4636 	add.w	r6, r1, r6, ror #16

004060cc <.LVL238>:
        MD5STEP(F3, b, c, d, a, md5->buffer[2]  + 0xc4ac5665, 23);
  4060cc:	ea84 0201 	eor.w	r2, r4, r1
  4060d0:	4072      	eors	r2, r6
  4060d2:	4b67      	ldr	r3, [pc, #412]	; (406270 <.LVL322+0x24>)
  4060d4:	6947      	ldr	r7, [r0, #20]
  4060d6:	443b      	add	r3, r7
  4060d8:	449b      	add	fp, r3

004060da <.LVL241>:
  4060da:	445a      	add	r2, fp
  4060dc:	eb06 2272 	add.w	r2, r6, r2, ror #9

004060e0 <.LVL243>:

        MD5STEP(F4, a, b, c, d, md5->buffer[0]  + 0xf4292244,  6);
  4060e0:	ea62 0301 	orn	r3, r2, r1
  4060e4:	4073      	eors	r3, r6
  4060e6:	f8df e1c8 	ldr.w	lr, [pc, #456]	; 4062b0 <.LVL322+0x64>
  4060ea:	68c7      	ldr	r7, [r0, #12]
  4060ec:	44be      	add	lr, r7
  4060ee:	4474      	add	r4, lr

004060f0 <.LVL246>:
  4060f0:	4423      	add	r3, r4
  4060f2:	eb02 63b3 	add.w	r3, r2, r3, ror #26

004060f6 <.LVL248>:
        MD5STEP(F4, d, a, b, c, md5->buffer[7]  + 0x432aff97, 10);
  4060f6:	ea63 0b06 	orn	fp, r3, r6
  4060fa:	ea8b 0b02 	eor.w	fp, fp, r2
  4060fe:	4c5d      	ldr	r4, [pc, #372]	; (406274 <.LVL322+0x28>)
  406100:	4454      	add	r4, sl
  406102:	4421      	add	r1, r4

00406104 <.LVL251>:
  406104:	448b      	add	fp, r1
  406106:	eb03 5bbb 	add.w	fp, r3, fp, ror #22

0040610a <.LVL253>:
        MD5STEP(F4, c, d, a, b, md5->buffer[14] + 0xab9423a7, 15);
  40610a:	ea6b 0e02 	orn	lr, fp, r2
  40610e:	ea8e 0e03 	eor.w	lr, lr, r3
  406112:	4959      	ldr	r1, [pc, #356]	; (406278 <.LVL322+0x2c>)
  406114:	4449      	add	r1, r9
  406116:	440e      	add	r6, r1

00406118 <.LVL256>:
  406118:	44b6      	add	lr, r6
  40611a:	eb0b 4e7e 	add.w	lr, fp, lr, ror #17

0040611e <.LVL258>:
        MD5STEP(F4, b, c, d, a, md5->buffer[5]  + 0xfc93a039, 21);
  40611e:	ea6e 0403 	orn	r4, lr, r3
  406122:	ea84 040b 	eor.w	r4, r4, fp
  406126:	4955      	ldr	r1, [pc, #340]	; (40627c <.LVL322+0x30>)
  406128:	6a06      	ldr	r6, [r0, #32]
  40612a:	4431      	add	r1, r6
  40612c:	440a      	add	r2, r1

0040612e <.LVL261>:
  40612e:	4414      	add	r4, r2
  406130:	eb0e 24f4 	add.w	r4, lr, r4, ror #11

00406134 <.LVL263>:
        MD5STEP(F4, a, b, c, d, md5->buffer[12] + 0x655b59c3,  6);
  406134:	ea64 060b 	orn	r6, r4, fp
  406138:	ea86 060e 	eor.w	r6, r6, lr
  40613c:	4a50      	ldr	r2, [pc, #320]	; (406280 <.LVL322+0x34>)
  40613e:	4442      	add	r2, r8
  406140:	4413      	add	r3, r2

00406142 <.LVL266>:
  406142:	441e      	add	r6, r3
  406144:	eb04 66b6 	add.w	r6, r4, r6, ror #26

00406148 <.LVL268>:
        MD5STEP(F4, d, a, b, c, md5->buffer[3]  + 0x8f0ccc92, 10);
  406148:	ea66 080e 	orn	r8, r6, lr
  40614c:	ea88 0804 	eor.w	r8, r8, r4
  406150:	4b4c      	ldr	r3, [pc, #304]	; (406284 <.LVL322+0x38>)
  406152:	6982      	ldr	r2, [r0, #24]
  406154:	4413      	add	r3, r2
  406156:	449b      	add	fp, r3

00406158 <.LVL271>:
  406158:	44d8      	add	r8, fp
  40615a:	eb06 58b8 	add.w	r8, r6, r8, ror #22

0040615e <.LVL273>:
        MD5STEP(F4, c, d, a, b, md5->buffer[10] + 0xffeff47d, 15);
  40615e:	ea68 0204 	orn	r2, r8, r4
  406162:	4072      	eors	r2, r6
  406164:	4948      	ldr	r1, [pc, #288]	; (406288 <.LVL322+0x3c>)
  406166:	6b43      	ldr	r3, [r0, #52]	; 0x34
  406168:	4419      	add	r1, r3
  40616a:	448e      	add	lr, r1

0040616c <.LVL276>:
  40616c:	4472      	add	r2, lr
  40616e:	eb08 4272 	add.w	r2, r8, r2, ror #17

00406172 <.LVL278>:
        MD5STEP(F4, b, c, d, a, md5->buffer[1]  + 0x85845dd1, 21);
  406172:	ea62 0306 	orn	r3, r2, r6
  406176:	ea83 0308 	eor.w	r3, r3, r8
  40617a:	4944      	ldr	r1, [pc, #272]	; (40628c <.LVL322+0x40>)
  40617c:	6907      	ldr	r7, [r0, #16]
  40617e:	4439      	add	r1, r7
  406180:	440c      	add	r4, r1

00406182 <.LVL281>:
  406182:	4423      	add	r3, r4
  406184:	eb02 23f3 	add.w	r3, r2, r3, ror #11

00406188 <.LVL283>:
        MD5STEP(F4, a, b, c, d, md5->buffer[8]  + 0x6fa87e4f,  6);
  406188:	ea63 0e08 	orn	lr, r3, r8
  40618c:	ea8e 0e02 	eor.w	lr, lr, r2
  406190:	493f      	ldr	r1, [pc, #252]	; (406290 <.LVL322+0x44>)
  406192:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
  406194:	4421      	add	r1, r4
  406196:	440e      	add	r6, r1

00406198 <.LVL286>:
  406198:	44b6      	add	lr, r6
  40619a:	eb03 6ebe 	add.w	lr, r3, lr, ror #26

0040619e <.LVL288>:
        MD5STEP(F4, d, a, b, c, md5->buffer[15] + 0xfe2ce6e0, 10);
  40619e:	ea6e 0402 	orn	r4, lr, r2
  4061a2:	405c      	eors	r4, r3
  4061a4:	493b      	ldr	r1, [pc, #236]	; (406294 <.LVL322+0x48>)
  4061a6:	4461      	add	r1, ip
  4061a8:	4488      	add	r8, r1

004061aa <.LVL291>:
  4061aa:	4444      	add	r4, r8
  4061ac:	eb0e 54b4 	add.w	r4, lr, r4, ror #22

004061b0 <.LVL293>:
        MD5STEP(F4, c, d, a, b, md5->buffer[6]  + 0xa3014314, 15);
  4061b0:	ea64 0603 	orn	r6, r4, r3
  4061b4:	ea86 060e 	eor.w	r6, r6, lr
  4061b8:	4937      	ldr	r1, [pc, #220]	; (406298 <.LVL322+0x4c>)
  4061ba:	6a47      	ldr	r7, [r0, #36]	; 0x24
  4061bc:	4439      	add	r1, r7
  4061be:	440a      	add	r2, r1

004061c0 <.LVL296>:
  4061c0:	4416      	add	r6, r2
  4061c2:	eb04 4676 	add.w	r6, r4, r6, ror #17

004061c6 <.LVL298>:
        MD5STEP(F4, b, c, d, a, md5->buffer[13] + 0x4e0811a1, 21);
  4061c6:	ea66 0c0e 	orn	ip, r6, lr
  4061ca:	ea8c 0c04 	eor.w	ip, ip, r4
  4061ce:	4933      	ldr	r1, [pc, #204]	; (40629c <.LVL322+0x50>)
  4061d0:	6c02      	ldr	r2, [r0, #64]	; 0x40
  4061d2:	4411      	add	r1, r2
  4061d4:	440b      	add	r3, r1

004061d6 <.LVL301>:
  4061d6:	449c      	add	ip, r3
  4061d8:	eb06 2cfc 	add.w	ip, r6, ip, ror #11

004061dc <.LVL303>:
        MD5STEP(F4, a, b, c, d, md5->buffer[4]  + 0xf7537e82,  6);
  4061dc:	ea6c 0204 	orn	r2, ip, r4
  4061e0:	4072      	eors	r2, r6
  4061e2:	492f      	ldr	r1, [pc, #188]	; (4062a0 <.LVL322+0x54>)
  4061e4:	69c3      	ldr	r3, [r0, #28]
  4061e6:	4419      	add	r1, r3
  4061e8:	448e      	add	lr, r1

004061ea <.LVL306>:
  4061ea:	4472      	add	r2, lr
  4061ec:	eb0c 62b2 	add.w	r2, ip, r2, ror #26

004061f0 <.LVL308>:
        MD5STEP(F4, d, a, b, c, md5->buffer[11] + 0xbd3af235, 10);
  4061f0:	ea62 0306 	orn	r3, r2, r6
  4061f4:	ea83 030c 	eor.w	r3, r3, ip
  4061f8:	492a      	ldr	r1, [pc, #168]	; (4062a4 <.LVL322+0x58>)
  4061fa:	6b87      	ldr	r7, [r0, #56]	; 0x38
  4061fc:	4439      	add	r1, r7
  4061fe:	440c      	add	r4, r1

00406200 <.LVL311>:
  406200:	441c      	add	r4, r3
  406202:	eb02 54b4 	add.w	r4, r2, r4, ror #22

00406206 <.LVL313>:
        MD5STEP(F4, c, d, a, b, md5->buffer[2]  + 0x2ad7d2bb, 15);
  406206:	ea64 030c 	orn	r3, r4, ip
  40620a:	4053      	eors	r3, r2
  40620c:	4926      	ldr	r1, [pc, #152]	; (4062a8 <.LVL322+0x5c>)
  40620e:	6947      	ldr	r7, [r0, #20]
  406210:	4439      	add	r1, r7
  406212:	440e      	add	r6, r1

00406214 <.LVL316>:
  406214:	441e      	add	r6, r3
  406216:	eb04 4676 	add.w	r6, r4, r6, ror #17

0040621a <.LVL318>:
        MD5STEP(F4, b, c, d, a, md5->buffer[9]  + 0xeb86d391, 21);

        /* Add the working vars back into digest state[]  */
        md5->digest[0] += a;
  40621a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40621c:	4413      	add	r3, r2
  40621e:	64c3      	str	r3, [r0, #76]	; 0x4c
        MD5STEP(F4, b, c, d, a, md5->buffer[9]  + 0xeb86d391, 21);
  406220:	ea66 0202 	orn	r2, r6, r2

00406224 <.LVL319>:
  406224:	4062      	eors	r2, r4
  406226:	4921      	ldr	r1, [pc, #132]	; (4062ac <.LVL322+0x60>)
  406228:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40622a:	4419      	add	r1, r3
  40622c:	448c      	add	ip, r1
  40622e:	4494      	add	ip, r2
        md5->digest[1] += b;
  406230:	4435      	add	r5, r6
  406232:	eb05 25fc 	add.w	r5, r5, ip, ror #11
  406236:	6505      	str	r5, [r0, #80]	; 0x50
        md5->digest[2] += c;
  406238:	9b01      	ldr	r3, [sp, #4]
  40623a:	4433      	add	r3, r6
  40623c:	6543      	str	r3, [r0, #84]	; 0x54
        md5->digest[3] += d;
  40623e:	6d83      	ldr	r3, [r0, #88]	; 0x58
  406240:	441c      	add	r4, r3

00406242 <.LVL320>:
  406242:	6584      	str	r4, [r0, #88]	; 0x58

        return 0;
    }
  406244:	2000      	movs	r0, #0

00406246 <.LVL321>:
  406246:	b003      	add	sp, #12

00406248 <.LCFI2>:
  406248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040624c <.LVL322>:
  40624c:	f6bb4b60 	.word	0xf6bb4b60
  406250:	bebfbc70 	.word	0xbebfbc70
  406254:	289b7ec6 	.word	0x289b7ec6
  406258:	eaa127fa 	.word	0xeaa127fa
  40625c:	d4ef3085 	.word	0xd4ef3085
  406260:	04881d05 	.word	0x04881d05
  406264:	d9d4d039 	.word	0xd9d4d039
  406268:	e6db99e5 	.word	0xe6db99e5
  40626c:	1fa27cf8 	.word	0x1fa27cf8
  406270:	c4ac5665 	.word	0xc4ac5665
  406274:	432aff97 	.word	0x432aff97
  406278:	ab9423a7 	.word	0xab9423a7
  40627c:	fc93a039 	.word	0xfc93a039
  406280:	655b59c3 	.word	0x655b59c3
  406284:	8f0ccc92 	.word	0x8f0ccc92
  406288:	ffeff47d 	.word	0xffeff47d
  40628c:	85845dd1 	.word	0x85845dd1
  406290:	6fa87e4f 	.word	0x6fa87e4f
  406294:	fe2ce6e0 	.word	0xfe2ce6e0
  406298:	a3014314 	.word	0xa3014314
  40629c:	4e0811a1 	.word	0x4e0811a1
  4062a0:	f7537e82 	.word	0xf7537e82
  4062a4:	bd3af235 	.word	0xbd3af235
  4062a8:	2ad7d2bb 	.word	0x2ad7d2bb
  4062ac:	eb86d391 	.word	0xeb86d391
  4062b0:	f4292244 	.word	0xf4292244

Disassembly of section .text._malloc_r%34:

004062b4 <_malloc_r>:
  4062b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

004062b8 <.LCFI0>:
  4062b8:	f101 060b 	add.w	r6, r1, #11
  4062bc:	2e16      	cmp	r6, #22
  4062be:	b083      	sub	sp, #12

004062c0 <.LCFI1>:
  4062c0:	4605      	mov	r5, r0
  4062c2:	f240 809e 	bls.w	406402 <.LVL46>

004062c6 <.LVL1>:
  4062c6:	f036 0607 	bics.w	r6, r6, #7

004062ca <.LVL2>:
  4062ca:	f100 80bd 	bmi.w	406448 <.LCFI3>
  4062ce:	42b1      	cmp	r1, r6
  4062d0:	f200 80ba 	bhi.w	406448 <.LCFI3>
  4062d4:	f004 fcde 	bl	40ac94 <.LFE144>

004062d8 <.LVL3>:
  4062d8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4062dc:	f0c0 828b 	bcc.w	4067f6 <.LVL171>
  4062e0:	0a73      	lsrs	r3, r6, #9
  4062e2:	f000 80b8 	beq.w	406456 <.LCFI5>
  4062e6:	2b04      	cmp	r3, #4
  4062e8:	f200 816e 	bhi.w	4065c8 <.LCFI11>
  4062ec:	09b3      	lsrs	r3, r6, #6
  4062ee:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4062f2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4062f6:	00c3      	lsls	r3, r0, #3

004062f8 <.LVL4>:
  4062f8:	4fb9      	ldr	r7, [pc, #740]	; (4065e0 <.LCFI11+0x18>)
  4062fa:	443b      	add	r3, r7
  4062fc:	f1a3 0108 	sub.w	r1, r3, #8

00406300 <.LVL5>:
  406300:	685c      	ldr	r4, [r3, #4]

00406302 <.LVL6>:
  406302:	42a1      	cmp	r1, r4
  406304:	d106      	bne.n	406314 <.LVL10>
  406306:	e00c      	b.n	406322 <.LVL14>

00406308 <.LVL7>:
  406308:	2a00      	cmp	r2, #0
  40630a:	f280 80aa 	bge.w	406462 <.LVL62>

0040630e <.LVL8>:
  40630e:	68e4      	ldr	r4, [r4, #12]
  406310:	42a1      	cmp	r1, r4
  406312:	d006      	beq.n	406322 <.LVL14>

00406314 <.LVL10>:
  406314:	6863      	ldr	r3, [r4, #4]
  406316:	f023 0303 	bic.w	r3, r3, #3

0040631a <.LVL11>:
  40631a:	1b9a      	subs	r2, r3, r6

0040631c <.LVL12>:
  40631c:	2a0f      	cmp	r2, #15
  40631e:	ddf3      	ble.n	406308 <.LVL7>

00406320 <.LVL13>:
  406320:	4670      	mov	r0, lr

00406322 <.LVL14>:
  406322:	693c      	ldr	r4, [r7, #16]
  406324:	f8df e2d0 	ldr.w	lr, [pc, #720]	; 4065f8 <.LCFI11+0x30>
  406328:	4574      	cmp	r4, lr
  40632a:	f000 819f 	beq.w	40666c <.LVL115>
  40632e:	6863      	ldr	r3, [r4, #4]
  406330:	f023 0303 	bic.w	r3, r3, #3

00406334 <.LVL16>:
  406334:	1b9a      	subs	r2, r3, r6

00406336 <.LVL17>:
  406336:	2a0f      	cmp	r2, #15
  406338:	f300 8184 	bgt.w	406644 <.LVL110>
  40633c:	2a00      	cmp	r2, #0
  40633e:	f8c7 e014 	str.w	lr, [r7, #20]
  406342:	f8c7 e010 	str.w	lr, [r7, #16]
  406346:	f280 809d 	bge.w	406484 <.LCFI7>
  40634a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40634e:	f080 8155 	bcs.w	4065fc <.LVL101>
  406352:	08db      	lsrs	r3, r3, #3

00406354 <.LVL18>:
  406354:	f103 0c01 	add.w	ip, r3, #1
  406358:	1099      	asrs	r1, r3, #2
  40635a:	687a      	ldr	r2, [r7, #4]

0040635c <.LVL19>:
  40635c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  406360:	f8c4 8008 	str.w	r8, [r4, #8]
  406364:	2301      	movs	r3, #1

00406366 <.LVL20>:
  406366:	408b      	lsls	r3, r1
  406368:	eb07 01cc 	add.w	r1, r7, ip, lsl #3

0040636c <.LVL21>:
  40636c:	4313      	orrs	r3, r2
  40636e:	3908      	subs	r1, #8

00406370 <.LVL22>:
  406370:	60e1      	str	r1, [r4, #12]
  406372:	607b      	str	r3, [r7, #4]

00406374 <.LVL23>:
  406374:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  406378:	f8c8 400c 	str.w	r4, [r8, #12]

0040637c <.LVL24>:
  40637c:	1082      	asrs	r2, r0, #2
  40637e:	2401      	movs	r4, #1

00406380 <.LVL25>:
  406380:	4094      	lsls	r4, r2

00406382 <.LVL26>:
  406382:	429c      	cmp	r4, r3
  406384:	f200 808b 	bhi.w	40649e <.LCFI9>
  406388:	421c      	tst	r4, r3
  40638a:	d106      	bne.n	40639a <.LVL30>
  40638c:	f020 0003 	bic.w	r0, r0, #3

00406390 <.LVL27>:
  406390:	0064      	lsls	r4, r4, #1

00406392 <.LVL28>:
  406392:	421c      	tst	r4, r3
  406394:	f100 0004 	add.w	r0, r0, #4

00406398 <.LVL29>:
  406398:	d0fa      	beq.n	406390 <.LVL27>

0040639a <.LVL30>:
  40639a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3

0040639e <.LVL31>:
  40639e:	46cc      	mov	ip, r9
  4063a0:	4680      	mov	r8, r0

004063a2 <.LVL32>:
  4063a2:	f8dc 300c 	ldr.w	r3, [ip, #12]

004063a6 <.LVL33>:
  4063a6:	459c      	cmp	ip, r3
  4063a8:	d107      	bne.n	4063ba <.LVL36>
  4063aa:	e161      	b.n	406670 <.LVL116>

004063ac <.LVL34>:
  4063ac:	2a00      	cmp	r2, #0
  4063ae:	f280 816f 	bge.w	406690 <.LVL121>
  4063b2:	68db      	ldr	r3, [r3, #12]
  4063b4:	459c      	cmp	ip, r3
  4063b6:	f000 815b 	beq.w	406670 <.LVL116>

004063ba <.LVL36>:
  4063ba:	6859      	ldr	r1, [r3, #4]
  4063bc:	f021 0103 	bic.w	r1, r1, #3

004063c0 <.LVL37>:
  4063c0:	1b8a      	subs	r2, r1, r6

004063c2 <.LVL38>:
  4063c2:	2a0f      	cmp	r2, #15
  4063c4:	ddf2      	ble.n	4063ac <.LVL34>
  4063c6:	f8d3 c00c 	ldr.w	ip, [r3, #12]

004063ca <.LVL39>:
  4063ca:	f8d3 8008 	ldr.w	r8, [r3, #8]

004063ce <.LVL40>:
  4063ce:	9301      	str	r3, [sp, #4]
  4063d0:	199c      	adds	r4, r3, r6

004063d2 <.LVL41>:
  4063d2:	4628      	mov	r0, r5

004063d4 <.LVL42>:
  4063d4:	f046 0601 	orr.w	r6, r6, #1
  4063d8:	f042 0501 	orr.w	r5, r2, #1

004063dc <.LVL43>:
  4063dc:	605e      	str	r6, [r3, #4]
  4063de:	f8c8 c00c 	str.w	ip, [r8, #12]
  4063e2:	f8cc 8008 	str.w	r8, [ip, #8]
  4063e6:	617c      	str	r4, [r7, #20]
  4063e8:	613c      	str	r4, [r7, #16]
  4063ea:	f8c4 e00c 	str.w	lr, [r4, #12]
  4063ee:	f8c4 e008 	str.w	lr, [r4, #8]
  4063f2:	6065      	str	r5, [r4, #4]
  4063f4:	505a      	str	r2, [r3, r1]
  4063f6:	f004 fc4f 	bl	40ac98 <__malloc_unlock>

004063fa <.LVL44>:
  4063fa:	9b01      	ldr	r3, [sp, #4]
  4063fc:	f103 0408 	add.w	r4, r3, #8

00406400 <.LVL45>:
  406400:	e01e      	b.n	406440 <.LVL58>

00406402 <.LVL46>:
  406402:	2910      	cmp	r1, #16
  406404:	d820      	bhi.n	406448 <.LCFI3>
  406406:	f004 fc45 	bl	40ac94 <.LFE144>

0040640a <.LVL47>:
  40640a:	2610      	movs	r6, #16

0040640c <.LVL48>:
  40640c:	2318      	movs	r3, #24
  40640e:	2002      	movs	r0, #2

00406410 <.LVL49>:
  406410:	4f73      	ldr	r7, [pc, #460]	; (4065e0 <.LCFI11+0x18>)
  406412:	443b      	add	r3, r7

00406414 <.LVL50>:
  406414:	f1a3 0208 	sub.w	r2, r3, #8

00406418 <.LVL51>:
  406418:	685c      	ldr	r4, [r3, #4]

0040641a <.LVL52>:
  40641a:	4294      	cmp	r4, r2
  40641c:	f000 8131 	beq.w	406682 <.LVL119>

00406420 <.LVL53>:
  406420:	6863      	ldr	r3, [r4, #4]
  406422:	68e1      	ldr	r1, [r4, #12]
  406424:	68a6      	ldr	r6, [r4, #8]
  406426:	f023 0303 	bic.w	r3, r3, #3

0040642a <.LVL54>:
  40642a:	4423      	add	r3, r4

0040642c <.LVL55>:
  40642c:	4628      	mov	r0, r5
  40642e:	685a      	ldr	r2, [r3, #4]
  406430:	60f1      	str	r1, [r6, #12]
  406432:	f042 0201 	orr.w	r2, r2, #1
  406436:	608e      	str	r6, [r1, #8]
  406438:	605a      	str	r2, [r3, #4]

0040643a <.LVL56>:
  40643a:	f004 fc2d 	bl	40ac98 <__malloc_unlock>

0040643e <.LVL57>:
  40643e:	3408      	adds	r4, #8

00406440 <.LVL58>:
  406440:	4620      	mov	r0, r4
  406442:	b003      	add	sp, #12

00406444 <.LCFI2>:
  406444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406448 <.LCFI3>:
  406448:	2400      	movs	r4, #0
  40644a:	230c      	movs	r3, #12
  40644c:	4620      	mov	r0, r4

0040644e <.LVL60>:
  40644e:	602b      	str	r3, [r5, #0]
  406450:	b003      	add	sp, #12

00406452 <.LCFI4>:
  406452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406456 <.LCFI5>:
  406456:	2040      	movs	r0, #64	; 0x40
  406458:	f44f 7300 	mov.w	r3, #512	; 0x200
  40645c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  406460:	e74a      	b.n	4062f8 <.LVL4>

00406462 <.LVL62>:
  406462:	4423      	add	r3, r4

00406464 <.LVL63>:
  406464:	68e1      	ldr	r1, [r4, #12]

00406466 <.LVL64>:
  406466:	685a      	ldr	r2, [r3, #4]

00406468 <.LVL65>:
  406468:	68a6      	ldr	r6, [r4, #8]

0040646a <.LVL66>:
  40646a:	f042 0201 	orr.w	r2, r2, #1
  40646e:	60f1      	str	r1, [r6, #12]
  406470:	4628      	mov	r0, r5
  406472:	608e      	str	r6, [r1, #8]
  406474:	605a      	str	r2, [r3, #4]

00406476 <.LVL67>:
  406476:	f004 fc0f 	bl	40ac98 <__malloc_unlock>

0040647a <.LVL68>:
  40647a:	3408      	adds	r4, #8

0040647c <.LVL69>:
  40647c:	4620      	mov	r0, r4
  40647e:	b003      	add	sp, #12

00406480 <.LCFI6>:
  406480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406484 <.LCFI7>:
  406484:	4423      	add	r3, r4

00406486 <.LVL71>:
  406486:	4628      	mov	r0, r5

00406488 <.LVL72>:
  406488:	685a      	ldr	r2, [r3, #4]

0040648a <.LVL73>:
  40648a:	f042 0201 	orr.w	r2, r2, #1
  40648e:	605a      	str	r2, [r3, #4]

00406490 <.LVL74>:
  406490:	f004 fc02 	bl	40ac98 <__malloc_unlock>

00406494 <.LVL75>:
  406494:	3408      	adds	r4, #8

00406496 <.LVL76>:
  406496:	4620      	mov	r0, r4
  406498:	b003      	add	sp, #12

0040649a <.LCFI8>:
  40649a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040649e <.LCFI9>:
  40649e:	68bc      	ldr	r4, [r7, #8]

004064a0 <.LVL78>:
  4064a0:	6863      	ldr	r3, [r4, #4]
  4064a2:	f023 0a03 	bic.w	sl, r3, #3
  4064a6:	45b2      	cmp	sl, r6
  4064a8:	d303      	bcc.n	4064b2 <.LBB4>
  4064aa:	ebaa 0306 	sub.w	r3, sl, r6
  4064ae:	2b0f      	cmp	r3, #15
  4064b0:	dc7a      	bgt.n	4065a8 <.LBE4>

004064b2 <.LBB4>:
  4064b2:	4b4c      	ldr	r3, [pc, #304]	; (4065e4 <.LCFI11+0x1c>)
  4064b4:	4a4c      	ldr	r2, [pc, #304]	; (4065e8 <.LCFI11+0x20>)
  4064b6:	9301      	str	r3, [sp, #4]
  4064b8:	6811      	ldr	r1, [r2, #0]
  4064ba:	681a      	ldr	r2, [r3, #0]
  4064bc:	eb06 0801 	add.w	r8, r6, r1
  4064c0:	3201      	adds	r2, #1
  4064c2:	bf16      	itet	ne
  4064c4:	f108 088f 	addne.w	r8, r8, #143	; 0x8f
  4064c8:	f108 0810 	addeq.w	r8, r8, #16
  4064cc:	f028 087f 	bicne.w	r8, r8, #127	; 0x7f
  4064d0:	4641      	mov	r1, r8
  4064d2:	4628      	mov	r0, r5
  4064d4:	f004 f986 	bl	40a7e4 <_sbrk_r>

004064d8 <.LVL80>:
  4064d8:	f1b0 3fff 	cmp.w	r0, #4294967295
  4064dc:	eb04 0b0a 	add.w	fp, r4, sl

004064e0 <.LVL81>:
  4064e0:	4681      	mov	r9, r0

004064e2 <.LVL82>:
  4064e2:	9b01      	ldr	r3, [sp, #4]
  4064e4:	f000 80f1 	beq.w	4066ca <.LBB10+0x4>
  4064e8:	4583      	cmp	fp, r0
  4064ea:	f200 80ec 	bhi.w	4066c6 <.LBB10>
  4064ee:	4a3f      	ldr	r2, [pc, #252]	; (4065ec <.LCFI11+0x24>)
  4064f0:	6811      	ldr	r1, [r2, #0]
  4064f2:	4441      	add	r1, r8
  4064f4:	6011      	str	r1, [r2, #0]
  4064f6:	f000 8147 	beq.w	406788 <.LBB12+0xa>

004064fa <.LVL83>:
  4064fa:	6818      	ldr	r0, [r3, #0]

004064fc <.LVL84>:
  4064fc:	9201      	str	r2, [sp, #4]
  4064fe:	3001      	adds	r0, #1
  406500:	bf1b      	ittet	ne
  406502:	eba9 0b0b 	subne.w	fp, r9, fp

00406506 <.LVL85>:
  406506:	4459      	addne	r1, fp
  406508:	f8c3 9000 	streq.w	r9, [r3]
  40650c:	6011      	strne	r1, [r2, #0]
  40650e:	f019 0107 	ands.w	r1, r9, #7

00406512 <.LVL86>:
  406512:	bf1c      	itt	ne
  406514:	f1c1 0308 	rsbne	r3, r1, #8
  406518:	4499      	addne	r9, r3

0040651a <.LVL87>:
  40651a:	eb09 0308 	add.w	r3, r9, r8
  40651e:	bf14      	ite	ne
  406520:	f1c1 0188 	rsbne	r1, r1, #136	; 0x88

00406524 <.LVL88>:
  406524:	2180      	moveq	r1, #128	; 0x80
  406526:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  40652a:	eba1 0803 	sub.w	r8, r1, r3

0040652e <.LVL89>:
  40652e:	4641      	mov	r1, r8
  406530:	4628      	mov	r0, r5
  406532:	f004 f957 	bl	40a7e4 <_sbrk_r>

00406536 <.LVL90>:
  406536:	1c43      	adds	r3, r0, #1
  406538:	9a01      	ldr	r2, [sp, #4]
  40653a:	f000 813f 	beq.w	4067bc <.LVL167>
  40653e:	eba0 0309 	sub.w	r3, r0, r9
  406542:	4443      	add	r3, r8
  406544:	f043 0301 	orr.w	r3, r3, #1

00406548 <.LVL91>:
  406548:	6811      	ldr	r1, [r2, #0]
  40654a:	f8c7 9008 	str.w	r9, [r7, #8]
  40654e:	4441      	add	r1, r8
  406550:	42bc      	cmp	r4, r7
  406552:	f8c9 3004 	str.w	r3, [r9, #4]
  406556:	6011      	str	r1, [r2, #0]
  406558:	d017      	beq.n	40658a <.LVL94>
  40655a:	f1ba 0f0f 	cmp.w	sl, #15
  40655e:	f240 80ee 	bls.w	40673e <.LBB11>
  406562:	6860      	ldr	r0, [r4, #4]
  406564:	f1aa 030c 	sub.w	r3, sl, #12
  406568:	f023 0307 	bic.w	r3, r3, #7

0040656c <.LVL93>:
  40656c:	eb04 0e03 	add.w	lr, r4, r3
  406570:	f000 0001 	and.w	r0, r0, #1
  406574:	f04f 0c05 	mov.w	ip, #5
  406578:	4318      	orrs	r0, r3
  40657a:	2b0f      	cmp	r3, #15
  40657c:	6060      	str	r0, [r4, #4]
  40657e:	f8ce c004 	str.w	ip, [lr, #4]
  406582:	f8ce c008 	str.w	ip, [lr, #8]
  406586:	f200 8110 	bhi.w	4067aa <.LBB13>

0040658a <.LVL94>:
  40658a:	4b19      	ldr	r3, [pc, #100]	; (4065f0 <.LCFI11+0x28>)
  40658c:	68bc      	ldr	r4, [r7, #8]

0040658e <.LVL95>:
  40658e:	681a      	ldr	r2, [r3, #0]
  406590:	4291      	cmp	r1, r2
  406592:	bf88      	it	hi
  406594:	6019      	strhi	r1, [r3, #0]
  406596:	4b17      	ldr	r3, [pc, #92]	; (4065f4 <.LCFI11+0x2c>)
  406598:	681a      	ldr	r2, [r3, #0]
  40659a:	4291      	cmp	r1, r2
  40659c:	6862      	ldr	r2, [r4, #4]
  40659e:	bf88      	it	hi
  4065a0:	6019      	strhi	r1, [r3, #0]
  4065a2:	f022 0203 	bic.w	r2, r2, #3
  4065a6:	e094      	b.n	4066d2 <.LBE10>

004065a8 <.LBE4>:
  4065a8:	19a2      	adds	r2, r4, r6
  4065aa:	f043 0301 	orr.w	r3, r3, #1

004065ae <.LVL97>:
  4065ae:	f046 0601 	orr.w	r6, r6, #1
  4065b2:	6066      	str	r6, [r4, #4]
  4065b4:	4628      	mov	r0, r5
  4065b6:	60ba      	str	r2, [r7, #8]

004065b8 <.LVL98>:
  4065b8:	6053      	str	r3, [r2, #4]
  4065ba:	f004 fb6d 	bl	40ac98 <__malloc_unlock>

004065be <.LVL99>:
  4065be:	3408      	adds	r4, #8
  4065c0:	4620      	mov	r0, r4
  4065c2:	b003      	add	sp, #12

004065c4 <.LCFI10>:
  4065c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004065c8 <.LCFI11>:
  4065c8:	2b14      	cmp	r3, #20
  4065ca:	d970      	bls.n	4066ae <.LVL130>
  4065cc:	2b54      	cmp	r3, #84	; 0x54
  4065ce:	f200 80ac 	bhi.w	40672a <.LVL150>
  4065d2:	0b33      	lsrs	r3, r6, #12
  4065d4:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4065d8:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4065dc:	00c3      	lsls	r3, r0, #3
  4065de:	e68b      	b.n	4062f8 <.LVL4>
  4065e0:	2040d0b0 	.word	0x2040d0b0
  4065e4:	2040dcb0 	.word	0x2040dcb0
  4065e8:	2040dcac 	.word	0x2040dcac
  4065ec:	2040dbd4 	.word	0x2040dbd4
  4065f0:	2040dca4 	.word	0x2040dca4
  4065f4:	2040dca8 	.word	0x2040dca8
  4065f8:	2040d0b8 	.word	0x2040d0b8

004065fc <.LVL101>:
  4065fc:	0a5a      	lsrs	r2, r3, #9

004065fe <.LVL102>:
  4065fe:	2a04      	cmp	r2, #4
  406600:	d95b      	bls.n	4066ba <.LVL131>
  406602:	2a14      	cmp	r2, #20
  406604:	f200 80b3 	bhi.w	40676e <.LVL159>
  406608:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40660c:	00c9      	lsls	r1, r1, #3
  40660e:	325b      	adds	r2, #91	; 0x5b

00406610 <.LVL103>:
  406610:	eb07 0c01 	add.w	ip, r7, r1
  406614:	5879      	ldr	r1, [r7, r1]
  406616:	f1ac 0c08 	sub.w	ip, ip, #8

0040661a <.LVL104>:
  40661a:	458c      	cmp	ip, r1
  40661c:	f000 8093 	beq.w	406746 <.LBE11>

00406620 <.LVL105>:
  406620:	684a      	ldr	r2, [r1, #4]
  406622:	f022 0203 	bic.w	r2, r2, #3
  406626:	4293      	cmp	r3, r2
  406628:	d27d      	bcs.n	406726 <.LVL148>
  40662a:	6889      	ldr	r1, [r1, #8]
  40662c:	458c      	cmp	ip, r1
  40662e:	d1f7      	bne.n	406620 <.LVL105>

00406630 <.LVL107>:
  406630:	f8dc 200c 	ldr.w	r2, [ip, #12]

00406634 <.LVL108>:
  406634:	687b      	ldr	r3, [r7, #4]

00406636 <.LVL109>:
  406636:	60e2      	str	r2, [r4, #12]
  406638:	f8c4 c008 	str.w	ip, [r4, #8]
  40663c:	6094      	str	r4, [r2, #8]
  40663e:	f8cc 400c 	str.w	r4, [ip, #12]
  406642:	e69b      	b.n	40637c <.LVL24>

00406644 <.LVL110>:
  406644:	19a1      	adds	r1, r4, r6

00406646 <.LVL111>:
  406646:	f046 0c01 	orr.w	ip, r6, #1
  40664a:	f042 0601 	orr.w	r6, r2, #1
  40664e:	f8c4 c004 	str.w	ip, [r4, #4]
  406652:	4628      	mov	r0, r5

00406654 <.LVL112>:
  406654:	6179      	str	r1, [r7, #20]
  406656:	6139      	str	r1, [r7, #16]
  406658:	f8c1 e00c 	str.w	lr, [r1, #12]
  40665c:	f8c1 e008 	str.w	lr, [r1, #8]
  406660:	604e      	str	r6, [r1, #4]
  406662:	50e2      	str	r2, [r4, r3]
  406664:	f004 fb18 	bl	40ac98 <__malloc_unlock>

00406668 <.LVL113>:
  406668:	3408      	adds	r4, #8

0040666a <.LVL114>:
  40666a:	e6e9      	b.n	406440 <.LVL58>

0040666c <.LVL115>:
  40666c:	687b      	ldr	r3, [r7, #4]
  40666e:	e685      	b.n	40637c <.LVL24>

00406670 <.LVL116>:
  406670:	f108 0801 	add.w	r8, r8, #1

00406674 <.LVL117>:
  406674:	f018 0f03 	tst.w	r8, #3
  406678:	f10c 0c08 	add.w	ip, ip, #8

0040667c <.LVL118>:
  40667c:	f47f ae91 	bne.w	4063a2 <.LVL32>
  406680:	e037      	b.n	4066f2 <.LVL140>

00406682 <.LVL119>:
  406682:	68dc      	ldr	r4, [r3, #12]
  406684:	42a3      	cmp	r3, r4
  406686:	bf08      	it	eq
  406688:	3002      	addeq	r0, #2
  40668a:	f43f ae4a 	beq.w	406322 <.LVL14>
  40668e:	e6c7      	b.n	406420 <.LVL53>

00406690 <.LVL121>:
  406690:	4419      	add	r1, r3

00406692 <.LVL122>:
  406692:	461c      	mov	r4, r3

00406694 <.LVL123>:
  406694:	684a      	ldr	r2, [r1, #4]

00406696 <.LVL124>:
  406696:	68db      	ldr	r3, [r3, #12]

00406698 <.LVL125>:
  406698:	f854 6f08 	ldr.w	r6, [r4, #8]!

0040669c <.LVL126>:
  40669c:	f042 0201 	orr.w	r2, r2, #1
  4066a0:	604a      	str	r2, [r1, #4]

004066a2 <.LVL127>:
  4066a2:	4628      	mov	r0, r5

004066a4 <.LVL128>:
  4066a4:	60f3      	str	r3, [r6, #12]
  4066a6:	609e      	str	r6, [r3, #8]
  4066a8:	f004 faf6 	bl	40ac98 <__malloc_unlock>

004066ac <.LVL129>:
  4066ac:	e6c8      	b.n	406440 <.LVL58>

004066ae <.LVL130>:
  4066ae:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4066b2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4066b6:	00c3      	lsls	r3, r0, #3
  4066b8:	e61e      	b.n	4062f8 <.LVL4>

004066ba <.LVL131>:
  4066ba:	099a      	lsrs	r2, r3, #6
  4066bc:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4066c0:	00c9      	lsls	r1, r1, #3
  4066c2:	3238      	adds	r2, #56	; 0x38
  4066c4:	e7a4      	b.n	406610 <.LVL103>

004066c6 <.LBB10>:
  4066c6:	42bc      	cmp	r4, r7
  4066c8:	d059      	beq.n	40677e <.LBB12>
  4066ca:	68bc      	ldr	r4, [r7, #8]

004066cc <.LVL133>:
  4066cc:	6862      	ldr	r2, [r4, #4]
  4066ce:	f022 0203 	bic.w	r2, r2, #3

004066d2 <.LBE10>:
  4066d2:	4296      	cmp	r6, r2
  4066d4:	eba2 0306 	sub.w	r3, r2, r6

004066d8 <.LVL135>:
  4066d8:	d802      	bhi.n	4066e0 <.LVL136>
  4066da:	2b0f      	cmp	r3, #15
  4066dc:	f73f af64 	bgt.w	4065a8 <.LBE4>

004066e0 <.LVL136>:
  4066e0:	4628      	mov	r0, r5
  4066e2:	f004 fad9 	bl	40ac98 <__malloc_unlock>

004066e6 <.LVL137>:
  4066e6:	2400      	movs	r4, #0
  4066e8:	e6aa      	b.n	406440 <.LVL58>

004066ea <.LVL138>:
  4066ea:	f859 3908 	ldr.w	r3, [r9], #-8

004066ee <.LVL139>:
  4066ee:	4599      	cmp	r9, r3
  4066f0:	d17f      	bne.n	4067f2 <.LVL170>

004066f2 <.LVL140>:
  4066f2:	f010 0f03 	tst.w	r0, #3
  4066f6:	f100 30ff 	add.w	r0, r0, #4294967295
  4066fa:	d1f6      	bne.n	4066ea <.LVL138>
  4066fc:	687b      	ldr	r3, [r7, #4]
  4066fe:	ea23 0304 	bic.w	r3, r3, r4
  406702:	607b      	str	r3, [r7, #4]

00406704 <.LVL142>:
  406704:	0064      	lsls	r4, r4, #1
  406706:	429c      	cmp	r4, r3
  406708:	f63f aec9 	bhi.w	40649e <.LCFI9>
  40670c:	2c00      	cmp	r4, #0
  40670e:	f43f aec6 	beq.w	40649e <.LCFI9>
  406712:	421c      	tst	r4, r3
  406714:	4640      	mov	r0, r8

00406716 <.LVL144>:
  406716:	f47f ae40 	bne.w	40639a <.LVL30>

0040671a <.LVL145>:
  40671a:	0064      	lsls	r4, r4, #1

0040671c <.LVL146>:
  40671c:	421c      	tst	r4, r3
  40671e:	f100 0004 	add.w	r0, r0, #4

00406722 <.LVL147>:
  406722:	d0fa      	beq.n	40671a <.LVL145>
  406724:	e639      	b.n	40639a <.LVL30>

00406726 <.LVL148>:
  406726:	468c      	mov	ip, r1

00406728 <.LVL149>:
  406728:	e782      	b.n	406630 <.LVL107>

0040672a <.LVL150>:
  40672a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40672e:	d813      	bhi.n	406758 <.LVL158>
  406730:	0bf3      	lsrs	r3, r6, #15
  406732:	f103 0078 	add.w	r0, r3, #120	; 0x78
  406736:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40673a:	00c3      	lsls	r3, r0, #3
  40673c:	e5dc      	b.n	4062f8 <.LVL4>

0040673e <.LBB11>:
  40673e:	2301      	movs	r3, #1
  406740:	f8c9 3004 	str.w	r3, [r9, #4]

00406744 <.LVL152>:
  406744:	e7cc      	b.n	4066e0 <.LVL136>

00406746 <.LBE11>:
  406746:	687b      	ldr	r3, [r7, #4]

00406748 <.LVL154>:
  406748:	1092      	asrs	r2, r2, #2

0040674a <.LVL155>:
  40674a:	2101      	movs	r1, #1

0040674c <.LVL156>:
  40674c:	fa01 f202 	lsl.w	r2, r1, r2
  406750:	4313      	orrs	r3, r2
  406752:	607b      	str	r3, [r7, #4]

00406754 <.LVL157>:
  406754:	4662      	mov	r2, ip
  406756:	e76e      	b.n	406636 <.LVL109>

00406758 <.LVL158>:
  406758:	f240 5254 	movw	r2, #1364	; 0x554
  40675c:	4293      	cmp	r3, r2
  40675e:	d81e      	bhi.n	40679e <.LBE12>
  406760:	0cb3      	lsrs	r3, r6, #18
  406762:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  406766:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40676a:	00c3      	lsls	r3, r0, #3
  40676c:	e5c4      	b.n	4062f8 <.LVL4>

0040676e <.LVL159>:
  40676e:	2a54      	cmp	r2, #84	; 0x54
  406770:	d828      	bhi.n	4067c4 <.LBE13>
  406772:	0b1a      	lsrs	r2, r3, #12
  406774:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  406778:	00c9      	lsls	r1, r1, #3
  40677a:	326e      	adds	r2, #110	; 0x6e
  40677c:	e748      	b.n	406610 <.LVL103>

0040677e <.LBB12>:
  40677e:	4a20      	ldr	r2, [pc, #128]	; (406800 <.LVL171+0xa>)
  406780:	6811      	ldr	r1, [r2, #0]
  406782:	4441      	add	r1, r8
  406784:	6011      	str	r1, [r2, #0]
  406786:	e6b8      	b.n	4064fa <.LVL83>
  406788:	f01b 0f7f 	tst.w	fp, #127	; 0x7f
  40678c:	f47f aeb5 	bne.w	4064fa <.LVL83>

00406790 <.LVL161>:
  406790:	eb0a 0308 	add.w	r3, sl, r8

00406794 <.LVL162>:
  406794:	68ba      	ldr	r2, [r7, #8]
  406796:	f043 0301 	orr.w	r3, r3, #1

0040679a <.LVL163>:
  40679a:	6053      	str	r3, [r2, #4]
  40679c:	e6f5      	b.n	40658a <.LVL94>

0040679e <.LBE12>:
  40679e:	207f      	movs	r0, #127	; 0x7f
  4067a0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4067a4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4067a8:	e5a6      	b.n	4062f8 <.LVL4>

004067aa <.LBB13>:
  4067aa:	f104 0108 	add.w	r1, r4, #8
  4067ae:	4628      	mov	r0, r5
  4067b0:	9201      	str	r2, [sp, #4]
  4067b2:	f001 f82f 	bl	407814 <.LFE174>

004067b6 <.LVL166>:
  4067b6:	9a01      	ldr	r2, [sp, #4]
  4067b8:	6811      	ldr	r1, [r2, #0]
  4067ba:	e6e6      	b.n	40658a <.LVL94>

004067bc <.LVL167>:
  4067bc:	2301      	movs	r3, #1

004067be <.LVL168>:
  4067be:	f04f 0800 	mov.w	r8, #0
  4067c2:	e6c1      	b.n	406548 <.LVL91>

004067c4 <.LBE13>:
  4067c4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4067c8:	d805      	bhi.n	4067d6 <.LBE13+0x12>
  4067ca:	0bda      	lsrs	r2, r3, #15
  4067cc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4067d0:	00c9      	lsls	r1, r1, #3
  4067d2:	3277      	adds	r2, #119	; 0x77
  4067d4:	e71c      	b.n	406610 <.LVL103>
  4067d6:	f240 5154 	movw	r1, #1364	; 0x554
  4067da:	428a      	cmp	r2, r1
  4067dc:	d805      	bhi.n	4067ea <.LBE13+0x26>
  4067de:	0c9a      	lsrs	r2, r3, #18
  4067e0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4067e4:	00c9      	lsls	r1, r1, #3
  4067e6:	327c      	adds	r2, #124	; 0x7c
  4067e8:	e712      	b.n	406610 <.LVL103>
  4067ea:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4067ee:	227e      	movs	r2, #126	; 0x7e
  4067f0:	e70e      	b.n	406610 <.LVL103>

004067f2 <.LVL170>:
  4067f2:	687b      	ldr	r3, [r7, #4]
  4067f4:	e786      	b.n	406704 <.LVL142>

004067f6 <.LVL171>:
  4067f6:	08f0      	lsrs	r0, r6, #3
  4067f8:	f106 0308 	add.w	r3, r6, #8
  4067fc:	e608      	b.n	406410 <.LVL49>
  4067fe:	bf00      	nop
  406800:	2040dbd4 	.word	0x2040dbd4

Disassembly of section .text._realloc_r%35:

00406804 <_realloc_r>:
  406804:	2900      	cmp	r1, #0
  406806:	f000 8095 	beq.w	406934 <.LCFI6>
  40680a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

0040680e <.LCFI0>:
  40680e:	460d      	mov	r5, r1
  406810:	4616      	mov	r6, r2
  406812:	b083      	sub	sp, #12

00406814 <.LCFI1>:
  406814:	4680      	mov	r8, r0
  406816:	f106 070b 	add.w	r7, r6, #11
  40681a:	f004 fa3b 	bl	40ac94 <.LFE144>

0040681e <.LVL1>:
  40681e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  406822:	2f16      	cmp	r7, #22
  406824:	f02e 0403 	bic.w	r4, lr, #3
  406828:	f1a5 0908 	sub.w	r9, r5, #8

0040682c <.LVL2>:
  40682c:	d83c      	bhi.n	4068a8 <.LVL18>
  40682e:	2210      	movs	r2, #16
  406830:	4617      	mov	r7, r2

00406832 <.LVL3>:
  406832:	42be      	cmp	r6, r7
  406834:	d83d      	bhi.n	4068b2 <.LVL19+0x6>
  406836:	4294      	cmp	r4, r2
  406838:	da43      	bge.n	4068c2 <.LCFI3>
  40683a:	4bc4      	ldr	r3, [pc, #784]	; (406b4c <.LVL142+0x2>)
  40683c:	6899      	ldr	r1, [r3, #8]
  40683e:	eb09 0004 	add.w	r0, r9, r4

00406842 <.LVL4>:
  406842:	4288      	cmp	r0, r1
  406844:	f000 80b4 	beq.w	4069b0 <.LVL65>
  406848:	6843      	ldr	r3, [r0, #4]
  40684a:	f023 0101 	bic.w	r1, r3, #1
  40684e:	4401      	add	r1, r0
  406850:	6849      	ldr	r1, [r1, #4]
  406852:	07c9      	lsls	r1, r1, #31
  406854:	d54c      	bpl.n	4068f0 <.LCFI5>

00406856 <.LVL5>:
  406856:	f01e 0f01 	tst.w	lr, #1
  40685a:	f000 809b 	beq.w	406994 <.LBE12>

0040685e <.LVL6>:
  40685e:	4631      	mov	r1, r6
  406860:	4640      	mov	r0, r8
  406862:	f7ff fd27 	bl	4062b4 <.LFE14>

00406866 <.LVL7>:
  406866:	4606      	mov	r6, r0

00406868 <.LVL8>:
  406868:	2800      	cmp	r0, #0
  40686a:	d03a      	beq.n	4068e2 <.LVL26>

0040686c <.LVL9>:
  40686c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406870:	f023 0301 	bic.w	r3, r3, #1
  406874:	444b      	add	r3, r9
  406876:	f1a0 0208 	sub.w	r2, r0, #8

0040687a <.LVL10>:
  40687a:	429a      	cmp	r2, r3
  40687c:	f000 8121 	beq.w	406ac2 <.LBE24>

00406880 <.LBB2>:
  406880:	1f22      	subs	r2, r4, #4

00406882 <.LVL11>:
  406882:	2a24      	cmp	r2, #36	; 0x24
  406884:	f200 8107 	bhi.w	406a96 <.LBB21>

00406888 <.LBB3>:
  406888:	2a13      	cmp	r2, #19
  40688a:	f200 80db 	bhi.w	406a44 <.LBB18>
  40688e:	4603      	mov	r3, r0
  406890:	462a      	mov	r2, r5

00406892 <.LVL13>:
  406892:	6811      	ldr	r1, [r2, #0]
  406894:	6019      	str	r1, [r3, #0]

00406896 <.LVL14>:
  406896:	6851      	ldr	r1, [r2, #4]
  406898:	6059      	str	r1, [r3, #4]
  40689a:	6892      	ldr	r2, [r2, #8]

0040689c <.LVL15>:
  40689c:	609a      	str	r2, [r3, #8]

0040689e <.LBE2>:
  40689e:	4629      	mov	r1, r5
  4068a0:	4640      	mov	r0, r8
  4068a2:	f000 ffb7 	bl	407814 <.LFE174>

004068a6 <.LVL17>:
  4068a6:	e01c      	b.n	4068e2 <.LVL26>

004068a8 <.LVL18>:
  4068a8:	f027 0707 	bic.w	r7, r7, #7

004068ac <.LVL19>:
  4068ac:	2f00      	cmp	r7, #0
  4068ae:	463a      	mov	r2, r7
  4068b0:	dabf      	bge.n	406832 <.LVL3>
  4068b2:	2600      	movs	r6, #0

004068b4 <.LVL20>:
  4068b4:	230c      	movs	r3, #12
  4068b6:	4630      	mov	r0, r6
  4068b8:	f8c8 3000 	str.w	r3, [r8]
  4068bc:	b003      	add	sp, #12

004068be <.LCFI2>:
  4068be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004068c2 <.LCFI3>:
  4068c2:	462e      	mov	r6, r5

004068c4 <.L11>:
  4068c4:	1be3      	subs	r3, r4, r7

004068c6 <.LVL23>:
  4068c6:	2b0f      	cmp	r3, #15
  4068c8:	d81e      	bhi.n	406908 <.LVL35>
  4068ca:	f8d9 3004 	ldr.w	r3, [r9, #4]

004068ce <.LVL24>:
  4068ce:	f003 0301 	and.w	r3, r3, #1
  4068d2:	4323      	orrs	r3, r4
  4068d4:	444c      	add	r4, r9

004068d6 <.LVL25>:
  4068d6:	f8c9 3004 	str.w	r3, [r9, #4]
  4068da:	6863      	ldr	r3, [r4, #4]
  4068dc:	f043 0301 	orr.w	r3, r3, #1
  4068e0:	6063      	str	r3, [r4, #4]

004068e2 <.LVL26>:
  4068e2:	4640      	mov	r0, r8
  4068e4:	f004 f9d8 	bl	40ac98 <__malloc_unlock>

004068e8 <.LVL27>:
  4068e8:	4630      	mov	r0, r6
  4068ea:	b003      	add	sp, #12

004068ec <.LCFI4>:
  4068ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004068f0 <.LCFI5>:
  4068f0:	f023 0303 	bic.w	r3, r3, #3

004068f4 <.LVL29>:
  4068f4:	18e1      	adds	r1, r4, r3
  4068f6:	4291      	cmp	r1, r2
  4068f8:	db1f      	blt.n	40693a <.LCFI7>
  4068fa:	68c3      	ldr	r3, [r0, #12]

004068fc <.LVL30>:
  4068fc:	6882      	ldr	r2, [r0, #8]

004068fe <.LVL31>:
  4068fe:	462e      	mov	r6, r5

00406900 <.LVL32>:
  406900:	60d3      	str	r3, [r2, #12]
  406902:	460c      	mov	r4, r1

00406904 <.LVL33>:
  406904:	609a      	str	r2, [r3, #8]

00406906 <.LVL34>:
  406906:	e7dd      	b.n	4068c4 <.L11>

00406908 <.LVL35>:
  406908:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40690c:	eb09 0107 	add.w	r1, r9, r7

00406910 <.LVL36>:
  406910:	f002 0201 	and.w	r2, r2, #1
  406914:	444c      	add	r4, r9

00406916 <.LVL37>:
  406916:	f043 0301 	orr.w	r3, r3, #1

0040691a <.LVL38>:
  40691a:	4317      	orrs	r7, r2

0040691c <.LVL39>:
  40691c:	f8c9 7004 	str.w	r7, [r9, #4]
  406920:	604b      	str	r3, [r1, #4]
  406922:	6863      	ldr	r3, [r4, #4]
  406924:	f043 0301 	orr.w	r3, r3, #1
  406928:	3108      	adds	r1, #8

0040692a <.LVL40>:
  40692a:	6063      	str	r3, [r4, #4]
  40692c:	4640      	mov	r0, r8
  40692e:	f000 ff71 	bl	407814 <.LFE174>

00406932 <.LVL41>:
  406932:	e7d6      	b.n	4068e2 <.LVL26>

00406934 <.LCFI6>:
  406934:	4611      	mov	r1, r2

00406936 <.LVL43>:
  406936:	f7ff bcbd 	b.w	4062b4 <.LFE14>

0040693a <.LCFI7>:
  40693a:	f01e 0f01 	tst.w	lr, #1
  40693e:	d18e      	bne.n	40685e <.LVL6>
  406940:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406944:	eba9 0a01 	sub.w	sl, r9, r1

00406948 <.LVL45>:
  406948:	f8da 1004 	ldr.w	r1, [sl, #4]
  40694c:	f021 0103 	bic.w	r1, r1, #3

00406950 <.LVL46>:
  406950:	440b      	add	r3, r1

00406952 <.LVL47>:
  406952:	4423      	add	r3, r4
  406954:	4293      	cmp	r3, r2
  406956:	db25      	blt.n	4069a4 <.LVL63>
  406958:	68c2      	ldr	r2, [r0, #12]

0040695a <.LVL48>:
  40695a:	6881      	ldr	r1, [r0, #8]

0040695c <.LVL49>:
  40695c:	4656      	mov	r6, sl

0040695e <.LVL50>:
  40695e:	60ca      	str	r2, [r1, #12]
  406960:	6091      	str	r1, [r2, #8]

00406962 <.LVL51>:
  406962:	f8da 100c 	ldr.w	r1, [sl, #12]

00406966 <.LVL52>:
  406966:	f856 0f08 	ldr.w	r0, [r6, #8]!

0040696a <.LBB7>:
  40696a:	1f22      	subs	r2, r4, #4
  40696c:	2a24      	cmp	r2, #36	; 0x24

0040696e <.LBE7>:
  40696e:	60c1      	str	r1, [r0, #12]
  406970:	6088      	str	r0, [r1, #8]

00406972 <.LBB12>:
  406972:	f200 8094 	bhi.w	406a9e <.LBB22>

00406976 <.LBB8>:
  406976:	2a13      	cmp	r2, #19
  406978:	d96f      	bls.n	406a5a <.LBB19>

0040697a <.LVL56>:
  40697a:	6829      	ldr	r1, [r5, #0]

0040697c <.LVL57>:
  40697c:	f8ca 1008 	str.w	r1, [sl, #8]

00406980 <.LVL58>:
  406980:	6869      	ldr	r1, [r5, #4]
  406982:	f8ca 100c 	str.w	r1, [sl, #12]
  406986:	2a1b      	cmp	r2, #27
  406988:	f200 80a2 	bhi.w	406ad0 <.LBB10>
  40698c:	3508      	adds	r5, #8

0040698e <.LVL59>:
  40698e:	f10a 0210 	add.w	r2, sl, #16

00406992 <.LVL60>:
  406992:	e063      	b.n	406a5c <.LVL92>

00406994 <.LBE12>:
  406994:	f855 3c08 	ldr.w	r3, [r5, #-8]
  406998:	eba9 0a03 	sub.w	sl, r9, r3

0040699c <.LVL62>:
  40699c:	f8da 1004 	ldr.w	r1, [sl, #4]
  4069a0:	f021 0103 	bic.w	r1, r1, #3

004069a4 <.LVL63>:
  4069a4:	1863      	adds	r3, r4, r1
  4069a6:	4293      	cmp	r3, r2
  4069a8:	f6ff af59 	blt.w	40685e <.LVL6>
  4069ac:	4656      	mov	r6, sl

004069ae <.LVL64>:
  4069ae:	e7d8      	b.n	406962 <.LVL51>

004069b0 <.LVL65>:
  4069b0:	6841      	ldr	r1, [r0, #4]
  4069b2:	f021 0b03 	bic.w	fp, r1, #3

004069b6 <.LVL66>:
  4069b6:	44a3      	add	fp, r4

004069b8 <.LVL67>:
  4069b8:	f107 0010 	add.w	r0, r7, #16

004069bc <.LVL68>:
  4069bc:	4583      	cmp	fp, r0
  4069be:	da56      	bge.n	406a6e <.LBE20>

004069c0 <.LVL69>:
  4069c0:	f01e 0f01 	tst.w	lr, #1
  4069c4:	f47f af4b 	bne.w	40685e <.LVL6>
  4069c8:	f855 1c08 	ldr.w	r1, [r5, #-8]

004069cc <.LVL70>:
  4069cc:	eba9 0a01 	sub.w	sl, r9, r1

004069d0 <.LVL71>:
  4069d0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4069d4:	f021 0103 	bic.w	r1, r1, #3

004069d8 <.LVL72>:
  4069d8:	448b      	add	fp, r1
  4069da:	4558      	cmp	r0, fp
  4069dc:	dce2      	bgt.n	4069a4 <.LVL63>
  4069de:	4656      	mov	r6, sl

004069e0 <.LVL73>:
  4069e0:	f8da 100c 	ldr.w	r1, [sl, #12]

004069e4 <.LVL74>:
  4069e4:	f856 0f08 	ldr.w	r0, [r6, #8]!

004069e8 <.LBB13>:
  4069e8:	1f22      	subs	r2, r4, #4
  4069ea:	2a24      	cmp	r2, #36	; 0x24

004069ec <.LBE13>:
  4069ec:	60c1      	str	r1, [r0, #12]
  4069ee:	6088      	str	r0, [r1, #8]

004069f0 <.LBB17>:
  4069f0:	f200 808f 	bhi.w	406b12 <.LBE15>

004069f4 <.LBB14>:
  4069f4:	2a13      	cmp	r2, #19
  4069f6:	f240 808a 	bls.w	406b0e <.LBB15>

004069fa <.LVL78>:
  4069fa:	6829      	ldr	r1, [r5, #0]

004069fc <.LVL79>:
  4069fc:	f8ca 1008 	str.w	r1, [sl, #8]

00406a00 <.LVL80>:
  406a00:	6869      	ldr	r1, [r5, #4]
  406a02:	f8ca 100c 	str.w	r1, [sl, #12]
  406a06:	2a1b      	cmp	r2, #27
  406a08:	f200 808a 	bhi.w	406b20 <.LBB16>
  406a0c:	3508      	adds	r5, #8

00406a0e <.LVL81>:
  406a0e:	f10a 0210 	add.w	r2, sl, #16

00406a12 <.LVL82>:
  406a12:	6829      	ldr	r1, [r5, #0]
  406a14:	6011      	str	r1, [r2, #0]

00406a16 <.LVL83>:
  406a16:	6869      	ldr	r1, [r5, #4]
  406a18:	6051      	str	r1, [r2, #4]
  406a1a:	68a9      	ldr	r1, [r5, #8]
  406a1c:	6091      	str	r1, [r2, #8]

00406a1e <.LBE14>:
  406a1e:	eb0a 0107 	add.w	r1, sl, r7
  406a22:	ebab 0207 	sub.w	r2, fp, r7
  406a26:	f042 0201 	orr.w	r2, r2, #1
  406a2a:	6099      	str	r1, [r3, #8]
  406a2c:	604a      	str	r2, [r1, #4]
  406a2e:	f8da 3004 	ldr.w	r3, [sl, #4]
  406a32:	f003 0301 	and.w	r3, r3, #1
  406a36:	431f      	orrs	r7, r3

00406a38 <.LVL85>:
  406a38:	4640      	mov	r0, r8
  406a3a:	f8ca 7004 	str.w	r7, [sl, #4]
  406a3e:	f004 f92b 	bl	40ac98 <__malloc_unlock>

00406a42 <.LVL86>:
  406a42:	e751      	b.n	4068e8 <.LVL27>

00406a44 <.LBB18>:
  406a44:	682b      	ldr	r3, [r5, #0]
  406a46:	6003      	str	r3, [r0, #0]

00406a48 <.LVL88>:
  406a48:	686b      	ldr	r3, [r5, #4]
  406a4a:	6043      	str	r3, [r0, #4]
  406a4c:	2a1b      	cmp	r2, #27
  406a4e:	d82d      	bhi.n	406aac <.LBB24>
  406a50:	f100 0308 	add.w	r3, r0, #8

00406a54 <.LVL89>:
  406a54:	f105 0208 	add.w	r2, r5, #8

00406a58 <.LVL90>:
  406a58:	e71b      	b.n	406892 <.LVL13>

00406a5a <.LBB19>:
  406a5a:	4632      	mov	r2, r6

00406a5c <.LVL92>:
  406a5c:	6829      	ldr	r1, [r5, #0]
  406a5e:	6011      	str	r1, [r2, #0]

00406a60 <.LVL93>:
  406a60:	6869      	ldr	r1, [r5, #4]
  406a62:	6051      	str	r1, [r2, #4]
  406a64:	68a9      	ldr	r1, [r5, #8]
  406a66:	6091      	str	r1, [r2, #8]

00406a68 <.LBE19>:
  406a68:	461c      	mov	r4, r3

00406a6a <.LBB20>:
  406a6a:	46d1      	mov	r9, sl

00406a6c <.LVL95>:
  406a6c:	e72a      	b.n	4068c4 <.L11>

00406a6e <.LBE20>:
  406a6e:	eb09 0107 	add.w	r1, r9, r7

00406a72 <.LVL97>:
  406a72:	ebab 0b07 	sub.w	fp, fp, r7

00406a76 <.LVL98>:
  406a76:	f04b 0201 	orr.w	r2, fp, #1
  406a7a:	6099      	str	r1, [r3, #8]
  406a7c:	604a      	str	r2, [r1, #4]

00406a7e <.LVL99>:
  406a7e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406a82:	f003 0301 	and.w	r3, r3, #1
  406a86:	431f      	orrs	r7, r3

00406a88 <.LVL100>:
  406a88:	4640      	mov	r0, r8

00406a8a <.LVL101>:
  406a8a:	f845 7c04 	str.w	r7, [r5, #-4]
  406a8e:	f004 f903 	bl	40ac98 <__malloc_unlock>

00406a92 <.LVL102>:
  406a92:	462e      	mov	r6, r5

00406a94 <.LVL103>:
  406a94:	e728      	b.n	4068e8 <.LVL27>

00406a96 <.LBB21>:
  406a96:	4629      	mov	r1, r5
  406a98:	f001 ffca 	bl	408a30 <.LFE164>

00406a9c <.LVL105>:
  406a9c:	e6ff      	b.n	40689e <.LBE2>

00406a9e <.LBB22>:
  406a9e:	4629      	mov	r1, r5

00406aa0 <.LVL107>:
  406aa0:	4630      	mov	r0, r6

00406aa2 <.LBE22>:
  406aa2:	461c      	mov	r4, r3

00406aa4 <.LBB23>:
  406aa4:	46d1      	mov	r9, sl

00406aa6 <.LVL110>:
  406aa6:	f001 ffc3 	bl	408a30 <.LFE164>

00406aaa <.LVL111>:
  406aaa:	e70b      	b.n	4068c4 <.L11>

00406aac <.LBB24>:
  406aac:	68ab      	ldr	r3, [r5, #8]
  406aae:	6083      	str	r3, [r0, #8]

00406ab0 <.LVL113>:
  406ab0:	68eb      	ldr	r3, [r5, #12]
  406ab2:	60c3      	str	r3, [r0, #12]
  406ab4:	2a24      	cmp	r2, #36	; 0x24
  406ab6:	d017      	beq.n	406ae8 <.LBB26>
  406ab8:	f100 0310 	add.w	r3, r0, #16

00406abc <.LVL114>:
  406abc:	f105 0210 	add.w	r2, r5, #16

00406ac0 <.LVL115>:
  406ac0:	e6e7      	b.n	406892 <.LVL13>

00406ac2 <.LBE24>:
  406ac2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  406ac6:	f023 0303 	bic.w	r3, r3, #3
  406aca:	441c      	add	r4, r3

00406acc <.LVL117>:
  406acc:	462e      	mov	r6, r5
  406ace:	e6f9      	b.n	4068c4 <.L11>

00406ad0 <.LBB10>:
  406ad0:	68a9      	ldr	r1, [r5, #8]
  406ad2:	f8ca 1010 	str.w	r1, [sl, #16]

00406ad6 <.LVL119>:
  406ad6:	68e9      	ldr	r1, [r5, #12]
  406ad8:	f8ca 1014 	str.w	r1, [sl, #20]
  406adc:	2a24      	cmp	r2, #36	; 0x24
  406ade:	d00c      	beq.n	406afa <.LBB11>
  406ae0:	3510      	adds	r5, #16

00406ae2 <.LVL120>:
  406ae2:	f10a 0218 	add.w	r2, sl, #24

00406ae6 <.LVL121>:
  406ae6:	e7b9      	b.n	406a5c <.LVL92>

00406ae8 <.LBB26>:
  406ae8:	692b      	ldr	r3, [r5, #16]
  406aea:	6103      	str	r3, [r0, #16]
  406aec:	696b      	ldr	r3, [r5, #20]
  406aee:	6143      	str	r3, [r0, #20]
  406af0:	f105 0218 	add.w	r2, r5, #24

00406af4 <.LVL123>:
  406af4:	f100 0318 	add.w	r3, r0, #24

00406af8 <.LVL124>:
  406af8:	e6cb      	b.n	406892 <.LVL13>

00406afa <.LBB11>:
  406afa:	692a      	ldr	r2, [r5, #16]

00406afc <.LVL126>:
  406afc:	f8ca 2018 	str.w	r2, [sl, #24]
  406b00:	696a      	ldr	r2, [r5, #20]
  406b02:	f8ca 201c 	str.w	r2, [sl, #28]
  406b06:	3518      	adds	r5, #24

00406b08 <.LVL127>:
  406b08:	f10a 0220 	add.w	r2, sl, #32

00406b0c <.LVL128>:
  406b0c:	e7a6      	b.n	406a5c <.LVL92>

00406b0e <.LBB15>:
  406b0e:	4632      	mov	r2, r6

00406b10 <.LVL130>:
  406b10:	e77f      	b.n	406a12 <.LVL82>

00406b12 <.LBE15>:
  406b12:	4629      	mov	r1, r5

00406b14 <.LVL132>:
  406b14:	4630      	mov	r0, r6

00406b16 <.LVL133>:
  406b16:	9301      	str	r3, [sp, #4]
  406b18:	f001 ff8a 	bl	408a30 <.LFE164>

00406b1c <.LVL134>:
  406b1c:	9b01      	ldr	r3, [sp, #4]
  406b1e:	e77e      	b.n	406a1e <.LBE14>

00406b20 <.LBB16>:
  406b20:	68a9      	ldr	r1, [r5, #8]
  406b22:	f8ca 1010 	str.w	r1, [sl, #16]

00406b26 <.LVL136>:
  406b26:	68e9      	ldr	r1, [r5, #12]
  406b28:	f8ca 1014 	str.w	r1, [sl, #20]
  406b2c:	2a24      	cmp	r2, #36	; 0x24
  406b2e:	d003      	beq.n	406b38 <.LVL139>
  406b30:	3510      	adds	r5, #16

00406b32 <.LVL137>:
  406b32:	f10a 0218 	add.w	r2, sl, #24

00406b36 <.LVL138>:
  406b36:	e76c      	b.n	406a12 <.LVL82>

00406b38 <.LVL139>:
  406b38:	692a      	ldr	r2, [r5, #16]

00406b3a <.LVL140>:
  406b3a:	f8ca 2018 	str.w	r2, [sl, #24]
  406b3e:	696a      	ldr	r2, [r5, #20]
  406b40:	f8ca 201c 	str.w	r2, [sl, #28]
  406b44:	3518      	adds	r5, #24

00406b46 <.LVL141>:
  406b46:	f10a 0220 	add.w	r2, sl, #32

00406b4a <.LVL142>:
  406b4a:	e762      	b.n	406a12 <.LVL82>
  406b4c:	2040d0b0 	.word	0x2040d0b0

Disassembly of section .text%36:

00406b50 <__udivmoddi4>:
  406b50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406b54:	468c      	mov	ip, r1
  406b56:	460d      	mov	r5, r1
  406b58:	4604      	mov	r4, r0
  406b5a:	9e08      	ldr	r6, [sp, #32]
  406b5c:	2b00      	cmp	r3, #0
  406b5e:	d151      	bne.n	406c04 <__udivmoddi4+0xb4>
  406b60:	428a      	cmp	r2, r1
  406b62:	4617      	mov	r7, r2
  406b64:	d96d      	bls.n	406c42 <__udivmoddi4+0xf2>
  406b66:	fab2 fe82 	clz	lr, r2
  406b6a:	f1be 0f00 	cmp.w	lr, #0
  406b6e:	d00b      	beq.n	406b88 <__udivmoddi4+0x38>
  406b70:	f1ce 0c20 	rsb	ip, lr, #32
  406b74:	fa01 f50e 	lsl.w	r5, r1, lr
  406b78:	fa20 fc0c 	lsr.w	ip, r0, ip
  406b7c:	fa02 f70e 	lsl.w	r7, r2, lr
  406b80:	ea4c 0c05 	orr.w	ip, ip, r5
  406b84:	fa00 f40e 	lsl.w	r4, r0, lr
  406b88:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406b8c:	0c25      	lsrs	r5, r4, #16
  406b8e:	fbbc f8fa 	udiv	r8, ip, sl
  406b92:	fa1f f987 	uxth.w	r9, r7
  406b96:	fb0a cc18 	mls	ip, sl, r8, ip
  406b9a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406b9e:	fb08 f309 	mul.w	r3, r8, r9
  406ba2:	42ab      	cmp	r3, r5
  406ba4:	d90a      	bls.n	406bbc <__udivmoddi4+0x6c>
  406ba6:	19ed      	adds	r5, r5, r7
  406ba8:	f108 32ff 	add.w	r2, r8, #4294967295
  406bac:	f080 8123 	bcs.w	406df6 <__udivmoddi4+0x2a6>
  406bb0:	42ab      	cmp	r3, r5
  406bb2:	f240 8120 	bls.w	406df6 <__udivmoddi4+0x2a6>
  406bb6:	f1a8 0802 	sub.w	r8, r8, #2
  406bba:	443d      	add	r5, r7
  406bbc:	1aed      	subs	r5, r5, r3
  406bbe:	b2a4      	uxth	r4, r4
  406bc0:	fbb5 f0fa 	udiv	r0, r5, sl
  406bc4:	fb0a 5510 	mls	r5, sl, r0, r5
  406bc8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406bcc:	fb00 f909 	mul.w	r9, r0, r9
  406bd0:	45a1      	cmp	r9, r4
  406bd2:	d909      	bls.n	406be8 <__udivmoddi4+0x98>
  406bd4:	19e4      	adds	r4, r4, r7
  406bd6:	f100 33ff 	add.w	r3, r0, #4294967295
  406bda:	f080 810a 	bcs.w	406df2 <__udivmoddi4+0x2a2>
  406bde:	45a1      	cmp	r9, r4
  406be0:	f240 8107 	bls.w	406df2 <__udivmoddi4+0x2a2>
  406be4:	3802      	subs	r0, #2
  406be6:	443c      	add	r4, r7
  406be8:	eba4 0409 	sub.w	r4, r4, r9
  406bec:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406bf0:	2100      	movs	r1, #0
  406bf2:	2e00      	cmp	r6, #0
  406bf4:	d061      	beq.n	406cba <__udivmoddi4+0x16a>
  406bf6:	fa24 f40e 	lsr.w	r4, r4, lr
  406bfa:	2300      	movs	r3, #0
  406bfc:	6034      	str	r4, [r6, #0]
  406bfe:	6073      	str	r3, [r6, #4]
  406c00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406c04:	428b      	cmp	r3, r1
  406c06:	d907      	bls.n	406c18 <__udivmoddi4+0xc8>
  406c08:	2e00      	cmp	r6, #0
  406c0a:	d054      	beq.n	406cb6 <__udivmoddi4+0x166>
  406c0c:	2100      	movs	r1, #0
  406c0e:	e886 0021 	stmia.w	r6, {r0, r5}
  406c12:	4608      	mov	r0, r1
  406c14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406c18:	fab3 f183 	clz	r1, r3
  406c1c:	2900      	cmp	r1, #0
  406c1e:	f040 808e 	bne.w	406d3e <__udivmoddi4+0x1ee>
  406c22:	42ab      	cmp	r3, r5
  406c24:	d302      	bcc.n	406c2c <__udivmoddi4+0xdc>
  406c26:	4282      	cmp	r2, r0
  406c28:	f200 80fa 	bhi.w	406e20 <__udivmoddi4+0x2d0>
  406c2c:	1a84      	subs	r4, r0, r2
  406c2e:	eb65 0503 	sbc.w	r5, r5, r3
  406c32:	2001      	movs	r0, #1
  406c34:	46ac      	mov	ip, r5
  406c36:	2e00      	cmp	r6, #0
  406c38:	d03f      	beq.n	406cba <__udivmoddi4+0x16a>
  406c3a:	e886 1010 	stmia.w	r6, {r4, ip}
  406c3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406c42:	b912      	cbnz	r2, 406c4a <__udivmoddi4+0xfa>
  406c44:	2701      	movs	r7, #1
  406c46:	fbb7 f7f2 	udiv	r7, r7, r2
  406c4a:	fab7 fe87 	clz	lr, r7
  406c4e:	f1be 0f00 	cmp.w	lr, #0
  406c52:	d134      	bne.n	406cbe <__udivmoddi4+0x16e>
  406c54:	1beb      	subs	r3, r5, r7
  406c56:	0c3a      	lsrs	r2, r7, #16
  406c58:	fa1f fc87 	uxth.w	ip, r7
  406c5c:	2101      	movs	r1, #1
  406c5e:	fbb3 f8f2 	udiv	r8, r3, r2
  406c62:	0c25      	lsrs	r5, r4, #16
  406c64:	fb02 3318 	mls	r3, r2, r8, r3
  406c68:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406c6c:	fb0c f308 	mul.w	r3, ip, r8
  406c70:	42ab      	cmp	r3, r5
  406c72:	d907      	bls.n	406c84 <__udivmoddi4+0x134>
  406c74:	19ed      	adds	r5, r5, r7
  406c76:	f108 30ff 	add.w	r0, r8, #4294967295
  406c7a:	d202      	bcs.n	406c82 <__udivmoddi4+0x132>
  406c7c:	42ab      	cmp	r3, r5
  406c7e:	f200 80d1 	bhi.w	406e24 <__udivmoddi4+0x2d4>
  406c82:	4680      	mov	r8, r0
  406c84:	1aed      	subs	r5, r5, r3
  406c86:	b2a3      	uxth	r3, r4
  406c88:	fbb5 f0f2 	udiv	r0, r5, r2
  406c8c:	fb02 5510 	mls	r5, r2, r0, r5
  406c90:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406c94:	fb0c fc00 	mul.w	ip, ip, r0
  406c98:	45a4      	cmp	ip, r4
  406c9a:	d907      	bls.n	406cac <__udivmoddi4+0x15c>
  406c9c:	19e4      	adds	r4, r4, r7
  406c9e:	f100 33ff 	add.w	r3, r0, #4294967295
  406ca2:	d202      	bcs.n	406caa <__udivmoddi4+0x15a>
  406ca4:	45a4      	cmp	ip, r4
  406ca6:	f200 80b8 	bhi.w	406e1a <__udivmoddi4+0x2ca>
  406caa:	4618      	mov	r0, r3
  406cac:	eba4 040c 	sub.w	r4, r4, ip
  406cb0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406cb4:	e79d      	b.n	406bf2 <__udivmoddi4+0xa2>
  406cb6:	4631      	mov	r1, r6
  406cb8:	4630      	mov	r0, r6
  406cba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406cbe:	f1ce 0420 	rsb	r4, lr, #32
  406cc2:	fa05 f30e 	lsl.w	r3, r5, lr
  406cc6:	fa07 f70e 	lsl.w	r7, r7, lr
  406cca:	fa20 f804 	lsr.w	r8, r0, r4
  406cce:	0c3a      	lsrs	r2, r7, #16
  406cd0:	fa25 f404 	lsr.w	r4, r5, r4
  406cd4:	ea48 0803 	orr.w	r8, r8, r3
  406cd8:	fbb4 f1f2 	udiv	r1, r4, r2
  406cdc:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406ce0:	fb02 4411 	mls	r4, r2, r1, r4
  406ce4:	fa1f fc87 	uxth.w	ip, r7
  406ce8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406cec:	fb01 f30c 	mul.w	r3, r1, ip
  406cf0:	42ab      	cmp	r3, r5
  406cf2:	fa00 f40e 	lsl.w	r4, r0, lr
  406cf6:	d909      	bls.n	406d0c <__udivmoddi4+0x1bc>
  406cf8:	19ed      	adds	r5, r5, r7
  406cfa:	f101 30ff 	add.w	r0, r1, #4294967295
  406cfe:	f080 808a 	bcs.w	406e16 <__udivmoddi4+0x2c6>
  406d02:	42ab      	cmp	r3, r5
  406d04:	f240 8087 	bls.w	406e16 <__udivmoddi4+0x2c6>
  406d08:	3902      	subs	r1, #2
  406d0a:	443d      	add	r5, r7
  406d0c:	1aeb      	subs	r3, r5, r3
  406d0e:	fa1f f588 	uxth.w	r5, r8
  406d12:	fbb3 f0f2 	udiv	r0, r3, r2
  406d16:	fb02 3310 	mls	r3, r2, r0, r3
  406d1a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406d1e:	fb00 f30c 	mul.w	r3, r0, ip
  406d22:	42ab      	cmp	r3, r5
  406d24:	d907      	bls.n	406d36 <__udivmoddi4+0x1e6>
  406d26:	19ed      	adds	r5, r5, r7
  406d28:	f100 38ff 	add.w	r8, r0, #4294967295
  406d2c:	d26f      	bcs.n	406e0e <__udivmoddi4+0x2be>
  406d2e:	42ab      	cmp	r3, r5
  406d30:	d96d      	bls.n	406e0e <__udivmoddi4+0x2be>
  406d32:	3802      	subs	r0, #2
  406d34:	443d      	add	r5, r7
  406d36:	1aeb      	subs	r3, r5, r3
  406d38:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406d3c:	e78f      	b.n	406c5e <__udivmoddi4+0x10e>
  406d3e:	f1c1 0720 	rsb	r7, r1, #32
  406d42:	fa22 f807 	lsr.w	r8, r2, r7
  406d46:	408b      	lsls	r3, r1
  406d48:	fa05 f401 	lsl.w	r4, r5, r1
  406d4c:	ea48 0303 	orr.w	r3, r8, r3
  406d50:	fa20 fe07 	lsr.w	lr, r0, r7
  406d54:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406d58:	40fd      	lsrs	r5, r7
  406d5a:	ea4e 0e04 	orr.w	lr, lr, r4
  406d5e:	fbb5 f9fc 	udiv	r9, r5, ip
  406d62:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406d66:	fb0c 5519 	mls	r5, ip, r9, r5
  406d6a:	fa1f f883 	uxth.w	r8, r3
  406d6e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406d72:	fb09 f408 	mul.w	r4, r9, r8
  406d76:	42ac      	cmp	r4, r5
  406d78:	fa02 f201 	lsl.w	r2, r2, r1
  406d7c:	fa00 fa01 	lsl.w	sl, r0, r1
  406d80:	d908      	bls.n	406d94 <__udivmoddi4+0x244>
  406d82:	18ed      	adds	r5, r5, r3
  406d84:	f109 30ff 	add.w	r0, r9, #4294967295
  406d88:	d243      	bcs.n	406e12 <__udivmoddi4+0x2c2>
  406d8a:	42ac      	cmp	r4, r5
  406d8c:	d941      	bls.n	406e12 <__udivmoddi4+0x2c2>
  406d8e:	f1a9 0902 	sub.w	r9, r9, #2
  406d92:	441d      	add	r5, r3
  406d94:	1b2d      	subs	r5, r5, r4
  406d96:	fa1f fe8e 	uxth.w	lr, lr
  406d9a:	fbb5 f0fc 	udiv	r0, r5, ip
  406d9e:	fb0c 5510 	mls	r5, ip, r0, r5
  406da2:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406da6:	fb00 f808 	mul.w	r8, r0, r8
  406daa:	45a0      	cmp	r8, r4
  406dac:	d907      	bls.n	406dbe <__udivmoddi4+0x26e>
  406dae:	18e4      	adds	r4, r4, r3
  406db0:	f100 35ff 	add.w	r5, r0, #4294967295
  406db4:	d229      	bcs.n	406e0a <__udivmoddi4+0x2ba>
  406db6:	45a0      	cmp	r8, r4
  406db8:	d927      	bls.n	406e0a <__udivmoddi4+0x2ba>
  406dba:	3802      	subs	r0, #2
  406dbc:	441c      	add	r4, r3
  406dbe:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406dc2:	eba4 0408 	sub.w	r4, r4, r8
  406dc6:	fba0 8902 	umull	r8, r9, r0, r2
  406dca:	454c      	cmp	r4, r9
  406dcc:	46c6      	mov	lr, r8
  406dce:	464d      	mov	r5, r9
  406dd0:	d315      	bcc.n	406dfe <__udivmoddi4+0x2ae>
  406dd2:	d012      	beq.n	406dfa <__udivmoddi4+0x2aa>
  406dd4:	b156      	cbz	r6, 406dec <__udivmoddi4+0x29c>
  406dd6:	ebba 030e 	subs.w	r3, sl, lr
  406dda:	eb64 0405 	sbc.w	r4, r4, r5
  406dde:	fa04 f707 	lsl.w	r7, r4, r7
  406de2:	40cb      	lsrs	r3, r1
  406de4:	431f      	orrs	r7, r3
  406de6:	40cc      	lsrs	r4, r1
  406de8:	6037      	str	r7, [r6, #0]
  406dea:	6074      	str	r4, [r6, #4]
  406dec:	2100      	movs	r1, #0
  406dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406df2:	4618      	mov	r0, r3
  406df4:	e6f8      	b.n	406be8 <__udivmoddi4+0x98>
  406df6:	4690      	mov	r8, r2
  406df8:	e6e0      	b.n	406bbc <__udivmoddi4+0x6c>
  406dfa:	45c2      	cmp	sl, r8
  406dfc:	d2ea      	bcs.n	406dd4 <__udivmoddi4+0x284>
  406dfe:	ebb8 0e02 	subs.w	lr, r8, r2
  406e02:	eb69 0503 	sbc.w	r5, r9, r3
  406e06:	3801      	subs	r0, #1
  406e08:	e7e4      	b.n	406dd4 <__udivmoddi4+0x284>
  406e0a:	4628      	mov	r0, r5
  406e0c:	e7d7      	b.n	406dbe <__udivmoddi4+0x26e>
  406e0e:	4640      	mov	r0, r8
  406e10:	e791      	b.n	406d36 <__udivmoddi4+0x1e6>
  406e12:	4681      	mov	r9, r0
  406e14:	e7be      	b.n	406d94 <__udivmoddi4+0x244>
  406e16:	4601      	mov	r1, r0
  406e18:	e778      	b.n	406d0c <__udivmoddi4+0x1bc>
  406e1a:	3802      	subs	r0, #2
  406e1c:	443c      	add	r4, r7
  406e1e:	e745      	b.n	406cac <__udivmoddi4+0x15c>
  406e20:	4608      	mov	r0, r1
  406e22:	e708      	b.n	406c36 <__udivmoddi4+0xe6>
  406e24:	f1a8 0802 	sub.w	r8, r8, #2
  406e28:	443d      	add	r5, r7
  406e2a:	e72b      	b.n	406c84 <__udivmoddi4+0x134>

Disassembly of section .text.wc_Sha512Final%37:

00406e30 <wc_Sha512Final>:

int wc_Sha512Final(Sha512* sha512, byte* hash)
{
    int ret;

    if (sha512 == NULL || hash == NULL) {
  406e30:	2800      	cmp	r0, #0
  406e32:	f000 8120 	beq.w	407076 <.LBE801>
{
  406e36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00406e3a <.LCFI7>:
  406e3a:	b083      	sub	sp, #12

00406e3c <.LCFI8>:
  406e3c:	468e      	mov	lr, r1
  406e3e:	4601      	mov	r1, r0

00406e40 <.LVL46>:
    if (sha512 == NULL || hash == NULL) {
  406e40:	f1be 0f00 	cmp.w	lr, #0
  406e44:	f000 8111 	beq.w	40706a <.LBE799>

00406e48 <.LBB762>:
    byte* local = (byte*)sha512->buffer;
  406e48:	f100 0358 	add.w	r3, r0, #88	; 0x58
  406e4c:	9301      	str	r3, [sp, #4]

00406e4e <.LVL48>:
    if (sha512 == NULL) {
  406e4e:	2800      	cmp	r0, #0
  406e50:	f000 810e 	beq.w	407070 <.LBB801>
    AddLength(sha512, sha512->buffLen);               /* before adding pads */
  406e54:	6800      	ldr	r0, [r0, #0]

00406e56 <.LBB764>:
    word64 tmp = sha512->loLen;
  406e56:	e9d1 2302 	ldrd	r2, r3, [r1, #8]

00406e5a <.LVL50>:
    if ( (sha512->loLen += len) < tmp)
  406e5a:	eb12 0a00 	adds.w	sl, r2, r0
  406e5e:	f143 0b00 	adc.w	fp, r3, #0
  406e62:	e9c1 ab02 	strd	sl, fp, [r1, #8]
  406e66:	459b      	cmp	fp, r3
  406e68:	bf08      	it	eq
  406e6a:	4592      	cmpeq	sl, r2
  406e6c:	d206      	bcs.n	406e7c <.LVL52+0x4>
        sha512->hiLen++;                       /* carry low to high */
  406e6e:	e9d1 2304 	ldrd	r2, r3, [r1, #16]

00406e72 <.LVL51>:
  406e72:	3201      	adds	r2, #1
  406e74:	f143 0300 	adc.w	r3, r3, #0

00406e78 <.LVL52>:
  406e78:	e9c1 2304 	strd	r2, r3, [r1, #16]
  406e7c:	468a      	mov	sl, r1
  406e7e:	46f3      	mov	fp, lr

00406e80 <.LBE764>:
    local[sha512->buffLen++] = 0x80;  /* add 1 */
  406e80:	1c43      	adds	r3, r0, #1
  406e82:	600b      	str	r3, [r1, #0]
  406e84:	2380      	movs	r3, #128	; 0x80
  406e86:	9a01      	ldr	r2, [sp, #4]
  406e88:	5413      	strb	r3, [r2, r0]
    if (sha512->buffLen > SHA512_PAD_SIZE) {
  406e8a:	6808      	ldr	r0, [r1, #0]
  406e8c:	2870      	cmp	r0, #112	; 0x70
  406e8e:	d92f      	bls.n	406ef0 <.LVL61>

00406e90 <.LVL54>:
        XMEMSET(&local[sha512->buffLen], 0, SHA512_BLOCK_SIZE - sha512->buffLen);
  406e90:	1a1a      	subs	r2, r3, r0
  406e92:	2100      	movs	r1, #0

00406e94 <.LVL55>:
  406e94:	9b01      	ldr	r3, [sp, #4]
  406e96:	4418      	add	r0, r3
  406e98:	f002 f9f0 	bl	40927c <.LFE166>

00406e9c <.LVL56>:
        sha512->buffLen += SHA512_BLOCK_SIZE - sha512->buffLen;
  406e9c:	4652      	mov	r2, sl
  406e9e:	2380      	movs	r3, #128	; 0x80
  406ea0:	f842 3b50 	str.w	r3, [r2], #80

00406ea4 <.LVL57>:
  406ea4:	f10a 0ed0 	add.w	lr, sl, #208	; 0xd0

00406ea8 <.LBB766>:
        out[i] = ByteReverseWord64(in[i]);
  406ea8:	6893      	ldr	r3, [r2, #8]
  406eaa:	68d1      	ldr	r1, [r2, #12]

00406eac <.LBB768>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  406eac:	0a18      	lsrs	r0, r3, #8
  406eae:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  406eb2:	021b      	lsls	r3, r3, #8
  406eb4:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  406eb8:	4303      	orrs	r3, r0

00406eba <.LBE770>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  406eba:	ea4f 4733 	mov.w	r7, r3, ror #16
  406ebe:	2600      	movs	r6, #0

00406ec0 <.LBB772>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  406ec0:	0a0b      	lsrs	r3, r1, #8
  406ec2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  406ec6:	0209      	lsls	r1, r1, #8
  406ec8:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  406ecc:	430b      	orrs	r3, r1

00406ece <.LBB774>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  406ece:	ea4f 4333 	mov.w	r3, r3, ror #16

00406ed2 <.LBE772>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  406ed2:	ea46 0003 	orr.w	r0, r6, r3
  406ed6:	4639      	mov	r1, r7

00406ed8 <.LBE768>:
        out[i] = ByteReverseWord64(in[i]);
  406ed8:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  406edc:	4572      	cmp	r2, lr
  406ede:	d1e3      	bne.n	406ea8 <.LBB766>

00406ee0 <.LBE766>:
        ret = Transform(sha512);
  406ee0:	4650      	mov	r0, sl
  406ee2:	f7f9 f957 	bl	400194 <_etext>

00406ee6 <.LVL60>:
        if (ret != 0)
  406ee6:	4602      	mov	r2, r0
  406ee8:	2800      	cmp	r0, #0
  406eea:	d151      	bne.n	406f90 <.LBE762>
        sha512->buffLen = 0;
  406eec:	f8ca 6000 	str.w	r6, [sl]

00406ef0 <.LVL61>:
    XMEMSET(&local[sha512->buffLen], 0, SHA512_PAD_SIZE - sha512->buffLen);
  406ef0:	f8da 0000 	ldr.w	r0, [sl]
  406ef4:	f1c0 0270 	rsb	r2, r0, #112	; 0x70
  406ef8:	2100      	movs	r1, #0
  406efa:	9b01      	ldr	r3, [sp, #4]
  406efc:	4418      	add	r0, r3
  406efe:	f002 f9bd 	bl	40927c <.LFE166>

00406f02 <.LVL62>:
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  406f02:	f8da 7008 	ldr.w	r7, [sl, #8]
  406f06:	f8da 600c 	ldr.w	r6, [sl, #12]
                                                         (sha512->hiLen << 3);
  406f0a:	f8da 2010 	ldr.w	r2, [sl, #16]
  406f0e:	f8da 3014 	ldr.w	r3, [sl, #20]
  406f12:	00d9      	lsls	r1, r3, #3
  406f14:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  406f18:	00d0      	lsls	r0, r2, #3
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  406f1a:	0f72      	lsrs	r2, r6, #29
  406f1c:	2300      	movs	r3, #0
  406f1e:	1812      	adds	r2, r2, r0
  406f20:	414b      	adcs	r3, r1
  406f22:	e9ca 2304 	strd	r2, r3, [sl, #16]
    sha512->loLen = sha512->loLen << 3;
  406f26:	00f6      	lsls	r6, r6, #3
  406f28:	ea46 7657 	orr.w	r6, r6, r7, lsr #29
  406f2c:	00ff      	lsls	r7, r7, #3
  406f2e:	f8ca 7008 	str.w	r7, [sl, #8]
  406f32:	f8ca 600c 	str.w	r6, [sl, #12]

00406f36 <.LVL63>:
  406f36:	f10a 0250 	add.w	r2, sl, #80	; 0x50
  406f3a:	f10a 06c0 	add.w	r6, sl, #192	; 0xc0

00406f3e <.LBB776>:
        out[i] = ByteReverseWord64(in[i]);
  406f3e:	6893      	ldr	r3, [r2, #8]
  406f40:	68d1      	ldr	r1, [r2, #12]

00406f42 <.LBB778>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  406f42:	0a18      	lsrs	r0, r3, #8
  406f44:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  406f48:	021b      	lsls	r3, r3, #8
  406f4a:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  406f4e:	4303      	orrs	r3, r0

00406f50 <.LBE780>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  406f50:	ea4f 4533 	mov.w	r5, r3, ror #16
  406f54:	2400      	movs	r4, #0

00406f56 <.LBB782>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  406f56:	0a0b      	lsrs	r3, r1, #8
  406f58:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  406f5c:	0209      	lsls	r1, r1, #8
  406f5e:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  406f62:	430b      	orrs	r3, r1

00406f64 <.LBB784>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  406f64:	ea4f 4333 	mov.w	r3, r3, ror #16

00406f68 <.LBE782>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  406f68:	ea44 0003 	orr.w	r0, r4, r3
  406f6c:	4629      	mov	r1, r5

00406f6e <.LBE778>:
        out[i] = ByteReverseWord64(in[i]);
  406f6e:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  406f72:	42b2      	cmp	r2, r6
  406f74:	d1e3      	bne.n	406f3e <.LBB776>

00406f76 <.LBE776>:
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 2] = sha512->hiLen;
  406f76:	e9da 2304 	ldrd	r2, r3, [sl, #16]
  406f7a:	e9ca 2332 	strd	r2, r3, [sl, #200]	; 0xc8
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 1] = sha512->loLen;
  406f7e:	e9da 2302 	ldrd	r2, r3, [sl, #8]
  406f82:	e9ca 2334 	strd	r2, r3, [sl, #208]	; 0xd0
    ret = Transform(sha512);
  406f86:	4650      	mov	r0, sl
  406f88:	f7f9 f904 	bl	400194 <_etext>

00406f8c <.LVL66>:
    if (ret != 0)
  406f8c:	4602      	mov	r2, r0
  406f8e:	b118      	cbz	r0, 406f98 <.LBB798>

00406f90 <.LBE762>:
        return ret;

    XMEMCPY(hash, sha512->digest, SHA512_DIGEST_SIZE);

    return InitSha512(sha512);  /* reset state */
}
  406f90:	4610      	mov	r0, r2
  406f92:	b003      	add	sp, #12

00406f94 <.LCFI9>:
  406f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406f98 <.LBB798>:
        ByteReverseWords64(sha512->digest, sha512->digest, SHA512_DIGEST_SIZE);
  406f98:	f10a 0618 	add.w	r6, sl, #24

00406f9c <.LVL69>:
  406f9c:	f10a 0410 	add.w	r4, sl, #16
  406fa0:	f10a 0550 	add.w	r5, sl, #80	; 0x50

00406fa4 <.LBB786>:
        out[i] = ByteReverseWord64(in[i]);
  406fa4:	68a3      	ldr	r3, [r4, #8]
  406fa6:	68e1      	ldr	r1, [r4, #12]

00406fa8 <.LBB788>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  406fa8:	0a18      	lsrs	r0, r3, #8
  406faa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  406fae:	021b      	lsls	r3, r3, #8
  406fb0:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  406fb4:	4303      	orrs	r3, r0

00406fb6 <.LBE790>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  406fb6:	ea4f 4933 	mov.w	r9, r3, ror #16
  406fba:	f04f 0800 	mov.w	r8, #0

00406fbe <.LBB792>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  406fbe:	0a0b      	lsrs	r3, r1, #8
  406fc0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  406fc4:	0209      	lsls	r1, r1, #8
  406fc6:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  406fca:	430b      	orrs	r3, r1

00406fcc <.LBB794>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  406fcc:	ea4f 4333 	mov.w	r3, r3, ror #16

00406fd0 <.LBE792>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  406fd0:	ea48 0003 	orr.w	r0, r8, r3
  406fd4:	4649      	mov	r1, r9

00406fd6 <.LBE788>:
        out[i] = ByteReverseWord64(in[i]);
  406fd6:	e9e4 0102 	strd	r0, r1, [r4, #8]!
    for (i = 0; i < count; i++)
  406fda:	42ac      	cmp	r4, r5
  406fdc:	d1e2      	bne.n	406fa4 <.LBB786>

00406fde <.LBE786>:
    XMEMCPY(hash, sha512->digest, SHA512_DIGEST_SIZE);
  406fde:	4633      	mov	r3, r6
  406fe0:	46de      	mov	lr, fp
  406fe2:	3640      	adds	r6, #64	; 0x40

00406fe4 <.LVL72>:
  406fe4:	681d      	ldr	r5, [r3, #0]
  406fe6:	685c      	ldr	r4, [r3, #4]
  406fe8:	6898      	ldr	r0, [r3, #8]
  406fea:	68d9      	ldr	r1, [r3, #12]
  406fec:	f8ce 5000 	str.w	r5, [lr]
  406ff0:	f8ce 4004 	str.w	r4, [lr, #4]
  406ff4:	f8ce 0008 	str.w	r0, [lr, #8]
  406ff8:	f8ce 100c 	str.w	r1, [lr, #12]
  406ffc:	3310      	adds	r3, #16
  406ffe:	f10e 0e10 	add.w	lr, lr, #16
  407002:	42b3      	cmp	r3, r6
  407004:	d1ee      	bne.n	406fe4 <.LVL72>

00407006 <.LBB799>:
    sha512->digest[0] = W64LIT(0x6a09e667f3bcc908);
  407006:	a11e      	add	r1, pc, #120	; (adr r1, 407080 <.LVL78+0x4>)
  407008:	e9d1 0100 	ldrd	r0, r1, [r1]
  40700c:	e9ca 0106 	strd	r0, r1, [sl, #24]
    sha512->digest[1] = W64LIT(0xbb67ae8584caa73b);
  407010:	a11d      	add	r1, pc, #116	; (adr r1, 407088 <.LVL78+0xc>)
  407012:	e9d1 0100 	ldrd	r0, r1, [r1]
  407016:	e9ca 0108 	strd	r0, r1, [sl, #32]
    sha512->digest[2] = W64LIT(0x3c6ef372fe94f82b);
  40701a:	a11d      	add	r1, pc, #116	; (adr r1, 407090 <.LVL78+0x14>)
  40701c:	e9d1 0100 	ldrd	r0, r1, [r1]
  407020:	e9ca 010a 	strd	r0, r1, [sl, #40]	; 0x28
    sha512->digest[3] = W64LIT(0xa54ff53a5f1d36f1);
  407024:	a11c      	add	r1, pc, #112	; (adr r1, 407098 <.LVL78+0x1c>)
  407026:	e9d1 0100 	ldrd	r0, r1, [r1]
  40702a:	e9ca 010c 	strd	r0, r1, [sl, #48]	; 0x30
    sha512->digest[4] = W64LIT(0x510e527fade682d1);
  40702e:	a11c      	add	r1, pc, #112	; (adr r1, 4070a0 <.LVL78+0x24>)
  407030:	e9d1 0100 	ldrd	r0, r1, [r1]
  407034:	e9ca 010e 	strd	r0, r1, [sl, #56]	; 0x38
    sha512->digest[5] = W64LIT(0x9b05688c2b3e6c1f);
  407038:	a11b      	add	r1, pc, #108	; (adr r1, 4070a8 <.LVL78+0x2c>)
  40703a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40703e:	e9ca 0110 	strd	r0, r1, [sl, #64]	; 0x40
    sha512->digest[6] = W64LIT(0x1f83d9abfb41bd6b);
  407042:	a11b      	add	r1, pc, #108	; (adr r1, 4070b0 <.LVL78+0x34>)
  407044:	e9d1 0100 	ldrd	r0, r1, [r1]
  407048:	e9ca 0112 	strd	r0, r1, [sl, #72]	; 0x48
    sha512->digest[7] = W64LIT(0x5be0cd19137e2179);
  40704c:	a11a      	add	r1, pc, #104	; (adr r1, 4070b8 <.LVL78+0x3c>)
  40704e:	e9d1 0100 	ldrd	r0, r1, [r1]
  407052:	e9ca 0114 	strd	r0, r1, [sl, #80]	; 0x50
    sha512->buffLen = 0;
  407056:	2300      	movs	r3, #0
  407058:	f8ca 3000 	str.w	r3, [sl]
    sha512->loLen   = 0;
  40705c:	2000      	movs	r0, #0
  40705e:	2100      	movs	r1, #0
  407060:	e9ca 0102 	strd	r0, r1, [sl, #8]
    sha512->hiLen   = 0;
  407064:	e9ca 0104 	strd	r0, r1, [sl, #16]
  407068:	e792      	b.n	406f90 <.LBE762>

0040706a <.LBE799>:
        return BAD_FUNC_ARG;
  40706a:	f06f 02ac 	mvn.w	r2, #172	; 0xac
  40706e:	e78f      	b.n	406f90 <.LBE762>

00407070 <.LBB801>:
        return BAD_FUNC_ARG;
  407070:	f06f 02ac 	mvn.w	r2, #172	; 0xac

00407074 <.LVL76>:
  407074:	e78c      	b.n	406f90 <.LBE762>

00407076 <.LBE801>:
        return BAD_FUNC_ARG;
  407076:	f06f 02ac 	mvn.w	r2, #172	; 0xac
}
  40707a:	4610      	mov	r0, r2

0040707c <.LVL78>:
  40707c:	4770      	bx	lr
  40707e:	bf00      	nop
  407080:	f3bcc908 	.word	0xf3bcc908
  407084:	6a09e667 	.word	0x6a09e667
  407088:	84caa73b 	.word	0x84caa73b
  40708c:	bb67ae85 	.word	0xbb67ae85
  407090:	fe94f82b 	.word	0xfe94f82b
  407094:	3c6ef372 	.word	0x3c6ef372
  407098:	5f1d36f1 	.word	0x5f1d36f1
  40709c:	a54ff53a 	.word	0xa54ff53a
  4070a0:	ade682d1 	.word	0xade682d1
  4070a4:	510e527f 	.word	0x510e527f
  4070a8:	2b3e6c1f 	.word	0x2b3e6c1f
  4070ac:	9b05688c 	.word	0x9b05688c
  4070b0:	fb41bd6b 	.word	0xfb41bd6b
  4070b4:	1f83d9ab 	.word	0x1f83d9ab
  4070b8:	137e2179 	.word	0x137e2179
  4070bc:	5be0cd19 	.word	0x5be0cd19

Disassembly of section .text.wc_Sha384Final%38:

004070c0 <wc_Sha384Final>:

int wc_Sha384Final(Sha384* sha384, byte* hash)
{
    int ret;

    if (sha384 == NULL || hash == NULL) {
  4070c0:	2800      	cmp	r0, #0
  4070c2:	f000 8120 	beq.w	407306 <.LBE922>
{
  4070c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

004070ca <.LCFI14>:
  4070ca:	b083      	sub	sp, #12

004070cc <.LCFI15>:
  4070cc:	468e      	mov	lr, r1
  4070ce:	4601      	mov	r1, r0

004070d0 <.LVL105>:
    if (sha384 == NULL || hash == NULL) {
  4070d0:	f1be 0f00 	cmp.w	lr, #0
  4070d4:	f000 8111 	beq.w	4072fa <.LBE920>

004070d8 <.LBB883>:
    byte* local = (byte*)sha512->buffer;
  4070d8:	f100 0358 	add.w	r3, r0, #88	; 0x58
  4070dc:	9301      	str	r3, [sp, #4]

004070de <.LVL107>:
    if (sha512 == NULL) {
  4070de:	2800      	cmp	r0, #0
  4070e0:	f000 810e 	beq.w	407300 <.LBB922>
    AddLength(sha512, sha512->buffLen);               /* before adding pads */
  4070e4:	6800      	ldr	r0, [r0, #0]

004070e6 <.LBB885>:
    word64 tmp = sha512->loLen;
  4070e6:	e9d1 2302 	ldrd	r2, r3, [r1, #8]

004070ea <.LVL109>:
    if ( (sha512->loLen += len) < tmp)
  4070ea:	eb12 0a00 	adds.w	sl, r2, r0
  4070ee:	f143 0b00 	adc.w	fp, r3, #0
  4070f2:	e9c1 ab02 	strd	sl, fp, [r1, #8]
  4070f6:	459b      	cmp	fp, r3
  4070f8:	bf08      	it	eq
  4070fa:	4592      	cmpeq	sl, r2
  4070fc:	d206      	bcs.n	40710c <.LVL111+0x4>
        sha512->hiLen++;                       /* carry low to high */
  4070fe:	e9d1 2304 	ldrd	r2, r3, [r1, #16]

00407102 <.LVL110>:
  407102:	3201      	adds	r2, #1
  407104:	f143 0300 	adc.w	r3, r3, #0

00407108 <.LVL111>:
  407108:	e9c1 2304 	strd	r2, r3, [r1, #16]
  40710c:	468a      	mov	sl, r1
  40710e:	46f3      	mov	fp, lr

00407110 <.LBE885>:
    local[sha512->buffLen++] = 0x80;  /* add 1 */
  407110:	1c43      	adds	r3, r0, #1
  407112:	600b      	str	r3, [r1, #0]
  407114:	2380      	movs	r3, #128	; 0x80
  407116:	9a01      	ldr	r2, [sp, #4]
  407118:	5413      	strb	r3, [r2, r0]
    if (sha512->buffLen > SHA512_PAD_SIZE) {
  40711a:	6808      	ldr	r0, [r1, #0]
  40711c:	2870      	cmp	r0, #112	; 0x70
  40711e:	d92f      	bls.n	407180 <.LVL120>

00407120 <.LVL113>:
        XMEMSET(&local[sha512->buffLen], 0, SHA512_BLOCK_SIZE - sha512->buffLen);
  407120:	1a1a      	subs	r2, r3, r0
  407122:	2100      	movs	r1, #0

00407124 <.LVL114>:
  407124:	9b01      	ldr	r3, [sp, #4]
  407126:	4418      	add	r0, r3
  407128:	f002 f8a8 	bl	40927c <.LFE166>

0040712c <.LVL115>:
        sha512->buffLen += SHA512_BLOCK_SIZE - sha512->buffLen;
  40712c:	4652      	mov	r2, sl
  40712e:	2380      	movs	r3, #128	; 0x80
  407130:	f842 3b50 	str.w	r3, [r2], #80

00407134 <.LVL116>:
  407134:	f10a 0ed0 	add.w	lr, sl, #208	; 0xd0

00407138 <.LBB887>:
        out[i] = ByteReverseWord64(in[i]);
  407138:	6893      	ldr	r3, [r2, #8]
  40713a:	68d1      	ldr	r1, [r2, #12]

0040713c <.LBB889>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40713c:	0a18      	lsrs	r0, r3, #8
  40713e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  407142:	021b      	lsls	r3, r3, #8
  407144:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  407148:	4303      	orrs	r3, r0

0040714a <.LBE891>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  40714a:	ea4f 4733 	mov.w	r7, r3, ror #16
  40714e:	2600      	movs	r6, #0

00407150 <.LBB893>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  407150:	0a0b      	lsrs	r3, r1, #8
  407152:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  407156:	0209      	lsls	r1, r1, #8
  407158:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40715c:	430b      	orrs	r3, r1

0040715e <.LBB895>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40715e:	ea4f 4333 	mov.w	r3, r3, ror #16

00407162 <.LBE893>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  407162:	ea46 0003 	orr.w	r0, r6, r3
  407166:	4639      	mov	r1, r7

00407168 <.LBE889>:
        out[i] = ByteReverseWord64(in[i]);
  407168:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  40716c:	4572      	cmp	r2, lr
  40716e:	d1e3      	bne.n	407138 <.LBB887>

00407170 <.LBE887>:
        ret = Transform(sha512);
  407170:	4650      	mov	r0, sl
  407172:	f7f9 f80f 	bl	400194 <_etext>

00407176 <.LVL119>:
        if (ret != 0)
  407176:	4602      	mov	r2, r0
  407178:	2800      	cmp	r0, #0
  40717a:	d151      	bne.n	407220 <.LBE883>
        sha512->buffLen = 0;
  40717c:	f8ca 6000 	str.w	r6, [sl]

00407180 <.LVL120>:
    XMEMSET(&local[sha512->buffLen], 0, SHA512_PAD_SIZE - sha512->buffLen);
  407180:	f8da 0000 	ldr.w	r0, [sl]
  407184:	f1c0 0270 	rsb	r2, r0, #112	; 0x70
  407188:	2100      	movs	r1, #0
  40718a:	9b01      	ldr	r3, [sp, #4]
  40718c:	4418      	add	r0, r3
  40718e:	f002 f875 	bl	40927c <.LFE166>

00407192 <.LVL121>:
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  407192:	f8da 7008 	ldr.w	r7, [sl, #8]
  407196:	f8da 600c 	ldr.w	r6, [sl, #12]
                                                         (sha512->hiLen << 3);
  40719a:	f8da 2010 	ldr.w	r2, [sl, #16]
  40719e:	f8da 3014 	ldr.w	r3, [sl, #20]
  4071a2:	00d9      	lsls	r1, r3, #3
  4071a4:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  4071a8:	00d0      	lsls	r0, r2, #3
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  4071aa:	0f72      	lsrs	r2, r6, #29
  4071ac:	2300      	movs	r3, #0
  4071ae:	1812      	adds	r2, r2, r0
  4071b0:	414b      	adcs	r3, r1
  4071b2:	e9ca 2304 	strd	r2, r3, [sl, #16]
    sha512->loLen = sha512->loLen << 3;
  4071b6:	00f6      	lsls	r6, r6, #3
  4071b8:	ea46 7657 	orr.w	r6, r6, r7, lsr #29
  4071bc:	00ff      	lsls	r7, r7, #3
  4071be:	f8ca 7008 	str.w	r7, [sl, #8]
  4071c2:	f8ca 600c 	str.w	r6, [sl, #12]

004071c6 <.LVL122>:
  4071c6:	f10a 0250 	add.w	r2, sl, #80	; 0x50
  4071ca:	f10a 06c0 	add.w	r6, sl, #192	; 0xc0

004071ce <.LBB897>:
        out[i] = ByteReverseWord64(in[i]);
  4071ce:	6893      	ldr	r3, [r2, #8]
  4071d0:	68d1      	ldr	r1, [r2, #12]

004071d2 <.LBB899>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  4071d2:	0a18      	lsrs	r0, r3, #8
  4071d4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  4071d8:	021b      	lsls	r3, r3, #8
  4071da:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  4071de:	4303      	orrs	r3, r0

004071e0 <.LBE901>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  4071e0:	ea4f 4533 	mov.w	r5, r3, ror #16
  4071e4:	2400      	movs	r4, #0

004071e6 <.LBB903>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  4071e6:	0a0b      	lsrs	r3, r1, #8
  4071e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  4071ec:	0209      	lsls	r1, r1, #8
  4071ee:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  4071f2:	430b      	orrs	r3, r1

004071f4 <.LBB905>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  4071f4:	ea4f 4333 	mov.w	r3, r3, ror #16

004071f8 <.LBE903>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  4071f8:	ea44 0003 	orr.w	r0, r4, r3
  4071fc:	4629      	mov	r1, r5

004071fe <.LBE899>:
        out[i] = ByteReverseWord64(in[i]);
  4071fe:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  407202:	42b2      	cmp	r2, r6
  407204:	d1e3      	bne.n	4071ce <.LBB897>

00407206 <.LBE897>:
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 2] = sha512->hiLen;
  407206:	e9da 2304 	ldrd	r2, r3, [sl, #16]
  40720a:	e9ca 2332 	strd	r2, r3, [sl, #200]	; 0xc8
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 1] = sha512->loLen;
  40720e:	e9da 2302 	ldrd	r2, r3, [sl, #8]
  407212:	e9ca 2334 	strd	r2, r3, [sl, #208]	; 0xd0
    ret = Transform(sha512);
  407216:	4650      	mov	r0, sl
  407218:	f7f8 ffbc 	bl	400194 <_etext>

0040721c <.LVL125>:
    if (ret != 0)
  40721c:	4602      	mov	r2, r0
  40721e:	b118      	cbz	r0, 407228 <.LBB919>

00407220 <.LBE883>:
        return ret;

    XMEMCPY(hash, sha384->digest, SHA384_DIGEST_SIZE);

    return InitSha384(sha384);  /* reset state */
}
  407220:	4610      	mov	r0, r2
  407222:	b003      	add	sp, #12

00407224 <.LCFI16>:
  407224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407228 <.LBB919>:
        ByteReverseWords64(sha512->digest, sha512->digest, SHA512_DIGEST_SIZE);
  407228:	f10a 0618 	add.w	r6, sl, #24

0040722c <.LVL128>:
  40722c:	f10a 0410 	add.w	r4, sl, #16
  407230:	f10a 0550 	add.w	r5, sl, #80	; 0x50

00407234 <.LBB907>:
        out[i] = ByteReverseWord64(in[i]);
  407234:	68a3      	ldr	r3, [r4, #8]
  407236:	68e1      	ldr	r1, [r4, #12]

00407238 <.LBB909>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  407238:	0a18      	lsrs	r0, r3, #8
  40723a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  40723e:	021b      	lsls	r3, r3, #8
  407240:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  407244:	4303      	orrs	r3, r0

00407246 <.LBE911>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  407246:	ea4f 4933 	mov.w	r9, r3, ror #16
  40724a:	f04f 0800 	mov.w	r8, #0

0040724e <.LBB913>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40724e:	0a0b      	lsrs	r3, r1, #8
  407250:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  407254:	0209      	lsls	r1, r1, #8
  407256:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40725a:	430b      	orrs	r3, r1

0040725c <.LBB915>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40725c:	ea4f 4333 	mov.w	r3, r3, ror #16

00407260 <.LBE913>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  407260:	ea48 0003 	orr.w	r0, r8, r3
  407264:	4649      	mov	r1, r9

00407266 <.LBE909>:
        out[i] = ByteReverseWord64(in[i]);
  407266:	e9e4 0102 	strd	r0, r1, [r4, #8]!
    for (i = 0; i < count; i++)
  40726a:	42ac      	cmp	r4, r5
  40726c:	d1e2      	bne.n	407234 <.LBB907>

0040726e <.LBE907>:
    XMEMCPY(hash, sha384->digest, SHA384_DIGEST_SIZE);
  40726e:	4633      	mov	r3, r6
  407270:	46de      	mov	lr, fp
  407272:	3630      	adds	r6, #48	; 0x30

00407274 <.LVL131>:
  407274:	681d      	ldr	r5, [r3, #0]
  407276:	685c      	ldr	r4, [r3, #4]
  407278:	6898      	ldr	r0, [r3, #8]
  40727a:	68d9      	ldr	r1, [r3, #12]
  40727c:	f8ce 5000 	str.w	r5, [lr]
  407280:	f8ce 4004 	str.w	r4, [lr, #4]
  407284:	f8ce 0008 	str.w	r0, [lr, #8]
  407288:	f8ce 100c 	str.w	r1, [lr, #12]
  40728c:	3310      	adds	r3, #16
  40728e:	f10e 0e10 	add.w	lr, lr, #16
  407292:	42b3      	cmp	r3, r6
  407294:	d1ee      	bne.n	407274 <.LVL131>

00407296 <.LBB920>:
    sha384->digest[0] = W64LIT(0xcbbb9d5dc1059ed8);
  407296:	a11e      	add	r1, pc, #120	; (adr r1, 407310 <.LVL137+0x4>)
  407298:	e9d1 0100 	ldrd	r0, r1, [r1]
  40729c:	e9ca 0106 	strd	r0, r1, [sl, #24]
    sha384->digest[1] = W64LIT(0x629a292a367cd507);
  4072a0:	a11d      	add	r1, pc, #116	; (adr r1, 407318 <.LVL137+0xc>)
  4072a2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072a6:	e9ca 0108 	strd	r0, r1, [sl, #32]
    sha384->digest[2] = W64LIT(0x9159015a3070dd17);
  4072aa:	a11d      	add	r1, pc, #116	; (adr r1, 407320 <.LVL137+0x14>)
  4072ac:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072b0:	e9ca 010a 	strd	r0, r1, [sl, #40]	; 0x28
    sha384->digest[3] = W64LIT(0x152fecd8f70e5939);
  4072b4:	a11c      	add	r1, pc, #112	; (adr r1, 407328 <.LVL137+0x1c>)
  4072b6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072ba:	e9ca 010c 	strd	r0, r1, [sl, #48]	; 0x30
    sha384->digest[4] = W64LIT(0x67332667ffc00b31);
  4072be:	a11c      	add	r1, pc, #112	; (adr r1, 407330 <.LVL137+0x24>)
  4072c0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072c4:	e9ca 010e 	strd	r0, r1, [sl, #56]	; 0x38
    sha384->digest[5] = W64LIT(0x8eb44a8768581511);
  4072c8:	a11b      	add	r1, pc, #108	; (adr r1, 407338 <.LVL137+0x2c>)
  4072ca:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072ce:	e9ca 0110 	strd	r0, r1, [sl, #64]	; 0x40
    sha384->digest[6] = W64LIT(0xdb0c2e0d64f98fa7);
  4072d2:	a11b      	add	r1, pc, #108	; (adr r1, 407340 <.LVL137+0x34>)
  4072d4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072d8:	e9ca 0112 	strd	r0, r1, [sl, #72]	; 0x48
    sha384->digest[7] = W64LIT(0x47b5481dbefa4fa4);
  4072dc:	a11a      	add	r1, pc, #104	; (adr r1, 407348 <.LVL137+0x3c>)
  4072de:	e9d1 0100 	ldrd	r0, r1, [r1]
  4072e2:	e9ca 0114 	strd	r0, r1, [sl, #80]	; 0x50
    sha384->buffLen = 0;
  4072e6:	2300      	movs	r3, #0
  4072e8:	f8ca 3000 	str.w	r3, [sl]
    sha384->loLen   = 0;
  4072ec:	2000      	movs	r0, #0
  4072ee:	2100      	movs	r1, #0
  4072f0:	e9ca 0102 	strd	r0, r1, [sl, #8]
    sha384->hiLen   = 0;
  4072f4:	e9ca 0104 	strd	r0, r1, [sl, #16]
  4072f8:	e792      	b.n	407220 <.LBE883>

004072fa <.LBE920>:
        return BAD_FUNC_ARG;
  4072fa:	f06f 02ac 	mvn.w	r2, #172	; 0xac
  4072fe:	e78f      	b.n	407220 <.LBE883>

00407300 <.LBB922>:
        return BAD_FUNC_ARG;
  407300:	f06f 02ac 	mvn.w	r2, #172	; 0xac

00407304 <.LVL135>:
  407304:	e78c      	b.n	407220 <.LBE883>

00407306 <.LBE922>:
        return BAD_FUNC_ARG;
  407306:	f06f 02ac 	mvn.w	r2, #172	; 0xac
}
  40730a:	4610      	mov	r0, r2

0040730c <.LVL137>:
  40730c:	4770      	bx	lr
  40730e:	bf00      	nop
  407310:	c1059ed8 	.word	0xc1059ed8
  407314:	cbbb9d5d 	.word	0xcbbb9d5d
  407318:	367cd507 	.word	0x367cd507
  40731c:	629a292a 	.word	0x629a292a
  407320:	3070dd17 	.word	0x3070dd17
  407324:	9159015a 	.word	0x9159015a
  407328:	f70e5939 	.word	0xf70e5939
  40732c:	152fecd8 	.word	0x152fecd8
  407330:	ffc00b31 	.word	0xffc00b31
  407334:	67332667 	.word	0x67332667
  407338:	68581511 	.word	0x68581511
  40733c:	8eb44a87 	.word	0x8eb44a87
  407340:	64f98fa7 	.word	0x64f98fa7
  407344:	db0c2e0d 	.word	0xdb0c2e0d
  407348:	befa4fa4 	.word	0xbefa4fa4
  40734c:	47b5481d 	.word	0x47b5481d

Disassembly of section .rodata.K512%39:

00407350 <K512>:
  407350:	d728ae22 428a2f98 23ef65cd 71374491     ".(../.B.e.#.D7q
  407360:	ec4d3b2f b5c0fbcf 8189dbbc e9b5dba5     /;M.............
  407370:	f348b538 3956c25b b605d019 59f111f1     8.H.[.V9.......Y
  407380:	af194f9b 923f82a4 da6d8118 ab1c5ed5     .O....?...m..^..
  407390:	a3030242 d807aa98 45706fbe 12835b01     B........opE.[..
  4073a0:	4ee4b28c 243185be d5ffb4e2 550c7dc3     ...N..1$.....}.U
  4073b0:	f27b896f 72be5d74 3b1696b1 80deb1fe     o.{.t].r...;....
  4073c0:	25c71235 9bdc06a7 cf692694 c19bf174     5..%.....&i.t...
  4073d0:	9ef14ad2 e49b69c1 384f25e3 efbe4786     .J...i...%O8.G..
  4073e0:	8b8cd5b5 0fc19dc6 77ac9c65 240ca1cc     ........e..w...$
  4073f0:	592b0275 2de92c6f 6ea6e483 4a7484aa     u.+Yo,.-...n..tJ
  407400:	bd41fbd4 5cb0a9dc 831153b5 76f988da     ..A....\.S.....v
  407410:	ee66dfab 983e5152 2db43210 a831c66d     ..f.RQ>..2.-m.1.
  407420:	98fb213f b00327c8 beef0ee4 bf597fc7     ?!...'........Y.
  407430:	3da88fc2 c6e00bf3 930aa725 d5a79147     ...=....%...G...
  407440:	e003826f 06ca6351 0a0e6e70 14292967     o...Qc..pn..g)).
  407450:	46d22ffc 27b70a85 5c26c926 2e1b2138     ./.F...'&.&\8!..
  407460:	5ac42aed 4d2c6dfc 9d95b3df 53380d13     .*.Z.m,M......8S
  407470:	8baf63de 650a7354 3c77b2a8 766a0abb     .c..Ts.e..w<..jv
  407480:	47edaee6 81c2c92e 1482353b 92722c85     ...G....;5...,r.
  407490:	4cf10364 a2bfe8a1 bc423001 a81a664b     d..L.....0B.Kf..
  4074a0:	d0f89791 c24b8b70 0654be30 c76c51a3     ....p.K.0.T..Ql.
  4074b0:	d6ef5218 d192e819 5565a910 d6990624     .R........eU$...
  4074c0:	5771202a f40e3585 32bbd1b8 106aa070     * qW.5.....2p.j.
  4074d0:	b8d2d0c8 19a4c116 5141ab53 1e376c08     ........S.AQ.l7.
  4074e0:	df8eeb99 2748774c e19b48a8 34b0bcb5     ....LwH'.H.....4
  4074f0:	c5c95a63 391c0cb3 e3418acb 4ed8aa4a     cZ.....9..A.J..N
  407500:	7763e373 5b9cca4f d6b2b8a3 682e6ff3     s.cwO..[.....o.h
  407510:	5defb2fc 748f82ee 43172f60 78a5636f     ...]...t`/.Coc.x
  407520:	a1f0ab72 84c87814 1a6439ec 8cc70208     r....x...9d.....
  407530:	23631e28 90befffa de82bde9 a4506ceb     (.c#.........lP.
  407540:	b2c67915 bef9a3f7 e372532b c67178f2     .y......+Sr..xq.
  407550:	ea26619c ca273ece 21c0c207 d186b8c7     .a&..>'....!....
  407560:	cde0eb1e eada7dd6 ee6ed178 f57d4f7f     .....}..x.n..O}.
  407570:	72176fba 06f067aa a2c898a6 0a637dc5     .o.r.g.......}c.
  407580:	bef90dae 113f9804 131c471b 1b710b35     ......?..G..5.q.
  407590:	23047d84 28db77f5 40c72493 32caab7b     .}.#.w.(.$.@{..2
  4075a0:	15c9bebc 3c9ebe0a 9c100d4c 431d67c4     .......<L....g.C
  4075b0:	cb3e42b6 4cc5d4be fc657e2a 597f299c     .B>....L*~e..).Y
  4075c0:	3ad6faec 5fcb6fab 4a475817 6c44198c     ...:.o._.XGJ..Dl

Disassembly of section .text.APP_Tasks%40:

004075d0 <APP_Tasks>:

  Remarks:
    See prototype in app.h.
 */

void APP_Tasks(void) {
  4075d0:	b570      	push	{r4, r5, r6, lr}

004075d2 <.LCFI18>:

    static int i;

    /* Check the application's current state. */
    switch (appData.state) {
  4075d2:	4b80      	ldr	r3, [pc, #512]	; (4077d4 <.LBE44+0xe>)
  4075d4:	781b      	ldrb	r3, [r3, #0]
  4075d6:	2b08      	cmp	r3, #8
  4075d8:	f200 80fa 	bhi.w	4077d0 <.LBE44+0xa>
  4075dc:	e8df f013 	tbh	[pc, r3, lsl #1]
  4075e0:	000d0009 	.word	0x000d0009
  4075e4:	00190013 	.word	0x00190013
  4075e8:	0025001f 	.word	0x0025001f
  4075ec:	00ee002e 	.word	0x00ee002e
  4075f0:	00b7      	.short	0x00b7
            //            SYS_MESSAGE("SYS_MESSAGE:" "\r\n Application created " __DATE__ " " __TIME__ " initialized!\r\n");            
            //            SYS_DEBUG(SYS_ERROR_INFO,"SYS_DEBUG:" "\r\n Application created " __DATE__ " " __TIME__ " initialized!\r\n");
            // SYS_CONSOLE_Write(SYS_CONSOLE_INDEX_0, STDOUT_FILENO, msgBuffer, strlen(msgBuffer));            


            appData.state = APP_STATE_RUN_MD5_FEED;
  4075f2:	2201      	movs	r2, #1
  4075f4:	4b77      	ldr	r3, [pc, #476]	; (4077d4 <.LBE44+0xe>)
  4075f6:	701a      	strb	r2, [r3, #0]
            break;
  4075f8:	bd70      	pop	{r4, r5, r6, pc}
            appData.state = APP_STATE_RUN_MD5_FEED;
            break;
#endif

        case APP_STATE_RUN_MD5_FEED:
            APP_Md5Run_Feed();
  4075fa:	f002 faeb 	bl	409bd4 <APP_Md5Run_Feed>

004075fe <.LVL61>:
            appData.state = APP_STATE_RUN_SHA1_FEED;
  4075fe:	2202      	movs	r2, #2
  407600:	4b74      	ldr	r3, [pc, #464]	; (4077d4 <.LBE44+0xe>)
  407602:	701a      	strb	r2, [r3, #0]
            break;
  407604:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA1_FEED:
            APP_ShaRun_Feed();
  407606:	f002 fa3b 	bl	409a80 <.LFE143>

0040760a <.LVL62>:
            appData.state = APP_STATE_RUN_SHA256_FEED;
  40760a:	2203      	movs	r2, #3
  40760c:	4b71      	ldr	r3, [pc, #452]	; (4077d4 <.LBE44+0xe>)
  40760e:	701a      	strb	r2, [r3, #0]
            break;
  407610:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA256_FEED:
            APP_Sha256Run_Feed();
  407612:	f002 fa6f 	bl	409af4 <.LFE166>

00407616 <.LVL63>:
            appData.state = APP_STATE_RUN_SHA384_FEED;
  407616:	2204      	movs	r2, #4
  407618:	4b6e      	ldr	r3, [pc, #440]	; (4077d4 <.LBE44+0xe>)
  40761a:	701a      	strb	r2, [r3, #0]
            break;
  40761c:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA384_FEED:
            APP_Sha384Run_Feed();
  40761e:	f002 fc2f 	bl	409e80 <APP_Sha384Run_Feed>

00407622 <.LVL64>:
            appData.state = APP_STATE_RUN_SHA512_FEED;
  407622:	2205      	movs	r2, #5
  407624:	4b6b      	ldr	r3, [pc, #428]	; (4077d4 <.LBE44+0xe>)
  407626:	701a      	strb	r2, [r3, #0]
            break;
  407628:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA512_FEED:
            APP_Sha512Run_Feed();
  40762a:	f002 fc57 	bl	409edc <.LFE168>

0040762e <.LVL65>:
            i = 0;
  40762e:	2200      	movs	r2, #0
  407630:	4b69      	ldr	r3, [pc, #420]	; (4077d8 <.LBE44+0x12>)
  407632:	601a      	str	r2, [r3, #0]
            appData.state = APP_STATE_DISPLAY_RESULTS;
  407634:	2206      	movs	r2, #6
  407636:	4b67      	ldr	r3, [pc, #412]	; (4077d4 <.LBE44+0xe>)
  407638:	701a      	strb	r2, [r3, #0]
            break;
  40763a:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_DISPLAY_RESULTS:
            switch (i) {
  40763c:	4b66      	ldr	r3, [pc, #408]	; (4077d8 <.LBE44+0x12>)
  40763e:	681b      	ldr	r3, [r3, #0]
  407640:	3b01      	subs	r3, #1
  407642:	2b08      	cmp	r3, #8
  407644:	d81c      	bhi.n	407680 <.LVL68>
  407646:	e8df f003 	tbb	[pc, r3]
  40764a:	1b05      	.short	0x1b05
  40764c:	1b3d1b26 	.word	0x1b3d1b26
  407650:	1b54      	.short	0x1b54
  407652:	6b          	.byte	0x6b
  407653:	00          	.byte	0x00
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.md5_timing);
#endif
                    break;

                case 1:
                    sprintf(printBuffer, "%s\n\rMD5 from feed:     ", printBuffer);
  407654:	4c61      	ldr	r4, [pc, #388]	; (4077dc <.LBE44+0x16>)
  407656:	4d62      	ldr	r5, [pc, #392]	; (4077e0 <.LBE44+0x1a>)
  407658:	4622      	mov	r2, r4
  40765a:	f105 0108 	add.w	r1, r5, #8
  40765e:	4620      	mov	r0, r4
  407660:	f002 fd10 	bl	40a084 <.LFE166>

00407664 <.LVL66>:
                    APP_DisplayHash(appData.md5_feed_result, CRYPT_MD5_DIGEST_SIZE);
  407664:	4e5b      	ldr	r6, [pc, #364]	; (4077d4 <.LBE44+0xe>)
  407666:	2110      	movs	r1, #16
  407668:	f106 00cc 	add.w	r0, r6, #204	; 0xcc
  40766c:	f003 f826 	bl	40a6bc <L0>

00407670 <.LVL67>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.md5_feed_timing);
  407670:	f8d6 30dc 	ldr.w	r3, [r6, #220]	; 0xdc
  407674:	4622      	mov	r2, r4
  407676:	f105 0120 	add.w	r1, r5, #32
  40767a:	4620      	mov	r0, r4
  40767c:	f002 fd02 	bl	40a084 <.LFE166>

00407680 <.LVL68>:
                    sprintf(printBuffer, "%s\n\rSHA512 from feed:  ", printBuffer);
                    APP_DisplayHash(appData.sha512_feed_result, CRYPT_SHA512_DIGEST_SIZE);
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha512_feed_timing);
                    break;
            }
            i++;
  407680:	4a55      	ldr	r2, [pc, #340]	; (4077d8 <.LBE44+0x12>)
  407682:	6813      	ldr	r3, [r2, #0]
  407684:	3301      	adds	r3, #1
  407686:	6013      	str	r3, [r2, #0]
            if (i > 9)
  407688:	2b09      	cmp	r3, #9
                appData.state = APP_STATE_CHECK_RESULTS;
  40768a:	bfcc      	ite	gt
  40768c:	2208      	movgt	r2, #8
            else {
                appData.state = APP_STATE_WAIT_FOR_CONSOLE;
  40768e:	2207      	movle	r2, #7
  407690:	4b50      	ldr	r3, [pc, #320]	; (4077d4 <.LBE44+0xe>)
  407692:	701a      	strb	r2, [r3, #0]
  407694:	bd70      	pop	{r4, r5, r6, pc}
                    sprintf(printBuffer, "%s\n\rSHA from feed:     ", printBuffer);
  407696:	4c51      	ldr	r4, [pc, #324]	; (4077dc <.LBE44+0x16>)
  407698:	4d51      	ldr	r5, [pc, #324]	; (4077e0 <.LBE44+0x1a>)
  40769a:	4622      	mov	r2, r4
  40769c:	f105 013c 	add.w	r1, r5, #60	; 0x3c
  4076a0:	4620      	mov	r0, r4
  4076a2:	f002 fcef 	bl	40a084 <.LFE166>

004076a6 <.LVL69>:
                    APP_DisplayHash(appData.sha1_feed_result, CRYPT_SHA_DIGEST_SIZE);
  4076a6:	4e4b      	ldr	r6, [pc, #300]	; (4077d4 <.LBE44+0xe>)
  4076a8:	2114      	movs	r1, #20
  4076aa:	f106 00e0 	add.w	r0, r6, #224	; 0xe0
  4076ae:	f003 f805 	bl	40a6bc <L0>

004076b2 <.LVL70>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha1_feed_timing);
  4076b2:	f8d6 30f4 	ldr.w	r3, [r6, #244]	; 0xf4
  4076b6:	4622      	mov	r2, r4
  4076b8:	f105 0120 	add.w	r1, r5, #32
  4076bc:	4620      	mov	r0, r4
  4076be:	f002 fce1 	bl	40a084 <.LFE166>

004076c2 <.LVL71>:
                    break;
  4076c2:	e7dd      	b.n	407680 <.LVL68>
                    sprintf(printBuffer, "%s\n\rSHA256 from feed:  ", printBuffer);
  4076c4:	4c45      	ldr	r4, [pc, #276]	; (4077dc <.LBE44+0x16>)
  4076c6:	4d46      	ldr	r5, [pc, #280]	; (4077e0 <.LBE44+0x1a>)
  4076c8:	4622      	mov	r2, r4
  4076ca:	f105 0154 	add.w	r1, r5, #84	; 0x54
  4076ce:	4620      	mov	r0, r4
  4076d0:	f002 fcd8 	bl	40a084 <.LFE166>

004076d4 <.LVL72>:
                    APP_DisplayHash(appData.sha256_feed_result, CRYPT_SHA256_DIGEST_SIZE);
  4076d4:	4e3f      	ldr	r6, [pc, #252]	; (4077d4 <.LBE44+0xe>)
  4076d6:	2120      	movs	r1, #32
  4076d8:	f106 00f8 	add.w	r0, r6, #248	; 0xf8
  4076dc:	f002 ffee 	bl	40a6bc <L0>

004076e0 <.LVL73>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha256_feed_timing);
  4076e0:	f8d6 3118 	ldr.w	r3, [r6, #280]	; 0x118
  4076e4:	4622      	mov	r2, r4
  4076e6:	f105 0120 	add.w	r1, r5, #32
  4076ea:	4620      	mov	r0, r4
  4076ec:	f002 fcca 	bl	40a084 <.LFE166>

004076f0 <.LVL74>:
                    break;
  4076f0:	e7c6      	b.n	407680 <.LVL68>
                    sprintf(printBuffer, "%s\n\rSHA384 from feed:  ", printBuffer);
  4076f2:	4c3a      	ldr	r4, [pc, #232]	; (4077dc <.LBE44+0x16>)
  4076f4:	4d3a      	ldr	r5, [pc, #232]	; (4077e0 <.LBE44+0x1a>)
  4076f6:	4622      	mov	r2, r4
  4076f8:	f105 016c 	add.w	r1, r5, #108	; 0x6c
  4076fc:	4620      	mov	r0, r4
  4076fe:	f002 fcc1 	bl	40a084 <.LFE166>

00407702 <.LVL75>:
                    APP_DisplayHash(appData.sha384_feed_result, CRYPT_SHA384_DIGEST_SIZE);
  407702:	4e34      	ldr	r6, [pc, #208]	; (4077d4 <.LBE44+0xe>)
  407704:	2130      	movs	r1, #48	; 0x30
  407706:	f506 708e 	add.w	r0, r6, #284	; 0x11c
  40770a:	f002 ffd7 	bl	40a6bc <L0>

0040770e <.LVL76>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha384_feed_timing);
  40770e:	f8d6 314c 	ldr.w	r3, [r6, #332]	; 0x14c
  407712:	4622      	mov	r2, r4
  407714:	f105 0120 	add.w	r1, r5, #32
  407718:	4620      	mov	r0, r4
  40771a:	f002 fcb3 	bl	40a084 <.LFE166>

0040771e <.LVL77>:
                    break;
  40771e:	e7af      	b.n	407680 <.LVL68>
                    sprintf(printBuffer, "%s\n\rSHA512 from feed:  ", printBuffer);
  407720:	4c2e      	ldr	r4, [pc, #184]	; (4077dc <.LBE44+0x16>)
  407722:	4d2f      	ldr	r5, [pc, #188]	; (4077e0 <.LBE44+0x1a>)
  407724:	4622      	mov	r2, r4
  407726:	f105 0184 	add.w	r1, r5, #132	; 0x84
  40772a:	4620      	mov	r0, r4
  40772c:	f002 fcaa 	bl	40a084 <.LFE166>

00407730 <.LVL78>:
                    APP_DisplayHash(appData.sha512_feed_result, CRYPT_SHA512_DIGEST_SIZE);
  407730:	4e28      	ldr	r6, [pc, #160]	; (4077d4 <.LBE44+0xe>)
  407732:	2140      	movs	r1, #64	; 0x40
  407734:	f506 70a8 	add.w	r0, r6, #336	; 0x150
  407738:	f002 ffc0 	bl	40a6bc <L0>

0040773c <.LVL79>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha512_feed_timing);
  40773c:	f8d6 3190 	ldr.w	r3, [r6, #400]	; 0x190
  407740:	4622      	mov	r2, r4
  407742:	f105 0120 	add.w	r1, r5, #32
  407746:	4620      	mov	r0, r4
  407748:	f002 fc9c 	bl	40a084 <.LFE166>

0040774c <.LVL80>:
                    break;
  40774c:	e798      	b.n	407680 <.LVL68>
                    memcmp(SHAExpected, appData.sha1_result, CRYPT_SHA_DIGEST_SIZE) ||
                    memcmp(SHA256Expected, appData.sha256_result, CRYPT_SHA256_DIGEST_SIZE) ||
                    memcmp(SHA384Expected, appData.sha384_result, CRYPT_SHA384_DIGEST_SIZE) ||
                    memcmp(SHA512Expected, appData.sha512_result, CRYPT_SHA512_DIGEST_SIZE) ||
#endif
                    memcmp(MD5Expected, appData.md5_feed_result, CRYPT_MD5_DIGEST_SIZE) ||
  40774e:	2210      	movs	r2, #16
  407750:	4924      	ldr	r1, [pc, #144]	; (4077e4 <.LBE44+0x1e>)
  407752:	4825      	ldr	r0, [pc, #148]	; (4077e8 <.LBE44+0x22>)
  407754:	f002 fb04 	bl	409d60 <.LFE163>

00407758 <.LVL81>:
            if (
  407758:	b9b8      	cbnz	r0, 40778a <.LVL85+0x2>
                    memcmp(SHAExpected, appData.sha1_feed_result, CRYPT_SHA_DIGEST_SIZE) ||
  40775a:	2214      	movs	r2, #20
  40775c:	4923      	ldr	r1, [pc, #140]	; (4077ec <.LBE44+0x26>)
  40775e:	4824      	ldr	r0, [pc, #144]	; (4077f0 <.LBE44+0x2a>)
  407760:	f002 fafe 	bl	409d60 <.LFE163>

00407764 <.LVL82>:
                    memcmp(MD5Expected, appData.md5_feed_result, CRYPT_MD5_DIGEST_SIZE) ||
  407764:	b988      	cbnz	r0, 40778a <.LVL85+0x2>
                    memcmp(SHA256Expected, appData.sha256_feed_result, CRYPT_SHA256_DIGEST_SIZE) ||
  407766:	2220      	movs	r2, #32
  407768:	4922      	ldr	r1, [pc, #136]	; (4077f4 <.LBE44+0x2e>)
  40776a:	4823      	ldr	r0, [pc, #140]	; (4077f8 <.LBE44+0x32>)
  40776c:	f002 faf8 	bl	409d60 <.LFE163>

00407770 <.LVL83>:
                    memcmp(SHAExpected, appData.sha1_feed_result, CRYPT_SHA_DIGEST_SIZE) ||
  407770:	b958      	cbnz	r0, 40778a <.LVL85+0x2>
                    memcmp(SHA384Expected, appData.sha384_feed_result, CRYPT_SHA384_DIGEST_SIZE) ||
  407772:	2230      	movs	r2, #48	; 0x30
  407774:	4921      	ldr	r1, [pc, #132]	; (4077fc <.LBE44+0x36>)
  407776:	4822      	ldr	r0, [pc, #136]	; (407800 <.LBE44+0x3a>)
  407778:	f002 faf2 	bl	409d60 <.LFE163>

0040777c <.LVL84>:
                    memcmp(SHA256Expected, appData.sha256_feed_result, CRYPT_SHA256_DIGEST_SIZE) ||
  40777c:	b928      	cbnz	r0, 40778a <.LVL85+0x2>
                    memcmp(SHA512Expected, appData.sha512_feed_result, CRYPT_SHA512_DIGEST_SIZE)) {
  40777e:	2240      	movs	r2, #64	; 0x40
  407780:	4920      	ldr	r1, [pc, #128]	; (407804 <.LBE44+0x3e>)
  407782:	4821      	ldr	r0, [pc, #132]	; (407808 <.LBE44+0x42>)
  407784:	f002 faec 	bl	409d60 <.LFE163>

00407788 <.LVL85>:
                    memcmp(SHA384Expected, appData.sha384_feed_result, CRYPT_SHA384_DIGEST_SIZE) ||
  407788:	b190      	cbz	r0, 4077b0 <.LVL88+0x8>
                // We had an error during comparisons
                sprintf(printBuffer, "%s\n\rA test failed.", printBuffer);
  40778a:	4814      	ldr	r0, [pc, #80]	; (4077dc <.LBE44+0x16>)
  40778c:	4602      	mov	r2, r0
  40778e:	491f      	ldr	r1, [pc, #124]	; (40780c <.LBE44+0x46>)
  407790:	f002 fc78 	bl	40a084 <.LFE166>

00407794 <.LVL86>:
                //BSP_LEDOn(BSP_LED_1);
            } else {
                sprintf(printBuffer, "%s\n\rAll tests passed.", printBuffer);
                //BSP_LEDOn(BSP_LED_3);
            }
            SYS_CONSOLE_Write(SYS_CONSOLE_INDEX_0, STDOUT_FILENO, printBuffer, strlen(printBuffer));
  407794:	4c11      	ldr	r4, [pc, #68]	; (4077dc <.LBE44+0x16>)
  407796:	4620      	mov	r0, r4
  407798:	f001 f812 	bl	4087c0 <strlen>

0040779c <.LVL87>:
  40779c:	4603      	mov	r3, r0
  40779e:	4622      	mov	r2, r4
  4077a0:	2101      	movs	r1, #1
  4077a2:	2000      	movs	r0, #0
  4077a4:	f002 ff42 	bl	40a62c <.LFE0>

004077a8 <.LVL88>:
            appData.state = APP_SPIN;
  4077a8:	2209      	movs	r2, #9
  4077aa:	4b0a      	ldr	r3, [pc, #40]	; (4077d4 <.LBE44+0xe>)
  4077ac:	701a      	strb	r2, [r3, #0]
            break;
  4077ae:	bd70      	pop	{r4, r5, r6, pc}
                sprintf(printBuffer, "%s\n\rAll tests passed.", printBuffer);
  4077b0:	480a      	ldr	r0, [pc, #40]	; (4077dc <.LBE44+0x16>)
  4077b2:	4602      	mov	r2, r0
  4077b4:	4916      	ldr	r1, [pc, #88]	; (407810 <.LBE44+0x4a>)
  4077b6:	f002 fc65 	bl	40a084 <.LFE166>

004077ba <.LVL89>:
  4077ba:	e7eb      	b.n	407794 <.LVL86>

        case APP_STATE_WAIT_FOR_CONSOLE:
            //            if (appData.wrComplete)
            if (appData.wallTime <= APP_getTicks())
  4077bc:	4b05      	ldr	r3, [pc, #20]	; (4077d4 <.LBE44+0xe>)
  4077be:	f8d3 4194 	ldr.w	r4, [r3, #404]	; 0x194

004077c2 <.LBB44>:
    return SYS_TIME_CounterGet();
  4077c2:	f001 fc69 	bl	409098 <.LFE173>

004077c6 <.LBE44>:
            if (appData.wallTime <= APP_getTicks())
  4077c6:	4284      	cmp	r4, r0
  4077c8:	d802      	bhi.n	4077d0 <.LBE44+0xa>
                appData.state = APP_STATE_DISPLAY_RESULTS;
  4077ca:	2206      	movs	r2, #6
  4077cc:	4b01      	ldr	r3, [pc, #4]	; (4077d4 <.LBE44+0xe>)
  4077ce:	701a      	strb	r2, [r3, #0]
  4077d0:	bd70      	pop	{r4, r5, r6, pc}
  4077d2:	bf00      	nop
  4077d4:	2040d6b8 	.word	0x2040d6b8
  4077d8:	2040dc9c 	.word	0x2040dc9c
  4077dc:	20400488 	.word	0x20400488
  4077e0:	004081f8 	.word	0x004081f8
  4077e4:	2040d784 	.word	0x2040d784
  4077e8:	004087ac 	.word	0x004087ac
  4077ec:	2040d798 	.word	0x2040d798
  4077f0:	0040a90c 	.word	0x0040a90c
  4077f4:	2040d7b0 	.word	0x2040d7b0
  4077f8:	0040a7c0 	.word	0x0040a7c0
  4077fc:	2040d7d4 	.word	0x2040d7d4
  407800:	0040a590 	.word	0x0040a590
  407804:	2040d808 	.word	0x2040d808
  407808:	0040a238 	.word	0x0040a238
  40780c:	00408294 	.word	0x00408294
  407810:	004082a8 	.word	0x004082a8

Disassembly of section .text._free_r%41:

00407814 <_free_r>:
  407814:	2900      	cmp	r1, #0
  407816:	d044      	beq.n	4078a2 <.LVL43>
  407818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

0040781c <.LCFI1>:
  40781c:	460d      	mov	r5, r1
  40781e:	4680      	mov	r8, r0
  407820:	f003 fa38 	bl	40ac94 <.LFE144>

00407824 <.LVL24>:
  407824:	f855 7c04 	ldr.w	r7, [r5, #-4]
  407828:	4969      	ldr	r1, [pc, #420]	; (4079d0 <.LVL82+0xa>)
  40782a:	f027 0301 	bic.w	r3, r7, #1
  40782e:	f1a5 0408 	sub.w	r4, r5, #8

00407832 <.LVL25>:
  407832:	18e2      	adds	r2, r4, r3

00407834 <.LVL26>:
  407834:	688e      	ldr	r6, [r1, #8]
  407836:	6850      	ldr	r0, [r2, #4]
  407838:	42b2      	cmp	r2, r6
  40783a:	f020 0003 	bic.w	r0, r0, #3

0040783e <.LVL27>:
  40783e:	d05e      	beq.n	4078fe <.LVL56>
  407840:	07fe      	lsls	r6, r7, #31
  407842:	6050      	str	r0, [r2, #4]

00407844 <.LVL28>:
  407844:	d40b      	bmi.n	40785e <.LVL34>
  407846:	f855 7c08 	ldr.w	r7, [r5, #-8]

0040784a <.LVL29>:
  40784a:	1be4      	subs	r4, r4, r7
  40784c:	f101 0e08 	add.w	lr, r1, #8
  407850:	68a5      	ldr	r5, [r4, #8]

00407852 <.LVL31>:
  407852:	4575      	cmp	r5, lr
  407854:	443b      	add	r3, r7
  407856:	d06d      	beq.n	407934 <.LVL70>
  407858:	68e7      	ldr	r7, [r4, #12]

0040785a <.LVL33>:
  40785a:	60ef      	str	r7, [r5, #12]
  40785c:	60bd      	str	r5, [r7, #8]

0040785e <.LVL34>:
  40785e:	1815      	adds	r5, r2, r0
  407860:	686d      	ldr	r5, [r5, #4]
  407862:	07ed      	lsls	r5, r5, #31
  407864:	d53e      	bpl.n	4078e4 <.LCFI5>
  407866:	f043 0201 	orr.w	r2, r3, #1

0040786a <.LVL35>:
  40786a:	6062      	str	r2, [r4, #4]
  40786c:	50e3      	str	r3, [r4, r3]

0040786e <.LVL36>:
  40786e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  407872:	d217      	bcs.n	4078a4 <.LCFI3>
  407874:	08db      	lsrs	r3, r3, #3

00407876 <.LVL37>:
  407876:	1c58      	adds	r0, r3, #1
  407878:	109a      	asrs	r2, r3, #2
  40787a:	684d      	ldr	r5, [r1, #4]
  40787c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  407880:	60a7      	str	r7, [r4, #8]
  407882:	2301      	movs	r3, #1

00407884 <.LVL38>:
  407884:	4093      	lsls	r3, r2
  407886:	eb01 02c0 	add.w	r2, r1, r0, lsl #3

0040788a <.LVL39>:
  40788a:	432b      	orrs	r3, r5
  40788c:	3a08      	subs	r2, #8

0040788e <.LVL40>:
  40788e:	60e2      	str	r2, [r4, #12]
  407890:	604b      	str	r3, [r1, #4]
  407892:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  407896:	60fc      	str	r4, [r7, #12]

00407898 <.LVL41>:
  407898:	4640      	mov	r0, r8
  40789a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}

0040789e <.LCFI2>:
  40789e:	f003 b9fb 	b.w	40ac98 <__malloc_unlock>

004078a2 <.LVL43>:
  4078a2:	4770      	bx	lr

004078a4 <.LCFI3>:
  4078a4:	0a5a      	lsrs	r2, r3, #9
  4078a6:	2a04      	cmp	r2, #4
  4078a8:	d852      	bhi.n	407950 <.LVL74>
  4078aa:	099a      	lsrs	r2, r3, #6
  4078ac:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4078b0:	00ff      	lsls	r7, r7, #3
  4078b2:	f102 0538 	add.w	r5, r2, #56	; 0x38

004078b6 <.LVL45>:
  4078b6:	19c8      	adds	r0, r1, r7
  4078b8:	59ca      	ldr	r2, [r1, r7]
  4078ba:	3808      	subs	r0, #8

004078bc <.LVL46>:
  4078bc:	4290      	cmp	r0, r2
  4078be:	d04f      	beq.n	407960 <.LVL75>
  4078c0:	6851      	ldr	r1, [r2, #4]
  4078c2:	f021 0103 	bic.w	r1, r1, #3
  4078c6:	428b      	cmp	r3, r1
  4078c8:	d232      	bcs.n	407930 <.LVL68>
  4078ca:	6892      	ldr	r2, [r2, #8]
  4078cc:	4290      	cmp	r0, r2
  4078ce:	d1f7      	bne.n	4078c0 <.LVL46+0x4>

004078d0 <.LVL48>:
  4078d0:	68c3      	ldr	r3, [r0, #12]

004078d2 <.LVL49>:
  4078d2:	60a0      	str	r0, [r4, #8]
  4078d4:	60e3      	str	r3, [r4, #12]
  4078d6:	609c      	str	r4, [r3, #8]
  4078d8:	60c4      	str	r4, [r0, #12]
  4078da:	4640      	mov	r0, r8

004078dc <.LVL50>:
  4078dc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}

004078e0 <.LCFI4>:
  4078e0:	f003 b9da 	b.w	40ac98 <__malloc_unlock>

004078e4 <.LCFI5>:
  4078e4:	6895      	ldr	r5, [r2, #8]
  4078e6:	4f3b      	ldr	r7, [pc, #236]	; (4079d4 <.LVL82+0xe>)
  4078e8:	42bd      	cmp	r5, r7
  4078ea:	4403      	add	r3, r0
  4078ec:	d040      	beq.n	407970 <.LVL79>
  4078ee:	68d0      	ldr	r0, [r2, #12]

004078f0 <.LVL54>:
  4078f0:	60e8      	str	r0, [r5, #12]
  4078f2:	f043 0201 	orr.w	r2, r3, #1

004078f6 <.LVL55>:
  4078f6:	6085      	str	r5, [r0, #8]
  4078f8:	6062      	str	r2, [r4, #4]
  4078fa:	50e3      	str	r3, [r4, r3]
  4078fc:	e7b7      	b.n	40786e <.LVL36>

004078fe <.LVL56>:
  4078fe:	07ff      	lsls	r7, r7, #31

00407900 <.LVL57>:
  407900:	4403      	add	r3, r0
  407902:	d407      	bmi.n	407914 <.LVL64>
  407904:	f855 2c08 	ldr.w	r2, [r5, #-8]

00407908 <.LVL59>:
  407908:	1aa4      	subs	r4, r4, r2

0040790a <.LVL60>:
  40790a:	4413      	add	r3, r2
  40790c:	68a0      	ldr	r0, [r4, #8]

0040790e <.LVL62>:
  40790e:	68e2      	ldr	r2, [r4, #12]

00407910 <.LVL63>:
  407910:	60c2      	str	r2, [r0, #12]
  407912:	6090      	str	r0, [r2, #8]

00407914 <.LVL64>:
  407914:	4a30      	ldr	r2, [pc, #192]	; (4079d8 <.LVL82+0x12>)
  407916:	6812      	ldr	r2, [r2, #0]
  407918:	f043 0001 	orr.w	r0, r3, #1
  40791c:	4293      	cmp	r3, r2
  40791e:	6060      	str	r0, [r4, #4]

00407920 <.LVL65>:
  407920:	608c      	str	r4, [r1, #8]
  407922:	d3b9      	bcc.n	407898 <.LVL41>
  407924:	4b2d      	ldr	r3, [pc, #180]	; (4079dc <.LVL82+0x16>)

00407926 <.LVL66>:
  407926:	4640      	mov	r0, r8
  407928:	6819      	ldr	r1, [r3, #0]
  40792a:	f001 fdd3 	bl	4094d4 <.LFE0>

0040792e <.LVL67>:
  40792e:	e7b3      	b.n	407898 <.LVL41>

00407930 <.LVL68>:
  407930:	4610      	mov	r0, r2

00407932 <.LVL69>:
  407932:	e7cd      	b.n	4078d0 <.LVL48>

00407934 <.LVL70>:
  407934:	1811      	adds	r1, r2, r0
  407936:	6849      	ldr	r1, [r1, #4]
  407938:	07c9      	lsls	r1, r1, #31
  40793a:	d444      	bmi.n	4079c6 <.LVL82>
  40793c:	6891      	ldr	r1, [r2, #8]
  40793e:	68d2      	ldr	r2, [r2, #12]

00407940 <.LVL71>:
  407940:	60ca      	str	r2, [r1, #12]
  407942:	4403      	add	r3, r0

00407944 <.LVL72>:
  407944:	f043 0001 	orr.w	r0, r3, #1

00407948 <.LVL73>:
  407948:	6091      	str	r1, [r2, #8]
  40794a:	6060      	str	r0, [r4, #4]
  40794c:	50e3      	str	r3, [r4, r3]
  40794e:	e7a3      	b.n	407898 <.LVL41>

00407950 <.LVL74>:
  407950:	2a14      	cmp	r2, #20
  407952:	d816      	bhi.n	407982 <.LVL81>
  407954:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  407958:	00ff      	lsls	r7, r7, #3
  40795a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40795e:	e7aa      	b.n	4078b6 <.LVL45>

00407960 <.LVL75>:
  407960:	10aa      	asrs	r2, r5, #2

00407962 <.LVL76>:
  407962:	2301      	movs	r3, #1

00407964 <.LVL77>:
  407964:	684d      	ldr	r5, [r1, #4]

00407966 <.LVL78>:
  407966:	4093      	lsls	r3, r2
  407968:	432b      	orrs	r3, r5
  40796a:	604b      	str	r3, [r1, #4]
  40796c:	4603      	mov	r3, r0
  40796e:	e7b0      	b.n	4078d2 <.LVL49>

00407970 <.LVL79>:
  407970:	f043 0201 	orr.w	r2, r3, #1

00407974 <.LVL80>:
  407974:	614c      	str	r4, [r1, #20]
  407976:	610c      	str	r4, [r1, #16]
  407978:	60e5      	str	r5, [r4, #12]
  40797a:	60a5      	str	r5, [r4, #8]
  40797c:	6062      	str	r2, [r4, #4]
  40797e:	50e3      	str	r3, [r4, r3]
  407980:	e78a      	b.n	407898 <.LVL41>

00407982 <.LVL81>:
  407982:	2a54      	cmp	r2, #84	; 0x54
  407984:	d806      	bhi.n	407994 <.LVL81+0x12>
  407986:	0b1a      	lsrs	r2, r3, #12
  407988:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40798c:	00ff      	lsls	r7, r7, #3
  40798e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  407992:	e790      	b.n	4078b6 <.LVL45>
  407994:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  407998:	d806      	bhi.n	4079a8 <.LVL81+0x26>
  40799a:	0bda      	lsrs	r2, r3, #15
  40799c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4079a0:	00ff      	lsls	r7, r7, #3
  4079a2:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4079a6:	e786      	b.n	4078b6 <.LVL45>
  4079a8:	f240 5054 	movw	r0, #1364	; 0x554
  4079ac:	4282      	cmp	r2, r0
  4079ae:	d806      	bhi.n	4079be <.LVL81+0x3c>
  4079b0:	0c9a      	lsrs	r2, r3, #18
  4079b2:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4079b6:	00ff      	lsls	r7, r7, #3
  4079b8:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4079bc:	e77b      	b.n	4078b6 <.LVL45>
  4079be:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4079c2:	257e      	movs	r5, #126	; 0x7e
  4079c4:	e777      	b.n	4078b6 <.LVL45>

004079c6 <.LVL82>:
  4079c6:	f043 0101 	orr.w	r1, r3, #1
  4079ca:	6061      	str	r1, [r4, #4]
  4079cc:	6013      	str	r3, [r2, #0]
  4079ce:	e763      	b.n	407898 <.LVL41>
  4079d0:	2040d0b0 	.word	0x2040d0b0
  4079d4:	2040d0b8 	.word	0x2040d0b8
  4079d8:	2040dcb4 	.word	0x2040dcb4
  4079dc:	2040dcac 	.word	0x2040dcac

Disassembly of section .text.Console_UART_Tasks%42:

004079e0 <Console_UART_Tasks>:
        consUartData.isReadComplete = true;
    }
}

void Console_UART_Tasks(SYS_MODULE_OBJ object)
{
  4079e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

004079e4 <.LCFI5>:
    /* Update the application state machine based
     * on the current state */
    struct QPacket pkt;
    size_t *sizeRead;

    switch(consUartData.state)
  4079e4:	4b4c      	ldr	r3, [pc, #304]	; (407b18 <.LVL45+0x4>)
  4079e6:	781b      	ldrb	r3, [r3, #0]
  4079e8:	2b08      	cmp	r3, #8
  4079ea:	f200 8093 	bhi.w	407b14 <.LVL45>
  4079ee:	e8df f003 	tbb	[pc, r3]
  4079f2:	9105      	.short	0x9105
  4079f4:	6029124f 	.word	0x6029124f
  4079f8:	9191      	.short	0x9191
  4079fa:	8f          	.byte	0x8f
  4079fb:	00          	.byte	0x00
    {
        case CONSOLE_UART_STATE_INIT:

            /* Register a callback with device layer to get event notification (for end point 0) */
            USART1_WriteCallbackRegister(UARTDeviceWriteCallback, 0);
  4079fc:	2100      	movs	r1, #0
  4079fe:	4847      	ldr	r0, [pc, #284]	; (407b1c <.LVL45+0x8>)

00407a00 <.LVL19>:
  407a00:	f003 f8b8 	bl	40ab74 <.LFE171>

00407a04 <.LVL20>:
            USART1_ReadCallbackRegister(UARTDeviceReadCallback, 0);
  407a04:	2100      	movs	r1, #0
  407a06:	4846      	ldr	r0, [pc, #280]	; (407b20 <.LVL45+0xc>)
  407a08:	f003 f8bc 	bl	40ab84 <.LFE150>

00407a0c <.LVL21>:

            /* If the driver was opened, it is ready for operation */
            consUartData.state = CONSOLE_UART_STATE_READY;
  407a0c:	2202      	movs	r2, #2
  407a0e:	4b42      	ldr	r3, [pc, #264]	; (407b18 <.LVL45+0x4>)
  407a10:	701a      	strb	r2, [r3, #0]

            break;
  407a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00407a16 <.LVL22>:

        case CONSOLE_UART_STATE_SCHEDULE_READ:

            consUartData.state = CONSOLE_UART_STATE_WAIT_FOR_READ_COMPLETE;
  407a16:	2204      	movs	r2, #4
  407a18:	4b3f      	ldr	r3, [pc, #252]	; (407b18 <.LVL45+0x4>)
  407a1a:	701a      	strb	r2, [r3, #0]

            if (readQueue.numElem)
  407a1c:	4b41      	ldr	r3, [pc, #260]	; (407b24 <.LVL45+0x10>)
  407a1e:	689b      	ldr	r3, [r3, #8]
  407a20:	2b00      	cmp	r3, #0
  407a22:	d077      	beq.n	407b14 <.LVL45>
            {
                consUartData.isReadComplete = false;
  407a24:	2200      	movs	r2, #0
  407a26:	4b3c      	ldr	r3, [pc, #240]	; (407b18 <.LVL45+0x4>)
  407a28:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
                pkt = rdQueueElements[readQueue.tailPos];
  407a2c:	4b3e      	ldr	r3, [pc, #248]	; (407b28 <.LVL45+0x14>)
  407a2e:	4a3d      	ldr	r2, [pc, #244]	; (407b24 <.LVL45+0x10>)
  407a30:	6812      	ldr	r2, [r2, #0]
  407a32:	eb03 01c2 	add.w	r1, r3, r2, lsl #3

00407a36 <.LVL23>:

                USART1_Read (pkt.data.buf, pkt.sz);
  407a36:	6849      	ldr	r1, [r1, #4]

00407a38 <.LVL24>:
  407a38:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]

00407a3c <.LVL25>:
  407a3c:	f002 fd36 	bl	40a4ac <.LFE145>

00407a40 <.LVL26>:
  407a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00407a44 <.LVL27>:
            }
            break;

        case CONSOLE_UART_STATE_WAIT_FOR_READ_COMPLETE:

            if(consUartData.isReadComplete)
  407a44:	4b34      	ldr	r3, [pc, #208]	; (407b18 <.LVL45+0x4>)
  407a46:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
  407a4a:	b943      	cbnz	r3, 407a5e <.LVL27+0x1a>
                    consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
                }
            }
            else
            {
                if (writeQueue.numElem)
  407a4c:	4b37      	ldr	r3, [pc, #220]	; (407b2c <.LVL45+0x18>)
  407a4e:	689b      	ldr	r3, [r3, #8]
  407a50:	2b00      	cmp	r3, #0
  407a52:	d05f      	beq.n	407b14 <.LVL45>
                {
                    consUartData.state = CONSOLE_UART_STATE_SCHEDULE_WRITE;
  407a54:	2205      	movs	r2, #5
  407a56:	4b30      	ldr	r3, [pc, #192]	; (407b18 <.LVL45+0x4>)
  407a58:	701a      	strb	r2, [r3, #0]
  407a5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                sizeRead = &rdQueueElements[readQueue.tailPos].sz;
  407a5e:	4c31      	ldr	r4, [pc, #196]	; (407b24 <.LVL45+0x10>)
  407a60:	6825      	ldr	r5, [r4, #0]

00407a62 <.LVL28>:
                popQueue(&readQueue);
  407a62:	4620      	mov	r0, r4

00407a64 <.LVL29>:
  407a64:	f002 ff0e 	bl	40a884 <.LFE4>

00407a68 <.LVL30>:
                if (readQueue.numElem == 0)
  407a68:	68a3      	ldr	r3, [r4, #8]
  407a6a:	b963      	cbnz	r3, 407a86 <.LVL31+0xa>
                    if (consUartData.rdCallback != NULL)
  407a6c:	4b2a      	ldr	r3, [pc, #168]	; (407b18 <.LVL45+0x4>)
  407a6e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
  407a70:	b123      	cbz	r3, 407a7c <.LVL31>
                sizeRead = &rdQueueElements[readQueue.tailPos].sz;
  407a72:	482d      	ldr	r0, [pc, #180]	; (407b28 <.LVL45+0x14>)
  407a74:	eb00 00c5 	add.w	r0, r0, r5, lsl #3
                        consUartData.rdCallback(sizeRead);
  407a78:	3004      	adds	r0, #4
  407a7a:	4798      	blx	r3

00407a7c <.LVL31>:
                    consUartData.state = CONSOLE_UART_STATE_READY;
  407a7c:	2202      	movs	r2, #2
  407a7e:	4b26      	ldr	r3, [pc, #152]	; (407b18 <.LVL45+0x4>)
  407a80:	701a      	strb	r2, [r3, #0]
  407a82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                    consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
  407a86:	2203      	movs	r2, #3
  407a88:	4b23      	ldr	r3, [pc, #140]	; (407b18 <.LVL45+0x4>)
  407a8a:	701a      	strb	r2, [r3, #0]
  407a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00407a90 <.LVL33>:
            }
            break;

        case CONSOLE_UART_STATE_READY:

            if (readQueue.numElem)
  407a90:	4b24      	ldr	r3, [pc, #144]	; (407b24 <.LVL45+0x10>)
  407a92:	689b      	ldr	r3, [r3, #8]
  407a94:	b943      	cbnz	r3, 407aa8 <.LVL33+0x18>
            {
                consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
            }
            else if (writeQueue.numElem)
  407a96:	4b25      	ldr	r3, [pc, #148]	; (407b2c <.LVL45+0x18>)
  407a98:	689b      	ldr	r3, [r3, #8]
  407a9a:	2b00      	cmp	r3, #0
  407a9c:	d03a      	beq.n	407b14 <.LVL45>
            {
                /* If there is data to be written, then try writing it */
                consUartData.state = CONSOLE_UART_STATE_SCHEDULE_WRITE;
  407a9e:	2205      	movs	r2, #5
  407aa0:	4b1d      	ldr	r3, [pc, #116]	; (407b18 <.LVL45+0x4>)
  407aa2:	701a      	strb	r2, [r3, #0]
  407aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
  407aa8:	2203      	movs	r2, #3
  407aaa:	4b1b      	ldr	r3, [pc, #108]	; (407b18 <.LVL45+0x4>)
  407aac:	701a      	strb	r2, [r3, #0]
  407aae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            }
            break;

        case CONSOLE_UART_STATE_SCHEDULE_WRITE:

            if (writeQueue.numElem)
  407ab2:	4b1e      	ldr	r3, [pc, #120]	; (407b2c <.LVL45+0x18>)
  407ab4:	689b      	ldr	r3, [r3, #8]
  407ab6:	b36b      	cbz	r3, 407b14 <.LVL45>
            {
                /* This means there is data to sent out */
                pkt = wrQueueElements[writeQueue.tailPos];
  407ab8:	4b1d      	ldr	r3, [pc, #116]	; (407b30 <.LVL45+0x1c>)
  407aba:	4a1c      	ldr	r2, [pc, #112]	; (407b2c <.LVL45+0x18>)
  407abc:	6812      	ldr	r2, [r2, #0]
  407abe:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
  407ac2:	f853 6032 	ldr.w	r6, [r3, r2, lsl #3]

00407ac6 <.LVL34>:
  407ac6:	684d      	ldr	r5, [r1, #4]

00407ac8 <.LBB6>:

                    if(status == true)
                    {
                        /* This means this buffer was added successfully to
                         * the PLIB. Do a callback. */
                        if (consUartData.wrCallback != NULL)
  407ac8:	f8df 804c 	ldr.w	r8, [pc, #76]	; 407b18 <.LVL45+0x4>
                        {
                            consUartData.wrCallback((void *)wrQueueElements[writeQueue.tailPos].data.cbuf);
                        }

                        /* Remove this element from the write queue */
                        popQueue(&writeQueue);
  407acc:	4c17      	ldr	r4, [pc, #92]	; (407b2c <.LVL45+0x18>)
                        pkt = wrQueueElements[writeQueue.tailPos];
  407ace:	461f      	mov	r7, r3
  407ad0:	e00e      	b.n	407af0 <.LBB7>

00407ad2 <.LVL36>:
                            consUartData.wrCallback((void *)wrQueueElements[writeQueue.tailPos].data.cbuf);
  407ad2:	6822      	ldr	r2, [r4, #0]
  407ad4:	f857 0032 	ldr.w	r0, [r7, r2, lsl #3]

00407ad8 <.LVL37>:
  407ad8:	4798      	blx	r3
                        popQueue(&writeQueue);
  407ada:	4620      	mov	r0, r4
  407adc:	f002 fed2 	bl	40a884 <.LFE4>

00407ae0 <.LVL39>:
                        pkt = wrQueueElements[writeQueue.tailPos];
  407ae0:	6823      	ldr	r3, [r4, #0]
  407ae2:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
  407ae6:	f857 6033 	ldr.w	r6, [r7, r3, lsl #3]

00407aea <.LVL40>:
  407aea:	6855      	ldr	r5, [r2, #4]

00407aec <.LBE6>:
                    {
                        /* Got an invalid handle. This most likely means
                         * that the write buffer queue is full */
                    }

                } while(writeQueue.numElem);
  407aec:	68a3      	ldr	r3, [r4, #8]
  407aee:	b153      	cbz	r3, 407b06 <.LBE7>

00407af0 <.LBB7>:
                    bool status = USART1_Write(pkt.data.buf, pkt.sz);
  407af0:	4629      	mov	r1, r5
  407af2:	4630      	mov	r0, r6
  407af4:	f002 fb5a 	bl	40a1ac <.LFE165>

00407af8 <.LVL42>:
                    if(status == true)
  407af8:	2800      	cmp	r0, #0
  407afa:	d0f7      	beq.n	407aec <.LBE6>
                        if (consUartData.wrCallback != NULL)
  407afc:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
  407b00:	2b00      	cmp	r3, #0
  407b02:	d1e6      	bne.n	407ad2 <.LVL36>
  407b04:	e7e9      	b.n	407ada <.LVL37+0x2>

00407b06 <.LBE7>:
                /* If we are here, it either means there is nothing more to
                 * write of the write buffer queue is full. We cannot do much
                 * with respect to write at point. We move the state to
                 * ready */

                consUartData.state = CONSOLE_UART_STATE_READY;
  407b06:	2202      	movs	r2, #2
  407b08:	4b03      	ldr	r3, [pc, #12]	; (407b18 <.LVL45+0x4>)
  407b0a:	701a      	strb	r2, [r3, #0]
  407b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00407b10 <.LVL44>:
        case CONSOLE_UART_STATE_OPERATIONAL_ERROR:

            /* We arrive at this state if the UART driver reports an error on a read or write operation
               We will attempt to recover by flushing the local buffers */

            Console_UART_Flush();
  407b10:	f002 fc36 	bl	40a380 <Console_UART_Flush>

00407b14 <.LVL45>:
  407b14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407b18:	2040db4c 	.word	0x2040db4c
  407b1c:	0040ab65 	.word	0x0040ab65
  407b20:	0040aa2d 	.word	0x0040aa2d
  407b24:	2040dc54 	.word	0x2040dc54
  407b28:	2040dafc 	.word	0x2040dafc
  407b2c:	2040dc68 	.word	0x2040dc68
  407b30:	2040d4b8 	.word	0x2040d4b8

Disassembly of section .text%43:

00407b34 <memcpy>:
  407b34:	4684      	mov	ip, r0
  407b36:	ea41 0300 	orr.w	r3, r1, r0
  407b3a:	f013 0303 	ands.w	r3, r3, #3
  407b3e:	d16d      	bne.n	407c1c <memcpy+0xe8>
  407b40:	3a40      	subs	r2, #64	; 0x40
  407b42:	d341      	bcc.n	407bc8 <memcpy+0x94>
  407b44:	f851 3b04 	ldr.w	r3, [r1], #4
  407b48:	f840 3b04 	str.w	r3, [r0], #4
  407b4c:	f851 3b04 	ldr.w	r3, [r1], #4
  407b50:	f840 3b04 	str.w	r3, [r0], #4
  407b54:	f851 3b04 	ldr.w	r3, [r1], #4
  407b58:	f840 3b04 	str.w	r3, [r0], #4
  407b5c:	f851 3b04 	ldr.w	r3, [r1], #4
  407b60:	f840 3b04 	str.w	r3, [r0], #4
  407b64:	f851 3b04 	ldr.w	r3, [r1], #4
  407b68:	f840 3b04 	str.w	r3, [r0], #4
  407b6c:	f851 3b04 	ldr.w	r3, [r1], #4
  407b70:	f840 3b04 	str.w	r3, [r0], #4
  407b74:	f851 3b04 	ldr.w	r3, [r1], #4
  407b78:	f840 3b04 	str.w	r3, [r0], #4
  407b7c:	f851 3b04 	ldr.w	r3, [r1], #4
  407b80:	f840 3b04 	str.w	r3, [r0], #4
  407b84:	f851 3b04 	ldr.w	r3, [r1], #4
  407b88:	f840 3b04 	str.w	r3, [r0], #4
  407b8c:	f851 3b04 	ldr.w	r3, [r1], #4
  407b90:	f840 3b04 	str.w	r3, [r0], #4
  407b94:	f851 3b04 	ldr.w	r3, [r1], #4
  407b98:	f840 3b04 	str.w	r3, [r0], #4
  407b9c:	f851 3b04 	ldr.w	r3, [r1], #4
  407ba0:	f840 3b04 	str.w	r3, [r0], #4
  407ba4:	f851 3b04 	ldr.w	r3, [r1], #4
  407ba8:	f840 3b04 	str.w	r3, [r0], #4
  407bac:	f851 3b04 	ldr.w	r3, [r1], #4
  407bb0:	f840 3b04 	str.w	r3, [r0], #4
  407bb4:	f851 3b04 	ldr.w	r3, [r1], #4
  407bb8:	f840 3b04 	str.w	r3, [r0], #4
  407bbc:	f851 3b04 	ldr.w	r3, [r1], #4
  407bc0:	f840 3b04 	str.w	r3, [r0], #4
  407bc4:	3a40      	subs	r2, #64	; 0x40
  407bc6:	d2bd      	bcs.n	407b44 <memcpy+0x10>
  407bc8:	3230      	adds	r2, #48	; 0x30
  407bca:	d311      	bcc.n	407bf0 <memcpy+0xbc>
  407bcc:	f851 3b04 	ldr.w	r3, [r1], #4
  407bd0:	f840 3b04 	str.w	r3, [r0], #4
  407bd4:	f851 3b04 	ldr.w	r3, [r1], #4
  407bd8:	f840 3b04 	str.w	r3, [r0], #4
  407bdc:	f851 3b04 	ldr.w	r3, [r1], #4
  407be0:	f840 3b04 	str.w	r3, [r0], #4
  407be4:	f851 3b04 	ldr.w	r3, [r1], #4
  407be8:	f840 3b04 	str.w	r3, [r0], #4
  407bec:	3a10      	subs	r2, #16
  407bee:	d2ed      	bcs.n	407bcc <memcpy+0x98>
  407bf0:	320c      	adds	r2, #12
  407bf2:	d305      	bcc.n	407c00 <memcpy+0xcc>
  407bf4:	f851 3b04 	ldr.w	r3, [r1], #4
  407bf8:	f840 3b04 	str.w	r3, [r0], #4
  407bfc:	3a04      	subs	r2, #4
  407bfe:	d2f9      	bcs.n	407bf4 <memcpy+0xc0>
  407c00:	3204      	adds	r2, #4
  407c02:	d008      	beq.n	407c16 <memcpy+0xe2>
  407c04:	07d2      	lsls	r2, r2, #31
  407c06:	bf1c      	itt	ne
  407c08:	f811 3b01 	ldrbne.w	r3, [r1], #1
  407c0c:	f800 3b01 	strbne.w	r3, [r0], #1
  407c10:	d301      	bcc.n	407c16 <memcpy+0xe2>
  407c12:	880b      	ldrh	r3, [r1, #0]
  407c14:	8003      	strh	r3, [r0, #0]
  407c16:	4660      	mov	r0, ip
  407c18:	4770      	bx	lr
  407c1a:	bf00      	nop
  407c1c:	2a08      	cmp	r2, #8
  407c1e:	d313      	bcc.n	407c48 <memcpy+0x114>
  407c20:	078b      	lsls	r3, r1, #30
  407c22:	d08d      	beq.n	407b40 <memcpy+0xc>
  407c24:	f010 0303 	ands.w	r3, r0, #3
  407c28:	d08a      	beq.n	407b40 <memcpy+0xc>
  407c2a:	f1c3 0304 	rsb	r3, r3, #4
  407c2e:	1ad2      	subs	r2, r2, r3
  407c30:	07db      	lsls	r3, r3, #31
  407c32:	bf1c      	itt	ne
  407c34:	f811 3b01 	ldrbne.w	r3, [r1], #1
  407c38:	f800 3b01 	strbne.w	r3, [r0], #1
  407c3c:	d380      	bcc.n	407b40 <memcpy+0xc>
  407c3e:	f831 3b02 	ldrh.w	r3, [r1], #2
  407c42:	f820 3b02 	strh.w	r3, [r0], #2
  407c46:	e77b      	b.n	407b40 <memcpy+0xc>
  407c48:	3a04      	subs	r2, #4
  407c4a:	d3d9      	bcc.n	407c00 <memcpy+0xcc>
  407c4c:	3a01      	subs	r2, #1
  407c4e:	f811 3b01 	ldrb.w	r3, [r1], #1
  407c52:	f800 3b01 	strb.w	r3, [r0], #1
  407c56:	d2f9      	bcs.n	407c4c <memcpy+0x118>
  407c58:	780b      	ldrb	r3, [r1, #0]
  407c5a:	7003      	strb	r3, [r0, #0]
  407c5c:	784b      	ldrb	r3, [r1, #1]
  407c5e:	7043      	strb	r3, [r0, #1]
  407c60:	788b      	ldrb	r3, [r1, #2]
  407c62:	7083      	strb	r3, [r0, #2]
  407c64:	4660      	mov	r0, ip
  407c66:	4770      	bx	lr

Disassembly of section .text.quorem%44:

00407c68 <quorem>:
  407c68:	6902      	ldr	r2, [r0, #16]
  407c6a:	690b      	ldr	r3, [r1, #16]

00407c6c <.LVL1>:
  407c6c:	4293      	cmp	r3, r2
  407c6e:	f300 808d 	bgt.w	407d8c <.LCFI3>
  407c72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00407c76 <.LCFI0>:
  407c76:	f103 38ff 	add.w	r8, r3, #4294967295
  407c7a:	f101 0714 	add.w	r7, r1, #20

00407c7e <.LVL2>:
  407c7e:	f100 0b14 	add.w	fp, r0, #20
  407c82:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  407c86:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  407c8a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  407c8e:	b083      	sub	sp, #12

00407c90 <.LCFI1>:
  407c90:	3201      	adds	r2, #1
  407c92:	fbb3 f9f2 	udiv	r9, r3, r2
  407c96:	eb0b 0304 	add.w	r3, fp, r4
  407c9a:	9400      	str	r4, [sp, #0]
  407c9c:	eb07 0a04 	add.w	sl, r7, r4

00407ca0 <.LVL3>:
  407ca0:	9301      	str	r3, [sp, #4]

00407ca2 <.LVL4>:
  407ca2:	f1b9 0f00 	cmp.w	r9, #0
  407ca6:	d039      	beq.n	407d1c <.LVL23>
  407ca8:	2500      	movs	r5, #0
  407caa:	462e      	mov	r6, r5
  407cac:	46bc      	mov	ip, r7
  407cae:	46de      	mov	lr, fp

00407cb0 <.LVL5>:
  407cb0:	f85c 4b04 	ldr.w	r4, [ip], #4

00407cb4 <.LVL6>:
  407cb4:	f8de 3000 	ldr.w	r3, [lr]
  407cb8:	b2a2      	uxth	r2, r4
  407cba:	fb09 5502 	mla	r5, r9, r2, r5

00407cbe <.LVL7>:
  407cbe:	0c22      	lsrs	r2, r4, #16
  407cc0:	0c2c      	lsrs	r4, r5, #16

00407cc2 <.LVL8>:
  407cc2:	fb09 4202 	mla	r2, r9, r2, r4

00407cc6 <.LVL9>:
  407cc6:	b2ad      	uxth	r5, r5

00407cc8 <.LVL10>:
  407cc8:	1b75      	subs	r5, r6, r5
  407cca:	b296      	uxth	r6, r2

00407ccc <.LVL11>:
  407ccc:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  407cd0:	fa15 f383 	uxtah	r3, r5, r3
  407cd4:	eb06 4623 	add.w	r6, r6, r3, asr #16
  407cd8:	b29b      	uxth	r3, r3
  407cda:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  407cde:	45e2      	cmp	sl, ip
  407ce0:	ea4f 4512 	mov.w	r5, r2, lsr #16

00407ce4 <.LVL12>:
  407ce4:	f84e 3b04 	str.w	r3, [lr], #4

00407ce8 <.LVL13>:
  407ce8:	ea4f 4626 	mov.w	r6, r6, asr #16

00407cec <.LVL14>:
  407cec:	d2e0      	bcs.n	407cb0 <.LVL5>
  407cee:	9b00      	ldr	r3, [sp, #0]
  407cf0:	f85b 3003 	ldr.w	r3, [fp, r3]
  407cf4:	b993      	cbnz	r3, 407d1c <.LVL23>

00407cf6 <.LVL15>:
  407cf6:	9c01      	ldr	r4, [sp, #4]
  407cf8:	1f23      	subs	r3, r4, #4

00407cfa <.LVL16>:
  407cfa:	459b      	cmp	fp, r3
  407cfc:	d20c      	bcs.n	407d18 <.LVL22>
  407cfe:	f854 3c04 	ldr.w	r3, [r4, #-4]

00407d02 <.LVL17>:
  407d02:	b94b      	cbnz	r3, 407d18 <.LVL22>
  407d04:	f1a4 0308 	sub.w	r3, r4, #8
  407d08:	e002      	b.n	407d10 <.LVL19+0x2>

00407d0a <.LVL18>:
  407d0a:	681a      	ldr	r2, [r3, #0]
  407d0c:	3b04      	subs	r3, #4

00407d0e <.LVL19>:
  407d0e:	b91a      	cbnz	r2, 407d18 <.LVL22>
  407d10:	459b      	cmp	fp, r3
  407d12:	f108 38ff 	add.w	r8, r8, #4294967295

00407d16 <.LVL21>:
  407d16:	d3f8      	bcc.n	407d0a <.LVL18>

00407d18 <.LVL22>:
  407d18:	f8c0 8010 	str.w	r8, [r0, #16]

00407d1c <.LVL23>:
  407d1c:	4604      	mov	r4, r0
  407d1e:	f002 fc1b 	bl	40a558 <.LBE18>

00407d22 <.LVL24>:
  407d22:	2800      	cmp	r0, #0
  407d24:	db2e      	blt.n	407d84 <.LVL46>
  407d26:	f109 0901 	add.w	r9, r9, #1

00407d2a <.LVL25>:
  407d2a:	465d      	mov	r5, fp
  407d2c:	2300      	movs	r3, #0

00407d2e <.LVL26>:
  407d2e:	f857 1b04 	ldr.w	r1, [r7], #4

00407d32 <.LVL27>:
  407d32:	6828      	ldr	r0, [r5, #0]
  407d34:	b28a      	uxth	r2, r1
  407d36:	1a9a      	subs	r2, r3, r2
  407d38:	0c0b      	lsrs	r3, r1, #16

00407d3a <.LVL28>:
  407d3a:	fa12 f280 	uxtah	r2, r2, r0

00407d3e <.LVL29>:
  407d3e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16

00407d42 <.LVL30>:
  407d42:	eb03 4322 	add.w	r3, r3, r2, asr #16

00407d46 <.LVL31>:
  407d46:	b292      	uxth	r2, r2

00407d48 <.LVL32>:
  407d48:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  407d4c:	45ba      	cmp	sl, r7
  407d4e:	f845 2b04 	str.w	r2, [r5], #4

00407d52 <.LVL33>:
  407d52:	ea4f 4323 	mov.w	r3, r3, asr #16

00407d56 <.LVL34>:
  407d56:	d2ea      	bcs.n	407d2e <.LVL26>

00407d58 <.LVL35>:
  407d58:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  407d5c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2

00407d60 <.LVL36>:
  407d60:	b982      	cbnz	r2, 407d84 <.LVL46>

00407d62 <.LVL37>:
  407d62:	1f1a      	subs	r2, r3, #4

00407d64 <.LVL38>:
  407d64:	4593      	cmp	fp, r2
  407d66:	d20b      	bcs.n	407d80 <.LVL45>
  407d68:	f853 2c04 	ldr.w	r2, [r3, #-4]

00407d6c <.LVL39>:
  407d6c:	b942      	cbnz	r2, 407d80 <.LVL45>
  407d6e:	3b08      	subs	r3, #8

00407d70 <.LVL40>:
  407d70:	e002      	b.n	407d78 <.LVL42+0x2>

00407d72 <.LVL41>:
  407d72:	681a      	ldr	r2, [r3, #0]
  407d74:	3b04      	subs	r3, #4

00407d76 <.LVL42>:
  407d76:	b91a      	cbnz	r2, 407d80 <.LVL45>
  407d78:	459b      	cmp	fp, r3
  407d7a:	f108 38ff 	add.w	r8, r8, #4294967295

00407d7e <.LVL44>:
  407d7e:	d3f8      	bcc.n	407d72 <.LVL41>

00407d80 <.LVL45>:
  407d80:	f8c4 8010 	str.w	r8, [r4, #16]

00407d84 <.LVL46>:
  407d84:	4648      	mov	r0, r9
  407d86:	b003      	add	sp, #12

00407d88 <.LCFI2>:
  407d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407d8c <.LCFI3>:
  407d8c:	2000      	movs	r0, #0

00407d8e <.LVL48>:
  407d8e:	4770      	bx	lr

Disassembly of section .text.USART1_InterruptHandler%45:

00407d90 <USART1_InterruptHandler>:

    return;
}

void USART1_InterruptHandler( void )
{
  407d90:	b570      	push	{r4, r5, r6, lr}

00407d92 <.LCFI0>:
    /* Error status */
    uint32_t errorStatus = (USART1_REGS->US_CSR & (US_CSR_OVRE_Msk | US_CSR_FRAME_Msk | US_CSR_PARE_Msk));
  407d92:	4b46      	ldr	r3, [pc, #280]	; (407eac <.LBB11+0xe>)
  407d94:	695b      	ldr	r3, [r3, #20]

00407d96 <.LVL0>:

    if(errorStatus != 0)
  407d96:	f013 0fe0 	tst.w	r3, #224	; 0xe0
  407d9a:	d00e      	beq.n	407dba <.LVL1+0x1c>
    {
        /* Client must call USARTx_ErrorGet() function to clear the errors */

        /* USART errors are normally associated with the receiver, hence calling
         * receiver context */
        if( usart1Obj.rxCallback != NULL )
  407d9c:	4b44      	ldr	r3, [pc, #272]	; (407eb0 <.LBB11+0x12>)

00407d9e <.LVL1>:
  407d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  407da0:	b113      	cbz	r3, 407da8 <.LVL1+0xa>
        {
            usart1Obj.rxCallback(usart1Obj.rxContext);
  407da2:	4a43      	ldr	r2, [pc, #268]	; (407eb0 <.LBB11+0x12>)
  407da4:	6a90      	ldr	r0, [r2, #40]	; 0x28
  407da6:	4798      	blx	r3
        }

        usart1Obj.rxBusyStatus = false;
  407da8:	4b41      	ldr	r3, [pc, #260]	; (407eb0 <.LBB11+0x12>)
  407daa:	2200      	movs	r2, #0
  407dac:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        usart1Obj.rxSize = 0;
  407db0:	61da      	str	r2, [r3, #28]
        usart1Obj.rxProcessedSize = 0;
  407db2:	621a      	str	r2, [r3, #32]

        /* Disable Read, Overrun, Parity and Framing error interrupts */
        USART1_REGS->US_IDR = (US_IDR_RXRDY_Msk | US_IDR_FRAME_Msk | US_IDR_PARE_Msk | US_IDR_OVRE_Msk);
  407db4:	22e1      	movs	r2, #225	; 0xe1
  407db6:	4b3d      	ldr	r3, [pc, #244]	; (407eac <.LBB11+0xe>)
  407db8:	60da      	str	r2, [r3, #12]
    }

    /* Receiver status */
    if(US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk))
  407dba:	4b3c      	ldr	r3, [pc, #240]	; (407eac <.LBB11+0xe>)
  407dbc:	695b      	ldr	r3, [r3, #20]
  407dbe:	f013 0f01 	tst.w	r3, #1
  407dc2:	d105      	bne.n	407dd0 <.LBB6>
    {
        USART1_ISR_RX_Handler();
    }

    /* Transmitter status */
    if(US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk))
  407dc4:	4b39      	ldr	r3, [pc, #228]	; (407eac <.LBB11+0xe>)
  407dc6:	695b      	ldr	r3, [r3, #20]
  407dc8:	f413 7f00 	tst.w	r3, #512	; 0x200
  407dcc:	d134      	bne.n	407e38 <.LBB8>
  407dce:	bd70      	pop	{r4, r5, r6, pc}

00407dd0 <.LBB6>:
    if(usart1Obj.rxBusyStatus == true)
  407dd0:	4b37      	ldr	r3, [pc, #220]	; (407eb0 <.LBB11+0x12>)
  407dd2:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  407dd6:	2b00      	cmp	r3, #0
  407dd8:	d0f4      	beq.n	407dc4 <.LVL1+0x26>
        while((US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk)) && (usart1Obj.rxSize > usart1Obj.rxProcessedSize) )
  407dda:	4b34      	ldr	r3, [pc, #208]	; (407eac <.LBB11+0xe>)
  407ddc:	695b      	ldr	r3, [r3, #20]
  407dde:	f013 0f01 	tst.w	r3, #1
  407de2:	d023      	beq.n	407e2c <.LBB6+0x5c>
  407de4:	4a32      	ldr	r2, [pc, #200]	; (407eb0 <.LBB11+0x12>)
  407de6:	6a13      	ldr	r3, [r2, #32]
  407de8:	69d2      	ldr	r2, [r2, #28]
  407dea:	429a      	cmp	r2, r3
  407dec:	d90e      	bls.n	407e0c <.LBB6+0x3c>
            usart1Obj.rxBuffer[usart1Obj.rxProcessedSize++] = (USART1_REGS->US_RHR& US_RHR_RXCHR_Msk);
  407dee:	4a30      	ldr	r2, [pc, #192]	; (407eb0 <.LBB11+0x12>)
  407df0:	492e      	ldr	r1, [pc, #184]	; (407eac <.LBB11+0xe>)
  407df2:	6990      	ldr	r0, [r2, #24]
  407df4:	1c5c      	adds	r4, r3, #1
  407df6:	6214      	str	r4, [r2, #32]
  407df8:	698c      	ldr	r4, [r1, #24]
  407dfa:	54c4      	strb	r4, [r0, r3]
        while((US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk)) && (usart1Obj.rxSize > usart1Obj.rxProcessedSize) )
  407dfc:	694b      	ldr	r3, [r1, #20]
  407dfe:	f013 0f01 	tst.w	r3, #1
  407e02:	d013      	beq.n	407e2c <.LBB6+0x5c>
  407e04:	6a13      	ldr	r3, [r2, #32]
  407e06:	69d0      	ldr	r0, [r2, #28]
  407e08:	4283      	cmp	r3, r0
  407e0a:	d3f2      	bcc.n	407df2 <.LBB6+0x22>
            usart1Obj.rxBusyStatus = false;
  407e0c:	4b28      	ldr	r3, [pc, #160]	; (407eb0 <.LBB11+0x12>)
  407e0e:	2200      	movs	r2, #0
  407e10:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
            usart1Obj.rxSize = 0;
  407e14:	61da      	str	r2, [r3, #28]
            usart1Obj.rxProcessedSize = 0;
  407e16:	621a      	str	r2, [r3, #32]
            USART1_REGS->US_IDR = (US_IDR_RXRDY_Msk | US_IDR_FRAME_Msk | US_IDR_PARE_Msk | US_IDR_OVRE_Msk);
  407e18:	21e1      	movs	r1, #225	; 0xe1
  407e1a:	4a24      	ldr	r2, [pc, #144]	; (407eac <.LBB11+0xe>)
  407e1c:	60d1      	str	r1, [r2, #12]
            if(usart1Obj.rxCallback != NULL)
  407e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  407e20:	2b00      	cmp	r3, #0
  407e22:	d0cf      	beq.n	407dc4 <.LVL1+0x26>
                usart1Obj.rxCallback(usart1Obj.rxContext);
  407e24:	4a22      	ldr	r2, [pc, #136]	; (407eb0 <.LBB11+0x12>)
  407e26:	6a90      	ldr	r0, [r2, #40]	; 0x28
  407e28:	4798      	blx	r3
  407e2a:	e7cb      	b.n	407dc4 <.LVL1+0x26>
        if(usart1Obj.rxProcessedSize >= usart1Obj.rxSize)
  407e2c:	4b20      	ldr	r3, [pc, #128]	; (407eb0 <.LBB11+0x12>)
  407e2e:	6a1a      	ldr	r2, [r3, #32]
  407e30:	69db      	ldr	r3, [r3, #28]
  407e32:	429a      	cmp	r2, r3
  407e34:	d3c6      	bcc.n	407dc4 <.LVL1+0x26>
  407e36:	e7e9      	b.n	407e0c <.LBB6+0x3c>

00407e38 <.LBB8>:
    if(usart1Obj.txBusyStatus == true)
  407e38:	4b1d      	ldr	r3, [pc, #116]	; (407eb0 <.LBB11+0x12>)
  407e3a:	7d1b      	ldrb	r3, [r3, #20]
  407e3c:	2b00      	cmp	r3, #0
  407e3e:	d0c6      	beq.n	407dce <.LVL1+0x30>
        while((US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk)) && (usart1Obj.txSize > usart1Obj.txProcessedSize) )
  407e40:	4b1a      	ldr	r3, [pc, #104]	; (407eac <.LBB11+0xe>)
  407e42:	695b      	ldr	r3, [r3, #20]
  407e44:	f413 7f00 	tst.w	r3, #512	; 0x200
  407e48:	d029      	beq.n	407e9e <.LBB11>
  407e4a:	4b19      	ldr	r3, [pc, #100]	; (407eb0 <.LBB11+0x12>)
  407e4c:	685d      	ldr	r5, [r3, #4]
  407e4e:	689b      	ldr	r3, [r3, #8]
  407e50:	429d      	cmp	r5, r3
  407e52:	d914      	bls.n	407e7e <.LBB8+0x46>
            USART1_REGS->US_THR|= usart1Obj.txBuffer[usart1Obj.txProcessedSize++];
  407e54:	4a16      	ldr	r2, [pc, #88]	; (407eb0 <.LBB11+0x12>)
  407e56:	6814      	ldr	r4, [r2, #0]
  407e58:	4423      	add	r3, r4
  407e5a:	4425      	add	r5, r4
  407e5c:	4616      	mov	r6, r2
  407e5e:	f1c4 0401 	rsb	r4, r4, #1
  407e62:	4912      	ldr	r1, [pc, #72]	; (407eac <.LBB11+0xe>)
  407e64:	18e2      	adds	r2, r4, r3
  407e66:	60b2      	str	r2, [r6, #8]
  407e68:	f813 2b01 	ldrb.w	r2, [r3], #1
  407e6c:	69c8      	ldr	r0, [r1, #28]
  407e6e:	4302      	orrs	r2, r0
  407e70:	61ca      	str	r2, [r1, #28]
        while((US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk)) && (usart1Obj.txSize > usart1Obj.txProcessedSize) )
  407e72:	694a      	ldr	r2, [r1, #20]
  407e74:	f412 7f00 	tst.w	r2, #512	; 0x200
  407e78:	d011      	beq.n	407e9e <.LBB11>
  407e7a:	429d      	cmp	r5, r3
  407e7c:	d1f2      	bne.n	407e64 <.LBB8+0x2c>
            usart1Obj.txBusyStatus = false;
  407e7e:	4b0c      	ldr	r3, [pc, #48]	; (407eb0 <.LBB11+0x12>)
  407e80:	2200      	movs	r2, #0
  407e82:	751a      	strb	r2, [r3, #20]
            usart1Obj.txSize = 0;
  407e84:	605a      	str	r2, [r3, #4]
            usart1Obj.txProcessedSize = 0;
  407e86:	609a      	str	r2, [r3, #8]
            USART1_REGS->US_IDR = US_IDR_TXEMPTY_Msk;
  407e88:	f44f 7100 	mov.w	r1, #512	; 0x200
  407e8c:	4a07      	ldr	r2, [pc, #28]	; (407eac <.LBB11+0xe>)
  407e8e:	60d1      	str	r1, [r2, #12]
            if(usart1Obj.txCallback != NULL)
  407e90:	68db      	ldr	r3, [r3, #12]
  407e92:	2b00      	cmp	r3, #0
  407e94:	d09b      	beq.n	407dce <.LVL1+0x30>
                usart1Obj.txCallback(usart1Obj.txContext);
  407e96:	4a06      	ldr	r2, [pc, #24]	; (407eb0 <.LBB11+0x12>)
  407e98:	6910      	ldr	r0, [r2, #16]
  407e9a:	4798      	blx	r3

00407e9c <.LBE8>:
    {
        USART1_ISR_TX_Handler();
    }

    return;
  407e9c:	e797      	b.n	407dce <.LVL1+0x30>

00407e9e <.LBB11>:
        if(usart1Obj.txProcessedSize >= usart1Obj.txSize)
  407e9e:	4b04      	ldr	r3, [pc, #16]	; (407eb0 <.LBB11+0x12>)
  407ea0:	689a      	ldr	r2, [r3, #8]
  407ea2:	685b      	ldr	r3, [r3, #4]
  407ea4:	429a      	cmp	r2, r3
  407ea6:	d392      	bcc.n	407dce <.LVL1+0x30>
  407ea8:	e7e9      	b.n	407e7e <.LBB8+0x46>
  407eaa:	bf00      	nop
  407eac:	40028000 	.word	0x40028000
  407eb0:	20400454 	.word	0x20400454

Disassembly of section .text.__multiply%46:

00407eb4 <__multiply>:
  407eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00407eb8 <.LCFI7>:
  407eb8:	690c      	ldr	r4, [r1, #16]
  407eba:	6915      	ldr	r5, [r2, #16]
  407ebc:	42ac      	cmp	r4, r5
  407ebe:	b083      	sub	sp, #12

00407ec0 <.LCFI8>:
  407ec0:	468b      	mov	fp, r1
  407ec2:	4616      	mov	r6, r2
  407ec4:	da04      	bge.n	407ed0 <.LVL110>
  407ec6:	4622      	mov	r2, r4

00407ec8 <.LVL108>:
  407ec8:	46b3      	mov	fp, r6
  407eca:	462c      	mov	r4, r5
  407ecc:	460e      	mov	r6, r1

00407ece <.LVL109>:
  407ece:	4615      	mov	r5, r2

00407ed0 <.LVL110>:
  407ed0:	f8db 3008 	ldr.w	r3, [fp, #8]
  407ed4:	f8db 1004 	ldr.w	r1, [fp, #4]

00407ed8 <.LVL111>:
  407ed8:	eb04 0805 	add.w	r8, r4, r5

00407edc <.LVL112>:
  407edc:	4598      	cmp	r8, r3
  407ede:	bfc8      	it	gt
  407ee0:	3101      	addgt	r1, #1
  407ee2:	f002 f8f5 	bl	40a0d0 <.LFE2>

00407ee6 <.LVL114>:
  407ee6:	f100 0914 	add.w	r9, r0, #20
  407eea:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  407eee:	45d1      	cmp	r9, sl
  407ef0:	9000      	str	r0, [sp, #0]

00407ef2 <.LVL115>:
  407ef2:	d205      	bcs.n	407f00 <.LVL118>
  407ef4:	464b      	mov	r3, r9
  407ef6:	2100      	movs	r1, #0

00407ef8 <.LVL116>:
  407ef8:	f843 1b04 	str.w	r1, [r3], #4
  407efc:	459a      	cmp	sl, r3
  407efe:	d8fb      	bhi.n	407ef8 <.LVL116>

00407f00 <.LVL118>:
  407f00:	f106 0c14 	add.w	ip, r6, #20
  407f04:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  407f08:	f10b 0b14 	add.w	fp, fp, #20

00407f0c <.LVL119>:
  407f0c:	459c      	cmp	ip, r3
  407f0e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2

00407f12 <.LVL120>:
  407f12:	d24c      	bcs.n	407fae <.LVL144>
  407f14:	f8cd a004 	str.w	sl, [sp, #4]
  407f18:	469a      	mov	sl, r3

00407f1a <.LVL121>:
  407f1a:	f8dc 5000 	ldr.w	r5, [ip]
  407f1e:	b2af      	uxth	r7, r5

00407f20 <.LVL122>:
  407f20:	b1ef      	cbz	r7, 407f5e <.LVL130>
  407f22:	2100      	movs	r1, #0
  407f24:	464d      	mov	r5, r9
  407f26:	465e      	mov	r6, fp
  407f28:	460c      	mov	r4, r1

00407f2a <.LVL123>:
  407f2a:	f856 2b04 	ldr.w	r2, [r6], #4

00407f2e <.LVL124>:
  407f2e:	6828      	ldr	r0, [r5, #0]
  407f30:	b293      	uxth	r3, r2
  407f32:	b281      	uxth	r1, r0
  407f34:	fb07 1303 	mla	r3, r7, r3, r1
  407f38:	0c12      	lsrs	r2, r2, #16
  407f3a:	0c01      	lsrs	r1, r0, #16
  407f3c:	4423      	add	r3, r4

00407f3e <.LVL125>:
  407f3e:	fb07 1102 	mla	r1, r7, r2, r1
  407f42:	eb01 4113 	add.w	r1, r1, r3, lsr #16

00407f46 <.LVL126>:
  407f46:	b29b      	uxth	r3, r3

00407f48 <.LVL127>:
  407f48:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  407f4c:	45b6      	cmp	lr, r6
  407f4e:	f845 3b04 	str.w	r3, [r5], #4

00407f52 <.LVL128>:
  407f52:	ea4f 4411 	mov.w	r4, r1, lsr #16

00407f56 <.LVL129>:
  407f56:	d8e8      	bhi.n	407f2a <.LVL123>
  407f58:	602c      	str	r4, [r5, #0]
  407f5a:	f8dc 5000 	ldr.w	r5, [ip]

00407f5e <.LVL130>:
  407f5e:	0c2d      	lsrs	r5, r5, #16

00407f60 <.LVL131>:
  407f60:	d01d      	beq.n	407f9e <.LVL141>

00407f62 <.LVL132>:
  407f62:	f8d9 3000 	ldr.w	r3, [r9]

00407f66 <.LVL133>:
  407f66:	4648      	mov	r0, r9
  407f68:	461c      	mov	r4, r3
  407f6a:	4659      	mov	r1, fp
  407f6c:	2200      	movs	r2, #0

00407f6e <.LVL134>:
  407f6e:	880e      	ldrh	r6, [r1, #0]
  407f70:	0c24      	lsrs	r4, r4, #16
  407f72:	fb05 4406 	mla	r4, r5, r6, r4
  407f76:	4422      	add	r2, r4

00407f78 <.LVL135>:
  407f78:	b29b      	uxth	r3, r3

00407f7a <.LVL136>:
  407f7a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  407f7e:	f840 3b04 	str.w	r3, [r0], #4

00407f82 <.LVL137>:
  407f82:	f851 3b04 	ldr.w	r3, [r1], #4

00407f86 <.LVL138>:
  407f86:	6804      	ldr	r4, [r0, #0]
  407f88:	0c1b      	lsrs	r3, r3, #16
  407f8a:	b2a6      	uxth	r6, r4
  407f8c:	fb05 6303 	mla	r3, r5, r3, r6
  407f90:	eb03 4312 	add.w	r3, r3, r2, lsr #16

00407f94 <.LVL139>:
  407f94:	458e      	cmp	lr, r1
  407f96:	ea4f 4213 	mov.w	r2, r3, lsr #16

00407f9a <.LVL140>:
  407f9a:	d8e8      	bhi.n	407f6e <.LVL134>
  407f9c:	6003      	str	r3, [r0, #0]

00407f9e <.LVL141>:
  407f9e:	f10c 0c04 	add.w	ip, ip, #4
  407fa2:	45e2      	cmp	sl, ip
  407fa4:	f109 0904 	add.w	r9, r9, #4
  407fa8:	d8b7      	bhi.n	407f1a <.LVL121>
  407faa:	f8dd a004 	ldr.w	sl, [sp, #4]

00407fae <.LVL144>:
  407fae:	f1b8 0f00 	cmp.w	r8, #0
  407fb2:	dd0b      	ble.n	407fcc <.LVL149>
  407fb4:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  407fb8:	f1aa 0a04 	sub.w	sl, sl, #4
  407fbc:	b11b      	cbz	r3, 407fc6 <.LVL147>
  407fbe:	e005      	b.n	407fcc <.LVL149>
  407fc0:	f85a 3d04 	ldr.w	r3, [sl, #-4]!

00407fc4 <.LVL146>:
  407fc4:	b913      	cbnz	r3, 407fcc <.LVL149>

00407fc6 <.LVL147>:
  407fc6:	f1b8 0801 	subs.w	r8, r8, #1

00407fca <.LVL148>:
  407fca:	d1f9      	bne.n	407fc0 <.LVL144+0x12>

00407fcc <.LVL149>:
  407fcc:	9800      	ldr	r0, [sp, #0]
  407fce:	f8c0 8010 	str.w	r8, [r0, #16]
  407fd2:	b003      	add	sp, #12

00407fd4 <.LCFI9>:
  407fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text.Reset_Handler%47:

00407fd8 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void __attribute__((optimize("-O1"), section(".text.Reset_Handler"), long_call)) Reset_Handler(void)
{
  407fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

00407fda <.LCFI0>:
    uint32_t *pSrc;

    /* Call the optional application-provided _on_reset() function. */
    if (_on_reset)
  407fda:	4b3e      	ldr	r3, [pc, #248]	; (4080d4 <.LVL15+0x2>)
  407fdc:	b103      	cbz	r3, 407fe0 <.LVL0>
    {
        _on_reset();
  407fde:	4798      	blx	r3

00407fe0 <.LVL0>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_reset)
  407fe0:	4b3d      	ldr	r3, [pc, #244]	; (4080d8 <.LVL15+0x6>)
  407fe2:	b103      	cbz	r3, 407fe6 <.LBB143>
        __xc32_on_reset();
  407fe4:	4798      	blx	r3

00407fe6 <.LBB143>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  407fe6:	f3ef 8110 	mrs	r1, PRIMASK

00407fea <.LBB147>:
  __ASM volatile ("cpsid i" : : : "memory");
  407fea:	b672      	cpsid	i

00407fec <.LBE147>:
     SCB->CPACR |= (0xFu << 20);
  407fec:	4a3b      	ldr	r2, [pc, #236]	; (4080dc <.LVL15+0xa>)
  407fee:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
  407ff2:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  407ff6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

00407ffa <.LBB149>:
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  407ffa:	f3bf 8f4f 	dsb	sy

00407ffe <.LBB151>:
  __ASM volatile ("isb 0xF":::"memory");
  407ffe:	f3bf 8f6f 	isb	sy

00408002 <.LBE151>:
    if (!prim)
  408002:	b901      	cbnz	r1, 408006 <.LBB155>

00408004 <.LBB153>:
  __ASM volatile ("cpsie i" : : : "memory");
  408004:	b662      	cpsie	i

00408006 <.LBB155>:
  __ASM volatile ("dsb 0xF":::"memory");
  408006:	f3bf 8f4f 	dsb	sy

0040800a <.LBB159>:
  __ASM volatile ("isb 0xF":::"memory");
  40800a:	f3bf 8f6f 	isb	sy

0040800e <.LBE159>:
    SCB->ITCMCR &= ~(uint32_t)SCB_ITCMCR_EN_Msk;
  40800e:	4c33      	ldr	r4, [pc, #204]	; (4080dc <.LVL15+0xa>)
  408010:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
  408014:	f023 0301 	bic.w	r3, r3, #1
  408018:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
    SCB->DTCMCR &= ~(uint32_t)SCB_ITCMCR_EN_Msk;
  40801c:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
  408020:	f023 0301 	bic.w	r3, r3, #1
  408024:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294

00408028 <.LBB161>:
  __ASM volatile ("dsb 0xF":::"memory");
  408028:	f3bf 8f4f 	dsb	sy

0040802c <.LBB163>:
  __ASM volatile ("isb 0xF":::"memory");
  40802c:	f3bf 8f6f 	isb	sy

00408030 <.LBE155>:
    /* Disable TCM  */
    TCM_Disable();

    /* Initialize data after TCM is enabled.
     * Data initialization from the XC32 .dinit template */
    __pic32c_data_initialization();
  408030:	f001 fa06 	bl	409440 <.LFE163>

00408034 <.LVL2>:
	

#  ifdef SCB_VTOR_TBLOFF_Msk
    /*  Set the vector-table base address in FLASH */
    pSrc = (uint32_t *) & __svectors;
    SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  408034:	4b2a      	ldr	r3, [pc, #168]	; (4080e0 <.LVL15+0xe>)
  408036:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40803a:	60a3      	str	r3, [r4, #8]
#  endif /* SCB_VTOR_TBLOFF_Msk */

    /* Initialize the C library */
    __libc_init_array();
  40803c:	4b29      	ldr	r3, [pc, #164]	; (4080e4 <.LVL15+0x12>)
  40803e:	4798      	blx	r3

00408040 <.LBB165>:
  __ASM volatile ("dsb 0xF":::"memory");
  408040:	f3bf 8f4f 	dsb	sy

00408044 <.LBB170>:
  __ASM volatile ("isb 0xF":::"memory");
  408044:	f3bf 8f6f 	isb	sy

00408048 <.LBE170>:
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  408048:	2200      	movs	r2, #0
  40804a:	f8c4 2250 	str.w	r2, [r4, #592]	; 0x250

0040804e <.LBB172>:
  __ASM volatile ("dsb 0xF":::"memory");
  40804e:	f3bf 8f4f 	dsb	sy

00408052 <.LBB174>:
  __ASM volatile ("isb 0xF":::"memory");
  408052:	f3bf 8f6f 	isb	sy

00408056 <.LBE174>:
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  408056:	6963      	ldr	r3, [r4, #20]
  408058:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  40805c:	6163      	str	r3, [r4, #20]

0040805e <.LBB176>:
  __ASM volatile ("dsb 0xF":::"memory");
  40805e:	f3bf 8f4f 	dsb	sy

00408062 <.LBB178>:
  __ASM volatile ("isb 0xF":::"memory");
  408062:	f3bf 8f6f 	isb	sy

00408066 <.LBB180>:
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  408066:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84

0040806a <.LBB183>:
  __ASM volatile ("dsb 0xF":::"memory");
  40806a:	f3bf 8f4f 	dsb	sy

0040806e <.LBE183>:
    __DSB();

    ccsidr = SCB->CCSIDR;
  40806e:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80

00408072 <.LVL4>:

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  408072:	f3c5 364e 	ubfx	r6, r5, #13, #15

00408076 <.LVL5>:
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  408076:	f3c5 05c9 	ubfx	r5, r5, #3, #10

0040807a <.LVL6>:
  40807a:	0177      	lsls	r7, r6, #5
  40807c:	ea4f 7c85 	mov.w	ip, r5, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  408080:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  408084:	4620      	mov	r0, r4
  408086:	ea07 040e 	and.w	r4, r7, lr
  40808a:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  40808c:	462b      	mov	r3, r5

0040808e <.LVL8>:
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40808e:	ea42 0104 	orr.w	r1, r2, r4
  408092:	f8c0 1260 	str.w	r1, [r0, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  408096:	3b01      	subs	r3, #1
  408098:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  40809c:	f1b3 3fff 	cmp.w	r3, #4294967295
  4080a0:	d1f5      	bne.n	40808e <.LVL8>
    } while(sets-- != 0U);
  4080a2:	3e01      	subs	r6, #1
  4080a4:	3f20      	subs	r7, #32
  4080a6:	f1b6 3fff 	cmp.w	r6, #4294967295
  4080aa:	d1ec      	bne.n	408086 <.LVL6+0xc>

004080ac <.LBB185>:
  4080ac:	f3bf 8f4f 	dsb	sy

004080b0 <.LBE185>:
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  4080b0:	4a0a      	ldr	r2, [pc, #40]	; (4080dc <.LVL15+0xa>)
  4080b2:	6953      	ldr	r3, [r2, #20]

004080b4 <.LVL11>:
  4080b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4080b8:	6153      	str	r3, [r2, #20]

004080ba <.LBB187>:
  4080ba:	f3bf 8f4f 	dsb	sy

004080be <.LBB189>:
  __ASM volatile ("isb 0xF":::"memory");
  4080be:	f3bf 8f6f 	isb	sy

004080c2 <.LBE180>:

    /* Enable Data Cache    */
    DCache_Enable();

    /* Call the optional application-provided _on_bootstrap() function. */
    if (_on_bootstrap)
  4080c2:	4b09      	ldr	r3, [pc, #36]	; (4080e8 <.LVL15+0x16>)
  4080c4:	b103      	cbz	r3, 4080c8 <.LVL13>
    {
        _on_bootstrap();
  4080c6:	4798      	blx	r3

004080c8 <.LVL13>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_bootstrap)
  4080c8:	4b08      	ldr	r3, [pc, #32]	; (4080ec <.LVL15+0x1a>)
  4080ca:	b103      	cbz	r3, 4080ce <.LVL14>
    {
        __xc32_on_bootstrap();
  4080cc:	4798      	blx	r3

004080ce <.LVL14>:
    }

    /* Branch to application's main function */
    main();
  4080ce:	f002 fd79 	bl	40abc4 <main>

004080d2 <.LVL15>:
  4080d2:	e7fe      	b.n	4080d2 <.LVL15>
	...
  4080dc:	e000ed00 	.word	0xe000ed00
  4080e0:	00400000 	.word	0x00400000
  4080e4:	00409fe9 	.word	0x00409fe9
	...

Disassembly of section .text.__mdiff%48:

004080f0 <__mdiff>:
  4080f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

004080f4 <.LBB30>:
  4080f4:	690f      	ldr	r7, [r1, #16]

004080f6 <.LBE30>:
  4080f6:	460e      	mov	r6, r1

004080f8 <.LBB35>:
  4080f8:	6911      	ldr	r1, [r2, #16]

004080fa <.LVL227>:
  4080fa:	1a7f      	subs	r7, r7, r1

004080fc <.LVL228>:
  4080fc:	2f00      	cmp	r7, #0

004080fe <.LBE35>:
  4080fe:	4690      	mov	r8, r2

00408100 <.LBB36>:
  408100:	d117      	bne.n	408132 <.LVL243>
  408102:	0089      	lsls	r1, r1, #2
  408104:	f106 0514 	add.w	r5, r6, #20
  408108:	f102 0e14 	add.w	lr, r2, #20
  40810c:	186b      	adds	r3, r5, r1
  40810e:	4471      	add	r1, lr
  408110:	e001      	b.n	408116 <.LVL233+0x4>

00408112 <.LVL233>:
  408112:	429d      	cmp	r5, r3
  408114:	d25c      	bcs.n	4081d0 <.LVL274>
  408116:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40811a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40811e:	42a2      	cmp	r2, r4
  408120:	d0f7      	beq.n	408112 <.LVL233>
  408122:	d25e      	bcs.n	4081e2 <.LBB37>
  408124:	4633      	mov	r3, r6
  408126:	462c      	mov	r4, r5

00408128 <.LVL238>:
  408128:	4646      	mov	r6, r8

0040812a <.LVL239>:
  40812a:	4675      	mov	r5, lr
  40812c:	4698      	mov	r8, r3

0040812e <.LBE36>:
  40812e:	2701      	movs	r7, #1
  408130:	e005      	b.n	40813e <.LVL245>

00408132 <.LVL243>:
  408132:	db58      	blt.n	4081e6 <.LBE37>

00408134 <.LVL244>:
  408134:	f106 0514 	add.w	r5, r6, #20
  408138:	f108 0414 	add.w	r4, r8, #20
  40813c:	2700      	movs	r7, #0

0040813e <.LVL245>:
  40813e:	6871      	ldr	r1, [r6, #4]
  408140:	f001 ffc6 	bl	40a0d0 <.LFE2>

00408144 <.LVL246>:
  408144:	f8d8 3010 	ldr.w	r3, [r8, #16]
  408148:	6936      	ldr	r6, [r6, #16]

0040814a <.LVL247>:
  40814a:	60c7      	str	r7, [r0, #12]
  40814c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  408150:	46a6      	mov	lr, r4
  408152:	eb05 0786 	add.w	r7, r5, r6, lsl #2

00408156 <.LVL248>:
  408156:	f100 0414 	add.w	r4, r0, #20

0040815a <.LVL249>:
  40815a:	2300      	movs	r3, #0

0040815c <.LVL250>:
  40815c:	f85e 1b04 	ldr.w	r1, [lr], #4
  408160:	f855 8b04 	ldr.w	r8, [r5], #4

00408164 <.LVL251>:
  408164:	b28a      	uxth	r2, r1
  408166:	fa13 f388 	uxtah	r3, r3, r8

0040816a <.LVL252>:
  40816a:	0c09      	lsrs	r1, r1, #16
  40816c:	1a9a      	subs	r2, r3, r2

0040816e <.LVL253>:
  40816e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  408172:	eb03 4322 	add.w	r3, r3, r2, asr #16

00408176 <.LVL254>:
  408176:	b292      	uxth	r2, r2

00408178 <.LVL255>:
  408178:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40817c:	45f4      	cmp	ip, lr
  40817e:	f844 2b04 	str.w	r2, [r4], #4

00408182 <.LVL256>:
  408182:	ea4f 4323 	mov.w	r3, r3, asr #16

00408186 <.LVL257>:
  408186:	d8e9      	bhi.n	40815c <.LVL250>

00408188 <.LVL258>:
  408188:	42af      	cmp	r7, r5
  40818a:	d917      	bls.n	4081bc <.LVL269>
  40818c:	46a4      	mov	ip, r4

0040818e <.LVL259>:
  40818e:	46ae      	mov	lr, r5

00408190 <.LVL260>:
  408190:	f85e 2b04 	ldr.w	r2, [lr], #4

00408194 <.LVL261>:
  408194:	fa13 f382 	uxtah	r3, r3, r2

00408198 <.LVL262>:
  408198:	1419      	asrs	r1, r3, #16

0040819a <.LVL263>:
  40819a:	eb01 4112 	add.w	r1, r1, r2, lsr #16

0040819e <.LVL264>:
  40819e:	b29b      	uxth	r3, r3

004081a0 <.LVL265>:
  4081a0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4081a4:	4577      	cmp	r7, lr
  4081a6:	f84c 2b04 	str.w	r2, [ip], #4

004081aa <.LVL266>:
  4081aa:	ea4f 4321 	mov.w	r3, r1, asr #16

004081ae <.LVL267>:
  4081ae:	d8ef      	bhi.n	408190 <.LVL260>
  4081b0:	43ed      	mvns	r5, r5
  4081b2:	442f      	add	r7, r5

004081b4 <.LVL268>:
  4081b4:	f027 0703 	bic.w	r7, r7, #3
  4081b8:	3704      	adds	r7, #4
  4081ba:	443c      	add	r4, r7

004081bc <.LVL269>:
  4081bc:	3c04      	subs	r4, #4
  4081be:	b922      	cbnz	r2, 4081ca <.LVL273+0x4>

004081c0 <.LVL271>:
  4081c0:	f854 3d04 	ldr.w	r3, [r4, #-4]!

004081c4 <.LVL272>:
  4081c4:	3e01      	subs	r6, #1

004081c6 <.LVL273>:
  4081c6:	2b00      	cmp	r3, #0
  4081c8:	d0fa      	beq.n	4081c0 <.LVL271>
  4081ca:	6106      	str	r6, [r0, #16]
  4081cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004081d0 <.LVL274>:
  4081d0:	2100      	movs	r1, #0
  4081d2:	f001 ff7d 	bl	40a0d0 <.LFE2>

004081d6 <.LVL275>:
  4081d6:	2201      	movs	r2, #1
  4081d8:	2300      	movs	r3, #0
  4081da:	6102      	str	r2, [r0, #16]
  4081dc:	6143      	str	r3, [r0, #20]
  4081de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004081e2 <.LBB37>:
  4081e2:	4674      	mov	r4, lr
  4081e4:	e7ab      	b.n	40813e <.LVL245>

004081e6 <.LBE37>:
  4081e6:	4633      	mov	r3, r6
  4081e8:	f106 0414 	add.w	r4, r6, #20
  4081ec:	f102 0514 	add.w	r5, r2, #20
  4081f0:	4616      	mov	r6, r2

004081f2 <.LVL278>:
  4081f2:	2701      	movs	r7, #1
  4081f4:	4698      	mov	r8, r3
  4081f6:	e7a2      	b.n	40813e <.LVL245>

Disassembly of section .rodata%49:

004081f8 <.LANCHOR1>:
  4081f8:	30257325 	.word	0x30257325
  4081fc:	00005832 	.word	0x00005832
  408200:	0d0a7325 	.word	0x0d0a7325
  408204:	2035444d 	.word	0x2035444d
  408208:	6d6f7266 	.word	0x6d6f7266
  40820c:	65656620 	.word	0x65656620
  408210:	20203a64 	.word	0x20203a64
  408214:	00202020 	.word	0x00202020
  408218:	20097325 	.word	0x20097325
  40821c:	6b6f6f74 	.word	0x6b6f6f74
  408220:	20642520 	.word	0x20642520
  408224:	636f6c63 	.word	0x636f6c63
  408228:	7963206b 	.word	0x7963206b
  40822c:	73656c63 	.word	0x73656c63
  408230:	00000000 	.word	0x00000000
  408234:	0d0a7325 	.word	0x0d0a7325
  408238:	20414853 	.word	0x20414853
  40823c:	6d6f7266 	.word	0x6d6f7266
  408240:	65656620 	.word	0x65656620
  408244:	20203a64 	.word	0x20203a64
  408248:	00202020 	.word	0x00202020
  40824c:	0d0a7325 	.word	0x0d0a7325
  408250:	32414853 	.word	0x32414853
  408254:	66203635 	.word	0x66203635
  408258:	206d6f72 	.word	0x206d6f72
  40825c:	64656566 	.word	0x64656566
  408260:	0020203a 	.word	0x0020203a
  408264:	0d0a7325 	.word	0x0d0a7325
  408268:	33414853 	.word	0x33414853
  40826c:	66203438 	.word	0x66203438
  408270:	206d6f72 	.word	0x206d6f72
  408274:	64656566 	.word	0x64656566
  408278:	0020203a 	.word	0x0020203a
  40827c:	0d0a7325 	.word	0x0d0a7325
  408280:	35414853 	.word	0x35414853
  408284:	66203231 	.word	0x66203231
  408288:	206d6f72 	.word	0x206d6f72
  40828c:	64656566 	.word	0x64656566
  408290:	0020203a 	.word	0x0020203a
  408294:	0d0a7325 	.word	0x0d0a7325
  408298:	65742041 	.word	0x65742041
  40829c:	66207473 	.word	0x66207473
  4082a0:	656c6961 	.word	0x656c6961
  4082a4:	00002e64 	.word	0x00002e64
  4082a8:	0d0a7325 	.word	0x0d0a7325
  4082ac:	206c6c41 	.word	0x206c6c41
  4082b0:	74736574 	.word	0x74736574
  4082b4:	61702073 	.word	0x61702073
  4082b8:	64657373 	.word	0x64657373
  4082bc:	0000002e 	.word	0x0000002e
  4082c0:	41200a0d 	.word	0x41200a0d
  4082c4:	696c7070 	.word	0x696c7070
  4082c8:	69746163 	.word	0x69746163
  4082cc:	63206e6f 	.word	0x63206e6f
  4082d0:	74616572 	.word	0x74616572
  4082d4:	4f206465 	.word	0x4f206465
  4082d8:	32207463 	.word	0x32207463
  4082dc:	30322035 	.word	0x30322035
  4082e0:	31203831 	.word	0x31203831
  4082e4:	32303a35 	.word	0x32303a35
  4082e8:	2030343a 	.word	0x2030343a
  4082ec:	74696e69 	.word	0x74696e69
  4082f0:	696c6169 	.word	0x696c6169
  4082f4:	2164657a 	.word	0x2164657a
  4082f8:	0a0d      	.short	0x0a0d
	...

Disassembly of section .rodata._ctype_%50:

004082fc <_ctype_>:
  4082fc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40830c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40831c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40832c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40833c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40834c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40835c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40836c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40837c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
  4083fc:	0000 bf00                                   ....

Disassembly of section .text.__ssprint_r%51:

00408400 <__ssprint_r>:
  408400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00408404 <.LCFI0>:
  408404:	6893      	ldr	r3, [r2, #8]
  408406:	b083      	sub	sp, #12

00408408 <.LCFI1>:
  408408:	4690      	mov	r8, r2

0040840a <.LVL1>:
  40840a:	2b00      	cmp	r3, #0
  40840c:	d070      	beq.n	4084f0 <.LCFI3>
  40840e:	4682      	mov	sl, r0
  408410:	460c      	mov	r4, r1
  408412:	6817      	ldr	r7, [r2, #0]
  408414:	688d      	ldr	r5, [r1, #8]
  408416:	6808      	ldr	r0, [r1, #0]

00408418 <.LVL2>:
  408418:	e042      	b.n	4084a0 <.LVL16>

0040841a <.LVL3>:
  40841a:	89a3      	ldrh	r3, [r4, #12]
  40841c:	f413 6f90 	tst.w	r3, #1152	; 0x480
  408420:	d02e      	beq.n	408480 <.LBE2>

00408422 <.LBB2>:
  408422:	6965      	ldr	r5, [r4, #20]
  408424:	6921      	ldr	r1, [r4, #16]
  408426:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  40842a:	eba0 0b01 	sub.w	fp, r0, r1

0040842e <.LVL4>:
  40842e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  408432:	f10b 0001 	add.w	r0, fp, #1
  408436:	106d      	asrs	r5, r5, #1

00408438 <.LVL5>:
  408438:	4430      	add	r0, r6
  40843a:	42a8      	cmp	r0, r5
  40843c:	462a      	mov	r2, r5
  40843e:	bf84      	itt	hi
  408440:	4605      	movhi	r5, r0
  408442:	462a      	movhi	r2, r5
  408444:	055b      	lsls	r3, r3, #21
  408446:	d538      	bpl.n	4084ba <.LBB3>
  408448:	4611      	mov	r1, r2
  40844a:	4650      	mov	r0, sl
  40844c:	f7fd ff32 	bl	4062b4 <.LFE14>

00408450 <.LVL7>:
  408450:	2800      	cmp	r0, #0
  408452:	d03c      	beq.n	4084ce <.L10>
  408454:	465a      	mov	r2, fp
  408456:	6921      	ldr	r1, [r4, #16]
  408458:	9001      	str	r0, [sp, #4]
  40845a:	f7ff fb6b 	bl	407b34 <.LFE173>

0040845e <.LVL8>:
  40845e:	89a2      	ldrh	r2, [r4, #12]
  408460:	9b01      	ldr	r3, [sp, #4]
  408462:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  408466:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40846a:	81a2      	strh	r2, [r4, #12]

0040846c <.LVL9>:
  40846c:	eba5 020b 	sub.w	r2, r5, fp
  408470:	eb03 000b 	add.w	r0, r3, fp
  408474:	6165      	str	r5, [r4, #20]
  408476:	6123      	str	r3, [r4, #16]
  408478:	6020      	str	r0, [r4, #0]
  40847a:	60a2      	str	r2, [r4, #8]
  40847c:	4635      	mov	r5, r6

0040847e <.LVL10>:
  40847e:	46b3      	mov	fp, r6

00408480 <.LBE2>:
  408480:	465a      	mov	r2, fp
  408482:	4649      	mov	r1, r9
  408484:	f000 fad4 	bl	408a30 <.LFE164>

00408488 <.LVL12>:
  408488:	f8d8 3008 	ldr.w	r3, [r8, #8]
  40848c:	68a2      	ldr	r2, [r4, #8]
  40848e:	6820      	ldr	r0, [r4, #0]
  408490:	1b55      	subs	r5, r2, r5

00408492 <.LVL13>:
  408492:	4458      	add	r0, fp
  408494:	1b9e      	subs	r6, r3, r6

00408496 <.LVL14>:
  408496:	60a5      	str	r5, [r4, #8]
  408498:	6020      	str	r0, [r4, #0]

0040849a <.LVL15>:
  40849a:	f8c8 6008 	str.w	r6, [r8, #8]
  40849e:	b33e      	cbz	r6, 4084f0 <.LCFI3>

004084a0 <.LVL16>:
  4084a0:	687e      	ldr	r6, [r7, #4]

004084a2 <.LVL17>:
  4084a2:	463b      	mov	r3, r7
  4084a4:	3708      	adds	r7, #8

004084a6 <.LVL18>:
  4084a6:	2e00      	cmp	r6, #0
  4084a8:	d0fa      	beq.n	4084a0 <.LVL16>
  4084aa:	42ae      	cmp	r6, r5
  4084ac:	f8d3 9000 	ldr.w	r9, [r3]
  4084b0:	46ab      	mov	fp, r5
  4084b2:	d2b2      	bcs.n	40841a <.LVL3>
  4084b4:	4635      	mov	r5, r6

004084b6 <.LVL19>:
  4084b6:	46b3      	mov	fp, r6
  4084b8:	e7e2      	b.n	408480 <.LBE2>

004084ba <.LBB3>:
  4084ba:	4650      	mov	r0, sl
  4084bc:	f7fe f9a2 	bl	406804 <.LFE2>

004084c0 <.LVL21>:
  4084c0:	4603      	mov	r3, r0
  4084c2:	2800      	cmp	r0, #0
  4084c4:	d1d2      	bne.n	40846c <.LVL9>
  4084c6:	6921      	ldr	r1, [r4, #16]
  4084c8:	4650      	mov	r0, sl

004084ca <.LVL22>:
  4084ca:	f7ff f9a3 	bl	407814 <.LFE174>

004084ce <.L10>:
  4084ce:	230c      	movs	r3, #12
  4084d0:	f8ca 3000 	str.w	r3, [sl]

004084d4 <.LBE3>:
  4084d4:	89a3      	ldrh	r3, [r4, #12]
  4084d6:	2200      	movs	r2, #0
  4084d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4084dc:	f04f 30ff 	mov.w	r0, #4294967295
  4084e0:	81a3      	strh	r3, [r4, #12]
  4084e2:	f8c8 2008 	str.w	r2, [r8, #8]
  4084e6:	f8c8 2004 	str.w	r2, [r8, #4]
  4084ea:	b003      	add	sp, #12

004084ec <.LCFI2>:
  4084ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004084f0 <.LCFI3>:
  4084f0:	2000      	movs	r0, #0
  4084f2:	f8c8 0004 	str.w	r0, [r8, #4]
  4084f6:	b003      	add	sp, #12

004084f8 <.LCFI4>:
  4084f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text.wc_Sha512Update%52:

004084fc <wc_Sha512Update>:
{
  4084fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

00408500 <.LCFI6>:
    if (sha512 == NULL || (data == NULL && len > 0)) {
  408500:	2800      	cmp	r0, #0
  408502:	d065      	beq.n	4085d0 <.LVL43>
  408504:	4689      	mov	r9, r1
  408506:	4615      	mov	r5, r2
  408508:	4680      	mov	r8, r0
  40850a:	b909      	cbnz	r1, 408510 <.LBB700>
  40850c:	2a00      	cmp	r2, #0
  40850e:	d162      	bne.n	4085d6 <.LVL43+0x6>

00408510 <.LBB700>:
    byte* local = (byte*)sha512->buffer;
  408510:	f108 0b58 	add.w	fp, r8, #88	; 0x58

00408514 <.LVL25>:
    if (sha512->buffLen >= SHA512_BLOCK_SIZE)
  408514:	f8d8 3000 	ldr.w	r3, [r8]
  408518:	2b7f      	cmp	r3, #127	; 0x7f
  40851a:	d85f      	bhi.n	4085dc <.LBB719>
    while (len) {
  40851c:	2d00      	cmp	r5, #0
  40851e:	d060      	beq.n	4085e2 <.LBB719+0x6>
  408520:	f108 0ad0 	add.w	sl, r8, #208	; 0xd0
  408524:	e004      	b.n	408530 <.LBB717>

00408526 <.LBB702>:
            sha512->buffLen = 0;
  408526:	2300      	movs	r3, #0
  408528:	f8c8 3000 	str.w	r3, [r8]

0040852c <.LBE702>:
    while (len) {
  40852c:	2d00      	cmp	r5, #0
  40852e:	d04b      	beq.n	4085c8 <.LBE715>

00408530 <.LBB717>:
        word32 add = min(len, SHA512_BLOCK_SIZE - sha512->buffLen);
  408530:	f8d8 0000 	ldr.w	r0, [r8]

00408534 <.LVL28>:
  408534:	f1c0 0480 	rsb	r4, r0, #128	; 0x80

00408538 <.LBB703>:
    #if defined(HAVE_FIPS) && !defined(min) /* so ifdef check passes */
        #define min min
    #endif
    STATIC INLINE word32 min(word32 a, word32 b)
    {
        return a > b ? b : a;
  408538:	42ac      	cmp	r4, r5
  40853a:	bf28      	it	cs
  40853c:	462c      	movcs	r4, r5

0040853e <.LBE703>:
        XMEMCPY(&local[sha512->buffLen], data, add);
  40853e:	4622      	mov	r2, r4
  408540:	4649      	mov	r1, r9
  408542:	4458      	add	r0, fp
  408544:	f7ff faf6 	bl	407b34 <.LFE173>

00408548 <.LVL31>:
        sha512->buffLen += add;
  408548:	f8d8 3000 	ldr.w	r3, [r8]
  40854c:	4423      	add	r3, r4
  40854e:	f8c8 3000 	str.w	r3, [r8]
        data            += add;
  408552:	44a1      	add	r9, r4
        len             -= add;
  408554:	1b2d      	subs	r5, r5, r4
        if (sha512->buffLen == SHA512_BLOCK_SIZE) {
  408556:	2b80      	cmp	r3, #128	; 0x80
  408558:	d1e8      	bne.n	40852c <.LBE702>
  40855a:	f108 0250 	add.w	r2, r8, #80	; 0x50

0040855e <.LBB705>:
        out[i] = ByteReverseWord64(in[i]);
  40855e:	6893      	ldr	r3, [r2, #8]
  408560:	68d1      	ldr	r1, [r2, #12]

00408562 <.LBB707>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408562:	0a18      	lsrs	r0, r3, #8
  408564:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  408568:	021b      	lsls	r3, r3, #8
  40856a:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  40856e:	4303      	orrs	r3, r0

00408570 <.LBE709>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408570:	ea4f 4733 	mov.w	r7, r3, ror #16
  408574:	2600      	movs	r6, #0

00408576 <.LBB711>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408576:	0a0b      	lsrs	r3, r1, #8
  408578:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  40857c:	0209      	lsls	r1, r1, #8
  40857e:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  408582:	430b      	orrs	r3, r1

00408584 <.LBB713>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408584:	ea4f 4333 	mov.w	r3, r3, ror #16

00408588 <.LBE711>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408588:	ea46 0003 	orr.w	r0, r6, r3
  40858c:	4639      	mov	r1, r7

0040858e <.LBE707>:
        out[i] = ByteReverseWord64(in[i]);
  40858e:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  408592:	4592      	cmp	sl, r2
  408594:	d1e3      	bne.n	40855e <.LBB705>

00408596 <.LBE705>:
            ret = Transform(sha512);
  408596:	4640      	mov	r0, r8
  408598:	f7f7 fdfc 	bl	400194 <_etext>

0040859c <.LVL35>:
            if (ret != 0)
  40859c:	4603      	mov	r3, r0
  40859e:	b9a0      	cbnz	r0, 4085ca <.LBE700>

004085a0 <.LBB715>:
    word64 tmp = sha512->loLen;
  4085a0:	e9d8 2302 	ldrd	r2, r3, [r8, #8]

004085a4 <.LVL37>:
    if ( (sha512->loLen += len) < tmp)
  4085a4:	f112 0080 	adds.w	r0, r2, #128	; 0x80

004085a8 <.LVL38>:
  4085a8:	f143 0100 	adc.w	r1, r3, #0
  4085ac:	e9c8 0102 	strd	r0, r1, [r8, #8]
  4085b0:	4299      	cmp	r1, r3
  4085b2:	bf08      	it	eq
  4085b4:	4290      	cmpeq	r0, r2
  4085b6:	d2b6      	bcs.n	408526 <.LBB702>
        sha512->hiLen++;                       /* carry low to high */
  4085b8:	e9d8 2304 	ldrd	r2, r3, [r8, #16]

004085bc <.LVL39>:
  4085bc:	3201      	adds	r2, #1
  4085be:	f143 0300 	adc.w	r3, r3, #0

004085c2 <.LVL40>:
  4085c2:	e9c8 2304 	strd	r2, r3, [r8, #16]
  4085c6:	e7ae      	b.n	408526 <.LBB702>

004085c8 <.LBE715>:
    while (len) {
  4085c8:	2300      	movs	r3, #0

004085ca <.LBE700>:
}
  4085ca:	4618      	mov	r0, r3
  4085cc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

004085d0 <.LVL43>:
        return BAD_FUNC_ARG;
  4085d0:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  4085d4:	e7f9      	b.n	4085ca <.LBE700>
  4085d6:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  4085da:	e7f6      	b.n	4085ca <.LBE700>

004085dc <.LBB719>:
        return BUFFER_E;
  4085dc:	f06f 0383 	mvn.w	r3, #131	; 0x83
  4085e0:	e7f3      	b.n	4085ca <.LBE700>
    while (len) {
  4085e2:	2300      	movs	r3, #0
  4085e4:	e7f1      	b.n	4085ca <.LBE700>

Disassembly of section .text.wc_Sha384Update%53:

004085e6 <wc_Sha384Update>:
{
  4085e6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

004085ea <.LCFI13>:
    if (sha384 == NULL || (data == NULL && len > 0)) {
  4085ea:	2800      	cmp	r0, #0
  4085ec:	d065      	beq.n	4086ba <.LVL102>
  4085ee:	4689      	mov	r9, r1
  4085f0:	4615      	mov	r5, r2
  4085f2:	4680      	mov	r8, r0
  4085f4:	b909      	cbnz	r1, 4085fa <.LBB821>
  4085f6:	2a00      	cmp	r2, #0
  4085f8:	d162      	bne.n	4086c0 <.LVL102+0x6>

004085fa <.LBB821>:
    byte* local = (byte*)sha512->buffer;
  4085fa:	f108 0b58 	add.w	fp, r8, #88	; 0x58

004085fe <.LVL84>:
    if (sha512->buffLen >= SHA512_BLOCK_SIZE)
  4085fe:	f8d8 3000 	ldr.w	r3, [r8]
  408602:	2b7f      	cmp	r3, #127	; 0x7f
  408604:	d85f      	bhi.n	4086c6 <.LBB840>
    while (len) {
  408606:	2d00      	cmp	r5, #0
  408608:	d060      	beq.n	4086cc <.LBB840+0x6>
  40860a:	f108 0ad0 	add.w	sl, r8, #208	; 0xd0
  40860e:	e004      	b.n	40861a <.LBB838>

00408610 <.LBB823>:
            sha512->buffLen = 0;
  408610:	2300      	movs	r3, #0
  408612:	f8c8 3000 	str.w	r3, [r8]

00408616 <.LBE823>:
    while (len) {
  408616:	2d00      	cmp	r5, #0
  408618:	d04b      	beq.n	4086b2 <.LBE836>

0040861a <.LBB838>:
        word32 add = min(len, SHA512_BLOCK_SIZE - sha512->buffLen);
  40861a:	f8d8 0000 	ldr.w	r0, [r8]

0040861e <.LVL87>:
  40861e:	f1c0 0480 	rsb	r4, r0, #128	; 0x80

00408622 <.LBB824>:
        return a > b ? b : a;
  408622:	42ac      	cmp	r4, r5
  408624:	bf28      	it	cs
  408626:	462c      	movcs	r4, r5

00408628 <.LBE824>:
        XMEMCPY(&local[sha512->buffLen], data, add);
  408628:	4622      	mov	r2, r4
  40862a:	4649      	mov	r1, r9
  40862c:	4458      	add	r0, fp
  40862e:	f7ff fa81 	bl	407b34 <.LFE173>

00408632 <.LVL90>:
        sha512->buffLen += add;
  408632:	f8d8 3000 	ldr.w	r3, [r8]
  408636:	4423      	add	r3, r4
  408638:	f8c8 3000 	str.w	r3, [r8]
        data            += add;
  40863c:	44a1      	add	r9, r4
        len             -= add;
  40863e:	1b2d      	subs	r5, r5, r4
        if (sha512->buffLen == SHA512_BLOCK_SIZE) {
  408640:	2b80      	cmp	r3, #128	; 0x80
  408642:	d1e8      	bne.n	408616 <.LBE823>
  408644:	f108 0250 	add.w	r2, r8, #80	; 0x50

00408648 <.LBB826>:
        out[i] = ByteReverseWord64(in[i]);
  408648:	6893      	ldr	r3, [r2, #8]
  40864a:	68d1      	ldr	r1, [r2, #12]

0040864c <.LBB828>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40864c:	0a18      	lsrs	r0, r3, #8
  40864e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  408652:	021b      	lsls	r3, r3, #8
  408654:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  408658:	4303      	orrs	r3, r0

0040865a <.LBE830>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  40865a:	ea4f 4733 	mov.w	r7, r3, ror #16
  40865e:	2600      	movs	r6, #0

00408660 <.LBB832>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408660:	0a0b      	lsrs	r3, r1, #8
  408662:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408666:	0209      	lsls	r1, r1, #8
  408668:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40866c:	430b      	orrs	r3, r1

0040866e <.LBB834>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40866e:	ea4f 4333 	mov.w	r3, r3, ror #16

00408672 <.LBE832>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408672:	ea46 0003 	orr.w	r0, r6, r3
  408676:	4639      	mov	r1, r7

00408678 <.LBE828>:
        out[i] = ByteReverseWord64(in[i]);
  408678:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  40867c:	4592      	cmp	sl, r2
  40867e:	d1e3      	bne.n	408648 <.LBB826>

00408680 <.LBE826>:
            ret = Transform(sha512);
  408680:	4640      	mov	r0, r8
  408682:	f7f7 fd87 	bl	400194 <_etext>

00408686 <.LVL94>:
            if (ret != 0)
  408686:	4603      	mov	r3, r0
  408688:	b9a0      	cbnz	r0, 4086b4 <.LBE821>

0040868a <.LBB836>:
    word64 tmp = sha512->loLen;
  40868a:	e9d8 2302 	ldrd	r2, r3, [r8, #8]

0040868e <.LVL96>:
    if ( (sha512->loLen += len) < tmp)
  40868e:	f112 0080 	adds.w	r0, r2, #128	; 0x80

00408692 <.LVL97>:
  408692:	f143 0100 	adc.w	r1, r3, #0
  408696:	e9c8 0102 	strd	r0, r1, [r8, #8]
  40869a:	4299      	cmp	r1, r3
  40869c:	bf08      	it	eq
  40869e:	4290      	cmpeq	r0, r2
  4086a0:	d2b6      	bcs.n	408610 <.LBB823>
        sha512->hiLen++;                       /* carry low to high */
  4086a2:	e9d8 2304 	ldrd	r2, r3, [r8, #16]

004086a6 <.LVL98>:
  4086a6:	3201      	adds	r2, #1
  4086a8:	f143 0300 	adc.w	r3, r3, #0

004086ac <.LVL99>:
  4086ac:	e9c8 2304 	strd	r2, r3, [r8, #16]
  4086b0:	e7ae      	b.n	408610 <.LBB823>

004086b2 <.LBE836>:
    while (len) {
  4086b2:	2300      	movs	r3, #0

004086b4 <.LBE821>:
}
  4086b4:	4618      	mov	r0, r3
  4086b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

004086ba <.LVL102>:
        return BAD_FUNC_ARG;
  4086ba:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  4086be:	e7f9      	b.n	4086b4 <.LBE821>
  4086c0:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  4086c4:	e7f6      	b.n	4086b4 <.LBE821>

004086c6 <.LBB840>:
        return BUFFER_E;
  4086c6:	f06f 0383 	mvn.w	r3, #131	; 0x83
  4086ca:	e7f3      	b.n	4086b4 <.LBE821>
    while (len) {
  4086cc:	2300      	movs	r3, #0
  4086ce:	e7f1      	b.n	4086b4 <.LBE821>

Disassembly of section .text.Sha256Process%54:

004086d0 <Sha256Process>:



/* length is in bytes */
static int32_t Sha256Process(Sha256* sha256, const uint8_t *input, word32 length)
{
  4086d0:	b410      	push	{r4}

004086d2 <.LCFI0>:

    ICM_REGS->ICM_CTRL = ICM_CTRL_SWRST(1);
  4086d2:	2404      	movs	r4, #4
  4086d4:	4b33      	ldr	r3, [pc, #204]	; (4087a4 <.LCFI1+0x2>)
  4086d6:	605c      	str	r4, [r3, #4]
    sha256->icm_descriptor.start_addr = (uint32_t)input;
  4086d8:	6001      	str	r1, [r0, #0]

    /* Transfer size = (tran_size + 1) * 512bits */
    sha256->icm_descriptor.tran_size =  (length >> 6) - 1;
  4086da:	0994      	lsrs	r4, r2, #6
  4086dc:	3c01      	subs	r4, #1
  4086de:	6084      	str	r4, [r0, #8]

004086e0 <.LBB50>:
  __ASM volatile ("dsb 0xF":::"memory");
  4086e0:	f3bf 8f4f 	dsb	sy

004086e4 <.LBE52>:
     int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */

    __DSB();

    while (op_size > 0) {
      SCB->DCCMVAC = op_addr;
  4086e4:	4c30      	ldr	r4, [pc, #192]	; (4087a8 <.LCFI1+0x6>)
  4086e6:	f8c4 0268 	str.w	r0, [r4, #616]	; 0x268

004086ea <.LBB54>:
  4086ea:	f3bf 8f4f 	dsb	sy

004086ee <.LBB56>:
  __ASM volatile ("isb 0xF":::"memory");
  4086ee:	f3bf 8f6f 	isb	sy

004086f2 <.LBB58>:
  __ASM volatile ("dsb 0xF":::"memory");
  4086f2:	f3bf 8f4f 	dsb	sy

004086f6 <.LBE60>:
    while (op_size > 0) {
  4086f6:	2a00      	cmp	r2, #0
  4086f8:	dd0b      	ble.n	408712 <.LBB62>
  4086fa:	460b      	mov	r3, r1
  4086fc:	3a01      	subs	r2, #1

004086fe <.LVL4>:
  4086fe:	f022 021f 	bic.w	r2, r2, #31

00408702 <.LVL5>:
  408702:	3220      	adds	r2, #32
  408704:	4411      	add	r1, r2

00408706 <.LVL6>:
      SCB->DCCMVAC = op_addr;
  408706:	4622      	mov	r2, r4

00408708 <.LVL7>:
  408708:	f8c2 3268 	str.w	r3, [r2, #616]	; 0x268
      op_addr += (uint32_t)linesize;
  40870c:	3320      	adds	r3, #32
    while (op_size > 0) {
  40870e:	4299      	cmp	r1, r3
  408710:	d1fa      	bne.n	408708 <.LVL7>

00408712 <.LBB62>:
  408712:	f3bf 8f4f 	dsb	sy

00408716 <.LBB64>:
  __ASM volatile ("isb 0xF":::"memory");
  408716:	f3bf 8f6f 	isb	sy

0040871a <.LBE58>:
    
    SCB_CleanDCache_by_Addr((uint32_t *)(&(sha256->icm_descriptor)), sizeof(struct icm_descriptor));
    SCB_CleanDCache_by_Addr((uint32_t *)input, length);
    SCB_CleanInvalidateDCache_by_Addr((uint32_t *)&(sha256->digest), SHA256_DIGEST_SIZE);
  40871a:	f100 0180 	add.w	r1, r0, #128	; 0x80

0040871e <.LBB66>:
  __ASM volatile ("dsb 0xF":::"memory");
  40871e:	f3bf 8f4f 	dsb	sy

00408722 <.LBE68>:
     int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */

    __DSB();

    while (op_size > 0) {
      SCB->DCCIMVAC = op_addr;
  408722:	4b21      	ldr	r3, [pc, #132]	; (4087a8 <.LCFI1+0x6>)
  408724:	f8c3 1270 	str.w	r1, [r3, #624]	; 0x270

00408728 <.LBB70>:
  408728:	f3bf 8f4f 	dsb	sy

0040872c <.LBB72>:
  __ASM volatile ("isb 0xF":::"memory");
  40872c:	f3bf 8f6f 	isb	sy

00408730 <.LBE66>:


    /* ICM can set up FIPS default starting digest */
    ICM_REGS->ICM_DSCR = (uint32_t)&sha256->icm_descriptor;
  408730:	4b1c      	ldr	r3, [pc, #112]	; (4087a4 <.LCFI1+0x2>)
  408732:	6318      	str	r0, [r3, #48]	; 0x30
    ICM_REGS->ICM_CFG = ICM_CFG_SLBDIS(1) 
  408734:	f243 0204 	movw	r2, #12292	; 0x3004
  408738:	601a      	str	r2, [r3, #0]
                 | ICM_CFG_BBC(0)
                 | ICM_CFG_UALGO_SHA256
                 | ICM_CFG_UIHASH_Msk;

    /* MUST BE ALIGNED at 128! */
    ICM_REGS->ICM_HASH = (uint32_t)(&(sha256->digest));
  40873a:	6359      	str	r1, [r3, #52]	; 0x34

    ICM_REGS->ICM_UIHVAL[0] = sha256->digest[0];
  40873c:	f8d0 2080 	ldr.w	r2, [r0, #128]	; 0x80
  408740:	639a      	str	r2, [r3, #56]	; 0x38
    ICM_REGS->ICM_UIHVAL[1] = sha256->digest[1];
  408742:	f8d0 2084 	ldr.w	r2, [r0, #132]	; 0x84
  408746:	63da      	str	r2, [r3, #60]	; 0x3c
    ICM_REGS->ICM_UIHVAL[2] = sha256->digest[2];
  408748:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
  40874c:	641a      	str	r2, [r3, #64]	; 0x40
    ICM_REGS->ICM_UIHVAL[3] = sha256->digest[3];
  40874e:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
  408752:	645a      	str	r2, [r3, #68]	; 0x44
    ICM_REGS->ICM_UIHVAL[4] = sha256->digest[4];
  408754:	f8d0 2090 	ldr.w	r2, [r0, #144]	; 0x90
  408758:	649a      	str	r2, [r3, #72]	; 0x48
    ICM_REGS->ICM_UIHVAL[5] = sha256->digest[5];
  40875a:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
  40875e:	64da      	str	r2, [r3, #76]	; 0x4c
    ICM_REGS->ICM_UIHVAL[6] = sha256->digest[6];
  408760:	f8d0 2098 	ldr.w	r2, [r0, #152]	; 0x98
  408764:	651a      	str	r2, [r3, #80]	; 0x50
    ICM_REGS->ICM_UIHVAL[7] = sha256->digest[7];
  408766:	f8d0 209c 	ldr.w	r2, [r0, #156]	; 0x9c
  40876a:	655a      	str	r2, [r3, #84]	; 0x54

0040876c <.LBB74>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  40876c:	f3bf 8f5f 	dmb	sy

00408770 <.LBE74>:

    /* memory barrier - sync all before enable ICM */
    __DMB();

    ICM_REGS->ICM_IER = ICM_IER_RHC(1);
  408770:	2201      	movs	r2, #1
  408772:	611a      	str	r2, [r3, #16]
    
    /* enable the ICM and wait */
    ICM_REGS->ICM_CTRL = ICM_CTRL_ENABLE(1);
  408774:	605a      	str	r2, [r3, #4]
    while (!(ICM_REGS->ICM_ISR & ICM_ISR_RHC_Msk))
  408776:	461a      	mov	r2, r3
  408778:	69d3      	ldr	r3, [r2, #28]
  40877a:	f013 0f0f 	tst.w	r3, #15
  40877e:	d0fb      	beq.n	408778 <.LBE74+0x8>
    {
        /* wait - when finished digest will be updated */
    }
    
    ICM_REGS->ICM_CTRL = ICM_CTRL_DISABLE(1);
  408780:	4b08      	ldr	r3, [pc, #32]	; (4087a4 <.LCFI1+0x2>)
  408782:	2202      	movs	r2, #2
  408784:	605a      	str	r2, [r3, #4]
    ICM_REGS->ICM_CTRL = ICM_CTRL_SWRST(1);
  408786:	2204      	movs	r2, #4
  408788:	605a      	str	r2, [r3, #4]

0040878a <.LBB76>:
  __ASM volatile ("dsb 0xF":::"memory");
  40878a:	f3bf 8f4f 	dsb	sy

0040878e <.LBE78>:
  40878e:	4b06      	ldr	r3, [pc, #24]	; (4087a8 <.LCFI1+0x6>)
  408790:	f8c3 1270 	str.w	r1, [r3, #624]	; 0x270

00408794 <.LBB80>:
  408794:	f3bf 8f4f 	dsb	sy

00408798 <.LBB82>:
  __ASM volatile ("isb 0xF":::"memory");
  408798:	f3bf 8f6f 	isb	sy

0040879c <.LBE76>:

    SCB_CleanInvalidateDCache_by_Addr((uint32_t *)&(sha256->digest), SHA256_DIGEST_SIZE);
    
    return 0;
}
  40879c:	2000      	movs	r0, #0

0040879e <.LVL17>:
  40879e:	f85d 4b04 	ldr.w	r4, [sp], #4

004087a2 <.LCFI1>:
  4087a2:	4770      	bx	lr
  4087a4:	40048000 	.word	0x40048000
  4087a8:	e000ed00 	.word	0xe000ed00

Disassembly of section .text%55:

004087c0 <strlen>:
  4087c0:	f890 f000 	pld	[r0]
  4087c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4087c8:	f020 0107 	bic.w	r1, r0, #7
  4087cc:	f06f 0c00 	mvn.w	ip, #0
  4087d0:	f010 0407 	ands.w	r4, r0, #7
  4087d4:	f891 f020 	pld	[r1, #32]
  4087d8:	f040 8049 	bne.w	40886e <strlen+0xae>
  4087dc:	f04f 0400 	mov.w	r4, #0
  4087e0:	f06f 0007 	mvn.w	r0, #7
  4087e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4087e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4087ec:	f100 0008 	add.w	r0, r0, #8
  4087f0:	fa82 f24c 	uadd8	r2, r2, ip
  4087f4:	faa4 f28c 	sel	r2, r4, ip
  4087f8:	fa83 f34c 	uadd8	r3, r3, ip
  4087fc:	faa2 f38c 	sel	r3, r2, ip
  408800:	bb4b      	cbnz	r3, 408856 <strlen+0x96>
  408802:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  408806:	fa82 f24c 	uadd8	r2, r2, ip
  40880a:	f100 0008 	add.w	r0, r0, #8
  40880e:	faa4 f28c 	sel	r2, r4, ip
  408812:	fa83 f34c 	uadd8	r3, r3, ip
  408816:	faa2 f38c 	sel	r3, r2, ip
  40881a:	b9e3      	cbnz	r3, 408856 <strlen+0x96>
  40881c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  408820:	fa82 f24c 	uadd8	r2, r2, ip
  408824:	f100 0008 	add.w	r0, r0, #8
  408828:	faa4 f28c 	sel	r2, r4, ip
  40882c:	fa83 f34c 	uadd8	r3, r3, ip
  408830:	faa2 f38c 	sel	r3, r2, ip
  408834:	b97b      	cbnz	r3, 408856 <strlen+0x96>
  408836:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40883a:	f101 0120 	add.w	r1, r1, #32
  40883e:	fa82 f24c 	uadd8	r2, r2, ip
  408842:	f100 0008 	add.w	r0, r0, #8
  408846:	faa4 f28c 	sel	r2, r4, ip
  40884a:	fa83 f34c 	uadd8	r3, r3, ip
  40884e:	faa2 f38c 	sel	r3, r2, ip
  408852:	2b00      	cmp	r3, #0
  408854:	d0c6      	beq.n	4087e4 <strlen+0x24>
  408856:	2a00      	cmp	r2, #0
  408858:	bf04      	itt	eq
  40885a:	3004      	addeq	r0, #4
  40885c:	461a      	moveq	r2, r3
  40885e:	ba12      	rev	r2, r2
  408860:	fab2 f282 	clz	r2, r2
  408864:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  408868:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40886c:	4770      	bx	lr
  40886e:	e9d1 2300 	ldrd	r2, r3, [r1]
  408872:	f004 0503 	and.w	r5, r4, #3
  408876:	f1c4 0000 	rsb	r0, r4, #0
  40887a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40887e:	f014 0f04 	tst.w	r4, #4
  408882:	f891 f040 	pld	[r1, #64]	; 0x40
  408886:	fa0c f505 	lsl.w	r5, ip, r5
  40888a:	ea62 0205 	orn	r2, r2, r5
  40888e:	bf1c      	itt	ne
  408890:	ea63 0305 	ornne	r3, r3, r5
  408894:	4662      	movne	r2, ip
  408896:	f04f 0400 	mov.w	r4, #0
  40889a:	e7a9      	b.n	4087f0 <strlen+0x30>

Disassembly of section .text.SYS_TIME_PLIBCallback%56:

0040889c <SYS_TIME_PLIBCallback>:
        }
    }
}

static void SYS_TIME_PLIBCallback(uintptr_t context)
{
  40889c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

004088a0 <.LCFI23>:
    SYS_TIME_COUNTER_OBJ* counterObj = (SYS_TIME_COUNTER_OBJ *)&gSystemCounterObj;
    SYS_TIME_TIMER_OBJ* tmrActive = counterObj->tmrActive;
  4088a0:	4c2f      	ldr	r4, [pc, #188]	; (408960 <.LVL234>)
  4088a2:	6b25      	ldr	r5, [r4, #48]	; 0x30

004088a4 <.LVL210>:
    uint32_t elapsedCount = 0;
    bool interruptState;

    counterObj->hwTimerCurrentValue = counterObj->timePlib->timerCounterGet();
  4088a4:	6863      	ldr	r3, [r4, #4]
  4088a6:	699b      	ldr	r3, [r3, #24]
  4088a8:	4798      	blx	r3

004088aa <.LVL211>:
  4088aa:	6160      	str	r0, [r4, #20]

    elapsedCount = SYS_TIME_GetElapsedCount(counterObj->hwTimerCurrentValue);
  4088ac:	f002 f8ca 	bl	40aa44 <.LFE172>

004088b0 <.LVL212>:
  4088b0:	4606      	mov	r6, r0

004088b2 <.LVL213>:

    if (tmrActive != NULL)
  4088b2:	2d00      	cmp	r5, #0
  4088b4:	d047      	beq.n	408946 <.LVL228>
    {
        counterObj->interruptNestingCount++;
  4088b6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
  4088ba:	3301      	adds	r3, #1
  4088bc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

004088c0 <.LBB49>:
    SYS_TIME_UpdateTimerList(elapsedCounts);
  4088c0:	f001 ff12 	bl	40a6e8 <.LFE164>

004088c4 <.LBB51>:
    SYS_TIME_TIMER_OBJ* tmrActive = counterObj->tmrActive;
  4088c4:	6b24      	ldr	r4, [r4, #48]	; 0x30

004088c6 <.LVL216>:
    while (tmrActive != NULL)
  4088c6:	b134      	cbz	r4, 4088d6 <.LVL218>
        if(tmrActive->relativeTimePending == 0)
  4088c8:	68a3      	ldr	r3, [r4, #8]
  4088ca:	b923      	cbnz	r3, 4088d6 <.LVL218>
            tmrActive->tmrElapsedFlag = true;
  4088cc:	2501      	movs	r5, #1

004088ce <.LVL217>:
                    tmrActive->active = false;
  4088ce:	f04f 0800 	mov.w	r8, #0
            tmrActive = counterObj->tmrActive;
  4088d2:	4f23      	ldr	r7, [pc, #140]	; (408960 <.LVL234>)
  4088d4:	e011      	b.n	4088fa <.LVL221+0x14>

004088d6 <.LVL218>:
  4088d6:	4c23      	ldr	r4, [pc, #140]	; (408964 <.LVL234+0x4>)

004088d8 <.LVL219>:
  4088d8:	f504 75a0 	add.w	r5, r4, #320	; 0x140

004088dc <.LBB54>:
            timers[i].tmrElapsed = false;
  4088dc:	2700      	movs	r7, #0
  4088de:	e01f      	b.n	408920 <.LBB56+0x4>

004088e0 <.LBB55>:
                SYS_TIME_TimerDestroy(tmrActive->tmrHandle);
  4088e0:	69e0      	ldr	r0, [r4, #28]
  4088e2:	f001 fda7 	bl	40a434 <.LFE177>

004088e6 <.LVL221>:
            if(tmrActive->callback != NULL)
  4088e6:	68e3      	ldr	r3, [r4, #12]
  4088e8:	b10b      	cbz	r3, 4088ee <.LVL221+0x8>
                tmrActive->callback(tmrActive->context);
  4088ea:	6920      	ldr	r0, [r4, #16]
  4088ec:	4798      	blx	r3
            tmrActive = counterObj->tmrActive;
  4088ee:	6b3c      	ldr	r4, [r7, #48]	; 0x30
    while (tmrActive != NULL)
  4088f0:	2c00      	cmp	r4, #0
  4088f2:	d0f0      	beq.n	4088d6 <.LVL218>
        if(tmrActive->relativeTimePending == 0)
  4088f4:	68a3      	ldr	r3, [r4, #8]
  4088f6:	2b00      	cmp	r3, #0
  4088f8:	d1ed      	bne.n	4088d6 <.LVL218>
            tmrActive->tmrElapsedFlag = true;
  4088fa:	7525      	strb	r5, [r4, #20]
            tmrActive->tmrElapsed = true;
  4088fc:	7565      	strb	r5, [r4, #21]
            if ((tmrActive->type == SYS_TIME_SINGLE) && (tmrActive->callback != NULL))
  4088fe:	78a3      	ldrb	r3, [r4, #2]
  408900:	b913      	cbnz	r3, 408908 <.LVL221+0x22>
  408902:	68e3      	ldr	r3, [r4, #12]
  408904:	2b00      	cmp	r3, #0
  408906:	d1eb      	bne.n	4088e0 <.LBB55>
                SYS_TIME_RemoveFromList(tmrActive);
  408908:	4620      	mov	r0, r4
  40890a:	f001 fb43 	bl	409f94 <.LFE167>

0040890e <.LVL224>:
                if (tmrActive->type == SYS_TIME_SINGLE)
  40890e:	78a3      	ldrb	r3, [r4, #2]
  408910:	2b00      	cmp	r3, #0
  408912:	d1e8      	bne.n	4088e6 <.LVL221>
                    tmrActive->active = false;
  408914:	f884 8001 	strb.w	r8, [r4, #1]
  408918:	e7e5      	b.n	4088e6 <.LVL221>

0040891a <.LVL225>:
  40891a:	3420      	adds	r4, #32

0040891c <.LBB56>:
    for (uint8_t i = 0; i < SYS_TIME_MAX_TIMERS; i++)
  40891c:	42ac      	cmp	r4, r5
  40891e:	d00c      	beq.n	40893a <.LBE49>
  408920:	4620      	mov	r0, r4
        if (timers[i].tmrElapsed == true)
  408922:	7d63      	ldrb	r3, [r4, #21]
  408924:	2b00      	cmp	r3, #0
  408926:	d0f8      	beq.n	40891a <.LVL225>
            timers[i].tmrElapsed = false;
  408928:	7567      	strb	r7, [r4, #21]
            if (timers[i].type == SYS_TIME_PERIODIC)
  40892a:	78a3      	ldrb	r3, [r4, #2]
  40892c:	2b01      	cmp	r3, #1
  40892e:	d1f4      	bne.n	40891a <.LVL225>
                timers[i].relativeTimePending = timers[i].requestedTime;
  408930:	6863      	ldr	r3, [r4, #4]
  408932:	60a3      	str	r3, [r4, #8]
                SYS_TIME_AddToList(&timers[i]);
  408934:	f000 fd3a 	bl	4093ac <.LFE163>

00408938 <.LVL226>:
  408938:	e7ef      	b.n	40891a <.LVL225>

0040893a <.LBE49>:

        SYS_TIME_UpdateTime(elapsedCount);

        counterObj->interruptNestingCount--;
  40893a:	4a09      	ldr	r2, [pc, #36]	; (408960 <.LVL234>)
  40893c:	f892 302c 	ldrb.w	r3, [r2, #44]	; 0x2c
  408940:	3b01      	subs	r3, #1
  408942:	f882 302c 	strb.w	r3, [r2, #44]	; 0x2c

00408946 <.LVL228>:
    }
    SYS_TIME_Counter64Update(elapsedCount);
  408946:	4630      	mov	r0, r6
  408948:	f001 ffaa 	bl	40a8a0 <.LFE164>

0040894c <.LVL229>:

    interruptState = SYS_INT_Disable();
  40894c:	f002 f8ce 	bl	40aaec <SYS_INT_Disable>

00408950 <.LVL230>:
  408950:	4604      	mov	r4, r0

00408952 <.LVL231>:
    SYS_TIME_HwTimerCompareUpdate();
  408952:	f000 fed9 	bl	409708 <.LFE18>

00408956 <.LVL232>:
    SYS_INT_Restore(interruptState);
  408956:	4620      	mov	r0, r4
  408958:	f002 f8d1 	bl	40aafe <.LFE142>

0040895c <.LVL233>:
  40895c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00408960 <.LVL234>:
  408960:	2040db9c 	.word	0x2040db9c
  408964:	2040d9bc 	.word	0x2040d9bc

Disassembly of section .text.Sha1Process%57:

00408968 <Sha1Process>:
}



static int32_t Sha1Process(Sha *sha, const uint8_t *input, word32 length)
{
  408968:	b410      	push	{r4}

0040896a <.LCFI0>:
	ICM_REGS->ICM_CTRL = ICM_CTRL_SWRST(1);
  40896a:	2404      	movs	r4, #4
  40896c:	4b2e      	ldr	r3, [pc, #184]	; (408a28 <.LCFI1+0x2>)
  40896e:	605c      	str	r4, [r3, #4]
    sha->icm_descriptor.start_addr = (uint32_t)input;
  408970:	6001      	str	r1, [r0, #0]

    /* Transfer size = (tran_size + 1) * 512bits */
    sha->icm_descriptor.tran_size =  (length >> 6) - 1;
  408972:	0994      	lsrs	r4, r2, #6
  408974:	3c01      	subs	r4, #1
  408976:	6084      	str	r4, [r0, #8]

00408978 <.LBB50>:
  __ASM volatile ("dsb 0xF":::"memory");
  408978:	f3bf 8f4f 	dsb	sy

0040897c <.LBE52>:
      SCB->DCCMVAC = op_addr;
  40897c:	4c2b      	ldr	r4, [pc, #172]	; (408a2c <.LCFI1+0x6>)
  40897e:	f8c4 0268 	str.w	r0, [r4, #616]	; 0x268

00408982 <.LBB54>:
  408982:	f3bf 8f4f 	dsb	sy

00408986 <.LBB56>:
  __ASM volatile ("isb 0xF":::"memory");
  408986:	f3bf 8f6f 	isb	sy

0040898a <.LBB58>:
  __ASM volatile ("dsb 0xF":::"memory");
  40898a:	f3bf 8f4f 	dsb	sy

0040898e <.LBE60>:
    while (op_size > 0) {
  40898e:	2a00      	cmp	r2, #0
  408990:	dd0b      	ble.n	4089aa <.LBB62>
  408992:	460b      	mov	r3, r1
  408994:	3a01      	subs	r2, #1

00408996 <.LVL4>:
  408996:	f022 021f 	bic.w	r2, r2, #31

0040899a <.LVL5>:
  40899a:	3220      	adds	r2, #32
  40899c:	4411      	add	r1, r2

0040899e <.LVL6>:
      SCB->DCCMVAC = op_addr;
  40899e:	4622      	mov	r2, r4

004089a0 <.LVL7>:
  4089a0:	f8c2 3268 	str.w	r3, [r2, #616]	; 0x268
      op_addr += (uint32_t)linesize;
  4089a4:	3320      	adds	r3, #32
    while (op_size > 0) {
  4089a6:	4299      	cmp	r1, r3
  4089a8:	d1fa      	bne.n	4089a0 <.LVL7>

004089aa <.LBB62>:
  4089aa:	f3bf 8f4f 	dsb	sy

004089ae <.LBB64>:
  __ASM volatile ("isb 0xF":::"memory");
  4089ae:	f3bf 8f6f 	isb	sy

004089b2 <.LBE58>:

    SCB_CleanDCache_by_Addr((uint32_t *)(&(sha->icm_descriptor)), sizeof(struct icm_descriptor));
    SCB_CleanDCache_by_Addr((uint32_t *)input, length);
    SCB_CleanInvalidateDCache_by_Addr((uint32_t *)&(sha->digest), SHA_DIGEST_SIZE);
  4089b2:	f100 0180 	add.w	r1, r0, #128	; 0x80

004089b6 <.LBB66>:
  __ASM volatile ("dsb 0xF":::"memory");
  4089b6:	f3bf 8f4f 	dsb	sy

004089ba <.LBE68>:
      SCB->DCCIMVAC = op_addr;
  4089ba:	4b1c      	ldr	r3, [pc, #112]	; (408a2c <.LCFI1+0x6>)
  4089bc:	f8c3 1270 	str.w	r1, [r3, #624]	; 0x270

004089c0 <.LBB70>:
  4089c0:	f3bf 8f4f 	dsb	sy

004089c4 <.LBB72>:
  __ASM volatile ("isb 0xF":::"memory");
  4089c4:	f3bf 8f6f 	isb	sy

004089c8 <.LBE66>:

    /* ICM can set up FIPS default starting digest */
    ICM_REGS->ICM_DSCR = (uint32_t)&sha->icm_descriptor;
  4089c8:	4b17      	ldr	r3, [pc, #92]	; (408a28 <.LCFI1+0x2>)
  4089ca:	6318      	str	r0, [r3, #48]	; 0x30


    /* configured so initial hash digest is auto-loaded */
    ICM_REGS->ICM_CFG = ICM_CFG_SLBDIS(1)
  4089cc:	f241 0204 	movw	r2, #4100	; 0x1004
  4089d0:	601a      	str	r2, [r3, #0]
                 | ICM_CFG_BBC(0)
                 | ICM_CFG_UALGO_SHA1
                 | ICM_CFG_UIHASH_Msk;

    /* digest must be 128 aligned */
	ICM_REGS->ICM_HASH = (uint32_t)(&(sha->digest));
  4089d2:	6359      	str	r1, [r3, #52]	; 0x34
    ICM_REGS->ICM_UIHVAL[0] = sha->digest[0];
  4089d4:	f8d0 2080 	ldr.w	r2, [r0, #128]	; 0x80
  4089d8:	639a      	str	r2, [r3, #56]	; 0x38
    ICM_REGS->ICM_UIHVAL[1] = sha->digest[1];
  4089da:	f8d0 2084 	ldr.w	r2, [r0, #132]	; 0x84
  4089de:	63da      	str	r2, [r3, #60]	; 0x3c
    ICM_REGS->ICM_UIHVAL[2] = sha->digest[2];
  4089e0:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
  4089e4:	641a      	str	r2, [r3, #64]	; 0x40
    ICM_REGS->ICM_UIHVAL[3] = sha->digest[3];
  4089e6:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
  4089ea:	645a      	str	r2, [r3, #68]	; 0x44
    ICM_REGS->ICM_UIHVAL[4] = sha->digest[4];
  4089ec:	f8d0 2090 	ldr.w	r2, [r0, #144]	; 0x90
  4089f0:	649a      	str	r2, [r3, #72]	; 0x48

004089f2 <.LBB74>:
  __ASM volatile ("dmb 0xF":::"memory");
  4089f2:	f3bf 8f5f 	dmb	sy

004089f6 <.LBE74>:

    /* memory barrier */
    __DMB();

    /* enable the ICM and wait ICM CTRL is write only - don't OR it */
    ICM_REGS->ICM_CTRL = ICM_CTRL_ENABLE(1);
  4089f6:	2201      	movs	r2, #1
  4089f8:	605a      	str	r2, [r3, #4]
    while (!(ICM_REGS->ICM_ISR & ICM_ISR_RHC_Msk))
  4089fa:	461a      	mov	r2, r3
  4089fc:	69d3      	ldr	r3, [r2, #28]
  4089fe:	f013 0f0f 	tst.w	r3, #15
  408a02:	d0fb      	beq.n	4089fc <.LBE74+0x6>
    {
        /* wait - when finished digest will be updated */
    }
    ICM_REGS->ICM_CTRL = ICM_CTRL_DISABLE(1);
  408a04:	4b08      	ldr	r3, [pc, #32]	; (408a28 <.LCFI1+0x2>)
  408a06:	2202      	movs	r2, #2
  408a08:	605a      	str	r2, [r3, #4]
    ICM_REGS->ICM_CTRL = ICM_CTRL_SWRST(1);
  408a0a:	2204      	movs	r2, #4
  408a0c:	605a      	str	r2, [r3, #4]

00408a0e <.LBB76>:
  __ASM volatile ("dsb 0xF":::"memory");
  408a0e:	f3bf 8f4f 	dsb	sy

00408a12 <.LBE78>:
  408a12:	4b06      	ldr	r3, [pc, #24]	; (408a2c <.LCFI1+0x6>)
  408a14:	f8c3 1270 	str.w	r1, [r3, #624]	; 0x270

00408a18 <.LBB80>:
  408a18:	f3bf 8f4f 	dsb	sy

00408a1c <.LBB82>:
  __ASM volatile ("isb 0xF":::"memory");
  408a1c:	f3bf 8f6f 	isb	sy

00408a20 <.LBE76>:

    SCB_CleanInvalidateDCache_by_Addr((uint32_t *)&(sha->digest), SHA_DIGEST_SIZE);

    return 0;
}
  408a20:	2000      	movs	r0, #0

00408a22 <.LVL17>:
  408a22:	f85d 4b04 	ldr.w	r4, [sp], #4

00408a26 <.LCFI1>:
  408a26:	4770      	bx	lr
  408a28:	40048000 	.word	0x40048000
  408a2c:	e000ed00 	.word	0xe000ed00

Disassembly of section .text.memmove%58:

00408a30 <memmove>:
  408a30:	4288      	cmp	r0, r1
  408a32:	b5f0      	push	{r4, r5, r6, r7, lr}

00408a34 <.LCFI0>:
  408a34:	d90d      	bls.n	408a52 <.LVL6>
  408a36:	188b      	adds	r3, r1, r2
  408a38:	4298      	cmp	r0, r3
  408a3a:	d20a      	bcs.n	408a52 <.LVL6>

00408a3c <.LVL1>:
  408a3c:	1884      	adds	r4, r0, r2

00408a3e <.LVL2>:
  408a3e:	2a00      	cmp	r2, #0
  408a40:	d051      	beq.n	408ae6 <.LVL26>
  408a42:	4622      	mov	r2, r4

00408a44 <.LVL3>:
  408a44:	f813 4d01 	ldrb.w	r4, [r3, #-1]!

00408a48 <.LVL4>:
  408a48:	f802 4d01 	strb.w	r4, [r2, #-1]!

00408a4c <.LVL5>:
  408a4c:	4299      	cmp	r1, r3
  408a4e:	d1f9      	bne.n	408a44 <.LVL3>
  408a50:	bdf0      	pop	{r4, r5, r6, r7, pc}

00408a52 <.LVL6>:
  408a52:	2a0f      	cmp	r2, #15
  408a54:	d948      	bls.n	408ae8 <.LVL27>
  408a56:	ea41 0300 	orr.w	r3, r1, r0
  408a5a:	079b      	lsls	r3, r3, #30
  408a5c:	d146      	bne.n	408aec <.LVL27+0x4>
  408a5e:	f100 0410 	add.w	r4, r0, #16
  408a62:	f101 0310 	add.w	r3, r1, #16
  408a66:	4615      	mov	r5, r2

00408a68 <.LVL7>:
  408a68:	f853 6c10 	ldr.w	r6, [r3, #-16]
  408a6c:	f844 6c10 	str.w	r6, [r4, #-16]

00408a70 <.LVL8>:
  408a70:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  408a74:	f844 6c0c 	str.w	r6, [r4, #-12]

00408a78 <.LVL9>:
  408a78:	f853 6c08 	ldr.w	r6, [r3, #-8]
  408a7c:	f844 6c08 	str.w	r6, [r4, #-8]

00408a80 <.LVL10>:
  408a80:	3d10      	subs	r5, #16
  408a82:	f853 6c04 	ldr.w	r6, [r3, #-4]
  408a86:	f844 6c04 	str.w	r6, [r4, #-4]
  408a8a:	2d0f      	cmp	r5, #15
  408a8c:	f103 0310 	add.w	r3, r3, #16

00408a90 <.LVL12>:
  408a90:	f104 0410 	add.w	r4, r4, #16
  408a94:	d8e8      	bhi.n	408a68 <.LVL7>
  408a96:	f1a2 0310 	sub.w	r3, r2, #16

00408a9a <.LVL13>:
  408a9a:	f023 030f 	bic.w	r3, r3, #15
  408a9e:	f002 0e0f 	and.w	lr, r2, #15
  408aa2:	3310      	adds	r3, #16
  408aa4:	f1be 0f03 	cmp.w	lr, #3
  408aa8:	4419      	add	r1, r3

00408aaa <.LVL14>:
  408aaa:	4403      	add	r3, r0

00408aac <.LVL15>:
  408aac:	d921      	bls.n	408af2 <.LVL29>
  408aae:	1f1e      	subs	r6, r3, #4
  408ab0:	460d      	mov	r5, r1
  408ab2:	4674      	mov	r4, lr

00408ab4 <.LVL16>:
  408ab4:	3c04      	subs	r4, #4

00408ab6 <.LVL17>:
  408ab6:	f855 7b04 	ldr.w	r7, [r5], #4

00408aba <.LVL18>:
  408aba:	f846 7f04 	str.w	r7, [r6, #4]!
  408abe:	2c03      	cmp	r4, #3
  408ac0:	d8f8      	bhi.n	408ab4 <.LVL16>
  408ac2:	f1ae 0404 	sub.w	r4, lr, #4

00408ac6 <.LVL19>:
  408ac6:	f024 0403 	bic.w	r4, r4, #3
  408aca:	3404      	adds	r4, #4
  408acc:	4421      	add	r1, r4
  408ace:	4423      	add	r3, r4
  408ad0:	f002 0203 	and.w	r2, r2, #3

00408ad4 <.LVL20>:
  408ad4:	b162      	cbz	r2, 408af0 <.LVL28>

00408ad6 <.LVL21>:
  408ad6:	3b01      	subs	r3, #1

00408ad8 <.LVL22>:
  408ad8:	440a      	add	r2, r1

00408ada <.LVL23>:
  408ada:	f811 4b01 	ldrb.w	r4, [r1], #1

00408ade <.LVL24>:
  408ade:	f803 4f01 	strb.w	r4, [r3, #1]!

00408ae2 <.LVL25>:
  408ae2:	428a      	cmp	r2, r1
  408ae4:	d1f9      	bne.n	408ada <.LVL23>

00408ae6 <.LVL26>:
  408ae6:	bdf0      	pop	{r4, r5, r6, r7, pc}

00408ae8 <.LVL27>:
  408ae8:	4603      	mov	r3, r0
  408aea:	e7f3      	b.n	408ad4 <.LVL20>
  408aec:	4603      	mov	r3, r0
  408aee:	e7f2      	b.n	408ad6 <.LVL21>

00408af0 <.LVL28>:
  408af0:	bdf0      	pop	{r4, r5, r6, r7, pc}

00408af2 <.LVL29>:
  408af2:	4672      	mov	r2, lr
  408af4:	e7ee      	b.n	408ad4 <.LVL20>

00408af6 <.LFE17>:
  408af6:	bf00      	nop

Disassembly of section .rodata.__mprec_tens%59:

00408af8 <__mprec_tens>:
  408af8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  408b08:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  408b18:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  408b28:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  408b38:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  408b48:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  408b58:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  408b68:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  408b78:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  408b88:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  408b98:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  408ba8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  408bb8:	9db4 79d9 7843 44ea                         ...yCx.D

Disassembly of section .text.wc_Md5Final%60:

00408bc0 <wc_Md5Final>:

int wc_Md5Final(Md5* md5, byte* hash)
{
    byte* local;

    if (md5 == NULL || hash == NULL) {
  408bc0:	2800      	cmp	r0, #0
  408bc2:	d059      	beq.n	408c78 <.LCFI7>
{
  408bc4:	b570      	push	{r4, r5, r6, lr}

00408bc6 <.LCFI6>:
  408bc6:	4604      	mov	r4, r0
    if (md5 == NULL || hash == NULL) {
  408bc8:	2900      	cmp	r1, #0
  408bca:	d052      	beq.n	408c72 <.LVL364>
        return IntelQaSymMd5(&md5->asyncDev, hash, NULL, MD5_DIGEST_SIZE);
    #endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    local = (byte*)md5->buffer;
  408bcc:	f100 060c 	add.w	r6, r0, #12

00408bd0 <.LVL351>:

    AddMd5Length(md5, md5->buffLen);  /* before adding pads */
  408bd0:	6803      	ldr	r3, [r0, #0]

00408bd2 <.LBB151>:
    word32 tmp = md5->loLen;
  408bd2:	6840      	ldr	r0, [r0, #4]

00408bd4 <.LVL353>:
    if ((md5->loLen += len) < tmp) {
  408bd4:	181a      	adds	r2, r3, r0
  408bd6:	6062      	str	r2, [r4, #4]
  408bd8:	4290      	cmp	r0, r2
  408bda:	d902      	bls.n	408be2 <.LVL353+0xe>
        md5->hiLen++;                       /* carry low to high */
  408bdc:	68a2      	ldr	r2, [r4, #8]
  408bde:	3201      	adds	r2, #1
  408be0:	60a2      	str	r2, [r4, #8]
  408be2:	460d      	mov	r5, r1

00408be4 <.LBE151>:
    local[md5->buffLen++] = 0x80;  /* add 1 */
  408be4:	1c5a      	adds	r2, r3, #1
  408be6:	6022      	str	r2, [r4, #0]
  408be8:	2280      	movs	r2, #128	; 0x80
  408bea:	54f2      	strb	r2, [r6, r3]

    /* pad with zeros */
    if (md5->buffLen > MD5_PAD_SIZE) {
  408bec:	6820      	ldr	r0, [r4, #0]
  408bee:	2838      	cmp	r0, #56	; 0x38
  408bf0:	d831      	bhi.n	408c56 <.LVL360>

00408bf2 <.LVL355>:
        ByteReverseWords(md5->buffer, md5->buffer, MD5_BLOCK_SIZE);
    #endif
        XTRANSFORM(md5, local);
        md5->buffLen = 0;
    }
    XMEMSET(&local[md5->buffLen], 0, MD5_PAD_SIZE - md5->buffLen);
  408bf2:	6820      	ldr	r0, [r4, #0]
  408bf4:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
  408bf8:	2100      	movs	r1, #0
  408bfa:	4430      	add	r0, r6
  408bfc:	f000 fb3e 	bl	40927c <.LFE166>

00408c00 <.LVL356>:
#if defined(BIG_ENDIAN_ORDER) && !defined(FREESCALE_MMCAU_SHA)
    ByteReverseWords(md5->buffer, md5->buffer, MD5_BLOCK_SIZE);
#endif

    /* put lengths in bits */
    md5->hiLen = (md5->loLen >> (8*sizeof(md5->loLen) - 3)) +
  408c00:	6863      	ldr	r3, [r4, #4]
                 (md5->hiLen << 3);
  408c02:	68a1      	ldr	r1, [r4, #8]
    md5->hiLen = (md5->loLen >> (8*sizeof(md5->loLen) - 3)) +
  408c04:	0f5a      	lsrs	r2, r3, #29
  408c06:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
  408c0a:	60a2      	str	r2, [r4, #8]
    md5->loLen = md5->loLen << 3;
  408c0c:	00db      	lsls	r3, r3, #3
  408c0e:	6063      	str	r3, [r4, #4]

    /* store lengths */
    /* ! length ordering dependent on digest endian type ! */
    XMEMCPY(&local[MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
  408c10:	6463      	str	r3, [r4, #68]	; 0x44
    XMEMCPY(&local[MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));
  408c12:	64a2      	str	r2, [r4, #72]	; 0x48

    /* final transform and result to hash */
    XTRANSFORM(md5, local);
  408c14:	4620      	mov	r0, r4
  408c16:	f7fc ffdd 	bl	405bd4 <.LFE18>

00408c1a <.LVL357>:
#ifdef BIG_ENDIAN_ORDER
    ByteReverseWords(md5->digest, md5->digest, MD5_DIGEST_SIZE);
#endif
    XMEMCPY(hash, md5->digest, MD5_DIGEST_SIZE);
  408c1a:	4623      	mov	r3, r4
  408c1c:	f853 0f4c 	ldr.w	r0, [r3, #76]!
  408c20:	6859      	ldr	r1, [r3, #4]
  408c22:	689a      	ldr	r2, [r3, #8]
  408c24:	68db      	ldr	r3, [r3, #12]
  408c26:	6028      	str	r0, [r5, #0]
  408c28:	6069      	str	r1, [r5, #4]
  408c2a:	60aa      	str	r2, [r5, #8]
  408c2c:	60eb      	str	r3, [r5, #12]

00408c2e <.LBB153>:
    md5->digest[0] = 0x67452301L;
  408c2e:	4b14      	ldr	r3, [pc, #80]	; (408c80 <.LVL367+0x4>)
  408c30:	64e3      	str	r3, [r4, #76]	; 0x4c
    md5->digest[1] = 0xefcdab89L;
  408c32:	f103 3388 	add.w	r3, r3, #2290649224	; 0x88888888
  408c36:	6523      	str	r3, [r4, #80]	; 0x50
    md5->digest[2] = 0x98badcfeL;
  408c38:	f103 4329 	add.w	r3, r3, #2835349504	; 0xa9000000
  408c3c:	f5a3 1396 	sub.w	r3, r3, #1228800	; 0x12c000
  408c40:	f6a3 638b 	subw	r3, r3, #3723	; 0xe8b
  408c44:	6563      	str	r3, [r4, #84]	; 0x54
    md5->digest[3] = 0x10325476L;
  408c46:	f1a3 3388 	sub.w	r3, r3, #2290649224	; 0x88888888
  408c4a:	65a3      	str	r3, [r4, #88]	; 0x58
    md5->buffLen = 0;
  408c4c:	2000      	movs	r0, #0
  408c4e:	6020      	str	r0, [r4, #0]
    md5->loLen   = 0;
  408c50:	6060      	str	r0, [r4, #4]
    md5->hiLen   = 0;
  408c52:	60a0      	str	r0, [r4, #8]

00408c54 <.LBE153>:

    return _InitMd5(md5); /* reset state */
  408c54:	bd70      	pop	{r4, r5, r6, pc}

00408c56 <.LVL360>:
        XMEMSET(&local[md5->buffLen], 0, MD5_BLOCK_SIZE - md5->buffLen);
  408c56:	f1c0 0240 	rsb	r2, r0, #64	; 0x40
  408c5a:	2100      	movs	r1, #0

00408c5c <.LVL361>:
  408c5c:	4430      	add	r0, r6
  408c5e:	f000 fb0d 	bl	40927c <.LFE166>

00408c62 <.LVL362>:
        md5->buffLen += MD5_BLOCK_SIZE - md5->buffLen;
  408c62:	2340      	movs	r3, #64	; 0x40
  408c64:	6023      	str	r3, [r4, #0]
        XTRANSFORM(md5, local);
  408c66:	4620      	mov	r0, r4
  408c68:	f7fc ffb4 	bl	405bd4 <.LFE18>

00408c6c <.LVL363>:
        md5->buffLen = 0;
  408c6c:	2300      	movs	r3, #0
  408c6e:	6023      	str	r3, [r4, #0]
  408c70:	e7bf      	b.n	408bf2 <.LVL355>

00408c72 <.LVL364>:
        return BAD_FUNC_ARG;
  408c72:	f06f 00ac 	mvn.w	r0, #172	; 0xac

00408c76 <.LVL365>:
}
  408c76:	bd70      	pop	{r4, r5, r6, pc}

00408c78 <.LCFI7>:
        return BAD_FUNC_ARG;
  408c78:	f06f 00ac 	mvn.w	r0, #172	; 0xac

00408c7c <.LVL367>:
  408c7c:	4770      	bx	lr
  408c7e:	bf00      	nop
  408c80:	67452301 	.word	0x67452301

Disassembly of section .text.__d2b%61:

00408c84 <__d2b>:
  408c84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}

00408c88 <.LCFI17>:
  408c88:	ec57 6b10 	vmov	r6, r7, d0
  408c8c:	b083      	sub	sp, #12

00408c8e <.LCFI18>:
  408c8e:	4688      	mov	r8, r1
  408c90:	2101      	movs	r1, #1

00408c92 <.LVL324>:
  408c92:	463c      	mov	r4, r7
  408c94:	f3c7 550a 	ubfx	r5, r7, #20, #11
  408c98:	4617      	mov	r7, r2
  408c9a:	f001 fa19 	bl	40a0d0 <.LFE2>

00408c9e <.LVL326>:
  408c9e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  408ca2:	4681      	mov	r9, r0

00408ca4 <.LVL327>:
  408ca4:	b10d      	cbz	r5, 408caa <.LVL327+0x6>
  408ca6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  408caa:	9401      	str	r4, [sp, #4]
  408cac:	b31e      	cbz	r6, 408cf6 <.LCFI20>
  408cae:	a802      	add	r0, sp, #8

00408cb0 <.LVL328>:
  408cb0:	f840 6d08 	str.w	r6, [r0, #-8]!
  408cb4:	f001 f884 	bl	409dc0 <__lo0bits>

00408cb8 <.LVL329>:
  408cb8:	2800      	cmp	r0, #0
  408cba:	d134      	bne.n	408d26 <.LCFI22>
  408cbc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  408cc0:	f8c9 2014 	str.w	r2, [r9, #20]
  408cc4:	2b00      	cmp	r3, #0
  408cc6:	bf0c      	ite	eq
  408cc8:	2101      	moveq	r1, #1
  408cca:	2102      	movne	r1, #2
  408ccc:	f8c9 3018 	str.w	r3, [r9, #24]
  408cd0:	f8c9 1010 	str.w	r1, [r9, #16]

00408cd4 <.LVL330>:
  408cd4:	b9dd      	cbnz	r5, 408d0e <.LVL338+0x4>
  408cd6:	eb09 0381 	add.w	r3, r9, r1, lsl #2
  408cda:	f2a0 4032 	subw	r0, r0, #1074	; 0x432

00408cde <.LVL331>:
  408cde:	f8c8 0000 	str.w	r0, [r8]
  408ce2:	6918      	ldr	r0, [r3, #16]

00408ce4 <.LVL332>:
  408ce4:	f001 fb2c 	bl	40a340 <__hi0bits>

00408ce8 <.LVL333>:
  408ce8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  408cec:	6038      	str	r0, [r7, #0]
  408cee:	4648      	mov	r0, r9
  408cf0:	b003      	add	sp, #12

00408cf2 <.LCFI19>:
  408cf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00408cf6 <.LCFI20>:
  408cf6:	a801      	add	r0, sp, #4

00408cf8 <.LVL335>:
  408cf8:	f001 f862 	bl	409dc0 <__lo0bits>

00408cfc <.LVL336>:
  408cfc:	9b01      	ldr	r3, [sp, #4]
  408cfe:	f8c9 3014 	str.w	r3, [r9, #20]
  408d02:	2101      	movs	r1, #1
  408d04:	3020      	adds	r0, #32

00408d06 <.LVL337>:
  408d06:	f8c9 1010 	str.w	r1, [r9, #16]

00408d0a <.LVL338>:
  408d0a:	2d00      	cmp	r5, #0
  408d0c:	d0e3      	beq.n	408cd6 <.LVL330+0x2>
  408d0e:	f2a5 4533 	subw	r5, r5, #1075	; 0x433

00408d12 <.LVL339>:
  408d12:	4405      	add	r5, r0

00408d14 <.LVL340>:
  408d14:	f1c0 0035 	rsb	r0, r0, #53	; 0x35

00408d18 <.LVL341>:
  408d18:	f8c8 5000 	str.w	r5, [r8]
  408d1c:	6038      	str	r0, [r7, #0]
  408d1e:	4648      	mov	r0, r9
  408d20:	b003      	add	sp, #12

00408d22 <.LCFI21>:
  408d22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00408d26 <.LCFI22>:
  408d26:	e89d 000a 	ldmia.w	sp, {r1, r3}
  408d2a:	f1c0 0220 	rsb	r2, r0, #32
  408d2e:	fa03 f202 	lsl.w	r2, r3, r2
  408d32:	430a      	orrs	r2, r1
  408d34:	40c3      	lsrs	r3, r0
  408d36:	9301      	str	r3, [sp, #4]
  408d38:	f8c9 2014 	str.w	r2, [r9, #20]
  408d3c:	e7c2      	b.n	408cc4 <.LVL329+0xc>

00408d3e <.LFE31>:
  408d3e:	bf00      	nop

Disassembly of section .text.wc_InitSha512_ex%62:

00408d40 <wc_InitSha512_ex>:
        if (sha512 == NULL)
  408d40:	2800      	cmp	r0, #0
  408d42:	d035      	beq.n	408db0 <.LVL21>
    {
  408d44:	b430      	push	{r4, r5}

00408d46 <.LCFI4>:
  408d46:	4603      	mov	r3, r0
        sha512->heap = heap;
  408d48:	f8c0 10d8 	str.w	r1, [r0, #216]	; 0xd8

00408d4c <.LBB679>:
    sha512->digest[0] = W64LIT(0x6a09e667f3bcc908);
  408d4c:	a11a      	add	r1, pc, #104	; (adr r1, 408db8 <.LVL22+0x4>)
  408d4e:	e9d1 0100 	ldrd	r0, r1, [r1]

00408d52 <.LVL19>:
  408d52:	e9c3 0106 	strd	r0, r1, [r3, #24]
    sha512->digest[1] = W64LIT(0xbb67ae8584caa73b);
  408d56:	a11a      	add	r1, pc, #104	; (adr r1, 408dc0 <.LVL22+0xc>)
  408d58:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d5c:	e9c3 0108 	strd	r0, r1, [r3, #32]
    sha512->digest[2] = W64LIT(0x3c6ef372fe94f82b);
  408d60:	a119      	add	r1, pc, #100	; (adr r1, 408dc8 <.LVL22+0x14>)
  408d62:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d66:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
    sha512->digest[3] = W64LIT(0xa54ff53a5f1d36f1);
  408d6a:	a119      	add	r1, pc, #100	; (adr r1, 408dd0 <.LVL22+0x1c>)
  408d6c:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d70:	e9c3 010c 	strd	r0, r1, [r3, #48]	; 0x30
    sha512->digest[4] = W64LIT(0x510e527fade682d1);
  408d74:	a118      	add	r1, pc, #96	; (adr r1, 408dd8 <.LVL22+0x24>)
  408d76:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d7a:	e9c3 010e 	strd	r0, r1, [r3, #56]	; 0x38
    sha512->digest[5] = W64LIT(0x9b05688c2b3e6c1f);
  408d7e:	a118      	add	r1, pc, #96	; (adr r1, 408de0 <.LVL22+0x2c>)
  408d80:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d84:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
    sha512->digest[6] = W64LIT(0x1f83d9abfb41bd6b);
  408d88:	a117      	add	r1, pc, #92	; (adr r1, 408de8 <.LVL22+0x34>)
  408d8a:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d8e:	e9c3 0112 	strd	r0, r1, [r3, #72]	; 0x48
    sha512->digest[7] = W64LIT(0x5be0cd19137e2179);
  408d92:	a117      	add	r1, pc, #92	; (adr r1, 408df0 <.LVL22+0x3c>)
  408d94:	e9d1 0100 	ldrd	r0, r1, [r1]
  408d98:	e9c3 0114 	strd	r0, r1, [r3, #80]	; 0x50
    sha512->buffLen = 0;
  408d9c:	2000      	movs	r0, #0
  408d9e:	6018      	str	r0, [r3, #0]
    sha512->loLen   = 0;
  408da0:	2400      	movs	r4, #0
  408da2:	2500      	movs	r5, #0
  408da4:	e9c3 4502 	strd	r4, r5, [r3, #8]
    sha512->hiLen   = 0;
  408da8:	e9c3 4504 	strd	r4, r5, [r3, #16]

00408dac <.LBE679>:
    }
  408dac:	bc30      	pop	{r4, r5}

00408dae <.LCFI5>:
  408dae:	4770      	bx	lr

00408db0 <.LVL21>:
            return BAD_FUNC_ARG;
  408db0:	f06f 00ac 	mvn.w	r0, #172	; 0xac

00408db4 <.LVL22>:
  408db4:	4770      	bx	lr
  408db6:	bf00      	nop
  408db8:	f3bcc908 	.word	0xf3bcc908
  408dbc:	6a09e667 	.word	0x6a09e667
  408dc0:	84caa73b 	.word	0x84caa73b
  408dc4:	bb67ae85 	.word	0xbb67ae85
  408dc8:	fe94f82b 	.word	0xfe94f82b
  408dcc:	3c6ef372 	.word	0x3c6ef372
  408dd0:	5f1d36f1 	.word	0x5f1d36f1
  408dd4:	a54ff53a 	.word	0xa54ff53a
  408dd8:	ade682d1 	.word	0xade682d1
  408ddc:	510e527f 	.word	0x510e527f
  408de0:	2b3e6c1f 	.word	0x2b3e6c1f
  408de4:	9b05688c 	.word	0x9b05688c
  408de8:	fb41bd6b 	.word	0xfb41bd6b
  408dec:	1f83d9ab 	.word	0x1f83d9ab
  408df0:	137e2179 	.word	0x137e2179
  408df4:	5be0cd19 	.word	0x5be0cd19

Disassembly of section .text.wc_InitSha384_ex%63:

00408df8 <wc_InitSha384_ex>:
#else
int wc_InitSha384_ex(Sha384* sha384, void* heap, int devId)
{
    int ret;

    if (sha384 == NULL) {
  408df8:	2800      	cmp	r0, #0
  408dfa:	d035      	beq.n	408e68 <.LVL142>
{
  408dfc:	b430      	push	{r4, r5}

00408dfe <.LCFI19>:
  408dfe:	4603      	mov	r3, r0
        return BAD_FUNC_ARG;
    }

    sha384->heap = heap;
  408e00:	f8c0 10d8 	str.w	r1, [r0, #216]	; 0xd8

00408e04 <.LBB925>:
    sha384->digest[0] = W64LIT(0xcbbb9d5dc1059ed8);
  408e04:	a11a      	add	r1, pc, #104	; (adr r1, 408e70 <.LVL143+0x4>)
  408e06:	e9d1 0100 	ldrd	r0, r1, [r1]

00408e0a <.LVL140>:
  408e0a:	e9c3 0106 	strd	r0, r1, [r3, #24]
    sha384->digest[1] = W64LIT(0x629a292a367cd507);
  408e0e:	a11a      	add	r1, pc, #104	; (adr r1, 408e78 <.LVL143+0xc>)
  408e10:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e14:	e9c3 0108 	strd	r0, r1, [r3, #32]
    sha384->digest[2] = W64LIT(0x9159015a3070dd17);
  408e18:	a119      	add	r1, pc, #100	; (adr r1, 408e80 <.LVL143+0x14>)
  408e1a:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e1e:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
    sha384->digest[3] = W64LIT(0x152fecd8f70e5939);
  408e22:	a119      	add	r1, pc, #100	; (adr r1, 408e88 <.LVL143+0x1c>)
  408e24:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e28:	e9c3 010c 	strd	r0, r1, [r3, #48]	; 0x30
    sha384->digest[4] = W64LIT(0x67332667ffc00b31);
  408e2c:	a118      	add	r1, pc, #96	; (adr r1, 408e90 <.LVL143+0x24>)
  408e2e:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e32:	e9c3 010e 	strd	r0, r1, [r3, #56]	; 0x38
    sha384->digest[5] = W64LIT(0x8eb44a8768581511);
  408e36:	a118      	add	r1, pc, #96	; (adr r1, 408e98 <.LVL143+0x2c>)
  408e38:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e3c:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
    sha384->digest[6] = W64LIT(0xdb0c2e0d64f98fa7);
  408e40:	a117      	add	r1, pc, #92	; (adr r1, 408ea0 <.LVL143+0x34>)
  408e42:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e46:	e9c3 0112 	strd	r0, r1, [r3, #72]	; 0x48
    sha384->digest[7] = W64LIT(0x47b5481dbefa4fa4);
  408e4a:	a117      	add	r1, pc, #92	; (adr r1, 408ea8 <.LVL143+0x3c>)
  408e4c:	e9d1 0100 	ldrd	r0, r1, [r1]
  408e50:	e9c3 0114 	strd	r0, r1, [r3, #80]	; 0x50
    sha384->buffLen = 0;
  408e54:	2000      	movs	r0, #0
  408e56:	6018      	str	r0, [r3, #0]
    sha384->loLen   = 0;
  408e58:	2400      	movs	r4, #0
  408e5a:	2500      	movs	r5, #0
  408e5c:	e9c3 4502 	strd	r4, r5, [r3, #8]
    sha384->hiLen   = 0;
  408e60:	e9c3 4504 	strd	r4, r5, [r3, #16]

00408e64 <.LBE925>:
#else
    (void)devId;
#endif /* WOLFSSL_ASYNC_CRYPT */

    return ret;
}
  408e64:	bc30      	pop	{r4, r5}

00408e66 <.LCFI20>:
  408e66:	4770      	bx	lr

00408e68 <.LVL142>:
        return BAD_FUNC_ARG;
  408e68:	f06f 00ac 	mvn.w	r0, #172	; 0xac

00408e6c <.LVL143>:
  408e6c:	4770      	bx	lr
  408e6e:	bf00      	nop
  408e70:	c1059ed8 	.word	0xc1059ed8
  408e74:	cbbb9d5d 	.word	0xcbbb9d5d
  408e78:	367cd507 	.word	0x367cd507
  408e7c:	629a292a 	.word	0x629a292a
  408e80:	3070dd17 	.word	0x3070dd17
  408e84:	9159015a 	.word	0x9159015a
  408e88:	f70e5939 	.word	0xf70e5939
  408e8c:	152fecd8 	.word	0x152fecd8
  408e90:	ffc00b31 	.word	0xffc00b31
  408e94:	67332667 	.word	0x67332667
  408e98:	68581511 	.word	0x68581511
  408e9c:	8eb44a87 	.word	0x8eb44a87
  408ea0:	64f98fa7 	.word	0x64f98fa7
  408ea4:	db0c2e0d 	.word	0xdb0c2e0d
  408ea8:	befa4fa4 	.word	0xbefa4fa4
  408eac:	47b5481d 	.word	0x47b5481d

Disassembly of section .text.__lshift%64:

00408eb0 <__lshift>:
  408eb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

00408eb4 <.LCFI11>:
  408eb4:	4691      	mov	r9, r2
  408eb6:	690a      	ldr	r2, [r1, #16]

00408eb8 <.LVL184>:
  408eb8:	688b      	ldr	r3, [r1, #8]
  408eba:	ea4f 1469 	mov.w	r4, r9, asr #5

00408ebe <.LVL185>:
  408ebe:	eb04 0802 	add.w	r8, r4, r2
  408ec2:	f108 0501 	add.w	r5, r8, #1
  408ec6:	429d      	cmp	r5, r3
  408ec8:	460e      	mov	r6, r1
  408eca:	4607      	mov	r7, r0
  408ecc:	6849      	ldr	r1, [r1, #4]

00408ece <.LVL186>:
  408ece:	dd04      	ble.n	408eda <.LVL188+0x2>
  408ed0:	005b      	lsls	r3, r3, #1

00408ed2 <.LVL187>:
  408ed2:	429d      	cmp	r5, r3
  408ed4:	f101 0101 	add.w	r1, r1, #1

00408ed8 <.LVL188>:
  408ed8:	dcfa      	bgt.n	408ed0 <.LVL186+0x2>
  408eda:	4638      	mov	r0, r7

00408edc <.LVL189>:
  408edc:	f001 f8f8 	bl	40a0d0 <.LFE2>

00408ee0 <.LVL190>:
  408ee0:	2c00      	cmp	r4, #0
  408ee2:	f100 0314 	add.w	r3, r0, #20

00408ee6 <.LVL191>:
  408ee6:	dd06      	ble.n	408ef6 <.LVL193+0x4>
  408ee8:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  408eec:	2100      	movs	r1, #0

00408eee <.LVL192>:
  408eee:	f843 1b04 	str.w	r1, [r3], #4

00408ef2 <.LVL193>:
  408ef2:	429a      	cmp	r2, r3
  408ef4:	d1fb      	bne.n	408eee <.LVL192>
  408ef6:	6934      	ldr	r4, [r6, #16]

00408ef8 <.LVL194>:
  408ef8:	f106 0114 	add.w	r1, r6, #20

00408efc <.LVL195>:
  408efc:	f019 091f 	ands.w	r9, r9, #31

00408f00 <.LVL196>:
  408f00:	eb01 0e84 	add.w	lr, r1, r4, lsl #2

00408f04 <.LVL197>:
  408f04:	d01d      	beq.n	408f42 <.LVL208>
  408f06:	f1c9 0c20 	rsb	ip, r9, #32

00408f0a <.LVL198>:
  408f0a:	2200      	movs	r2, #0

00408f0c <.LVL199>:
  408f0c:	680c      	ldr	r4, [r1, #0]
  408f0e:	fa04 f409 	lsl.w	r4, r4, r9
  408f12:	4314      	orrs	r4, r2
  408f14:	f843 4b04 	str.w	r4, [r3], #4

00408f18 <.LVL200>:
  408f18:	f851 2b04 	ldr.w	r2, [r1], #4

00408f1c <.LVL201>:
  408f1c:	458e      	cmp	lr, r1
  408f1e:	fa22 f20c 	lsr.w	r2, r2, ip

00408f22 <.LVL202>:
  408f22:	d8f3      	bhi.n	408f0c <.LVL199>
  408f24:	601a      	str	r2, [r3, #0]
  408f26:	b10a      	cbz	r2, 408f2c <.LBB24>

00408f28 <.LVL203>:
  408f28:	f108 0502 	add.w	r5, r8, #2

00408f2c <.LBB24>:
  408f2c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  408f2e:	6872      	ldr	r2, [r6, #4]

00408f30 <.LBE24>:
  408f30:	3d01      	subs	r5, #1

00408f32 <.LBB28>:
  408f32:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]

00408f36 <.LBE28>:
  408f36:	6105      	str	r5, [r0, #16]

00408f38 <.LBB29>:
  408f38:	6031      	str	r1, [r6, #0]
  408f3a:	f843 6022 	str.w	r6, [r3, r2, lsl #2]

00408f3e <.LBE29>:
  408f3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00408f42 <.LVL208>:
  408f42:	3b04      	subs	r3, #4

00408f44 <.LVL209>:
  408f44:	f851 2b04 	ldr.w	r2, [r1], #4

00408f48 <.LVL210>:
  408f48:	f843 2f04 	str.w	r2, [r3, #4]!
  408f4c:	458e      	cmp	lr, r1
  408f4e:	d8f9      	bhi.n	408f44 <.LVL209>
  408f50:	e7ec      	b.n	408f2c <.LBB24>

00408f52 <.LFE26>:
  408f52:	bf00      	nop

Disassembly of section .text.__register_exitproc%65:

00408f54 <__register_exitproc>:
  408f54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}

00408f58 <.LCFI0>:
  408f58:	4c25      	ldr	r4, [pc, #148]	; (408ff0 <.LVL14+0x2>)
  408f5a:	6825      	ldr	r5, [r4, #0]
  408f5c:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148

00408f60 <.LVL1>:
  408f60:	4606      	mov	r6, r0
  408f62:	4688      	mov	r8, r1
  408f64:	4692      	mov	sl, r2
  408f66:	4699      	mov	r9, r3
  408f68:	b3c4      	cbz	r4, 408fdc <.LVL11>
  408f6a:	6860      	ldr	r0, [r4, #4]

00408f6c <.LVL2>:
  408f6c:	281f      	cmp	r0, #31
  408f6e:	dc17      	bgt.n	408fa0 <.LVL6>
  408f70:	1c43      	adds	r3, r0, #1

00408f72 <.LVL3>:
  408f72:	b176      	cbz	r6, 408f92 <.LVL5>

00408f74 <.LVL4>:
  408f74:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  408f78:	2201      	movs	r2, #1
  408f7a:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  408f7e:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  408f82:	4082      	lsls	r2, r0
  408f84:	4311      	orrs	r1, r2
  408f86:	2e02      	cmp	r6, #2
  408f88:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  408f8c:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  408f90:	d01e      	beq.n	408fd0 <.LVL10>

00408f92 <.LVL5>:
  408f92:	3002      	adds	r0, #2
  408f94:	6063      	str	r3, [r4, #4]
  408f96:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  408f9a:	2000      	movs	r0, #0
  408f9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00408fa0 <.LVL6>:
  408fa0:	4b14      	ldr	r3, [pc, #80]	; (408ff4 <.LVL14+0x6>)

00408fa2 <.LVL7>:
  408fa2:	b303      	cbz	r3, 408fe6 <.LVL13>
  408fa4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  408fa8:	f001 fdf4 	bl	40ab94 <.LFE151>

00408fac <.LVL8>:
  408fac:	4604      	mov	r4, r0
  408fae:	b1d0      	cbz	r0, 408fe6 <.LVL13>
  408fb0:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  408fb4:	2700      	movs	r7, #0
  408fb6:	e880 0088 	stmia.w	r0, {r3, r7}
  408fba:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  408fbe:	4638      	mov	r0, r7

00408fc0 <.LVL9>:
  408fc0:	2301      	movs	r3, #1
  408fc2:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  408fc6:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  408fca:	2e00      	cmp	r6, #0
  408fcc:	d0e1      	beq.n	408f92 <.LVL5>
  408fce:	e7d1      	b.n	408f74 <.LVL4>

00408fd0 <.LVL10>:
  408fd0:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  408fd4:	430a      	orrs	r2, r1
  408fd6:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  408fda:	e7da      	b.n	408f92 <.LVL5>

00408fdc <.LVL11>:
  408fdc:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  408fe0:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  408fe4:	e7c1      	b.n	408f6a <.LVL1+0xa>

00408fe6 <.LVL13>:
  408fe6:	f04f 30ff 	mov.w	r0, #4294967295
  408fea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00408fee <.LVL14>:
  408fee:	bf00      	nop
  408ff0:	0040a794 	.word	0x0040a794
  408ff4:	0040ab95 	.word	0x0040ab95

Disassembly of section .text.SYS_TIME_Initialize%66:

00408ff8 <SYS_TIME_Initialize>:
// Section: System Interface Functions
// *****************************************************************************
// *****************************************************************************
SYS_MODULE_OBJ SYS_TIME_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init )
{
    if(init == 0 || index != SYS_TIME_INDEX_0)
  408ff8:	2900      	cmp	r1, #0
  408ffa:	d042      	beq.n	409082 <.LCFI12>
{
  408ffc:	b538      	push	{r3, r4, r5, lr}

00408ffe <.LCFI11>:
  408ffe:	460d      	mov	r5, r1
    if(init == 0 || index != SYS_TIME_INDEX_0)
  409000:	b110      	cbz	r0, 409008 <.LBB36>
    {
        return SYS_MODULE_OBJ_INVALID;
  409002:	f04f 30ff 	mov.w	r0, #4294967295

00409006 <.LVL125>:
    memset(timers, 0, sizeof(timers));

    gSystemCounterObj.status = SYS_STATUS_READY;

    return (SYS_MODULE_OBJ)&gSystemCounterObj;
}
  409006:	bd38      	pop	{r3, r4, r5, pc}

00409008 <.LBB36>:
// *****************************************************************************
/* Function: OSAL_RESULT OSAL_MUTEX_Create(OSAL_MUTEX_HANDLE_TYPE mutexID)
 */
static OSAL_RESULT __attribute__((always_inline)) OSAL_MUTEX_Create(OSAL_MUTEX_HANDLE_TYPE* mutexID)
{
   *mutexID = 1;
  409008:	4c1f      	ldr	r4, [pc, #124]	; (409088 <.LVL138+0x2>)
  40900a:	2301      	movs	r3, #1
  40900c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

00409010 <.LBB38>:
    counterObj->timePlib = initData->timePlib;
  409010:	680b      	ldr	r3, [r1, #0]
  409012:	6063      	str	r3, [r4, #4]
    counterObj->hwTimerFrequency = counterObj->timePlib->timerFrequencyGet();
  409014:	689b      	ldr	r3, [r3, #8]
  409016:	4798      	blx	r3

00409018 <.LVL128>:
  409018:	60e0      	str	r0, [r4, #12]

0040901a <.LVL129>:
    cpuCyclesPerTimerClock=(SYS_TIME_CPU_CLOCK_FREQUENCY/counterObj->hwTimerFrequency);
  40901a:	4b1c      	ldr	r3, [pc, #112]	; (40908c <.LVL138+0x6>)
  40901c:	fbb3 f0f0 	udiv	r0, r3, r0

00409020 <.LVL130>:
    counterObj->hwTimerCompareMargin=(SYS_TIME_COMPARE_UPDATE_EXECUTION_CYCLES/cpuCyclesPerTimerClock) +2;
  409020:	f44f 7361 	mov.w	r3, #900	; 0x384
  409024:	fb93 f3f0 	sdiv	r3, r3, r0
  409028:	3302      	adds	r3, #2
  40902a:	6223      	str	r3, [r4, #32]
    counterObj->hwTimerIntNum = initData->hwTimerIntNum;
  40902c:	f995 3004 	ldrsb.w	r3, [r5, #4]
  409030:	7223      	strb	r3, [r4, #8]
    counterObj->hwTimerPreviousValue = 0;
  409032:	2100      	movs	r1, #0
  409034:	6121      	str	r1, [r4, #16]
    counterObj->hwTimerPeriodValue = SYS_TIME_HW_COUNTER_PERIOD;
  409036:	f64f 73ff 	movw	r3, #65535	; 0xffff
  40903a:	61a3      	str	r3, [r4, #24]
    counterObj->hwTimerCompareValue = SYS_TIME_HW_COUNTER_HALF_PERIOD;
  40903c:	f647 73ff 	movw	r3, #32767	; 0x7fff
  409040:	61e3      	str	r3, [r4, #28]
    counterObj->swCounter64Low = 0;
  409042:	6261      	str	r1, [r4, #36]	; 0x24
    counterObj->swCounter64High = 0;
  409044:	62a1      	str	r1, [r4, #40]	; 0x28
    counterObj->tmrActive = NULL;
  409046:	6321      	str	r1, [r4, #48]	; 0x30
    counterObj->interruptNestingCount = 0;
  409048:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
    counterObj->timePlib->timerCallbackSet(SYS_TIME_PLIBCallback, 0);
  40904c:	6863      	ldr	r3, [r4, #4]
  40904e:	681b      	ldr	r3, [r3, #0]
  409050:	480f      	ldr	r0, [pc, #60]	; (409090 <.LVL138+0xa>)

00409052 <.LVL131>:
  409052:	4798      	blx	r3

00409054 <.LVL132>:
    if (counterObj->timePlib->timerPeriodSet != NULL)
  409054:	6863      	ldr	r3, [r4, #4]
  409056:	685b      	ldr	r3, [r3, #4]
  409058:	b10b      	cbz	r3, 40905e <.LVL132+0xa>
        counterObj->timePlib->timerPeriodSet(counterObj->hwTimerPeriodValue);
  40905a:	69a0      	ldr	r0, [r4, #24]
  40905c:	4798      	blx	r3
    counterObj->timePlib->timerCompareSet(counterObj->hwTimerCompareValue);
  40905e:	4c0a      	ldr	r4, [pc, #40]	; (409088 <.LVL138+0x2>)
  409060:	6863      	ldr	r3, [r4, #4]
  409062:	68db      	ldr	r3, [r3, #12]
  409064:	69e0      	ldr	r0, [r4, #28]
  409066:	4798      	blx	r3
    counterObj->timePlib->timerStart();
  409068:	6863      	ldr	r3, [r4, #4]
  40906a:	691b      	ldr	r3, [r3, #16]
  40906c:	4798      	blx	r3

0040906e <.LBE38>:
    memset(timers, 0, sizeof(timers));
  40906e:	f44f 72a0 	mov.w	r2, #320	; 0x140
  409072:	2100      	movs	r1, #0
  409074:	4807      	ldr	r0, [pc, #28]	; (409094 <.LVL138+0xe>)
  409076:	f000 f901 	bl	40927c <.LFE166>

0040907a <.LVL136>:
    gSystemCounterObj.status = SYS_STATUS_READY;
  40907a:	2302      	movs	r3, #2
  40907c:	7023      	strb	r3, [r4, #0]
    return (SYS_MODULE_OBJ)&gSystemCounterObj;
  40907e:	4620      	mov	r0, r4
  409080:	bd38      	pop	{r3, r4, r5, pc}

00409082 <.LCFI12>:
        return SYS_MODULE_OBJ_INVALID;
  409082:	f04f 30ff 	mov.w	r0, #4294967295

00409086 <.LVL138>:
  409086:	4770      	bx	lr
  409088:	2040db9c 	.word	0x2040db9c
  40908c:	11e1a300 	.word	0x11e1a300
  409090:	0040889d 	.word	0x0040889d
  409094:	2040d9bc 	.word	0x2040d9bc

Disassembly of section .text%67:

004090a0 <memchr>:
  4090a0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4090a4:	2a10      	cmp	r2, #16
  4090a6:	db2b      	blt.n	409100 <memchr+0x60>
  4090a8:	f010 0f07 	tst.w	r0, #7
  4090ac:	d008      	beq.n	4090c0 <memchr+0x20>
  4090ae:	f810 3b01 	ldrb.w	r3, [r0], #1
  4090b2:	3a01      	subs	r2, #1
  4090b4:	428b      	cmp	r3, r1
  4090b6:	d02d      	beq.n	409114 <memchr+0x74>
  4090b8:	f010 0f07 	tst.w	r0, #7
  4090bc:	b342      	cbz	r2, 409110 <memchr+0x70>
  4090be:	d1f6      	bne.n	4090ae <memchr+0xe>
  4090c0:	b4f0      	push	{r4, r5, r6, r7}
  4090c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4090c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4090ca:	f022 0407 	bic.w	r4, r2, #7
  4090ce:	f07f 0700 	mvns.w	r7, #0
  4090d2:	2300      	movs	r3, #0
  4090d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4090d8:	3c08      	subs	r4, #8
  4090da:	ea85 0501 	eor.w	r5, r5, r1
  4090de:	ea86 0601 	eor.w	r6, r6, r1
  4090e2:	fa85 f547 	uadd8	r5, r5, r7
  4090e6:	faa3 f587 	sel	r5, r3, r7
  4090ea:	fa86 f647 	uadd8	r6, r6, r7
  4090ee:	faa5 f687 	sel	r6, r5, r7
  4090f2:	b98e      	cbnz	r6, 409118 <memchr+0x78>
  4090f4:	d1ee      	bne.n	4090d4 <memchr+0x34>
  4090f6:	bcf0      	pop	{r4, r5, r6, r7}
  4090f8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4090fc:	f002 0207 	and.w	r2, r2, #7
  409100:	b132      	cbz	r2, 409110 <memchr+0x70>
  409102:	f810 3b01 	ldrb.w	r3, [r0], #1
  409106:	3a01      	subs	r2, #1
  409108:	ea83 0301 	eor.w	r3, r3, r1
  40910c:	b113      	cbz	r3, 409114 <memchr+0x74>
  40910e:	d1f8      	bne.n	409102 <memchr+0x62>
  409110:	2000      	movs	r0, #0
  409112:	4770      	bx	lr
  409114:	3801      	subs	r0, #1
  409116:	4770      	bx	lr
  409118:	2d00      	cmp	r5, #0
  40911a:	bf06      	itte	eq
  40911c:	4635      	moveq	r5, r6
  40911e:	3803      	subeq	r0, #3
  409120:	3807      	subne	r0, #7
  409122:	f015 0f01 	tst.w	r5, #1
  409126:	d107      	bne.n	409138 <memchr+0x98>
  409128:	3001      	adds	r0, #1
  40912a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40912e:	bf02      	ittt	eq
  409130:	3001      	addeq	r0, #1
  409132:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  409136:	3001      	addeq	r0, #1
  409138:	bcf0      	pop	{r4, r5, r6, r7}
  40913a:	3801      	subs	r0, #1
  40913c:	4770      	bx	lr

0040913e <L0>:
  40913e:	bf00      	nop

Disassembly of section .text.__pow5mult%68:

00409140 <__pow5mult>:
  409140:	f012 0303 	ands.w	r3, r2, #3
  409144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

00409148 <.LCFI10>:
  409148:	4614      	mov	r4, r2

0040914a <.LVL152>:
  40914a:	4607      	mov	r7, r0
  40914c:	d12e      	bne.n	4091ac <.LVL173>
  40914e:	460d      	mov	r5, r1

00409150 <.LVL153>:
  409150:	10a4      	asrs	r4, r4, #2

00409152 <.LVL154>:
  409152:	d01c      	beq.n	40918e <.LVL165>
  409154:	6cbe      	ldr	r6, [r7, #72]	; 0x48

00409156 <.LVL155>:
  409156:	b396      	cbz	r6, 4091be <.LBB20>
  409158:	07e3      	lsls	r3, r4, #31
  40915a:	f04f 0800 	mov.w	r8, #0
  40915e:	d406      	bmi.n	40916e <.LVL161>

00409160 <.LVL156>:
  409160:	1064      	asrs	r4, r4, #1

00409162 <.LVL157>:
  409162:	d014      	beq.n	40918e <.LVL165>

00409164 <.LVL158>:
  409164:	6830      	ldr	r0, [r6, #0]

00409166 <.LVL159>:
  409166:	b1a8      	cbz	r0, 409194 <.LVL166>
  409168:	4606      	mov	r6, r0

0040916a <.LVL160>:
  40916a:	07e3      	lsls	r3, r4, #31
  40916c:	d5f8      	bpl.n	409160 <.LVL156>

0040916e <.LVL161>:
  40916e:	4632      	mov	r2, r6
  409170:	4629      	mov	r1, r5
  409172:	4638      	mov	r0, r7
  409174:	f7fe fe9e 	bl	407eb4 <.LBE11>

00409178 <.LBB16>:
  409178:	b1b5      	cbz	r5, 4091a8 <.LVL171>
  40917a:	686a      	ldr	r2, [r5, #4]
  40917c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c

0040917e <.LBE16>:
  40917e:	1064      	asrs	r4, r4, #1

00409180 <.LBB19>:
  409180:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  409184:	6029      	str	r1, [r5, #0]
  409186:	f843 5022 	str.w	r5, [r3, r2, lsl #2]

0040918a <.LBE19>:
  40918a:	4605      	mov	r5, r0

0040918c <.LVL164>:
  40918c:	d1ea      	bne.n	409164 <.LVL158>

0040918e <.LVL165>:
  40918e:	4628      	mov	r0, r5
  409190:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00409194 <.LVL166>:
  409194:	4632      	mov	r2, r6
  409196:	4631      	mov	r1, r6
  409198:	4638      	mov	r0, r7

0040919a <.LVL167>:
  40919a:	f7fe fe8b 	bl	407eb4 <.LBE11>

0040919e <.LVL168>:
  40919e:	6030      	str	r0, [r6, #0]

004091a0 <.LVL169>:
  4091a0:	f8c0 8000 	str.w	r8, [r0]
  4091a4:	4606      	mov	r6, r0

004091a6 <.LVL170>:
  4091a6:	e7e0      	b.n	40916a <.LVL160>

004091a8 <.LVL171>:
  4091a8:	4605      	mov	r5, r0

004091aa <.LVL172>:
  4091aa:	e7d9      	b.n	409160 <.LVL156>

004091ac <.LVL173>:
  4091ac:	1e5a      	subs	r2, r3, #1

004091ae <.LVL174>:
  4091ae:	4d0b      	ldr	r5, [pc, #44]	; (4091dc <.LVL182+0x6>)
  4091b0:	2300      	movs	r3, #0

004091b2 <.LVL175>:
  4091b2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]

004091b6 <.LVL176>:
  4091b6:	f000 fbab 	bl	409910 <__multadd>

004091ba <.LVL177>:
  4091ba:	4605      	mov	r5, r0

004091bc <.LVL178>:
  4091bc:	e7c8      	b.n	409150 <.LVL153>

004091be <.LBB20>:
  4091be:	2101      	movs	r1, #1
  4091c0:	4638      	mov	r0, r7
  4091c2:	f000 ff85 	bl	40a0d0 <.LFE2>

004091c6 <.LVL180>:
  4091c6:	f240 2171 	movw	r1, #625	; 0x271
  4091ca:	2201      	movs	r2, #1

004091cc <.LBE20>:
  4091cc:	2300      	movs	r3, #0

004091ce <.LBB23>:
  4091ce:	6141      	str	r1, [r0, #20]
  4091d0:	6102      	str	r2, [r0, #16]
  4091d2:	4606      	mov	r6, r0

004091d4 <.LBE23>:
  4091d4:	64b8      	str	r0, [r7, #72]	; 0x48

004091d6 <.LVL182>:
  4091d6:	6003      	str	r3, [r0, #0]
  4091d8:	e7be      	b.n	409158 <.LVL155+0x2>
  4091da:	bf00      	nop
  4091dc:	0040ac80 	.word	0x0040ac80

Disassembly of section .text.wc_Sha256Final%69:

004091e0 <wc_Sha256Final>:
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};


int wc_Sha256Final(Sha256* sha256, byte* hash)
{
  4091e0:	b570      	push	{r4, r5, r6, lr}

004091e2 <.LCFI5>:
  4091e2:	b082      	sub	sp, #8

004091e4 <.LCFI6>:
  4091e4:	4605      	mov	r5, r0
  4091e6:	460c      	mov	r4, r1
    uint8_t  padn;
    uint8_t  msg_len[8];

    /* Get the number of bits */
    /* create the message bit length block */
    uint64_t total_bits = sha256->total_len << 3;
  4091e8:	f8d0 20a0 	ldr.w	r2, [r0, #160]	; 0xa0
  4091ec:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
  4091f0:	00db      	lsls	r3, r3, #3
  4091f2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4091f6:	00d1      	lsls	r1, r2, #3

004091f8 <.LVL43>:
    msg_len[0] = (uint8_t)(total_bits >> 56);
  4091f8:	0e18      	lsrs	r0, r3, #24

004091fa <.LVL44>:
  4091fa:	f88d 0000 	strb.w	r0, [sp]
    msg_len[1] = (uint8_t)(total_bits >> 48);
  4091fe:	0c18      	lsrs	r0, r3, #16
  409200:	f88d 0001 	strb.w	r0, [sp, #1]
    msg_len[2] = (uint8_t)(total_bits >> 40);
  409204:	0a18      	lsrs	r0, r3, #8
  409206:	f88d 0002 	strb.w	r0, [sp, #2]
    msg_len[3] = (uint8_t)(total_bits >> 32);
  40920a:	f88d 3003 	strb.w	r3, [sp, #3]
    msg_len[4] = (uint8_t)(total_bits >> 24);
  40920e:	0e0b      	lsrs	r3, r1, #24

00409210 <.LVL45>:
  409210:	f88d 3004 	strb.w	r3, [sp, #4]
    msg_len[5] = (uint8_t)(total_bits >> 16);
  409214:	0c0b      	lsrs	r3, r1, #16
  409216:	f88d 3005 	strb.w	r3, [sp, #5]
    msg_len[6] = (uint8_t)(total_bits >>  8);
  40921a:	0a0b      	lsrs	r3, r1, #8
  40921c:	f88d 3006 	strb.w	r3, [sp, #6]
    msg_len[7] = (uint8_t)(total_bits);
  409220:	f88d 1007 	strb.w	r1, [sp, #7]
    
    /* pad the last bits with bytes */
    last = sha256->total_len & 0x3F;
  409224:	f002 023f 	and.w	r2, r2, #63	; 0x3f

00409228 <.LVL46>:
    padn = (last < SHA256_PAD_SIZE) ? (SHA256_PAD_SIZE - last) : (120 - last);
  409228:	2a37      	cmp	r2, #55	; 0x37
  40922a:	bf94      	ite	ls
  40922c:	f1c2 0238 	rsbls	r2, r2, #56	; 0x38

00409230 <.LVL47>:
  409230:	f1c2 0278 	rsbhi	r2, r2, #120	; 0x78
  409234:	b2d2      	uxtb	r2, r2

00409236 <.LVL48>:

    /* future note: Capella will have auto padding with MSGSIZE != 0 */
    wc_Sha256Update(sha256, sha_padding, padn);
  409236:	4910      	ldr	r1, [pc, #64]	; (409278 <.LVL53+0x2>)
  409238:	4628      	mov	r0, r5
  40923a:	f000 fae8 	bl	40980e <.LFE165>

0040923e <.LVL50>:
    wc_Sha256Update(sha256, msg_len, 8);
  40923e:	2208      	movs	r2, #8
  409240:	4669      	mov	r1, sp
  409242:	4628      	mov	r0, r5
  409244:	f000 fae3 	bl	40980e <.LFE165>

00409248 <.LVL51>:

    memcpy(hash, (void *)sha256->digest, SHA256_DIGEST_SIZE);
  409248:	462b      	mov	r3, r5
  40924a:	f853 6f80 	ldr.w	r6, [r3, #128]!
  40924e:	6858      	ldr	r0, [r3, #4]
  409250:	6899      	ldr	r1, [r3, #8]
  409252:	68da      	ldr	r2, [r3, #12]
  409254:	6026      	str	r6, [r4, #0]
  409256:	6060      	str	r0, [r4, #4]
  409258:	60a1      	str	r1, [r4, #8]
  40925a:	60e2      	str	r2, [r4, #12]
  40925c:	691e      	ldr	r6, [r3, #16]
  40925e:	6958      	ldr	r0, [r3, #20]
  409260:	6999      	ldr	r1, [r3, #24]
  409262:	69da      	ldr	r2, [r3, #28]
  409264:	6126      	str	r6, [r4, #16]
  409266:	6160      	str	r0, [r4, #20]
  409268:	61a1      	str	r1, [r4, #24]
  40926a:	61e2      	str	r2, [r4, #28]

    return wc_InitSha256(sha256);
  40926c:	4628      	mov	r0, r5
  40926e:	f000 f853 	bl	409318 <wc_InitSha256>

00409272 <.LVL52>:
}
  409272:	b002      	add	sp, #8

00409274 <.LCFI7>:
  409274:	bd70      	pop	{r4, r5, r6, pc}

00409276 <.LVL53>:
  409276:	bf00      	nop
  409278:	00409890 	.word	0x00409890

Disassembly of section .text.memset%70:

0040927c <memset>:
  40927c:	b470      	push	{r4, r5, r6}

0040927e <.LCFI0>:
  40927e:	0786      	lsls	r6, r0, #30
  409280:	d046      	beq.n	409310 <.LCFI2>
  409282:	1e54      	subs	r4, r2, #1

00409284 <.LVL1>:
  409284:	2a00      	cmp	r2, #0
  409286:	d041      	beq.n	40930c <.LVL25>
  409288:	b2ca      	uxtb	r2, r1
  40928a:	4603      	mov	r3, r0
  40928c:	e002      	b.n	409294 <.LVL4>

0040928e <.LVL2>:
  40928e:	f114 34ff 	adds.w	r4, r4, #4294967295

00409292 <.LVL3>:
  409292:	d33b      	bcc.n	40930c <.LVL25>

00409294 <.LVL4>:
  409294:	f803 2b01 	strb.w	r2, [r3], #1
  409298:	079d      	lsls	r5, r3, #30
  40929a:	d1f8      	bne.n	40928e <.LVL2>

0040929c <.LVL6>:
  40929c:	2c03      	cmp	r4, #3
  40929e:	d92e      	bls.n	4092fe <.LVL22>
  4092a0:	b2cd      	uxtb	r5, r1

004092a2 <.LVL7>:
  4092a2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8

004092a6 <.LVL8>:
  4092a6:	2c0f      	cmp	r4, #15
  4092a8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16

004092ac <.LVL9>:
  4092ac:	d919      	bls.n	4092e2 <.LVL17+0x2>
  4092ae:	f103 0210 	add.w	r2, r3, #16
  4092b2:	4626      	mov	r6, r4

004092b4 <.LVL10>:
  4092b4:	3e10      	subs	r6, #16

004092b6 <.LVL11>:
  4092b6:	2e0f      	cmp	r6, #15
  4092b8:	f842 5c10 	str.w	r5, [r2, #-16]

004092bc <.LVL12>:
  4092bc:	f842 5c0c 	str.w	r5, [r2, #-12]

004092c0 <.LVL13>:
  4092c0:	f842 5c08 	str.w	r5, [r2, #-8]

004092c4 <.LVL14>:
  4092c4:	f842 5c04 	str.w	r5, [r2, #-4]
  4092c8:	f102 0210 	add.w	r2, r2, #16

004092cc <.LVL15>:
  4092cc:	d8f2      	bhi.n	4092b4 <.LVL10>
  4092ce:	f1a4 0210 	sub.w	r2, r4, #16

004092d2 <.LVL16>:
  4092d2:	f022 020f 	bic.w	r2, r2, #15
  4092d6:	f004 040f 	and.w	r4, r4, #15
  4092da:	3210      	adds	r2, #16
  4092dc:	2c03      	cmp	r4, #3
  4092de:	4413      	add	r3, r2

004092e0 <.LVL17>:
  4092e0:	d90d      	bls.n	4092fe <.LVL22>
  4092e2:	461e      	mov	r6, r3
  4092e4:	4622      	mov	r2, r4

004092e6 <.LVL18>:
  4092e6:	3a04      	subs	r2, #4

004092e8 <.LVL19>:
  4092e8:	2a03      	cmp	r2, #3
  4092ea:	f846 5b04 	str.w	r5, [r6], #4

004092ee <.LVL20>:
  4092ee:	d8fa      	bhi.n	4092e6 <.LVL18>
  4092f0:	1f22      	subs	r2, r4, #4

004092f2 <.LVL21>:
  4092f2:	f022 0203 	bic.w	r2, r2, #3
  4092f6:	3204      	adds	r2, #4
  4092f8:	4413      	add	r3, r2
  4092fa:	f004 0403 	and.w	r4, r4, #3

004092fe <.LVL22>:
  4092fe:	b12c      	cbz	r4, 40930c <.LVL25>
  409300:	b2c9      	uxtb	r1, r1

00409302 <.LVL23>:
  409302:	441c      	add	r4, r3
  409304:	f803 1b01 	strb.w	r1, [r3], #1
  409308:	429c      	cmp	r4, r3
  40930a:	d1fb      	bne.n	409304 <.LVL23+0x2>

0040930c <.LVL25>:
  40930c:	bc70      	pop	{r4, r5, r6}

0040930e <.LCFI1>:
  40930e:	4770      	bx	lr

00409310 <.LCFI2>:
  409310:	4614      	mov	r4, r2
  409312:	4603      	mov	r3, r0
  409314:	e7c2      	b.n	40929c <.LVL6>

00409316 <.LFE17>:
  409316:	bf00      	nop

Disassembly of section .text.wc_InitSha256%71:

00409318 <wc_InitSha256>:
{
  409318:	b430      	push	{r4, r5}

0040931a <.LCFI2>:
  40931a:	4603      	mov	r3, r0
    if ((PMC_REGS->PMC_PCSR1 & PmcBit) != PmcBit)
  40931c:	4a1b      	ldr	r2, [pc, #108]	; (40938c <.LCFI3+0x4>)
  40931e:	f8d2 2108 	ldr.w	r2, [r2, #264]	; 0x108
  409322:	f012 0f01 	tst.w	r2, #1
  409326:	d103      	bne.n	409330 <.LCFI2+0x16>
        PMC_REGS->PMC_PCER1 = PmcBit;
  409328:	2101      	movs	r1, #1
  40932a:	4a18      	ldr	r2, [pc, #96]	; (40938c <.LCFI3+0x4>)
  40932c:	f8c2 1100 	str.w	r1, [r2, #256]	; 0x100
    sha256->icm_descriptor.cfg.reg = 0x0;
  409330:	2000      	movs	r0, #0

00409332 <.LVL20>:
  409332:	6058      	str	r0, [r3, #4]
    sha256->icm_descriptor.cfg.bit.is_end_mon = 1;
  409334:	2204      	movs	r2, #4
  409336:	711a      	strb	r2, [r3, #4]
    sha256->icm_descriptor.cfg.bit.algo = 1;
  409338:	f04f 0200 	mov.w	r2, #0
  40933c:	2101      	movs	r1, #1
  40933e:	f361 1206 	bfi	r2, r1, #4, #3
  409342:	715a      	strb	r2, [r3, #5]
    sha256->digest[0] = 0x67E6096A;
  409344:	4a12      	ldr	r2, [pc, #72]	; (409390 <.LCFI3+0x8>)
  409346:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    sha256->digest[1] = 0x85AE67BB;
  40934a:	f102 52ee 	add.w	r2, r2, #499122176	; 0x1dc00000
  40934e:	f502 2205 	add.w	r2, r2, #544768	; 0x85000
  409352:	f602 6251 	addw	r2, r2, #3665	; 0xe51
  409356:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    sha256->digest[2] = 0x72F36E3C;
  40935a:	4a0e      	ldr	r2, [pc, #56]	; (409394 <.LCFI3+0xc>)
  40935c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
    sha256->digest[3] = 0x3AF54FA5;
  409360:	4a0d      	ldr	r2, [pc, #52]	; (409398 <.LCFI3+0x10>)
  409362:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    sha256->digest[4] = 0x7F520E51;
  409366:	4a0d      	ldr	r2, [pc, #52]	; (40939c <.LCFI3+0x14>)
  409368:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    sha256->digest[5] = 0x8C68059B;
  40936c:	4a0c      	ldr	r2, [pc, #48]	; (4093a0 <.LCFI3+0x18>)
  40936e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
    sha256->digest[6] = 0xABD9831F;
  409372:	4a0c      	ldr	r2, [pc, #48]	; (4093a4 <.LCFI3+0x1c>)
  409374:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
    sha256->digest[7] = 0x19CDE05B;
  409378:	4a0b      	ldr	r2, [pc, #44]	; (4093a8 <.LCFI3+0x20>)
  40937a:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
    sha256->total_len = 0;
  40937e:	2400      	movs	r4, #0
  409380:	2500      	movs	r5, #0
  409382:	e9c3 4528 	strd	r4, r5, [r3, #160]	; 0xa0
}
  409386:	bc30      	pop	{r4, r5}

00409388 <.LCFI3>:
  409388:	4770      	bx	lr
  40938a:	bf00      	nop
  40938c:	400e0600 	.word	0x400e0600
  409390:	67e6096a 	.word	0x67e6096a
  409394:	72f36e3c 	.word	0x72f36e3c
  409398:	3af54fa5 	.word	0x3af54fa5
  40939c:	7f520e51 	.word	0x7f520e51
  4093a0:	8c68059b 	.word	0x8c68059b
  4093a4:	abd9831f 	.word	0xabd9831f
  4093a8:	19cde05b 	.word	0x19cde05b

Disassembly of section .text.SYS_TIME_AddToList%72:

004093ac <SYS_TIME_AddToList>:
    SYS_TIME_TIMER_OBJ* tmr = counter->tmrActive;
  4093ac:	4b23      	ldr	r3, [pc, #140]	; (40943c <.LVL71>)
  4093ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30

004093b0 <.LVL52>:
    if (newTimer == NULL)
  4093b0:	2800      	cmp	r0, #0
  4093b2:	d03f      	beq.n	409434 <.LCFI6>
{
  4093b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

004093b8 <.LCFI5>:
  4093b8:	4684      	mov	ip, r0
    newTimerTime = newTimer->relativeTimePending;
  4093ba:	f8d0 8008 	ldr.w	r8, [r0, #8]

004093be <.LVL53>:
    if (tmr == NULL)
  4093be:	b1b2      	cbz	r2, 4093ee <.LVL58>
            if ((total_time + tmr->relativeTimePending) > newTimerTime)
  4093c0:	6894      	ldr	r4, [r2, #8]
  4093c2:	2500      	movs	r5, #0
  4093c4:	4646      	mov	r6, r8
  4093c6:	2700      	movs	r7, #0
  4093c8:	42af      	cmp	r7, r5
  4093ca:	bf08      	it	eq
  4093cc:	45a0      	cmpeq	r8, r4
  4093ce:	d328      	bcc.n	409422 <.LVL65>

004093d0 <.LVL54>:
            tmr = tmr->tmrNext;
  4093d0:	6993      	ldr	r3, [r2, #24]

004093d2 <.LVL55>:
        while (tmr != NULL)
  4093d2:	b18b      	cbz	r3, 4093f8 <.LVL61>
            if ((total_time + tmr->relativeTimePending) > newTimerTime)
  4093d4:	6899      	ldr	r1, [r3, #8]
  4093d6:	468e      	mov	lr, r1
  4093d8:	1860      	adds	r0, r4, r1
  4093da:	f145 0100 	adc.w	r1, r5, #0
  4093de:	428f      	cmp	r7, r1
  4093e0:	bf08      	it	eq
  4093e2:	4286      	cmpeq	r6, r0
  4093e4:	d31b      	bcc.n	40941e <.LVL64>
  4093e6:	4604      	mov	r4, r0

004093e8 <.LVL56>:
  4093e8:	460d      	mov	r5, r1
            tmr = tmr->tmrNext;
  4093ea:	461a      	mov	r2, r3

004093ec <.LVL57>:
  4093ec:	e7f0      	b.n	4093d0 <.LVL54>

004093ee <.LVL58>:
        counter->tmrActive = newTimer;
  4093ee:	4b13      	ldr	r3, [pc, #76]	; (40943c <.LVL71>)
  4093f0:	6318      	str	r0, [r3, #48]	; 0x30

004093f2 <.LVL59>:
        isHeadTimerUpdated = true;
  4093f2:	2001      	movs	r0, #1

004093f4 <.LVL60>:
  4093f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004093f8 <.LVL61>:
            tmr = tmr->tmrNext;
  4093f8:	4619      	mov	r1, r3

004093fa <.LVL62>:
        if (prevTmr == NULL)
  4093fa:	b1a2      	cbz	r2, 409426 <.LVL66>
            newTimer->tmrNext = prevTmr->tmrNext;
  4093fc:	f8cc 3018 	str.w	r3, [ip, #24]
            prevTmr->tmrNext = newTimer;
  409400:	f8c2 c018 	str.w	ip, [r2, #24]
    bool isHeadTimerUpdated = false;
  409404:	2000      	movs	r0, #0

00409406 <.LVL63>:
        newTimer->relativeTimePending = newTimerTime - total_time;
  409406:	eba8 0404 	sub.w	r4, r8, r4
  40940a:	f8cc 4008 	str.w	r4, [ip, #8]
        if (newTimer->tmrNext != NULL)
  40940e:	f8dc 3018 	ldr.w	r3, [ip, #24]
  409412:	b18b      	cbz	r3, 409438 <.LCFI7>
            newTimer->tmrNext->relativeTimePending -= newTimer->relativeTimePending;
  409414:	689a      	ldr	r2, [r3, #8]
  409416:	1b14      	subs	r4, r2, r4
  409418:	609c      	str	r4, [r3, #8]
  40941a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040941e <.LVL64>:
            tmr = tmr->tmrNext;
  40941e:	4619      	mov	r1, r3
  409420:	e7eb      	b.n	4093fa <.LVL62>

00409422 <.LVL65>:
            if ((total_time + tmr->relativeTimePending) > newTimerTime)
  409422:	4611      	mov	r1, r2
  409424:	2400      	movs	r4, #0

00409426 <.LVL66>:
            counter->tmrActive = newTimer;
  409426:	4b05      	ldr	r3, [pc, #20]	; (40943c <.LVL71>)
  409428:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
            newTimer->tmrNext = tmr;
  40942c:	f8cc 1018 	str.w	r1, [ip, #24]

00409430 <.LVL67>:
            isHeadTimerUpdated = true;
  409430:	2001      	movs	r0, #1
  409432:	e7e8      	b.n	409406 <.LVL63>

00409434 <.LCFI6>:
        return isHeadTimerUpdated;
  409434:	2000      	movs	r0, #0

00409436 <.LVL69>:
  409436:	4770      	bx	lr

00409438 <.LCFI7>:
}
  409438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040943c <.LVL71>:
  40943c:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__pic32c_data_initialization%73:

00409440 <__pic32c_data_initialization>:
  409440:	4921      	ldr	r1, [pc, #132]	; (4094c8 <.LFE163+0x88>)
  409442:	680b      	ldr	r3, [r1, #0]
  409444:	b430      	push	{r4, r5}
  409446:	b113      	cbz	r3, 40944e <__pic32c_data_initialization+0xe>
  409448:	4b20      	ldr	r3, [pc, #128]	; (4094cc <.LFE163+0x8c>)
  40944a:	681a      	ldr	r2, [r3, #0]
  40944c:	bb72      	cbnz	r2, 4094ac <__pic32c_data_initialization+0x6c>
  40944e:	4820      	ldr	r0, [pc, #128]	; (4094d0 <.LFE163+0x90>)
  409450:	2500      	movs	r5, #0
  409452:	6801      	ldr	r1, [r0, #0]
  409454:	b9c1      	cbnz	r1, 409488 <__pic32c_data_initialization+0x48>
  409456:	6842      	ldr	r2, [r0, #4]
  409458:	b332      	cbz	r2, 4094a8 <__pic32c_data_initialization+0x68>
  40945a:	6883      	ldr	r3, [r0, #8]
  40945c:	300c      	adds	r0, #12
  40945e:	b1d3      	cbz	r3, 409496 <__pic32c_data_initialization+0x56>
  409460:	3901      	subs	r1, #1
  409462:	4603      	mov	r3, r0
  409464:	f813 4b01 	ldrb.w	r4, [r3], #1
  409468:	f801 4f01 	strb.w	r4, [r1, #1]!
  40946c:	1a1c      	subs	r4, r3, r0
  40946e:	4294      	cmp	r4, r2
  409470:	d3f8      	bcc.n	409464 <__pic32c_data_initialization+0x24>
  409472:	f012 0303 	ands.w	r3, r2, #3
  409476:	bf18      	it	ne
  409478:	2301      	movne	r3, #1
  40947a:	eb03 0292 	add.w	r2, r3, r2, lsr #2
  40947e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
  409482:	6801      	ldr	r1, [r0, #0]
  409484:	2900      	cmp	r1, #0
  409486:	d0e6      	beq.n	409456 <__pic32c_data_initialization+0x16>
  409488:	6884      	ldr	r4, [r0, #8]
  40948a:	6842      	ldr	r2, [r0, #4]
  40948c:	460b      	mov	r3, r1
  40948e:	300c      	adds	r0, #12
  409490:	b93c      	cbnz	r4, 4094a2 <__pic32c_data_initialization+0x62>
  409492:	2a00      	cmp	r2, #0
  409494:	d0dd      	beq.n	409452 <__pic32c_data_initialization+0x12>
  409496:	441a      	add	r2, r3
  409498:	f803 5b01 	strb.w	r5, [r3], #1
  40949c:	4293      	cmp	r3, r2
  40949e:	d1fb      	bne.n	409498 <__pic32c_data_initialization+0x58>
  4094a0:	e7d7      	b.n	409452 <__pic32c_data_initialization+0x12>
  4094a2:	2a00      	cmp	r2, #0
  4094a4:	d1dc      	bne.n	409460 <__pic32c_data_initialization+0x20>
  4094a6:	e7e4      	b.n	409472 <__pic32c_data_initialization+0x32>
  4094a8:	bc30      	pop	{r4, r5}
  4094aa:	4770      	bx	lr
  4094ac:	428b      	cmp	r3, r1
  4094ae:	d2ce      	bcs.n	40944e <__pic32c_data_initialization+0xe>
  4094b0:	43da      	mvns	r2, r3
  4094b2:	440a      	add	r2, r1
  4094b4:	f022 0203 	bic.w	r2, r2, #3
  4094b8:	3204      	adds	r2, #4
  4094ba:	441a      	add	r2, r3
  4094bc:	2100      	movs	r1, #0
  4094be:	f843 1b04 	str.w	r1, [r3], #4
  4094c2:	4293      	cmp	r3, r2
  4094c4:	d1fb      	bne.n	4094be <__pic32c_data_initialization+0x7e>
  4094c6:	e7c2      	b.n	40944e <__pic32c_data_initialization+0xe>
  4094c8:	20400488 	.word	0x20400488
  4094cc:	20400000 	.word	0x20400000
  4094d0:	004041d8 	.word	0x004041d8

Disassembly of section .text._malloc_trim_r%74:

004094d4 <_malloc_trim_r>:
  4094d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

004094d6 <.LCFI0>:
  4094d6:	4f21      	ldr	r7, [pc, #132]	; (40955c <.LVL22+0x6>)
  4094d8:	460c      	mov	r4, r1
  4094da:	4606      	mov	r6, r0
  4094dc:	f001 fbda 	bl	40ac94 <.LFE144>

004094e0 <.LVL1>:
  4094e0:	68bb      	ldr	r3, [r7, #8]
  4094e2:	685d      	ldr	r5, [r3, #4]
  4094e4:	f1c4 046f 	rsb	r4, r4, #111	; 0x6f

004094e8 <.LVL2>:
  4094e8:	f025 0503 	bic.w	r5, r5, #3

004094ec <.LVL3>:
  4094ec:	442c      	add	r4, r5
  4094ee:	f024 047f 	bic.w	r4, r4, #127	; 0x7f
  4094f2:	3c80      	subs	r4, #128	; 0x80

004094f4 <.LVL4>:
  4094f4:	2c7f      	cmp	r4, #127	; 0x7f
  4094f6:	dd07      	ble.n	409508 <.LVL6>
  4094f8:	2100      	movs	r1, #0
  4094fa:	4630      	mov	r0, r6
  4094fc:	f001 f972 	bl	40a7e4 <_sbrk_r>

00409500 <.LVL5>:
  409500:	68bb      	ldr	r3, [r7, #8]
  409502:	442b      	add	r3, r5
  409504:	4298      	cmp	r0, r3
  409506:	d004      	beq.n	409512 <.LVL8>

00409508 <.LVL6>:
  409508:	4630      	mov	r0, r6
  40950a:	f001 fbc5 	bl	40ac98 <__malloc_unlock>

0040950e <.LVL7>:
  40950e:	2000      	movs	r0, #0
  409510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00409512 <.LVL8>:
  409512:	4261      	negs	r1, r4
  409514:	4630      	mov	r0, r6

00409516 <.LVL9>:
  409516:	f001 f965 	bl	40a7e4 <_sbrk_r>

0040951a <.LVL10>:
  40951a:	3001      	adds	r0, #1

0040951c <.LVL11>:
  40951c:	d00d      	beq.n	40953a <.LVL16>
  40951e:	4a10      	ldr	r2, [pc, #64]	; (409560 <.LVL22+0xa>)
  409520:	68b9      	ldr	r1, [r7, #8]
  409522:	6813      	ldr	r3, [r2, #0]
  409524:	1b2d      	subs	r5, r5, r4

00409526 <.LVL12>:
  409526:	f045 0501 	orr.w	r5, r5, #1
  40952a:	4630      	mov	r0, r6

0040952c <.LVL13>:
  40952c:	1b1c      	subs	r4, r3, r4

0040952e <.LVL14>:
  40952e:	604d      	str	r5, [r1, #4]
  409530:	6014      	str	r4, [r2, #0]
  409532:	f001 fbb1 	bl	40ac98 <__malloc_unlock>

00409536 <.LVL15>:
  409536:	2001      	movs	r0, #1
  409538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040953a <.LVL16>:
  40953a:	2100      	movs	r1, #0
  40953c:	4630      	mov	r0, r6

0040953e <.LVL17>:
  40953e:	f001 f951 	bl	40a7e4 <_sbrk_r>

00409542 <.LVL18>:
  409542:	68ba      	ldr	r2, [r7, #8]
  409544:	1a83      	subs	r3, r0, r2

00409546 <.LVL19>:
  409546:	2b0f      	cmp	r3, #15
  409548:	ddde      	ble.n	409508 <.LVL6>
  40954a:	4c06      	ldr	r4, [pc, #24]	; (409564 <.LVL22+0xe>)

0040954c <.LVL20>:
  40954c:	4904      	ldr	r1, [pc, #16]	; (409560 <.LVL22+0xa>)
  40954e:	6824      	ldr	r4, [r4, #0]
  409550:	f043 0301 	orr.w	r3, r3, #1

00409554 <.LVL21>:
  409554:	1b00      	subs	r0, r0, r4

00409556 <.LVL22>:
  409556:	6053      	str	r3, [r2, #4]
  409558:	6008      	str	r0, [r1, #0]
  40955a:	e7d5      	b.n	409508 <.LVL6>
  40955c:	2040d0b0 	.word	0x2040d0b0
  409560:	2040dbd4 	.word	0x2040dbd4
  409564:	2040dcb0 	.word	0x2040dcb0

Disassembly of section .text.wc_ShaFinal%75:

00409568 <wc_ShaFinal>:
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };



int wc_ShaFinal(Sha* sha, byte* hash)
{
  409568:	b570      	push	{r4, r5, r6, lr}

0040956a <.LCFI5>:
  40956a:	b082      	sub	sp, #8

0040956c <.LCFI6>:
  40956c:	4604      	mov	r4, r0
  40956e:	460d      	mov	r5, r1
    uint8_t  padn;
    uint8_t  msg_len[8];

    /* Get the number of bits */
    /* create the message bit length block */
    uint64_t total_bits = sha->total_len << 3;
  409570:	f8d0 2098 	ldr.w	r2, [r0, #152]	; 0x98
  409574:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
  409578:	00db      	lsls	r3, r3, #3
  40957a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40957e:	00d1      	lsls	r1, r2, #3

00409580 <.LVL43>:
    msg_len[0] = (uint8_t)(total_bits >> 56);
  409580:	0e18      	lsrs	r0, r3, #24

00409582 <.LVL44>:
  409582:	f88d 0000 	strb.w	r0, [sp]
    msg_len[1] = (uint8_t)(total_bits >> 48);
  409586:	0c18      	lsrs	r0, r3, #16
  409588:	f88d 0001 	strb.w	r0, [sp, #1]
    msg_len[2] = (uint8_t)(total_bits >> 40);
  40958c:	0a18      	lsrs	r0, r3, #8
  40958e:	f88d 0002 	strb.w	r0, [sp, #2]
    msg_len[3] = (uint8_t)(total_bits >> 32);
  409592:	f88d 3003 	strb.w	r3, [sp, #3]
    msg_len[4] = (uint8_t)(total_bits >> 24);
  409596:	0e0b      	lsrs	r3, r1, #24

00409598 <.LVL45>:
  409598:	f88d 3004 	strb.w	r3, [sp, #4]
    msg_len[5] = (uint8_t)(total_bits >> 16);
  40959c:	0c0b      	lsrs	r3, r1, #16
  40959e:	f88d 3005 	strb.w	r3, [sp, #5]
    msg_len[6] = (uint8_t)(total_bits >>  8);
  4095a2:	0a0b      	lsrs	r3, r1, #8
  4095a4:	f88d 3006 	strb.w	r3, [sp, #6]
    msg_len[7] = (uint8_t)(total_bits);
  4095a8:	f88d 1007 	strb.w	r1, [sp, #7]

    last = sha->total_len & 0x3F;
  4095ac:	f002 023f 	and.w	r2, r2, #63	; 0x3f

004095b0 <.LVL46>:
    padn = (last < SHA_PAD_SIZE) ? (SHA_PAD_SIZE - last) : (120 - last);
  4095b0:	2a37      	cmp	r2, #55	; 0x37
  4095b2:	bf94      	ite	ls
  4095b4:	f1c2 0238 	rsbls	r2, r2, #56	; 0x38

004095b8 <.LVL47>:
  4095b8:	f1c2 0278 	rsbhi	r2, r2, #120	; 0x78
  4095bc:	b2d2      	uxtb	r2, r2

004095be <.LVL48>:

    wc_ShaUpdate(sha, sha_padding, padn);
  4095be:	490d      	ldr	r1, [pc, #52]	; (4095f4 <.LVL53+0x2>)
  4095c0:	4620      	mov	r0, r4
  4095c2:	f000 f8e3 	bl	40978c <.LFE159>

004095c6 <.LVL50>:

    wc_ShaUpdate(sha, msg_len, 8);
  4095c6:	2208      	movs	r2, #8
  4095c8:	4669      	mov	r1, sp
  4095ca:	4620      	mov	r0, r4
  4095cc:	f000 f8de 	bl	40978c <.LFE159>

004095d0 <.LVL51>:

    memcpy(hash, sha->digest, SHA_DIGEST_SIZE);
  4095d0:	4623      	mov	r3, r4
  4095d2:	f853 2f80 	ldr.w	r2, [r3, #128]!
  4095d6:	685e      	ldr	r6, [r3, #4]
  4095d8:	6898      	ldr	r0, [r3, #8]
  4095da:	68d9      	ldr	r1, [r3, #12]
  4095dc:	602a      	str	r2, [r5, #0]
  4095de:	606e      	str	r6, [r5, #4]
  4095e0:	60a8      	str	r0, [r5, #8]
  4095e2:	60e9      	str	r1, [r5, #12]
  4095e4:	691a      	ldr	r2, [r3, #16]
  4095e6:	612a      	str	r2, [r5, #16]

    return wc_InitSha(sha);
  4095e8:	4620      	mov	r0, r4
  4095ea:	f000 fb89 	bl	409d00 <.LFE163>

004095ee <.LVL52>:
}
  4095ee:	b002      	add	sp, #8

004095f0 <.LCFI7>:
  4095f0:	bd70      	pop	{r4, r5, r6, pc}

004095f2 <.LVL53>:
  4095f2:	bf00      	nop
  4095f4:	0040a300 	.word	0x0040a300

Disassembly of section .text.PIO_Initialize%76:

004095f8 <PIO_Initialize>:
    See plib_pio.h for more details.
*/
void PIO_Initialize ( void )
{
    /* Selected System IO pins are configured as GPIO */
    MATRIX_REGS->CCFG_SYSIO |= 0x10;
  4095f8:	4a20      	ldr	r2, [pc, #128]	; (40967c <.LFE166+0x84>)
  4095fa:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  4095fe:	f043 0310 	orr.w	r3, r3, #16
  409602:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114

    /************************ PIO A Initialization ************************/
    /* PORTA PIO Disable and Peripheral Enable*/
    ((pio_registers_t*)PIO_PORT_A)->PIO_PDR = 0x200000;
  409606:	f502 22b1 	add.w	r2, r2, #362496	; 0x58800
  40960a:	f502 62c0 	add.w	r2, r2, #1536	; 0x600
  40960e:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
  409612:	6053      	str	r3, [r2, #4]
    /* PORTA Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_A)->PIO_PUDR = ~0x800;
  409614:	f46f 6300 	mvn.w	r3, #2048	; 0x800
  409618:	6613      	str	r3, [r2, #96]	; 0x60
    ((pio_registers_t*)PIO_PORT_A)->PIO_PUER = 0x800;
  40961a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40961e:	6653      	str	r3, [r2, #100]	; 0x64
    /* PORTA Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_A)->PIO_PPDDR = 0xFFFFFFFF;
  409620:	f04f 33ff 	mov.w	r3, #4294967295
  409624:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTA Output Write Enable */
    ((pio_registers_t*)PIO_PORT_A)->PIO_OWER = PIO_OWER_Msk;
  409628:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
    /* PORTA Output Direction Enable */
    ((pio_registers_t*)PIO_PORT_A)->PIO_OER = 0x20;
  40962c:	2120      	movs	r1, #32
  40962e:	6111      	str	r1, [r2, #16]
    /* PORTA Initial state High */
    ((pio_registers_t*)PIO_PORT_A)->PIO_SODR = 0x20;
  409630:	6311      	str	r1, [r2, #48]	; 0x30

    /************************ PIO B Initialization ************************/
    /* PORTB Peripheral Function Selection */
    ((pio_registers_t*)PIO_PORT_B)->PIO_ABCDSR[0]= 0x10;
  409632:	f502 7200 	add.w	r2, r2, #512	; 0x200
  409636:	2110      	movs	r1, #16
  409638:	6711      	str	r1, [r2, #112]	; 0x70
    ((pio_registers_t*)PIO_PORT_B)->PIO_ABCDSR[1]= 0x10;
  40963a:	6751      	str	r1, [r2, #116]	; 0x74
    /* PORTB PIO Disable and Peripheral Enable*/
    ((pio_registers_t*)PIO_PORT_B)->PIO_PDR = 0x10;
  40963c:	6051      	str	r1, [r2, #4]
    /* PORTB Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_B)->PIO_PUDR = 0xFFFFFFFF;
  40963e:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTB Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_B)->PIO_PPDDR = 0xFFFFFFFF;
  409640:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTB Output Write Enable */
    ((pio_registers_t*)PIO_PORT_B)->PIO_OWER = PIO_OWER_Msk;
  409644:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
    /* PORTB Output Direction Enable */
    ((pio_registers_t*)PIO_PORT_B)->PIO_OER = 0x100;
  409648:	f44f 7180 	mov.w	r1, #256	; 0x100
  40964c:	6111      	str	r1, [r2, #16]
    /* PORTB Initial state High */
    ((pio_registers_t*)PIO_PORT_B)->PIO_SODR = 0x100;
  40964e:	6311      	str	r1, [r2, #48]	; 0x30

    /************************ PIO C Initialization ************************/
    /* PORTC Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_C)->PIO_PUDR = 0xFFFFFFFF;
  409650:	f502 7200 	add.w	r2, r2, #512	; 0x200
  409654:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTC Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_C)->PIO_PPDDR = 0xFFFFFFFF;
  409656:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTC Output Write Enable */
    ((pio_registers_t*)PIO_PORT_C)->PIO_OWER = PIO_OWER_Msk;
  40965a:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0

    /************************ PIO D Initialization ************************/
    /* PORTD Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_D)->PIO_PUDR = 0xFFFFFFFF;
  40965e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  409662:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTD Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_D)->PIO_PPDDR = 0xFFFFFFFF;
  409664:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTD Output Write Enable */
    ((pio_registers_t*)PIO_PORT_D)->PIO_OWER = PIO_OWER_Msk;
  409668:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0

    /************************ PIO E Initialization ************************/
    /* PORTE Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_E)->PIO_PUDR = 0xFFFFFFFF;
  40966c:	f502 7200 	add.w	r2, r2, #512	; 0x200
  409670:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTE Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_E)->PIO_PPDDR = 0xFFFFFFFF;
  409672:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTE Output Write Enable */
    ((pio_registers_t*)PIO_PORT_E)->PIO_OWER = PIO_OWER_Msk;
  409676:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  40967a:	4770      	bx	lr
  40967c:	40088000 	.word	0x40088000

Disassembly of section .text.wc_Md5Update%77:

00409680 <wc_Md5Update>:
    if (md5 == NULL || (data == NULL && len > 0)) {
  409680:	b3a0      	cbz	r0, 4096ec <.LCFI4>
{
  409682:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

00409686 <.LCFI3>:
  409686:	460f      	mov	r7, r1
  409688:	4615      	mov	r5, r2
  40968a:	4606      	mov	r6, r0
    if (md5 == NULL || (data == NULL && len > 0)) {
  40968c:	b901      	cbnz	r1, 409690 <.LCFI3+0xa>
  40968e:	bb82      	cbnz	r2, 4096f2 <.LCFI5>
    local = (byte*)md5->buffer;
  409690:	f106 080c 	add.w	r8, r6, #12

00409694 <.LVL331>:
    if (md5->buffLen >= MD5_BLOCK_SIZE)
  409694:	6833      	ldr	r3, [r6, #0]
  409696:	2b3f      	cmp	r3, #63	; 0x3f
  409698:	d82f      	bhi.n	4096fa <.LVL346>
    while (len) {
  40969a:	b395      	cbz	r5, 409702 <.LVL348>

0040969c <.LBB141>:
            md5->buffLen = 0;
  40969c:	f04f 0900 	mov.w	r9, #0
  4096a0:	e002      	b.n	4096a8 <.LBB146>

004096a2 <.LVL332>:
  4096a2:	f8c6 9000 	str.w	r9, [r6]

004096a6 <.LBE141>:
    while (len) {
  4096a6:	b1f5      	cbz	r5, 4096e6 <.LBE144>

004096a8 <.LBB146>:
        word32 add = min(len, MD5_BLOCK_SIZE - md5->buffLen);
  4096a8:	6830      	ldr	r0, [r6, #0]

004096aa <.LVL333>:
  4096aa:	f1c0 0440 	rsb	r4, r0, #64	; 0x40

004096ae <.LBB142>:
        return a > b ? b : a;
  4096ae:	42ac      	cmp	r4, r5
  4096b0:	bf28      	it	cs
  4096b2:	462c      	movcs	r4, r5

004096b4 <.LBE142>:
        XMEMCPY(&local[md5->buffLen], data, add);
  4096b4:	4622      	mov	r2, r4
  4096b6:	4639      	mov	r1, r7
  4096b8:	4440      	add	r0, r8
  4096ba:	f7fe fa3b 	bl	407b34 <.LFE173>

004096be <.LVL336>:
        md5->buffLen += add;
  4096be:	6833      	ldr	r3, [r6, #0]
  4096c0:	4423      	add	r3, r4
  4096c2:	6033      	str	r3, [r6, #0]
        data         += add;
  4096c4:	4427      	add	r7, r4
        len          -= add;
  4096c6:	1b2d      	subs	r5, r5, r4
        if (md5->buffLen == MD5_BLOCK_SIZE) {
  4096c8:	2b40      	cmp	r3, #64	; 0x40
  4096ca:	d1ec      	bne.n	4096a6 <.LBE141>
            XTRANSFORM(md5, local);
  4096cc:	4630      	mov	r0, r6
  4096ce:	f7fc fa81 	bl	405bd4 <.LFE18>

004096d2 <.LBB144>:
    word32 tmp = md5->loLen;
  4096d2:	6872      	ldr	r2, [r6, #4]

004096d4 <.LVL340>:
    if ((md5->loLen += len) < tmp) {
  4096d4:	f102 0340 	add.w	r3, r2, #64	; 0x40
  4096d8:	6073      	str	r3, [r6, #4]
  4096da:	429a      	cmp	r2, r3
  4096dc:	d9e1      	bls.n	4096a2 <.LVL332>
        md5->hiLen++;                       /* carry low to high */
  4096de:	68b3      	ldr	r3, [r6, #8]
  4096e0:	3301      	adds	r3, #1
  4096e2:	60b3      	str	r3, [r6, #8]
  4096e4:	e7dd      	b.n	4096a2 <.LVL332>

004096e6 <.LBE144>:
    return ret;
  4096e6:	2000      	movs	r0, #0
  4096e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

004096ec <.LCFI4>:
        return BAD_FUNC_ARG;
  4096ec:	f06f 00ac 	mvn.w	r0, #172	; 0xac

004096f0 <.LVL343>:
  4096f0:	4770      	bx	lr

004096f2 <.LCFI5>:
  4096f2:	f06f 00ac 	mvn.w	r0, #172	; 0xac

004096f6 <.LVL345>:
  4096f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

004096fa <.LVL346>:
        return BUFFER_E;
  4096fa:	f06f 0083 	mvn.w	r0, #131	; 0x83

004096fe <.LVL347>:
  4096fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00409702 <.LVL348>:
    return ret;
  409702:	2000      	movs	r0, #0

00409704 <.LVL349>:
}
  409704:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .text.SYS_TIME_HwTimerCompareUpdate%78:

00409708 <SYS_TIME_HwTimerCompareUpdate>:
{
  409708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040970a <.LCFI0>:
    SYS_TIME_TIMER_OBJ* tmrActive = counterObj->tmrActive;
  40970a:	4b1f      	ldr	r3, [pc, #124]	; (409788 <.LVL29+0x8>)
  40970c:	6b19      	ldr	r1, [r3, #48]	; 0x30

0040970e <.LVL19>:
    counterObj->hwTimerPreviousValue = counterObj->hwTimerCurrentValue;
  40970e:	695a      	ldr	r2, [r3, #20]
  409710:	611a      	str	r2, [r3, #16]
    if (tmrActive != NULL)
  409712:	2900      	cmp	r1, #0
  409714:	d02f      	beq.n	409776 <.LVL27>
        if (tmrActive->relativeTimePending > SYS_TIME_HW_COUNTER_HALF_PERIOD)
  409716:	688c      	ldr	r4, [r1, #8]
  409718:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
            nextHwCounterValue = counterObj->hwTimerCurrentValue + SYS_TIME_HW_COUNTER_HALF_PERIOD;
  40971c:	bf28      	it	cs
  40971e:	f647 74ff 	movwcs	r4, #32767	; 0x7fff
            nextHwCounterValue = counterObj->hwTimerCurrentValue + tmrActive->relativeTimePending;
  409722:	4414      	add	r4, r2
  409724:	2500      	movs	r5, #0

00409726 <.LVL20>:
    currHwCounterValue = counterObj->timePlib->timerCounterGet();
  409726:	4e18      	ldr	r6, [pc, #96]	; (409788 <.LVL29+0x8>)
  409728:	6873      	ldr	r3, [r6, #4]
  40972a:	699b      	ldr	r3, [r3, #24]
  40972c:	4798      	blx	r3

0040972e <.LVL21>:
  40972e:	2100      	movs	r1, #0

00409730 <.LVL22>:
    if (currHwCounterValue < counterObj->hwTimerPreviousValue)
  409730:	6932      	ldr	r2, [r6, #16]
  409732:	2300      	movs	r3, #0
  409734:	4299      	cmp	r1, r3
  409736:	bf08      	it	eq
  409738:	4290      	cmpeq	r0, r2
  40973a:	d204      	bcs.n	409746 <.LVL24>
        currHwCounterValue = SYS_TIME_HW_COUNTER_PERIOD + currHwCounterValue;
  40973c:	f64f 72ff 	movw	r2, #65535	; 0xffff
  409740:	2300      	movs	r3, #0
  409742:	1880      	adds	r0, r0, r2

00409744 <.LVL23>:
  409744:	4159      	adcs	r1, r3

00409746 <.LVL24>:
    if (nextHwCounterValue  < (currHwCounterValue + counterObj->hwTimerCompareMargin))
  409746:	4b10      	ldr	r3, [pc, #64]	; (409788 <.LVL29+0x8>)
  409748:	6a1b      	ldr	r3, [r3, #32]
  40974a:	18c6      	adds	r6, r0, r3
  40974c:	f141 0700 	adc.w	r7, r1, #0
  409750:	42bd      	cmp	r5, r7
  409752:	bf08      	it	eq
  409754:	42b4      	cmpeq	r4, r6
  409756:	d213      	bcs.n	409780 <.LVL29>
        counterObj->hwTimerCompareValue = currHwCounterValue + counterObj->hwTimerCompareMargin;
  409758:	4418      	add	r0, r3

0040975a <.LVL25>:
  40975a:	4b0b      	ldr	r3, [pc, #44]	; (409788 <.LVL29+0x8>)
  40975c:	61d8      	str	r0, [r3, #28]
    if ((counterObj->hwTimerCompareValue & SYS_TIME_HW_COUNTER_PERIOD) == 0)
  40975e:	4b0a      	ldr	r3, [pc, #40]	; (409788 <.LVL29+0x8>)
  409760:	8b9b      	ldrh	r3, [r3, #28]
  409762:	b913      	cbnz	r3, 40976a <.LVL25+0x10>
        counterObj->hwTimerCompareValue = 1;
  409764:	2201      	movs	r2, #1
  409766:	4b08      	ldr	r3, [pc, #32]	; (409788 <.LVL29+0x8>)
  409768:	61da      	str	r2, [r3, #28]
    counterObj->timePlib->timerCompareSet(counterObj->hwTimerCompareValue);
  40976a:	4b07      	ldr	r3, [pc, #28]	; (409788 <.LVL29+0x8>)
  40976c:	685a      	ldr	r2, [r3, #4]
  40976e:	68d2      	ldr	r2, [r2, #12]
  409770:	69d8      	ldr	r0, [r3, #28]
  409772:	4790      	blx	r2
  409774:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00409776 <.LVL27>:
        nextHwCounterValue = counterObj->hwTimerCurrentValue + SYS_TIME_HW_COUNTER_HALF_PERIOD;
  409776:	f647 74ff 	movw	r4, #32767	; 0x7fff
  40977a:	4414      	add	r4, r2
  40977c:	2500      	movs	r5, #0

0040977e <.LVL28>:
  40977e:	e7d2      	b.n	409726 <.LVL20>

00409780 <.LVL29>:
        counterObj->hwTimerCompareValue = nextHwCounterValue;
  409780:	4b01      	ldr	r3, [pc, #4]	; (409788 <.LVL29+0x8>)
  409782:	61dc      	str	r4, [r3, #28]
  409784:	e7eb      	b.n	40975e <.LVL25+0x4>
  409786:	bf00      	nop
  409788:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.wc_ShaUpdate%79:

0040978c <wc_ShaUpdate>:
{
  40978c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

00409790 <.LCFI4>:
  409790:	4605      	mov	r5, r0
  409792:	460f      	mov	r7, r1
  409794:	4614      	mov	r4, r2

00409796 <.LVL22>:
    left = sha->total_len & 0x3F;
  409796:	e9d0 2326 	ldrd	r2, r3, [r0, #152]	; 0x98

0040979a <.LVL23>:
  40979a:	f002 063f 	and.w	r6, r2, #63	; 0x3f

0040979e <.LVL24>:
    sha->total_len += len;
  40979e:	1912      	adds	r2, r2, r4
  4097a0:	f143 0300 	adc.w	r3, r3, #0
  4097a4:	e9c0 2326 	strd	r2, r3, [r0, #152]	; 0x98
    if (left && len >= fill)
  4097a8:	b11e      	cbz	r6, 4097b2 <.LVL26>
  4097aa:	f1c6 0840 	rsb	r8, r6, #64	; 0x40

004097ae <.LVL25>:
  4097ae:	45a0      	cmp	r8, r4
  4097b0:	d907      	bls.n	4097c2 <.LVL28>

004097b2 <.LVL26>:
    uint32_t result = 0;
  4097b2:	f04f 0900 	mov.w	r9, #0

004097b6 <.LVL27>:
    if (len >= SHA_BLOCK_SIZE)
  4097b6:	2c3f      	cmp	r4, #63	; 0x3f
  4097b8:	d815      	bhi.n	4097e6 <.LVL35>
    if( len > 0 )
  4097ba:	bb04      	cbnz	r4, 4097fe <.LVL40>
}
  4097bc:	4648      	mov	r0, r9
  4097be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

004097c2 <.LVL28>:
        memcpy((void *)(sha->buffer + left), data, fill);
  4097c2:	f100 0940 	add.w	r9, r0, #64	; 0x40
  4097c6:	4642      	mov	r2, r8
  4097c8:	eb09 0006 	add.w	r0, r9, r6

004097cc <.LVL29>:
  4097cc:	f7fe f9b2 	bl	407b34 <.LFE173>

004097d0 <.LVL30>:
        result = Sha1Process(sha, sha->buffer, SHA_BLOCK_SIZE);
  4097d0:	2240      	movs	r2, #64	; 0x40
  4097d2:	4649      	mov	r1, r9
  4097d4:	4628      	mov	r0, r5
  4097d6:	f7ff f8c7 	bl	408968 <.LFE170>

004097da <.LVL31>:
  4097da:	4681      	mov	r9, r0

004097dc <.LVL32>:
        data += fill;
  4097dc:	4447      	add	r7, r8
        len -= fill;
  4097de:	eba4 0408 	sub.w	r4, r4, r8

004097e2 <.LVL34>:
        left = 0;
  4097e2:	2600      	movs	r6, #0
  4097e4:	e7e7      	b.n	4097b6 <.LVL27>

004097e6 <.LVL35>:
        result = Sha1Process(sha, data, len & 0xFFFFFFC0);
  4097e6:	f024 083f 	bic.w	r8, r4, #63	; 0x3f
  4097ea:	4642      	mov	r2, r8
  4097ec:	4639      	mov	r1, r7
  4097ee:	4628      	mov	r0, r5
  4097f0:	f7ff f8ba 	bl	408968 <.LFE170>

004097f4 <.LVL36>:
  4097f4:	4681      	mov	r9, r0

004097f6 <.LVL37>:
        data += (len & 0xFFFFFFC0);
  4097f6:	4447      	add	r7, r8
        len &= 0x3F;
  4097f8:	f004 043f 	and.w	r4, r4, #63	; 0x3f
  4097fc:	e7dd      	b.n	4097ba <.LVL27+0x4>

004097fe <.LVL40>:
        memcpy((void *)(sha->buffer + left), data, len);
  4097fe:	f105 0040 	add.w	r0, r5, #64	; 0x40
  409802:	4622      	mov	r2, r4
  409804:	4639      	mov	r1, r7
  409806:	4430      	add	r0, r6
  409808:	f7fe f994 	bl	407b34 <.LFE173>

0040980c <.LVL41>:
  40980c:	e7d6      	b.n	4097bc <.LVL27+0x6>

Disassembly of section .text.wc_Sha256Update%80:

0040980e <wc_Sha256Update>:
{
  40980e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

00409812 <.LCFI4>:
  409812:	4605      	mov	r5, r0
  409814:	460f      	mov	r7, r1
  409816:	4614      	mov	r4, r2

00409818 <.LVL22>:
    left = sha256->total_len & 0x3F;
  409818:	e9d0 2328 	ldrd	r2, r3, [r0, #160]	; 0xa0

0040981c <.LVL23>:
  40981c:	f002 063f 	and.w	r6, r2, #63	; 0x3f

00409820 <.LVL24>:
    sha256->total_len += len;
  409820:	1912      	adds	r2, r2, r4
  409822:	f143 0300 	adc.w	r3, r3, #0
  409826:	e9c0 2328 	strd	r2, r3, [r0, #160]	; 0xa0
    if (left && len >= fill)
  40982a:	b11e      	cbz	r6, 409834 <.LVL26>
  40982c:	f1c6 0840 	rsb	r8, r6, #64	; 0x40

00409830 <.LVL25>:
  409830:	45a0      	cmp	r8, r4
  409832:	d907      	bls.n	409844 <.LVL28>

00409834 <.LVL26>:
    int result = 0;
  409834:	f04f 0900 	mov.w	r9, #0

00409838 <.LVL27>:
    if (len >= SHA256_BLOCK_SIZE)
  409838:	2c3f      	cmp	r4, #63	; 0x3f
  40983a:	d815      	bhi.n	409868 <.LVL35>
    if (len > 0)
  40983c:	bb04      	cbnz	r4, 409880 <.LVL40>
}
  40983e:	4648      	mov	r0, r9
  409840:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00409844 <.LVL28>:
        memcpy((void *)(sha256->buffer + left), data, fill);
  409844:	f100 0940 	add.w	r9, r0, #64	; 0x40
  409848:	4642      	mov	r2, r8
  40984a:	eb09 0006 	add.w	r0, r9, r6

0040984e <.LVL29>:
  40984e:	f7fe f971 	bl	407b34 <.LFE173>

00409852 <.LVL30>:
        result = Sha256Process(sha256, sha256->buffer, SHA256_BLOCK_SIZE);
  409852:	2240      	movs	r2, #64	; 0x40
  409854:	4649      	mov	r1, r9
  409856:	4628      	mov	r0, r5
  409858:	f7fe ff3a 	bl	4086d0 <.LBE840>

0040985c <.LVL31>:
  40985c:	4681      	mov	r9, r0

0040985e <.LVL32>:
        data += fill;
  40985e:	4447      	add	r7, r8
        len -= fill;
  409860:	eba4 0408 	sub.w	r4, r4, r8

00409864 <.LVL34>:
        left = 0;
  409864:	2600      	movs	r6, #0
  409866:	e7e7      	b.n	409838 <.LVL27>

00409868 <.LVL35>:
        result = Sha256Process(sha256, data, len & 0xFFFFFFC0);
  409868:	f024 083f 	bic.w	r8, r4, #63	; 0x3f
  40986c:	4642      	mov	r2, r8
  40986e:	4639      	mov	r1, r7
  409870:	4628      	mov	r0, r5
  409872:	f7fe ff2d 	bl	4086d0 <.LBE840>

00409876 <.LVL36>:
  409876:	4681      	mov	r9, r0

00409878 <.LVL37>:
        data += (len & 0xFFFFFFC0);
  409878:	4447      	add	r7, r8
        len &= 0x3F;
  40987a:	f004 043f 	and.w	r4, r4, #63	; 0x3f
  40987e:	e7dd      	b.n	40983c <.LVL27+0x4>

00409880 <.LVL40>:
        memcpy((void *)(sha256->buffer + left), data, len);
  409880:	f105 0040 	add.w	r0, r5, #64	; 0x40
  409884:	4622      	mov	r2, r4
  409886:	4639      	mov	r1, r7
  409888:	4430      	add	r0, r6
  40988a:	f7fe f953 	bl	407b34 <.LFE173>

0040988e <.LVL41>:
    return result;
  40988e:	e7d6      	b.n	40983e <.LVL27+0x6>

Disassembly of section .rodata.sha_padding%81:

00409890 <sha_padding>:
  409890:	0080 0000 0000 0000 0000 0000 0000 0000     ................
	...

Disassembly of section .text.__multadd%82:

00409910 <__multadd>:
  409910:	b5f0      	push	{r4, r5, r6, r7, lr}

00409912 <.LCFI1>:
  409912:	690c      	ldr	r4, [r1, #16]
  409914:	b083      	sub	sp, #12

00409916 <.LCFI2>:
  409916:	460d      	mov	r5, r1
  409918:	4606      	mov	r6, r0

0040991a <.LVL13>:
  40991a:	f101 0e14 	add.w	lr, r1, #20

0040991e <.LVL14>:
  40991e:	2700      	movs	r7, #0

00409920 <.LVL15>:
  409920:	f8de 0000 	ldr.w	r0, [lr]

00409924 <.LVL16>:
  409924:	b281      	uxth	r1, r0
  409926:	fb02 3301 	mla	r3, r2, r1, r3

0040992a <.LVL17>:
  40992a:	0c01      	lsrs	r1, r0, #16
  40992c:	0c18      	lsrs	r0, r3, #16

0040992e <.LVL18>:
  40992e:	fb02 0101 	mla	r1, r2, r1, r0

00409932 <.LVL19>:
  409932:	b29b      	uxth	r3, r3

00409934 <.LVL20>:
  409934:	3701      	adds	r7, #1

00409936 <.LVL21>:
  409936:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40993a:	42bc      	cmp	r4, r7
  40993c:	f84e 3b04 	str.w	r3, [lr], #4

00409940 <.LVL22>:
  409940:	ea4f 4311 	mov.w	r3, r1, lsr #16

00409944 <.LVL23>:
  409944:	dcec      	bgt.n	409920 <.LVL15>
  409946:	b13b      	cbz	r3, 409958 <.LVL26+0x4>
  409948:	68aa      	ldr	r2, [r5, #8]

0040994a <.LVL24>:
  40994a:	4294      	cmp	r4, r2
  40994c:	da07      	bge.n	40995e <.LCFI4>

0040994e <.LVL25>:
  40994e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  409952:	3401      	adds	r4, #1

00409954 <.LVL26>:
  409954:	6153      	str	r3, [r2, #20]
  409956:	612c      	str	r4, [r5, #16]
  409958:	4628      	mov	r0, r5
  40995a:	b003      	add	sp, #12

0040995c <.LCFI3>:
  40995c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0040995e <.LCFI4>:
  40995e:	6869      	ldr	r1, [r5, #4]

00409960 <.LVL28>:
  409960:	9301      	str	r3, [sp, #4]
  409962:	3101      	adds	r1, #1
  409964:	4630      	mov	r0, r6
  409966:	f000 fbb3 	bl	40a0d0 <.LFE2>

0040996a <.LVL29>:
  40996a:	692a      	ldr	r2, [r5, #16]
  40996c:	3202      	adds	r2, #2
  40996e:	f105 010c 	add.w	r1, r5, #12
  409972:	4607      	mov	r7, r0

00409974 <.LVL30>:
  409974:	0092      	lsls	r2, r2, #2
  409976:	300c      	adds	r0, #12

00409978 <.LVL31>:
  409978:	f7fe f8dc 	bl	407b34 <.LFE173>

0040997c <.LBB12>:
  40997c:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40997e:	6869      	ldr	r1, [r5, #4]

00409980 <.LBE12>:
  409980:	9b01      	ldr	r3, [sp, #4]

00409982 <.LBB15>:
  409982:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  409986:	6028      	str	r0, [r5, #0]
  409988:	f842 5021 	str.w	r5, [r2, r1, lsl #2]

0040998c <.LBE15>:
  40998c:	463d      	mov	r5, r7

0040998e <.LVL34>:
  40998e:	e7de      	b.n	40994e <.LVL25>

Disassembly of section .text.frexp%83:

00409990 <frexp>:
  409990:	b430      	push	{r4, r5}

00409992 <.LCFI0>:
  409992:	b082      	sub	sp, #8

00409994 <.LCFI1>:
  409994:	ed8d 0b00 	vstr	d0, [sp]

00409998 <.LBB2>:
  409998:	9b01      	ldr	r3, [sp, #4]

0040999a <.LBE2>:
  40999a:	4c1b      	ldr	r4, [pc, #108]	; (409a08 <.LVL14+0x12>)

0040999c <.LBB3>:
  40999c:	9d00      	ldr	r5, [sp, #0]

0040999e <.LBE3>:
  40999e:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000

004099a2 <.LVL3>:
  4099a2:	2200      	movs	r2, #0
  4099a4:	42a1      	cmp	r1, r4
  4099a6:	6002      	str	r2, [r0, #0]
  4099a8:	dc17      	bgt.n	4099da <.LBE6+0x4>
  4099aa:	ea55 0401 	orrs.w	r4, r5, r1
  4099ae:	d014      	beq.n	4099da <.LBE6+0x4>
  4099b0:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4099b4:	db16      	blt.n	4099e4 <.LCFI4>
  4099b6:	4615      	mov	r5, r2

004099b8 <.LVL4>:
  4099b8:	f023 44ff 	bic.w	r4, r3, #2139095040	; 0x7f800000
  4099bc:	f424 04e0 	bic.w	r4, r4, #7340032	; 0x700000

004099c0 <.LBB4>:
  4099c0:	e9dd 2300 	ldrd	r2, r3, [sp]
  4099c4:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000

004099c8 <.LBE4>:
  4099c8:	1509      	asrs	r1, r1, #20

004099ca <.LBB5>:
  4099ca:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000

004099ce <.LBE5>:
  4099ce:	f2a1 31fe 	subw	r1, r1, #1022	; 0x3fe

004099d2 <.LBB6>:
  4099d2:	e9cd 2300 	strd	r2, r3, [sp]

004099d6 <.LBE6>:
  4099d6:	4429      	add	r1, r5
  4099d8:	6001      	str	r1, [r0, #0]
  4099da:	ed9d 0b00 	vldr	d0, [sp]
  4099de:	b002      	add	sp, #8

004099e0 <.LCFI2>:
  4099e0:	bc30      	pop	{r4, r5}

004099e2 <.LCFI3>:
  4099e2:	4770      	bx	lr

004099e4 <.LCFI4>:
  4099e4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 409a00 <.LVL14+0xa>
  4099e8:	ee20 7b07 	vmul.f64	d7, d0, d7
  4099ec:	ed8d 7b00 	vstr	d7, [sp]

004099f0 <.LBB7>:
  4099f0:	9b01      	ldr	r3, [sp, #4]

004099f2 <.LBE7>:
  4099f2:	f06f 0535 	mvn.w	r5, #53	; 0x35

004099f6 <.LVL14>:
  4099f6:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
  4099fa:	e7dd      	b.n	4099b8 <.LVL4>
  4099fc:	f3af 8000 	nop.w
  409a00:	00000000 	.word	0x00000000
  409a04:	43500000 	.word	0x43500000
  409a08:	7fefffff 	.word	0x7fefffff

Disassembly of section .text.CLK_Initialize%84:

00409a0c <CLK_Initialize>:
Clock Initialize
*********************************************************************************/
void CLK_Initialize( void )
{
    /* Set Flash Wait States and  Enable Code Loop Optimization */
    EFC_REGS->EEFC_FMR = EEFC_FMR_FWS(6) | EEFC_FMR_CLOE_Msk;
  409a0c:	4a17      	ldr	r2, [pc, #92]	; (409a6c <.LBE8+0xa>)
  409a0e:	4b18      	ldr	r3, [pc, #96]	; (409a70 <.LBE8+0xe>)
  409a10:	601a      	str	r2, [r3, #0]

00409a12 <.LBB6>:
    PMC_REGS->CKGR_PLLAR = CKGR_PLLAR_ONE_Msk | CKGR_PLLAR_PLLACOUNT(0x3f) |
  409a12:	4a18      	ldr	r2, [pc, #96]	; (409a74 <.LBE8+0x12>)
  409a14:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  409a18:	629a      	str	r2, [r3, #40]	; 0x28
    while ( (PMC_REGS->PMC_SR & PMC_SR_LOCKA_Msk) != PMC_SR_LOCKA_Msk);
  409a1a:	461a      	mov	r2, r3
  409a1c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  409a1e:	f013 0f02 	tst.w	r3, #2
  409a22:	d0fb      	beq.n	409a1c <.LBB6+0xa>

00409a24 <.LBB8>:
    PMC_REGS->PMC_MCKR = (PMC_REGS->PMC_MCKR & ~PMC_MCKR_PRES_Msk) | PMC_MCKR_PRES_CLK_1;
  409a24:	4a14      	ldr	r2, [pc, #80]	; (409a78 <.LBE8+0x16>)
  409a26:	6b13      	ldr	r3, [r2, #48]	; 0x30
  409a28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  409a2c:	6313      	str	r3, [r2, #48]	; 0x30
    while ((PMC_REGS->PMC_SR & PMC_SR_MCKRDY_Msk) != PMC_SR_MCKRDY_Msk);
  409a2e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  409a30:	f013 0f08 	tst.w	r3, #8
  409a34:	d0fb      	beq.n	409a2e <.LBB8+0xa>
    PMC_REGS->PMC_MCKR = (PMC_REGS->PMC_MCKR & ~PMC_MCKR_MDIV_Msk) | PMC_MCKR_MDIV_PCK_DIV2;
  409a36:	4a10      	ldr	r2, [pc, #64]	; (409a78 <.LBE8+0x16>)
  409a38:	6b13      	ldr	r3, [r2, #48]	; 0x30
  409a3a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  409a3e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  409a42:	6313      	str	r3, [r2, #48]	; 0x30
    while ((PMC_REGS->PMC_SR & PMC_SR_MCKRDY_Msk) != PMC_SR_MCKRDY_Msk);
  409a44:	6e93      	ldr	r3, [r2, #104]	; 0x68
  409a46:	f013 0f08 	tst.w	r3, #8
  409a4a:	d0fb      	beq.n	409a44 <.LBB8+0x20>
    PMC_REGS->PMC_MCKR = (PMC_REGS->PMC_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_PLLA_CLK;
  409a4c:	4a0a      	ldr	r2, [pc, #40]	; (409a78 <.LBE8+0x16>)
  409a4e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  409a50:	f023 0303 	bic.w	r3, r3, #3
  409a54:	f043 0302 	orr.w	r3, r3, #2
  409a58:	6313      	str	r3, [r2, #48]	; 0x30
    while ((PMC_REGS->PMC_SR & PMC_SR_MCKRDY_Msk) != PMC_SR_MCKRDY_Msk);
  409a5a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  409a5c:	f013 0f08 	tst.w	r3, #8
  409a60:	d0fb      	beq.n	409a5a <.LBB8+0x36>

00409a62 <.LBE8>:




    /* Enable Peripheral Clock */
    PMC_REGS->PMC_PCER0=0x835c00;
  409a62:	4a06      	ldr	r2, [pc, #24]	; (409a7c <.LBE8+0x1a>)
  409a64:	4b04      	ldr	r3, [pc, #16]	; (409a78 <.LBE8+0x16>)
  409a66:	611a      	str	r2, [r3, #16]
  409a68:	4770      	bx	lr
  409a6a:	bf00      	nop
  409a6c:	04000600 	.word	0x04000600
  409a70:	400e0c00 	.word	0x400e0c00
  409a74:	20183f01 	.word	0x20183f01
  409a78:	400e0600 	.word	0x400e0600
  409a7c:	00835c00 	.word	0x00835c00

Disassembly of section .text.APP_ShaRun_Feed%85:

00409a80 <APP_ShaRun_Feed>:
void APP_ShaRun_Feed(void) {
  409a80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

00409a84 <.LCFI6>:
  409a84:	af00      	add	r7, sp, #0

00409a86 <.LCFI7>:
  409a86:	f5ad 7d20 	sub.w	sp, sp, #640	; 0x280
  409a8a:	f10d 057f 	add.w	r5, sp, #127	; 0x7f
  409a8e:	f025 057f 	bic.w	r5, r5, #127	; 0x7f
    CRYPT_SHA_Initialize(&sha);
  409a92:	4628      	mov	r0, r5
  409a94:	f001 f845 	bl	40ab22 <.LFE163>

00409a98 <.LVL17>:
    memset(myBuf, 'a', sizeof (myBuf));
  409a98:	f44f 6280 	mov.w	r2, #1024	; 0x400
  409a9c:	2161      	movs	r1, #97	; 0x61
  409a9e:	4813      	ldr	r0, [pc, #76]	; (409aec <.LCFI8+0x4>)
  409aa0:	f7ff fbec 	bl	40927c <.LFE166>

00409aa4 <.LVL18>:
    CRYPT_SHA_DataSizeSet(&sha, 512 * 1024);
  409aa4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  409aa8:	4628      	mov	r0, r5
  409aaa:	f001 f8ad 	bl	40ac08 <.LFE164>

00409aae <.LBB14>:
    return SYS_TIME_CounterGet();
  409aae:	f7ff faf3 	bl	409098 <.LFE173>

00409ab2 <.LVL20>:
  409ab2:	4681      	mov	r9, r0

00409ab4 <.LVL21>:
  409ab4:	f44f 7400 	mov.w	r4, #512	; 0x200

00409ab8 <.LBE14>:
        CRYPT_SHA_DataAdd(&sha, myBuf, sizeof (myBuf));
  409ab8:	f8df 8030 	ldr.w	r8, [pc, #48]	; 409aec <.LCFI8+0x4>
  409abc:	f44f 6680 	mov.w	r6, #1024	; 0x400

00409ac0 <.LVL22>:
  409ac0:	4632      	mov	r2, r6
  409ac2:	4641      	mov	r1, r8
  409ac4:	4628      	mov	r0, r5
  409ac6:	f000 ff45 	bl	40a954 <.LFE166>

00409aca <.LVL23>:
    for (i = 0; i < 512; i++)
  409aca:	3c01      	subs	r4, #1

00409acc <.LVL24>:
  409acc:	d1f8      	bne.n	409ac0 <.LVL22>
    CRYPT_SHA_Finalize(&sha, appData.sha1_feed_result);
  409ace:	4c08      	ldr	r4, [pc, #32]	; (409af0 <.LCFI8+0x8>)

00409ad0 <.LVL25>:
  409ad0:	f104 01e0 	add.w	r1, r4, #224	; 0xe0
  409ad4:	4628      	mov	r0, r5
  409ad6:	f000 ff49 	bl	40a96c <.LFE169>

00409ada <.LBB16>:
    return SYS_TIME_CounterGet();
  409ada:	f7ff fadd 	bl	409098 <.LFE173>

00409ade <.LBE16>:
    appData.sha1_feed_timing = hashStop - hashStart;
  409ade:	eba0 0009 	sub.w	r0, r0, r9
  409ae2:	f8c4 00f4 	str.w	r0, [r4, #244]	; 0xf4
}
  409ae6:	46bd      	mov	sp, r7

00409ae8 <.LCFI8>:
  409ae8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409aec:	20400040 	.word	0x20400040
  409af0:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.APP_Sha256Run_Feed%86:

00409af4 <APP_Sha256Run_Feed>:
void APP_Sha256Run_Feed(void) {
  409af4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

00409af8 <.LCFI9>:
  409af8:	af00      	add	r7, sp, #0

00409afa <.LCFI10>:
  409afa:	f5ad 7d20 	sub.w	sp, sp, #640	; 0x280
  409afe:	f10d 057f 	add.w	r5, sp, #127	; 0x7f
  409b02:	f025 057f 	bic.w	r5, r5, #127	; 0x7f
    CRYPT_SHA256_Initialize(&sha256);
  409b06:	4628      	mov	r0, r5
  409b08:	f001 f813 	bl	40ab32 <.LFE167>

00409b0c <.LVL28>:
    memset(myBuf, 'a', sizeof (myBuf));
  409b0c:	f44f 6280 	mov.w	r2, #1024	; 0x400
  409b10:	2161      	movs	r1, #97	; 0x61
  409b12:	4813      	ldr	r0, [pc, #76]	; (409b60 <.LCFI11+0x4>)
  409b14:	f7ff fbb2 	bl	40927c <.LFE166>

00409b18 <.LVL29>:
    CRYPT_SHA256_DataSizeSet(&sha256, 512 * 1024);
  409b18:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  409b1c:	4628      	mov	r0, r5
  409b1e:	f001 f879 	bl	40ac14 <.LFE168>

00409b22 <.LBB22>:
    return SYS_TIME_CounterGet();
  409b22:	f7ff fab9 	bl	409098 <.LFE173>

00409b26 <.LVL31>:
  409b26:	4681      	mov	r9, r0

00409b28 <.LVL32>:
  409b28:	f44f 7400 	mov.w	r4, #512	; 0x200

00409b2c <.LBE22>:
        CRYPT_SHA256_DataAdd(&sha256, myBuf, sizeof (myBuf));
  409b2c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 409b60 <.LCFI11+0x4>
  409b30:	f44f 6680 	mov.w	r6, #1024	; 0x400

00409b34 <.LVL33>:
  409b34:	4632      	mov	r2, r6
  409b36:	4641      	mov	r1, r8
  409b38:	4628      	mov	r0, r5
  409b3a:	f000 ff23 	bl	40a984 <.LFE170>

00409b3e <.LVL34>:
    for (i = 0; i < 512; i++) {
  409b3e:	3c01      	subs	r4, #1

00409b40 <.LVL35>:
  409b40:	d1f8      	bne.n	409b34 <.LVL33>
    CRYPT_SHA256_Finalize(&sha256, appData.sha256_feed_result);
  409b42:	4c08      	ldr	r4, [pc, #32]	; (409b64 <.LCFI11+0x8>)

00409b44 <.LVL36>:
  409b44:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
  409b48:	4628      	mov	r0, r5
  409b4a:	f000 ff27 	bl	40a99c <.LFE173>

00409b4e <.LBB24>:
    return SYS_TIME_CounterGet();
  409b4e:	f7ff faa3 	bl	409098 <.LFE173>

00409b52 <.LBE24>:
    appData.sha256_feed_timing = hashStop - hashStart;
  409b52:	eba0 0009 	sub.w	r0, r0, r9
  409b56:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
}
  409b5a:	46bd      	mov	sp, r7

00409b5c <.LCFI11>:
  409b5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409b60:	20400040 	.word	0x20400040
  409b64:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text%87:

00409b68 <__do_global_dtors_aux>:
  409b68:	b510      	push	{r4, lr}
  409b6a:	4c05      	ldr	r4, [pc, #20]	; (409b80 <.LFE167+0x18>)
  409b6c:	7823      	ldrb	r3, [r4, #0]
  409b6e:	b933      	cbnz	r3, 409b7e <__do_global_dtors_aux+0x16>
  409b70:	4b04      	ldr	r3, [pc, #16]	; (409b84 <.LFE167+0x1c>)
  409b72:	b113      	cbz	r3, 409b7a <__do_global_dtors_aux+0x12>
  409b74:	4804      	ldr	r0, [pc, #16]	; (409b88 <.LFE167+0x20>)
  409b76:	f3af 8000 	nop.w
  409b7a:	2301      	movs	r3, #1
  409b7c:	7023      	strb	r3, [r4, #0]
  409b7e:	bd10      	pop	{r4, pc}
  409b80:	2040dc1c 	.word	0x2040dc1c
	...

00409b8c <frame_dummy>:
  409b8c:	4b0c      	ldr	r3, [pc, #48]	; (409bc0 <frame_dummy+0x34>)
  409b8e:	b143      	cbz	r3, 409ba2 <frame_dummy+0x16>
  409b90:	480c      	ldr	r0, [pc, #48]	; (409bc4 <frame_dummy+0x38>)
  409b92:	490d      	ldr	r1, [pc, #52]	; (409bc8 <frame_dummy+0x3c>)
  409b94:	b510      	push	{r4, lr}
  409b96:	f3af 8000 	nop.w
  409b9a:	480c      	ldr	r0, [pc, #48]	; (409bcc <frame_dummy+0x40>)
  409b9c:	6803      	ldr	r3, [r0, #0]
  409b9e:	b923      	cbnz	r3, 409baa <frame_dummy+0x1e>
  409ba0:	bd10      	pop	{r4, pc}
  409ba2:	480a      	ldr	r0, [pc, #40]	; (409bcc <frame_dummy+0x40>)
  409ba4:	6803      	ldr	r3, [r0, #0]
  409ba6:	b933      	cbnz	r3, 409bb6 <frame_dummy+0x2a>
  409ba8:	4770      	bx	lr
  409baa:	4b09      	ldr	r3, [pc, #36]	; (409bd0 <frame_dummy+0x44>)
  409bac:	2b00      	cmp	r3, #0
  409bae:	d0f7      	beq.n	409ba0 <frame_dummy+0x14>
  409bb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  409bb4:	4718      	bx	r3
  409bb6:	4b06      	ldr	r3, [pc, #24]	; (409bd0 <frame_dummy+0x44>)
  409bb8:	2b00      	cmp	r3, #0
  409bba:	d0f5      	beq.n	409ba8 <frame_dummy+0x1c>
  409bbc:	4718      	bx	r3
  409bbe:	bf00      	nop
	...
  409bc8:	2040dc20 	.word	0x2040dc20
	...

Disassembly of section .text.APP_Md5Run_Feed%88:

00409bd4 <APP_Md5Run_Feed>:
void APP_Md5Run_Feed(void) {
  409bd4:	b570      	push	{r4, r5, r6, lr}

00409bd6 <.LCFI3>:
  409bd6:	f5ad 6db7 	sub.w	sp, sp, #1464	; 0x5b8

00409bda <.LCFI4>:
    CRYPT_MD5_Initialize(&md5);
  409bda:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409bde:	f000 ff97 	bl	40ab10 <.LBE48>

00409be2 <.LVL6>:
    memset(myBuf, 'a', 1024);
  409be2:	f44f 6280 	mov.w	r2, #1024	; 0x400
  409be6:	2161      	movs	r1, #97	; 0x61
  409be8:	4668      	mov	r0, sp
  409bea:	f7ff fb47 	bl	40927c <.LFE166>

00409bee <.LVL7>:
    CRYPT_MD5_DataSizeSet(&md5, 512 * 1024);
  409bee:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  409bf2:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409bf6:	f001 f801 	bl	40abfc <.LFE173>

00409bfa <.LBB6>:
    return SYS_TIME_CounterGet();
  409bfa:	f7ff fa4d 	bl	409098 <.LFE173>

00409bfe <.LVL9>:
  409bfe:	4606      	mov	r6, r0

00409c00 <.LVL10>:
  409c00:	f44f 7400 	mov.w	r4, #512	; 0x200

00409c04 <.LBE6>:
        CRYPT_MD5_DataAdd(&md5, myBuf, sizeof (myBuf));
  409c04:	f44f 6580 	mov.w	r5, #1024	; 0x400

00409c08 <.LVL11>:
  409c08:	462a      	mov	r2, r5
  409c0a:	4669      	mov	r1, sp
  409c0c:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409c10:	f000 fe88 	bl	40a924 <CRYPT_MD5_DataAdd>

00409c14 <.LVL12>:
    for (i = 0; i < 512; i++)
  409c14:	3c01      	subs	r4, #1

00409c16 <.LVL13>:
  409c16:	d1f7      	bne.n	409c08 <.LVL11>
    CRYPT_MD5_Finalize(&md5, appData.md5_feed_result);
  409c18:	4c07      	ldr	r4, [pc, #28]	; (409c38 <.LCFI5+0x4>)

00409c1a <.LVL14>:
  409c1a:	f104 01cc 	add.w	r1, r4, #204	; 0xcc
  409c1e:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409c22:	f000 fe8b 	bl	40a93c <.LFE165>

00409c26 <.LBB8>:
    return SYS_TIME_CounterGet();
  409c26:	f7ff fa37 	bl	409098 <.LFE173>

00409c2a <.LBE8>:
    appData.md5_feed_timing = hashStop - hashStart;
  409c2a:	1b80      	subs	r0, r0, r6
  409c2c:	f8c4 00dc 	str.w	r0, [r4, #220]	; 0xdc
}
  409c30:	f50d 6db7 	add.w	sp, sp, #1464	; 0x5b8

00409c34 <.LCFI5>:
  409c34:	bd70      	pop	{r4, r5, r6, pc}
  409c36:	bf00      	nop
  409c38:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.strncpy%89:

00409c3c <strncpy>:
  409c3c:	ea40 0301 	orr.w	r3, r0, r1
  409c40:	f013 0f03 	tst.w	r3, #3
  409c44:	b470      	push	{r4, r5, r6}

00409c46 <.LCFI0>:
  409c46:	4603      	mov	r3, r0
  409c48:	d024      	beq.n	409c94 <.LVL16>

00409c4a <.LVL1>:
  409c4a:	b1a2      	cbz	r2, 409c76 <.LVL11+0xa>
  409c4c:	780c      	ldrb	r4, [r1, #0]
  409c4e:	701c      	strb	r4, [r3, #0]
  409c50:	3a01      	subs	r2, #1

00409c52 <.LVL3>:
  409c52:	3301      	adds	r3, #1
  409c54:	3101      	adds	r1, #1
  409c56:	b13c      	cbz	r4, 409c68 <.LVL10>

00409c58 <.LVL6>:
  409c58:	b16a      	cbz	r2, 409c76 <.LVL11+0xa>
  409c5a:	f811 4b01 	ldrb.w	r4, [r1], #1

00409c5e <.LVL7>:
  409c5e:	f803 4b01 	strb.w	r4, [r3], #1

00409c62 <.LVL8>:
  409c62:	3a01      	subs	r2, #1

00409c64 <.LVL9>:
  409c64:	2c00      	cmp	r4, #0
  409c66:	d1f7      	bne.n	409c58 <.LVL6>

00409c68 <.LVL10>:
  409c68:	b12a      	cbz	r2, 409c76 <.LVL11+0xa>
  409c6a:	441a      	add	r2, r3

00409c6c <.LVL11>:
  409c6c:	2100      	movs	r1, #0
  409c6e:	f803 1b01 	strb.w	r1, [r3], #1
  409c72:	429a      	cmp	r2, r3
  409c74:	d1fb      	bne.n	409c6e <.LVL11+0x2>
  409c76:	bc70      	pop	{r4, r5, r6}

00409c78 <.LCFI1>:
  409c78:	4770      	bx	lr

00409c7a <.LCFI2>:
  409c7a:	460e      	mov	r6, r1

00409c7c <.LVL14>:
  409c7c:	f851 5b04 	ldr.w	r5, [r1], #4
  409c80:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
  409c84:	ea24 0405 	bic.w	r4, r4, r5
  409c88:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  409c8c:	d105      	bne.n	409c9a <.LVL17>
  409c8e:	f843 5b04 	str.w	r5, [r3], #4

00409c92 <.LVL15>:
  409c92:	3a04      	subs	r2, #4

00409c94 <.LVL16>:
  409c94:	2a03      	cmp	r2, #3
  409c96:	d8f0      	bhi.n	409c7a <.LCFI2>
  409c98:	e7d7      	b.n	409c4a <.LVL1>

00409c9a <.LVL17>:
  409c9a:	4631      	mov	r1, r6
  409c9c:	e7d6      	b.n	409c4c <.LVL1+0x2>

00409c9e <.LFE0>:
  409c9e:	bf00      	nop

Disassembly of section .text.SYS_Initialize%90:

00409ca0 <SYS_Initialize>:

  Remarks:
 */

void SYS_Initialize ( void* data )
{
  409ca0:	b510      	push	{r4, lr}

00409ca2 <.LCFI0>:
    CLK_Initialize();
  409ca2:	f7ff feb3 	bl	409a0c <.LFE0>

00409ca6 <.LVL1>:
	PIO_Initialize();
  409ca6:	f7ff fca7 	bl	4095f8 <.LFE166>

00409caa <.LVL2>:


    NVIC_Initialize();
  409caa:	f000 fb09 	bl	40a2c0 <NVIC_Initialize>

00409cae <.LVL3>:
	RSWDT_REGS->RSWDT_MR = RSWDT_MR_WDDIS_Msk;	// Disable RSWDT 
  409cae:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  409cb2:	4a0e      	ldr	r2, [pc, #56]	; (409cec <.LVL10+0x2>)
  409cb4:	6053      	str	r3, [r2, #4]

	WDT_REGS->WDT_MR = WDT_MR_WDDIS_Msk; 		// Disable WDT 
  409cb6:	3ab0      	subs	r2, #176	; 0xb0
  409cb8:	6053      	str	r3, [r2, #4]

	BSP_Initialize();
  409cba:	f000 fe1b 	bl	40a8f4 <.LFE18>

00409cbe <.LVL4>:
 
    TC0_CH0_TimerInitialize(); 
  409cbe:	f000 fd55 	bl	40a76c <.LFE1>

00409cc2 <.LVL5>:
     
    
	USART1_Initialize();
  409cc2:	f000 fbd5 	bl	40a470 <.LFE186>

00409cc6 <.LVL6>:



    sysObj.sysConsole0 = SYS_CONSOLE_Initialize(SYS_CONSOLE_INDEX_0, (SYS_MODULE_INIT *)&consUsartInit0);
  409cc6:	490a      	ldr	r1, [pc, #40]	; (409cf0 <.LVL10+0x6>)
  409cc8:	2000      	movs	r0, #0
  409cca:	f000 fa27 	bl	40a11c <.LFE17>

00409cce <.LVL7>:
  409cce:	4c09      	ldr	r4, [pc, #36]	; (409cf4 <.LVL10+0xa>)
  409cd0:	6020      	str	r0, [r4, #0]
    sysObj.sysDebug = SYS_DEBUG_Initialize(SYS_DEBUG_INDEX_0, (SYS_MODULE_INIT*)&debugInit);
  409cd2:	4909      	ldr	r1, [pc, #36]	; (409cf8 <.LVL10+0xe>)
  409cd4:	2000      	movs	r0, #0
  409cd6:	f000 fda7 	bl	40a828 <.LFE168>

00409cda <.LVL8>:
  409cda:	6060      	str	r0, [r4, #4]

    sysObj.sysTime = SYS_TIME_Initialize(SYS_TIME_INDEX_0, (SYS_MODULE_INIT *)&sysTimeInitData);
  409cdc:	4907      	ldr	r1, [pc, #28]	; (409cfc <.LVL10+0x12>)
  409cde:	2000      	movs	r0, #0
  409ce0:	f7ff f98a 	bl	408ff8 <.LFE0>

00409ce4 <.LVL9>:
  409ce4:	60a0      	str	r0, [r4, #8]


    APP_Initialize();
  409ce6:	f000 ff83 	bl	40abf0 <APP_Initialize>

00409cea <.LVL10>:
  409cea:	bd10      	pop	{r4, pc}
  409cec:	400e1900 	.word	0x400e1900
  409cf0:	2040dc88 	.word	0x2040dc88
  409cf4:	20400000 	.word	0x20400000
  409cf8:	2040dc98 	.word	0x2040dc98
  409cfc:	2040dc90 	.word	0x2040dc90

Disassembly of section .text.wc_InitSha%91:

00409d00 <wc_InitSha>:
{
  409d00:	b430      	push	{r4, r5}

00409d02 <.LCFI2>:
  409d02:	4603      	mov	r3, r0
    if ((PMC_REGS->PMC_PCSR1 & PmcBit) != PmcBit)
  409d04:	4a12      	ldr	r2, [pc, #72]	; (409d50 <.LCFI3+0x4>)
  409d06:	f8d2 2108 	ldr.w	r2, [r2, #264]	; 0x108
  409d0a:	f012 0f01 	tst.w	r2, #1
  409d0e:	d103      	bne.n	409d18 <.LCFI2+0x16>
        PMC_REGS->PMC_PCER1 = PmcBit;
  409d10:	2101      	movs	r1, #1
  409d12:	4a0f      	ldr	r2, [pc, #60]	; (409d50 <.LCFI3+0x4>)
  409d14:	f8c2 1100 	str.w	r1, [r2, #256]	; 0x100
    sha->icm_descriptor.cfg.reg = 0x0;
  409d18:	2000      	movs	r0, #0

00409d1a <.LVL20>:
  409d1a:	6058      	str	r0, [r3, #4]
    sha->icm_descriptor.cfg.bit.is_end_mon = 1;
  409d1c:	2204      	movs	r2, #4
  409d1e:	711a      	strb	r2, [r3, #4]
    sha->digest[0] = 0x01234567;
  409d20:	4a0c      	ldr	r2, [pc, #48]	; (409d54 <.LCFI3+0x8>)
  409d22:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    sha->digest[1] = 0x89ABCDEF;
  409d26:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
  409d2a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    sha->digest[2] = 0xFEDCBA98;
  409d2e:	4a0a      	ldr	r2, [pc, #40]	; (409d58 <.LCFI3+0xc>)
  409d30:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
    sha->digest[3] = 0x76543210;
  409d34:	f1a2 3288 	sub.w	r2, r2, #2290649224	; 0x88888888
  409d38:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    sha->digest[4] = 0xF0E1D2C3;
  409d3c:	4a07      	ldr	r2, [pc, #28]	; (409d5c <.LCFI3+0x10>)
  409d3e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    sha->total_len = 0;
  409d42:	2400      	movs	r4, #0
  409d44:	2500      	movs	r5, #0
  409d46:	e9c3 4526 	strd	r4, r5, [r3, #152]	; 0x98
}
  409d4a:	bc30      	pop	{r4, r5}

00409d4c <.LCFI3>:
  409d4c:	4770      	bx	lr
  409d4e:	bf00      	nop
  409d50:	400e0600 	.word	0x400e0600
  409d54:	01234567 	.word	0x01234567
  409d58:	fedcba98 	.word	0xfedcba98
  409d5c:	f0e1d2c3 	.word	0xf0e1d2c3

Disassembly of section .text.memcmp%92:

00409d60 <memcmp>:
  409d60:	2a03      	cmp	r2, #3
  409d62:	b470      	push	{r4, r5, r6}

00409d64 <.LCFI0>:
  409d64:	d922      	bls.n	409dac <.LVL11>
  409d66:	ea40 0301 	orr.w	r3, r0, r1
  409d6a:	079b      	lsls	r3, r3, #30
  409d6c:	d011      	beq.n	409d92 <.LCFI2>

00409d6e <.LVL1>:
  409d6e:	7803      	ldrb	r3, [r0, #0]
  409d70:	780c      	ldrb	r4, [r1, #0]
  409d72:	42a3      	cmp	r3, r4
  409d74:	d11d      	bne.n	409db2 <.LVL11+0x6>
  409d76:	440a      	add	r2, r1
  409d78:	3101      	adds	r1, #1
  409d7a:	e005      	b.n	409d88 <.LVL4>

00409d7c <.LVL2>:
  409d7c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  409d80:	f811 4b01 	ldrb.w	r4, [r1], #1

00409d84 <.LVL3>:
  409d84:	42a3      	cmp	r3, r4
  409d86:	d114      	bne.n	409db2 <.LVL11+0x6>

00409d88 <.LVL4>:
  409d88:	4291      	cmp	r1, r2
  409d8a:	d1f7      	bne.n	409d7c <.LVL2>

00409d8c <.LVL5>:
  409d8c:	2000      	movs	r0, #0
  409d8e:	bc70      	pop	{r4, r5, r6}

00409d90 <.LCFI1>:
  409d90:	4770      	bx	lr

00409d92 <.LCFI2>:
  409d92:	680d      	ldr	r5, [r1, #0]
  409d94:	6806      	ldr	r6, [r0, #0]
  409d96:	42ae      	cmp	r6, r5
  409d98:	460c      	mov	r4, r1
  409d9a:	4603      	mov	r3, r0

00409d9c <.LVL7>:
  409d9c:	f101 0104 	add.w	r1, r1, #4

00409da0 <.LVL8>:
  409da0:	f100 0004 	add.w	r0, r0, #4

00409da4 <.LVL9>:
  409da4:	d108      	bne.n	409db8 <.LCFI4>
  409da6:	3a04      	subs	r2, #4

00409da8 <.LVL10>:
  409da8:	2a03      	cmp	r2, #3
  409daa:	d8f2      	bhi.n	409d92 <.LCFI2>

00409dac <.LVL11>:
  409dac:	2a00      	cmp	r2, #0
  409dae:	d1de      	bne.n	409d6e <.LVL1>
  409db0:	e7ec      	b.n	409d8c <.LVL5>
  409db2:	1b18      	subs	r0, r3, r4
  409db4:	bc70      	pop	{r4, r5, r6}

00409db6 <.LCFI3>:
  409db6:	4770      	bx	lr

00409db8 <.LCFI4>:
  409db8:	4621      	mov	r1, r4

00409dba <.LVL13>:
  409dba:	4618      	mov	r0, r3

00409dbc <.LVL14>:
  409dbc:	e7d7      	b.n	409d6e <.LVL1>

00409dbe <.LFE0>:
  409dbe:	bf00      	nop

Disassembly of section .text.__lo0bits%93:

00409dc0 <__lo0bits>:
  409dc0:	6803      	ldr	r3, [r0, #0]

00409dc2 <.LVL80>:
  409dc2:	f013 0207 	ands.w	r2, r3, #7
  409dc6:	4601      	mov	r1, r0
  409dc8:	d007      	beq.n	409dda <.LVL84>
  409dca:	07da      	lsls	r2, r3, #31
  409dcc:	d421      	bmi.n	409e12 <.LVL100>
  409dce:	0798      	lsls	r0, r3, #30

00409dd0 <.LVL81>:
  409dd0:	d421      	bmi.n	409e16 <.LVL101+0x2>
  409dd2:	089b      	lsrs	r3, r3, #2

00409dd4 <.LVL82>:
  409dd4:	600b      	str	r3, [r1, #0]

00409dd6 <.LVL83>:
  409dd6:	2002      	movs	r0, #2
  409dd8:	4770      	bx	lr

00409dda <.LVL84>:
  409dda:	b298      	uxth	r0, r3

00409ddc <.LVL85>:
  409ddc:	b198      	cbz	r0, 409e06 <.LVL96>
  409dde:	4610      	mov	r0, r2

00409de0 <.LVL86>:
  409de0:	f013 0fff 	tst.w	r3, #255	; 0xff
  409de4:	bf04      	itt	eq
  409de6:	0a1b      	lsreq	r3, r3, #8

00409de8 <.LVL87>:
  409de8:	3008      	addeq	r0, #8

00409dea <.LVL88>:
  409dea:	071a      	lsls	r2, r3, #28
  409dec:	bf04      	itt	eq
  409dee:	091b      	lsreq	r3, r3, #4

00409df0 <.LVL89>:
  409df0:	3004      	addeq	r0, #4

00409df2 <.LVL90>:
  409df2:	079a      	lsls	r2, r3, #30
  409df4:	bf04      	itt	eq
  409df6:	089b      	lsreq	r3, r3, #2

00409df8 <.LVL91>:
  409df8:	3002      	addeq	r0, #2

00409dfa <.LVL92>:
  409dfa:	07da      	lsls	r2, r3, #31
  409dfc:	d407      	bmi.n	409e0e <.LVL99>

00409dfe <.LVL93>:
  409dfe:	085b      	lsrs	r3, r3, #1

00409e00 <.LVL94>:
  409e00:	d104      	bne.n	409e0c <.LVL98>
  409e02:	2020      	movs	r0, #32

00409e04 <.LVL95>:
  409e04:	4770      	bx	lr

00409e06 <.LVL96>:
  409e06:	0c1b      	lsrs	r3, r3, #16
  409e08:	2010      	movs	r0, #16
  409e0a:	e7e9      	b.n	409de0 <.LVL86>

00409e0c <.LVL98>:
  409e0c:	3001      	adds	r0, #1

00409e0e <.LVL99>:
  409e0e:	600b      	str	r3, [r1, #0]
  409e10:	4770      	bx	lr

00409e12 <.LVL100>:
  409e12:	2000      	movs	r0, #0

00409e14 <.LVL101>:
  409e14:	4770      	bx	lr
  409e16:	085b      	lsrs	r3, r3, #1

00409e18 <.LVL102>:
  409e18:	600b      	str	r3, [r1, #0]

00409e1a <.LVL103>:
  409e1a:	2001      	movs	r0, #1
  409e1c:	4770      	bx	lr

00409e1e <.LFE22>:
  409e1e:	bf00      	nop

Disassembly of section .text._calloc_r%94:

00409e20 <_calloc_r>:
  409e20:	b510      	push	{r4, lr}

00409e22 <.LCFI0>:
  409e22:	fb02 f101 	mul.w	r1, r2, r1

00409e26 <.LVL1>:
  409e26:	f7fc fa45 	bl	4062b4 <.LFE14>

00409e2a <.LVL2>:
  409e2a:	4604      	mov	r4, r0
  409e2c:	b1d8      	cbz	r0, 409e66 <.LBE2>

00409e2e <.LVL3>:
  409e2e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  409e32:	f022 0203 	bic.w	r2, r2, #3

00409e36 <.LBB2>:
  409e36:	3a04      	subs	r2, #4

00409e38 <.LVL5>:
  409e38:	2a24      	cmp	r2, #36	; 0x24
  409e3a:	d818      	bhi.n	409e6e <.LBE4>

00409e3c <.LBB3>:
  409e3c:	2a13      	cmp	r2, #19
  409e3e:	d914      	bls.n	409e6a <.LBB4>

00409e40 <.LVL7>:
  409e40:	2300      	movs	r3, #0
  409e42:	2a1b      	cmp	r2, #27
  409e44:	6003      	str	r3, [r0, #0]

00409e46 <.LVL8>:
  409e46:	6043      	str	r3, [r0, #4]
  409e48:	d916      	bls.n	409e78 <.LBB5>

00409e4a <.LVL9>:
  409e4a:	2a24      	cmp	r2, #36	; 0x24
  409e4c:	6083      	str	r3, [r0, #8]

00409e4e <.LVL10>:
  409e4e:	60c3      	str	r3, [r0, #12]
  409e50:	bf11      	iteee	ne
  409e52:	f100 0210 	addne.w	r2, r0, #16

00409e56 <.LVL11>:
  409e56:	6103      	streq	r3, [r0, #16]
  409e58:	6143      	streq	r3, [r0, #20]
  409e5a:	f100 0218 	addeq.w	r2, r0, #24

00409e5e <.LVL12>:
  409e5e:	2300      	movs	r3, #0
  409e60:	6013      	str	r3, [r2, #0]

00409e62 <.LVL13>:
  409e62:	6053      	str	r3, [r2, #4]
  409e64:	6093      	str	r3, [r2, #8]

00409e66 <.LBE2>:
  409e66:	4620      	mov	r0, r4

00409e68 <.LVL15>:
  409e68:	bd10      	pop	{r4, pc}

00409e6a <.LBB4>:
  409e6a:	4602      	mov	r2, r0

00409e6c <.LVL17>:
  409e6c:	e7f7      	b.n	409e5e <.LVL12>

00409e6e <.LBE4>:
  409e6e:	2100      	movs	r1, #0
  409e70:	f7ff fa04 	bl	40927c <.LFE166>

00409e74 <.LBE6>:
  409e74:	4620      	mov	r0, r4
  409e76:	bd10      	pop	{r4, pc}

00409e78 <.LBB5>:
  409e78:	f100 0208 	add.w	r2, r0, #8

00409e7c <.LVL21>:
  409e7c:	e7ef      	b.n	409e5e <.LVL12>

00409e7e <.LBE5>:
  409e7e:	bf00      	nop

Disassembly of section .text.APP_Sha384Run_Feed%95:

00409e80 <APP_Sha384Run_Feed>:
void APP_Sha384Run_Feed(void) {
  409e80:	b570      	push	{r4, r5, r6, lr}

00409e82 <.LCFI12>:
  409e82:	f5ad 6da0 	sub.w	sp, sp, #1280	; 0x500

00409e86 <.LCFI13>:
    CRYPT_SHA384_Initialize(&sha384);
  409e86:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409e8a:	f000 fe5a 	bl	40ab42 <.LFE171>

00409e8e <.LVL39>:
    memset(myBuf, 'a', 1024);
  409e8e:	f44f 6280 	mov.w	r2, #1024	; 0x400
  409e92:	2161      	movs	r1, #97	; 0x61
  409e94:	4668      	mov	r0, sp
  409e96:	f7ff f9f1 	bl	40927c <.LFE166>

00409e9a <.LBB30>:
    return SYS_TIME_CounterGet();
  409e9a:	f7ff f8fd 	bl	409098 <.LFE173>

00409e9e <.LVL41>:
  409e9e:	4606      	mov	r6, r0

00409ea0 <.LVL42>:
  409ea0:	f44f 7400 	mov.w	r4, #512	; 0x200

00409ea4 <.LBE30>:
        CRYPT_SHA384_DataAdd(&sha384, myBuf, sizeof (myBuf));
  409ea4:	f44f 6580 	mov.w	r5, #1024	; 0x400

00409ea8 <.LVL43>:
  409ea8:	462a      	mov	r2, r5
  409eaa:	4669      	mov	r1, sp
  409eac:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409eb0:	f000 fd80 	bl	40a9b4 <.LFE174>

00409eb4 <.LVL44>:
    for (i = 0; i < 512; i++)
  409eb4:	3c01      	subs	r4, #1

00409eb6 <.LVL45>:
  409eb6:	d1f7      	bne.n	409ea8 <.LVL43>
    CRYPT_SHA384_Finalize(&sha384, appData.sha384_feed_result);
  409eb8:	4c07      	ldr	r4, [pc, #28]	; (409ed8 <.LCFI14+0x4>)

00409eba <.LVL46>:
  409eba:	f504 718e 	add.w	r1, r4, #284	; 0x11c
  409ebe:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409ec2:	f000 fd83 	bl	40a9cc <.LFE176>

00409ec6 <.LBB32>:
    return SYS_TIME_CounterGet();
  409ec6:	f7ff f8e7 	bl	409098 <.LFE173>

00409eca <.LBE32>:
    appData.sha384_feed_timing = hashStop - hashStart;
  409eca:	1b80      	subs	r0, r0, r6
  409ecc:	f8c4 014c 	str.w	r0, [r4, #332]	; 0x14c
}
  409ed0:	f50d 6da0 	add.w	sp, sp, #1280	; 0x500

00409ed4 <.LCFI14>:
  409ed4:	bd70      	pop	{r4, r5, r6, pc}
  409ed6:	bf00      	nop
  409ed8:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.APP_Sha512Run_Feed%96:

00409edc <APP_Sha512Run_Feed>:
void APP_Sha512Run_Feed(void) {
  409edc:	b570      	push	{r4, r5, r6, lr}

00409ede <.LCFI15>:
  409ede:	f5ad 6da4 	sub.w	sp, sp, #1312	; 0x520

00409ee2 <.LCFI16>:
    CRYPT_SHA512_Initialize(&sha512);
  409ee2:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409ee6:	f000 fe34 	bl	40ab52 <.LFE175>

00409eea <.LVL49>:
    memset(myBuf, 'a', 1024);
  409eea:	f44f 6280 	mov.w	r2, #1024	; 0x400
  409eee:	2161      	movs	r1, #97	; 0x61
  409ef0:	4668      	mov	r0, sp
  409ef2:	f7ff f9c3 	bl	40927c <.LFE166>

00409ef6 <.LBB38>:
    return SYS_TIME_CounterGet();
  409ef6:	f7ff f8cf 	bl	409098 <.LFE173>

00409efa <.LVL51>:
  409efa:	4606      	mov	r6, r0

00409efc <.LVL52>:
  409efc:	f44f 7400 	mov.w	r4, #512	; 0x200

00409f00 <.LBE38>:
        CRYPT_SHA512_DataAdd(&sha512, myBuf, sizeof (myBuf));
  409f00:	f44f 6580 	mov.w	r5, #1024	; 0x400

00409f04 <.LVL53>:
  409f04:	462a      	mov	r2, r5
  409f06:	4669      	mov	r1, sp
  409f08:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409f0c:	f000 fd6a 	bl	40a9e4 <.LFE177>

00409f10 <.LVL54>:
    for (i = 0; i < 512; i++)
  409f10:	3c01      	subs	r4, #1

00409f12 <.LVL55>:
  409f12:	d1f7      	bne.n	409f04 <.LVL53>
    CRYPT_SHA512_Finalize(&sha512, appData.sha512_feed_result);
  409f14:	4c07      	ldr	r4, [pc, #28]	; (409f34 <.LCFI17+0x4>)

00409f16 <.LVL56>:
  409f16:	f504 71a8 	add.w	r1, r4, #336	; 0x150
  409f1a:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  409f1e:	f000 fd6d 	bl	40a9fc <.LFE179>

00409f22 <.LBB40>:
    return SYS_TIME_CounterGet();
  409f22:	f7ff f8b9 	bl	409098 <.LFE173>

00409f26 <.LBE40>:
    appData.sha512_feed_timing = hashStop - hashStart;
  409f26:	1b80      	subs	r0, r0, r6
  409f28:	f8c4 0190 	str.w	r0, [r4, #400]	; 0x190
}
  409f2c:	f50d 6da4 	add.w	sp, sp, #1312	; 0x520

00409f30 <.LCFI17>:
  409f30:	bd70      	pop	{r4, r5, r6, pc}
  409f32:	bf00      	nop
  409f34:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.Console_UART_Read%97:

00409f38 <Console_UART_Read>:
    while ((readQueue.numElem < readQueue.elemArrSz) && (rdBytes < count))
  409f38:	4b15      	ldr	r3, [pc, #84]	; (409f90 <.LCFI8+0x4>)
  409f3a:	6898      	ldr	r0, [r3, #8]

00409f3c <.LVL47>:
  409f3c:	691b      	ldr	r3, [r3, #16]
  409f3e:	4298      	cmp	r0, r3
  409f40:	d222      	bcs.n	409f88 <.LBE13>
  409f42:	b30a      	cbz	r2, 409f88 <.LBE13>
{
  409f44:	b5f0      	push	{r4, r5, r6, r7, lr}

00409f46 <.LCFI6>:
    while ((readQueue.numElem < readQueue.elemArrSz) && (rdBytes < count))
  409f46:	2000      	movs	r0, #0

00409f48 <.LBB10>:
    q->qPkts[q->nextPos] = pkt;
  409f48:	4b11      	ldr	r3, [pc, #68]	; (409f90 <.LCFI8+0x4>)
  409f4a:	2701      	movs	r7, #1
    (q->nextPos < (q->elemArrSz - 1)) ? q->nextPos++ : (q->nextPos = 0);
  409f4c:	4686      	mov	lr, r0
  409f4e:	e009      	b.n	409f64 <.LBB13>

00409f50 <.LVL48>:
  409f50:	3401      	adds	r4, #1
  409f52:	605c      	str	r4, [r3, #4]
    q->numElem++;
  409f54:	689c      	ldr	r4, [r3, #8]
  409f56:	3401      	adds	r4, #1
  409f58:	609c      	str	r4, [r3, #8]

00409f5a <.LBE10>:
        rdBytes++;
  409f5a:	3001      	adds	r0, #1
    while ((readQueue.numElem < readQueue.elemArrSz) && (rdBytes < count))
  409f5c:	4282      	cmp	r2, r0
  409f5e:	d915      	bls.n	409f8c <.LCFI8>
  409f60:	42a5      	cmp	r5, r4
  409f62:	d910      	bls.n	409f86 <.LVL53>

00409f64 <.LBB13>:
    q->qPkts[q->nextPos] = pkt;
  409f64:	685d      	ldr	r5, [r3, #4]
  409f66:	68dc      	ldr	r4, [r3, #12]
  409f68:	eb04 06c5 	add.w	r6, r4, r5, lsl #3
  409f6c:	eb01 0c00 	add.w	ip, r1, r0

00409f70 <.LVL52>:
  409f70:	f844 c035 	str.w	ip, [r4, r5, lsl #3]
  409f74:	6077      	str	r7, [r6, #4]
    (q->nextPos < (q->elemArrSz - 1)) ? q->nextPos++ : (q->nextPos = 0);
  409f76:	685c      	ldr	r4, [r3, #4]
  409f78:	691d      	ldr	r5, [r3, #16]
  409f7a:	1e6e      	subs	r6, r5, #1
  409f7c:	42b4      	cmp	r4, r6
  409f7e:	d3e7      	bcc.n	409f50 <.LVL48>
  409f80:	f8c3 e004 	str.w	lr, [r3, #4]
  409f84:	e7e6      	b.n	409f54 <.LVL48+0x4>

00409f86 <.LVL53>:
  409f86:	bdf0      	pop	{r4, r5, r6, r7, pc}

00409f88 <.LBE13>:
    size_t rdBytes = 0;
  409f88:	2000      	movs	r0, #0
  409f8a:	4770      	bx	lr

00409f8c <.LCFI8>:
}
  409f8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  409f8e:	bf00      	nop
  409f90:	2040dc54 	.word	0x2040dc54

Disassembly of section .text.SYS_TIME_RemoveFromList%98:

00409f94 <SYS_TIME_RemoveFromList>:
{
  409f94:	4601      	mov	r1, r0
    SYS_TIME_TIMER_OBJ* tmr = counter->tmrActive;
  409f96:	4b13      	ldr	r3, [pc, #76]	; (409fe4 <.LVL50+0x2>)
  409f98:	6b1a      	ldr	r2, [r3, #48]	; 0x30

00409f9a <.LVL38>:
    while ((tmr != NULL) && (tmr != delTimer))
  409f9a:	b10a      	cbz	r2, 409fa0 <.LVL38+0x6>
  409f9c:	4282      	cmp	r2, r0
  409f9e:	d103      	bne.n	409fa8 <.LVL41>
    tmr = counter->tmrActive;
  409fa0:	4613      	mov	r3, r2
    SYS_TIME_TIMER_OBJ* prevTmr = NULL;
  409fa2:	2200      	movs	r2, #0

00409fa4 <.LVL39>:
  409fa4:	e005      	b.n	409fb2 <.LVL43>

00409fa6 <.LVL40>:
        tmr = tmr->tmrNext;
  409fa6:	461a      	mov	r2, r3

00409fa8 <.LVL41>:
  409fa8:	6993      	ldr	r3, [r2, #24]

00409faa <.LVL42>:
    while ((tmr != NULL) && (tmr != delTimer))
  409faa:	2b00      	cmp	r3, #0
  409fac:	bf18      	it	ne
  409fae:	4299      	cmpne	r1, r3
  409fb0:	d1f9      	bne.n	409fa6 <.LVL40>

00409fb2 <.LVL43>:
    if (tmr == NULL)
  409fb2:	b1ab      	cbz	r3, 409fe0 <.LCFI4>
{
  409fb4:	b410      	push	{r4}

00409fb6 <.LCFI1>:
    if (delTimer->tmrNext != NULL)
  409fb6:	698b      	ldr	r3, [r1, #24]

00409fb8 <.LVL44>:
  409fb8:	b11b      	cbz	r3, 409fc2 <.LVL45+0x6>
        delTimer->tmrNext->relativeTimePending += delTimer->relativeTimePending;
  409fba:	6898      	ldr	r0, [r3, #8]

00409fbc <.LVL45>:
  409fbc:	688c      	ldr	r4, [r1, #8]
  409fbe:	4420      	add	r0, r4
  409fc0:	6098      	str	r0, [r3, #8]
    if (prevTmr == NULL)
  409fc2:	b13a      	cbz	r2, 409fd4 <.LCFI3>
        prevTmr->tmrNext = delTimer->tmrNext;
  409fc4:	698b      	ldr	r3, [r1, #24]
  409fc6:	6193      	str	r3, [r2, #24]
    bool isHeadTimerUpdated = false;
  409fc8:	2000      	movs	r0, #0

00409fca <.LVL46>:
    delTimer->tmrNext = NULL;
  409fca:	2300      	movs	r3, #0
  409fcc:	618b      	str	r3, [r1, #24]
}
  409fce:	f85d 4b04 	ldr.w	r4, [sp], #4

00409fd2 <.LCFI2>:
  409fd2:	4770      	bx	lr

00409fd4 <.LCFI3>:
        counter->tmrActive = counter->tmrActive->tmrNext;
  409fd4:	4b03      	ldr	r3, [pc, #12]	; (409fe4 <.LVL50+0x2>)
  409fd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  409fd8:	6992      	ldr	r2, [r2, #24]
  409fda:	631a      	str	r2, [r3, #48]	; 0x30

00409fdc <.LVL48>:
        isHeadTimerUpdated = true;
  409fdc:	2001      	movs	r0, #1
  409fde:	e7f4      	b.n	409fca <.LVL46>

00409fe0 <.LCFI4>:
        return isHeadTimerUpdated;
  409fe0:	2000      	movs	r0, #0

00409fe2 <.LVL50>:
  409fe2:	4770      	bx	lr
  409fe4:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__libc_init_array%99:

00409fe8 <__libc_init_array>:
  409fe8:	b570      	push	{r4, r5, r6, lr}

00409fea <.LCFI0>:
  409fea:	4e0f      	ldr	r6, [pc, #60]	; (40a028 <.LVL13+0x2>)
  409fec:	4d0f      	ldr	r5, [pc, #60]	; (40a02c <.LVL13+0x6>)
  409fee:	1b76      	subs	r6, r6, r5

00409ff0 <.LVL0>:
  409ff0:	10b6      	asrs	r6, r6, #2

00409ff2 <.LVL1>:
  409ff2:	bf18      	it	ne
  409ff4:	2400      	movne	r4, #0
  409ff6:	d005      	beq.n	40a004 <.LVL5>

00409ff8 <.LVL2>:
  409ff8:	3401      	adds	r4, #1

00409ffa <.LVL3>:
  409ffa:	f855 3b04 	ldr.w	r3, [r5], #4
  409ffe:	4798      	blx	r3

0040a000 <.LVL4>:
  40a000:	42a6      	cmp	r6, r4
  40a002:	d1f9      	bne.n	409ff8 <.LVL2>

0040a004 <.LVL5>:
  40a004:	4e0a      	ldr	r6, [pc, #40]	; (40a030 <.LVL13+0xa>)

0040a006 <.LVL6>:
  40a006:	4d0b      	ldr	r5, [pc, #44]	; (40a034 <.LVL13+0xe>)
  40a008:	1b76      	subs	r6, r6, r5
  40a00a:	f7f6 f8ad 	bl	400168 <_init>

0040a00e <.LVL7>:
  40a00e:	10b6      	asrs	r6, r6, #2

0040a010 <.LVL8>:
  40a010:	bf18      	it	ne
  40a012:	2400      	movne	r4, #0
  40a014:	d006      	beq.n	40a024 <.LVL12>

0040a016 <.LVL9>:
  40a016:	3401      	adds	r4, #1

0040a018 <.LVL10>:
  40a018:	f855 3b04 	ldr.w	r3, [r5], #4
  40a01c:	4798      	blx	r3

0040a01e <.LVL11>:
  40a01e:	42a6      	cmp	r6, r4
  40a020:	d1f9      	bne.n	40a016 <.LVL9>
  40a022:	bd70      	pop	{r4, r5, r6, pc}

0040a024 <.LVL12>:
  40a024:	bd70      	pop	{r4, r5, r6, pc}

0040a026 <.LVL13>:
  40a026:	bf00      	nop
  40a028:	00400174 	.word	0x00400174
  40a02c:	00400174 	.word	0x00400174
  40a030:	0040017c 	.word	0x0040017c
  40a034:	00400174 	.word	0x00400174

Disassembly of section .text.Console_UART_Write%100:

0040a038 <Console_UART_Write>:
{
  40a038:	b538      	push	{r3, r4, r5, lr}

0040a03a <.LCFI0>:
  40a03a:	460d      	mov	r5, r1
  40a03c:	4614      	mov	r4, r2

0040a03e <.LVL3>:
    if (writeQueue.numElem >= writeQueue.elemArrSz)
  40a03e:	4b10      	ldr	r3, [pc, #64]	; (40a080 <.LVL9+0x4>)
  40a040:	689a      	ldr	r2, [r3, #8]

0040a042 <.LVL4>:
  40a042:	691b      	ldr	r3, [r3, #16]
  40a044:	429a      	cmp	r2, r3
  40a046:	d216      	bcs.n	40a076 <.LVL7>

0040a048 <.LBB4>:
    q->qPkts[q->nextPos] = pkt;
  40a048:	4b0d      	ldr	r3, [pc, #52]	; (40a080 <.LVL9+0x4>)
  40a04a:	6859      	ldr	r1, [r3, #4]
  40a04c:	68da      	ldr	r2, [r3, #12]
  40a04e:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
  40a052:	f842 5031 	str.w	r5, [r2, r1, lsl #3]
  40a056:	6044      	str	r4, [r0, #4]
    (q->nextPos < (q->elemArrSz - 1)) ? q->nextPos++ : (q->nextPos = 0);
  40a058:	685a      	ldr	r2, [r3, #4]
  40a05a:	691b      	ldr	r3, [r3, #16]
  40a05c:	3b01      	subs	r3, #1
  40a05e:	429a      	cmp	r2, r3
  40a060:	bf34      	ite	cc
  40a062:	3201      	addcc	r2, #1
  40a064:	2200      	movcs	r2, #0
  40a066:	4b06      	ldr	r3, [pc, #24]	; (40a080 <.LVL9+0x4>)
  40a068:	605a      	str	r2, [r3, #4]
    q->numElem++;
  40a06a:	4a05      	ldr	r2, [pc, #20]	; (40a080 <.LVL9+0x4>)
  40a06c:	6893      	ldr	r3, [r2, #8]
  40a06e:	3301      	adds	r3, #1
  40a070:	6093      	str	r3, [r2, #8]

0040a072 <.LBE4>:
}
  40a072:	4620      	mov	r0, r4
  40a074:	bd38      	pop	{r3, r4, r5, pc}

0040a076 <.LVL7>:
        popQueue(&writeQueue);
  40a076:	4802      	ldr	r0, [pc, #8]	; (40a080 <.LVL9+0x4>)

0040a078 <.LVL8>:
  40a078:	f000 fc04 	bl	40a884 <.LFE4>

0040a07c <.LVL9>:
  40a07c:	e7e4      	b.n	40a048 <.LBB4>
  40a07e:	bf00      	nop
  40a080:	2040dc68 	.word	0x2040dc68

Disassembly of section .text.sprintf%101:

0040a084 <sprintf>:
  40a084:	b40e      	push	{r1, r2, r3}

0040a086 <.LCFI6>:
  40a086:	b5f0      	push	{r4, r5, r6, r7, lr}

0040a088 <.LCFI7>:
  40a088:	b09c      	sub	sp, #112	; 0x70

0040a08a <.LCFI8>:
  40a08a:	ab21      	add	r3, sp, #132	; 0x84
  40a08c:	490f      	ldr	r1, [pc, #60]	; (40a0cc <.LCFI11+0x4>)
  40a08e:	f853 2b04 	ldr.w	r2, [r3], #4
  40a092:	9301      	str	r3, [sp, #4]
  40a094:	4605      	mov	r5, r0
  40a096:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40a09a:	6808      	ldr	r0, [r1, #0]

0040a09c <.LVL4>:
  40a09c:	9502      	str	r5, [sp, #8]
  40a09e:	f44f 7702 	mov.w	r7, #520	; 0x208
  40a0a2:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40a0a6:	a902      	add	r1, sp, #8
  40a0a8:	9506      	str	r5, [sp, #24]
  40a0aa:	f8ad 7014 	strh.w	r7, [sp, #20]
  40a0ae:	9404      	str	r4, [sp, #16]
  40a0b0:	9407      	str	r4, [sp, #28]
  40a0b2:	f8ad 6016 	strh.w	r6, [sp, #22]
  40a0b6:	f7f8 fc17 	bl	4028e8 <_svfprintf_r>

0040a0ba <.LVL5>:
  40a0ba:	9b02      	ldr	r3, [sp, #8]
  40a0bc:	2200      	movs	r2, #0
  40a0be:	701a      	strb	r2, [r3, #0]
  40a0c0:	b01c      	add	sp, #112	; 0x70

0040a0c2 <.LCFI9>:
  40a0c2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}

0040a0c6 <.LCFI10>:
  40a0c6:	b003      	add	sp, #12

0040a0c8 <.LCFI11>:
  40a0c8:	4770      	bx	lr
  40a0ca:	bf00      	nop
  40a0cc:	2040dca0 	.word	0x2040dca0

Disassembly of section .text._Balloc%102:

0040a0d0 <_Balloc>:
  40a0d0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40a0d2:	b570      	push	{r4, r5, r6, lr}

0040a0d4 <.LCFI0>:
  40a0d4:	4605      	mov	r5, r0
  40a0d6:	460c      	mov	r4, r1
  40a0d8:	b14b      	cbz	r3, 40a0ee <.LVL3>

0040a0da <.LVL1>:
  40a0da:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]

0040a0de <.LVL2>:
  40a0de:	b180      	cbz	r0, 40a102 <.LVL6>
  40a0e0:	6802      	ldr	r2, [r0, #0]
  40a0e2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  40a0e6:	2300      	movs	r3, #0
  40a0e8:	6103      	str	r3, [r0, #16]
  40a0ea:	60c3      	str	r3, [r0, #12]
  40a0ec:	bd70      	pop	{r4, r5, r6, pc}

0040a0ee <.LVL3>:
  40a0ee:	2221      	movs	r2, #33	; 0x21
  40a0f0:	2104      	movs	r1, #4

0040a0f2 <.LVL4>:
  40a0f2:	f7ff fe95 	bl	409e20 <_calloc_r>

0040a0f6 <.LVL5>:
  40a0f6:	64e8      	str	r0, [r5, #76]	; 0x4c
  40a0f8:	4603      	mov	r3, r0
  40a0fa:	2800      	cmp	r0, #0
  40a0fc:	d1ed      	bne.n	40a0da <.LVL1>
  40a0fe:	2000      	movs	r0, #0
  40a100:	bd70      	pop	{r4, r5, r6, pc}

0040a102 <.LVL6>:
  40a102:	2101      	movs	r1, #1
  40a104:	fa01 f604 	lsl.w	r6, r1, r4
  40a108:	1d72      	adds	r2, r6, #5
  40a10a:	4628      	mov	r0, r5

0040a10c <.LVL8>:
  40a10c:	0092      	lsls	r2, r2, #2
  40a10e:	f7ff fe87 	bl	409e20 <_calloc_r>

0040a112 <.LVL9>:
  40a112:	2800      	cmp	r0, #0
  40a114:	d0f3      	beq.n	40a0fe <.LVL5+0x8>
  40a116:	6044      	str	r4, [r0, #4]
  40a118:	6086      	str	r6, [r0, #8]
  40a11a:	e7e4      	b.n	40a0e6 <.LVL2+0x8>

Disassembly of section .text.SYS_CONSOLE_Initialize%103:

0040a11c <SYS_CONSOLE_Initialize>:
SYS_MODULE_OBJ SYS_CONSOLE_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init )
{
    SYS_CONSOLE_INIT *initConfig = (SYS_CONSOLE_INIT*)init;

    /* Confirm valid arguments */
    if (index >= SYS_CONSOLE_DEVICE_MAX_INSTANCES || init == NULL)
  40a11c:	b908      	cbnz	r0, 40a122 <SYS_CONSOLE_Initialize+0x6>
  40a11e:	4603      	mov	r3, r0
  40a120:	b911      	cbnz	r1, 40a128 <.LVL2>
        return SYS_MODULE_OBJ_INVALID;
  40a122:	f04f 30ff 	mov.w	r0, #4294967295

0040a126 <.LVL1>:
  40a126:	4770      	bx	lr

0040a128 <.LVL2>:

    if ((consoleDeviceInstance[index].consoleDeviceInstanceStatus == SYS_STATUS_UNINITIALIZED) && initConfig)
  40a128:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  40a12c:	480c      	ldr	r0, [pc, #48]	; (40a160 <.LVL5+0x6>)

0040a12e <.LVL3>:
  40a12e:	f910 2022 	ldrsb.w	r2, [r0, r2, lsl #2]
  40a132:	b992      	cbnz	r2, 40a15a <.LVL5>
  40a134:	b189      	cbz	r1, 40a15a <.LVL5>
{
  40a136:	b430      	push	{r4, r5}

0040a138 <.LCFI0>:
    {
        consoleDeviceInstance[index].consoleDevHandle = CONSOLE_DEVICE_HANDLE_INVALID;
  40a138:	4604      	mov	r4, r0
  40a13a:	005a      	lsls	r2, r3, #1
  40a13c:	18d0      	adds	r0, r2, r3
  40a13e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
  40a142:	f04f 35ff 	mov.w	r5, #4294967295
  40a146:	6085      	str	r5, [r0, #8]

        consoleDeviceInstance[index].consoleInstanceDevDesc = initConfig->consDevDesc;
  40a148:	6849      	ldr	r1, [r1, #4]

0040a14a <.LVL4>:
  40a14a:	6041      	str	r1, [r0, #4]
        consoleDeviceInstance[index].consoleDeviceInstanceStatus = SYS_STATUS_READY;
  40a14c:	441a      	add	r2, r3
  40a14e:	2102      	movs	r1, #2
  40a150:	f804 1022 	strb.w	r1, [r4, r2, lsl #2]

        return index;
  40a154:	4618      	mov	r0, r3
    }

    return SYS_MODULE_OBJ_INVALID;
}
  40a156:	bc30      	pop	{r4, r5}

0040a158 <.LCFI1>:
  40a158:	4770      	bx	lr

0040a15a <.LVL5>:
    return SYS_MODULE_OBJ_INVALID;
  40a15a:	f04f 30ff 	mov.w	r0, #4294967295
  40a15e:	4770      	bx	lr
  40a160:	2040dc7c 	.word	0x2040dc7c

Disassembly of section .text.Console_UART_Status%104:

0040a164 <Console_UART_Status>:
    if (consUartData.state == CONSOLE_UART_STATE_INIT)
  40a164:	4b0e      	ldr	r3, [pc, #56]	; (40a1a0 <.LFE0+0x3c>)
  40a166:	781b      	ldrb	r3, [r3, #0]
  40a168:	b1ab      	cbz	r3, 40a196 <Console_UART_Status+0x32>
    if (consUartData.state == CONSOLE_UART_STATE_CRITICAL_ERROR || consUartData.state == CONSOLE_UART_STATE_OPERATIONAL_ERROR || consUartData.overflowFlag)
  40a16a:	3b07      	subs	r3, #7
  40a16c:	b2db      	uxtb	r3, r3
  40a16e:	2b01      	cmp	r3, #1
  40a170:	d913      	bls.n	40a19a <Console_UART_Status+0x36>
  40a172:	4b0b      	ldr	r3, [pc, #44]	; (40a1a0 <.LFE0+0x3c>)
  40a174:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
  40a178:	b10b      	cbz	r3, 40a17e <Console_UART_Status+0x1a>
        status = SYS_CONSOLE_STATUS_ERROR;
  40a17a:	2003      	movs	r0, #3
  40a17c:	4770      	bx	lr
        status = (writeQueue.numElem || readQueue.numElem) ? SYS_CONSOLE_STATUS_BUSY : SYS_CONSOLE_STATUS_CONFIGURED;
  40a17e:	4b09      	ldr	r3, [pc, #36]	; (40a1a4 <.LFE0+0x40>)
  40a180:	689b      	ldr	r3, [r3, #8]
  40a182:	b10b      	cbz	r3, 40a188 <Console_UART_Status+0x24>
  40a184:	2002      	movs	r0, #2
}
  40a186:	4770      	bx	lr
        status = (writeQueue.numElem || readQueue.numElem) ? SYS_CONSOLE_STATUS_BUSY : SYS_CONSOLE_STATUS_CONFIGURED;
  40a188:	4b07      	ldr	r3, [pc, #28]	; (40a1a8 <.LFE0+0x44>)
  40a18a:	689b      	ldr	r3, [r3, #8]
  40a18c:	2b00      	cmp	r3, #0
  40a18e:	bf14      	ite	ne
  40a190:	2002      	movne	r0, #2
  40a192:	2001      	moveq	r0, #1
  40a194:	4770      	bx	lr
        return status;
  40a196:	2000      	movs	r0, #0
  40a198:	4770      	bx	lr
        status = SYS_CONSOLE_STATUS_ERROR;
  40a19a:	2003      	movs	r0, #3
  40a19c:	4770      	bx	lr
  40a19e:	bf00      	nop
  40a1a0:	2040db4c 	.word	0x2040db4c
  40a1a4:	2040dc68 	.word	0x2040dc68
  40a1a8:	2040dc54 	.word	0x2040dc54

Disassembly of section .text.USART1_Write%105:

0040a1ac <USART1_Write>:
bool USART1_Write( void *buffer, const size_t size )
{
    bool status = false;
    uint8_t * lBuffer = (uint8_t *)buffer;

    if(NULL != lBuffer)
  40a1ac:	b1c8      	cbz	r0, 40a1e2 <.LVL38>
    {
        /* Check if transmit request is in progress */
        if(usart1Obj.txBusyStatus == false)
  40a1ae:	4b0f      	ldr	r3, [pc, #60]	; (40a1ec <.LVL41+0x4>)
  40a1b0:	7d1b      	ldrb	r3, [r3, #20]
  40a1b2:	b9c3      	cbnz	r3, 40a1e6 <.LVL40>
        {
            usart1Obj.txBuffer = lBuffer;
  40a1b4:	4b0d      	ldr	r3, [pc, #52]	; (40a1ec <.LVL41+0x4>)
  40a1b6:	6018      	str	r0, [r3, #0]
            usart1Obj.txSize = size;
  40a1b8:	6059      	str	r1, [r3, #4]
            usart1Obj.txProcessedSize = 0;
  40a1ba:	2100      	movs	r1, #0

0040a1bc <.LVL35>:
  40a1bc:	6099      	str	r1, [r3, #8]
            usart1Obj.txBusyStatus = true;
  40a1be:	2101      	movs	r1, #1
  40a1c0:	7519      	strb	r1, [r3, #20]

0040a1c2 <.LVL36>:
            status = true;

            /* Initiate the transfer by sending first byte */
            if(US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk))
  40a1c2:	4b0b      	ldr	r3, [pc, #44]	; (40a1f0 <.LVL41+0x8>)
  40a1c4:	695b      	ldr	r3, [r3, #20]
  40a1c6:	f413 7f00 	tst.w	r3, #512	; 0x200
  40a1ca:	d004      	beq.n	40a1d6 <.LVL36+0x14>
            {
                USART1_REGS->US_THR = (US_THR_TXCHR(*lBuffer) & US_THR_TXCHR_Msk);
  40a1cc:	7802      	ldrb	r2, [r0, #0]
  40a1ce:	4b08      	ldr	r3, [pc, #32]	; (40a1f0 <.LVL41+0x8>)
  40a1d0:	61da      	str	r2, [r3, #28]
                usart1Obj.txProcessedSize++;
  40a1d2:	4b06      	ldr	r3, [pc, #24]	; (40a1ec <.LVL41+0x4>)
  40a1d4:	6099      	str	r1, [r3, #8]
            }

            USART1_REGS->US_IER = US_IER_TXEMPTY_Msk;
  40a1d6:	f44f 7200 	mov.w	r2, #512	; 0x200
  40a1da:	4b05      	ldr	r3, [pc, #20]	; (40a1f0 <.LVL41+0x8>)
  40a1dc:	609a      	str	r2, [r3, #8]
            status = true;
  40a1de:	2001      	movs	r0, #1

0040a1e0 <.LVL37>:
  40a1e0:	4770      	bx	lr

0040a1e2 <.LVL38>:
    bool status = false;
  40a1e2:	2000      	movs	r0, #0

0040a1e4 <.LVL39>:
  40a1e4:	4770      	bx	lr

0040a1e6 <.LVL40>:
  40a1e6:	2000      	movs	r0, #0

0040a1e8 <.LVL41>:
        }
    }

    return status;
}
  40a1e8:	4770      	bx	lr
  40a1ea:	bf00      	nop
  40a1ec:	20400454 	.word	0x20400454
  40a1f0:	40028000 	.word	0x40028000

Disassembly of section .text.SYS_INT_SourceDisable%106:

0040a1f4 <SYS_INT_SourceDisable>:

    return;
}

bool SYS_INT_SourceDisable( INT_SOURCE source )
{
  40a1f4:	b538      	push	{r3, r4, r5, lr}

0040a1f6 <.LCFI0>:
  40a1f6:	4604      	mov	r4, r0
    bool processorStatus;
    bool intSrcStatus;

    processorStatus = SYS_INT_Disable();
  40a1f8:	f000 fc78 	bl	40aaec <SYS_INT_Disable>

0040a1fc <.LBB50>:
  if ((int32_t)(IRQn) >= 0)
  40a1fc:	2c00      	cmp	r4, #0
  40a1fe:	db16      	blt.n	40a22e <.LVL9>
    return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
  40a200:	0963      	lsrs	r3, r4, #5
  40a202:	490c      	ldr	r1, [pc, #48]	; (40a234 <.LVL9+0x6>)
  40a204:	f851 5023 	ldr.w	r5, [r1, r3, lsl #2]
  40a208:	f004 041f 	and.w	r4, r4, #31

0040a20c <.LVL5>:
  40a20c:	40e5      	lsrs	r5, r4

0040a20e <.LBE50>:

    intSrcStatus = NVIC_GetEnableIRQ(source);
  40a20e:	f005 0501 	and.w	r5, r5, #1

0040a212 <.LBB52>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40a212:	2201      	movs	r2, #1
  40a214:	fa02 f404 	lsl.w	r4, r2, r4
  40a218:	3320      	adds	r3, #32
  40a21a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]

0040a21e <.LBB54>:
  __ASM volatile ("dsb 0xF":::"memory");
  40a21e:	f3bf 8f4f 	dsb	sy

0040a222 <.LBB56>:
  __ASM volatile ("isb 0xF":::"memory");
  40a222:	f3bf 8f6f 	isb	sy

0040a226 <.LBE52>:

    NVIC_DisableIRQ( source );

    SYS_INT_Restore( processorStatus );
  40a226:	f000 fc6a 	bl	40aafe <.LFE142>

0040a22a <.LVL8>:

    /* return the source status */
    return intSrcStatus;
  40a22a:	4628      	mov	r0, r5
  40a22c:	bd38      	pop	{r3, r4, r5, pc}

0040a22e <.LVL9>:
    intSrcStatus = NVIC_GetEnableIRQ(source);
  40a22e:	2500      	movs	r5, #0
  40a230:	e7f9      	b.n	40a226 <.LBE52>
  40a232:	bf00      	nop
  40a234:	e000e100 	.word	0xe000e100

Disassembly of section .rodata.SHA512Expected%107:

0040a238 <SHA512Expected>:
  40a238:	7f15497f 9eb359b3 4d93daa6 0907a1c9     .I...Y.....M....
  40a248:	4688dffe e6d039d1 fcc0a337 426f3b83     ...F.9..7....;oB
  40a258:	db583870 f428eeac 955e9b48 65e5b5fa     p8X...(.H.^....e
  40a268:	38f8255a f37bdcb0 c07c4cc8 4f6a4f26     Z%.8..{..L|.&OjO
  40a278:	bf000000                                ....

Disassembly of section .rodata%108:

0040a27c <.LC5-0x24>:
  40a27c:	00464e49 	.word	0x00464e49
  40a280:	00666e69 	.word	0x00666e69
  40a284:	004e414e 	.word	0x004e414e
  40a288:	006e616e 	.word	0x006e616e
  40a28c:	33323130 	.word	0x33323130
  40a290:	37363534 	.word	0x37363534
  40a294:	42413938 	.word	0x42413938
  40a298:	46454443 	.word	0x46454443
  40a29c:	00000000 	.word	0x00000000

0040a2a0 <.LC5>:
  40a2a0:	33323130 	.word	0x33323130
  40a2a4:	37363534 	.word	0x37363534
  40a2a8:	62613938 	.word	0x62613938
  40a2ac:	66656463 	.word	0x66656463
  40a2b0:	00000000 	.word	0x00000000

0040a2b4 <.LC6>:
  40a2b4:	6c756e28 	.word	0x6c756e28
  40a2b8:	0000296c 	.word	0x0000296c
  40a2bc:	0030      	.short	0x0030
  40a2be:	bf00      	nop

Disassembly of section .text.NVIC_Initialize%109:

0040a2c0 <NVIC_Initialize>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  40a2c0:	490c      	ldr	r1, [pc, #48]	; (40a2f4 <.LVL10+0x4>)
  40a2c2:	68ca      	ldr	r2, [r1, #12]

0040a2c4 <.LVL1>:
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  40a2c4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700

0040a2c8 <.LVL2>:
  40a2c8:	0412      	lsls	r2, r2, #16
  40a2ca:	0c12      	lsrs	r2, r2, #16

0040a2cc <.LVL3>:
  reg_value  =  (reg_value                                   |
  40a2cc:	4b0a      	ldr	r3, [pc, #40]	; (40a2f8 <.LVL10+0x8>)
  40a2ce:	4313      	orrs	r3, r2

0040a2d0 <.LVL4>:
  SCB->AIRCR =  reg_value;
  40a2d0:	60cb      	str	r3, [r1, #12]

0040a2d2 <.LBB22>:
  __ASM volatile ("dmb 0xF":::"memory");
  40a2d2:	f3bf 8f5f 	dmb	sy

0040a2d6 <.LBB24>:
  __ASM volatile ("cpsie i" : : : "memory");
  40a2d6:	b662      	cpsie	i

0040a2d8 <.LBB26>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40a2d8:	4b08      	ldr	r3, [pc, #32]	; (40a2fc <.LVL10+0xc>)
  40a2da:	22e0      	movs	r2, #224	; 0xe0
  40a2dc:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e

0040a2e0 <.LBB28>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40a2e0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  40a2e4:	6019      	str	r1, [r3, #0]

0040a2e6 <.LBB30>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40a2e6:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317

0040a2ea <.LBB32>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40a2ea:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  40a2ee:	601a      	str	r2, [r3, #0]

0040a2f0 <.LVL10>:
  40a2f0:	4770      	bx	lr
  40a2f2:	bf00      	nop
  40a2f4:	e000ed00 	.word	0xe000ed00
  40a2f8:	05fa0400 	.word	0x05fa0400
  40a2fc:	e000e100 	.word	0xe000e100

Disassembly of section .rodata.sha_padding%110:

0040a300 <sha_padding>:
  40a300:	00000080 00000000 00000000 00000000     ................
	...

Disassembly of section .text.__hi0bits%111:

0040a340 <__hi0bits>:
  40a340:	0c02      	lsrs	r2, r0, #16
  40a342:	0412      	lsls	r2, r2, #16
  40a344:	4603      	mov	r3, r0
  40a346:	b9b2      	cbnz	r2, 40a376 <.LVL75>

0040a348 <.LVL63>:
  40a348:	0403      	lsls	r3, r0, #16

0040a34a <.LVL64>:
  40a34a:	2010      	movs	r0, #16

0040a34c <.LVL65>:
  40a34c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40a350:	bf04      	itt	eq
  40a352:	021b      	lsleq	r3, r3, #8

0040a354 <.LVL66>:
  40a354:	3008      	addeq	r0, #8

0040a356 <.LVL67>:
  40a356:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  40a35a:	bf04      	itt	eq
  40a35c:	011b      	lsleq	r3, r3, #4

0040a35e <.LVL68>:
  40a35e:	3004      	addeq	r0, #4

0040a360 <.LVL69>:
  40a360:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  40a364:	bf04      	itt	eq
  40a366:	009b      	lsleq	r3, r3, #2

0040a368 <.LVL70>:
  40a368:	3002      	addeq	r0, #2

0040a36a <.LVL71>:
  40a36a:	2b00      	cmp	r3, #0
  40a36c:	db02      	blt.n	40a374 <.LVL74>

0040a36e <.LVL72>:
  40a36e:	005b      	lsls	r3, r3, #1

0040a370 <.LVL73>:
  40a370:	d403      	bmi.n	40a37a <.LVL77>
  40a372:	2020      	movs	r0, #32

0040a374 <.LVL74>:
  40a374:	4770      	bx	lr

0040a376 <.LVL75>:
  40a376:	2000      	movs	r0, #0

0040a378 <.LVL76>:
  40a378:	e7e8      	b.n	40a34c <.LVL65>

0040a37a <.LVL77>:
  40a37a:	3001      	adds	r0, #1

0040a37c <.LVL78>:
  40a37c:	4770      	bx	lr

0040a37e <.LFE21>:
  40a37e:	bf00      	nop

Disassembly of section .text.Console_UART_Flush%112:

0040a380 <Console_UART_Flush>:
    if (consUartData.state != CONSOLE_UART_STATE_INIT)
  40a380:	4b0b      	ldr	r3, [pc, #44]	; (40a3b0 <Console_UART_Flush+0x30>)
  40a382:	781b      	ldrb	r3, [r3, #0]
  40a384:	b113      	cbz	r3, 40a38c <Console_UART_Flush+0xc>
        consUartData.state = CONSOLE_UART_STATE_READY;
  40a386:	2202      	movs	r2, #2
  40a388:	4b09      	ldr	r3, [pc, #36]	; (40a3b0 <Console_UART_Flush+0x30>)
  40a38a:	701a      	strb	r2, [r3, #0]
    consUartData.overflowFlag = false;
  40a38c:	4a08      	ldr	r2, [pc, #32]	; (40a3b0 <Console_UART_Flush+0x30>)
  40a38e:	2300      	movs	r3, #0
  40a390:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
    consUartData.isWriteComplete = true;
  40a394:	2001      	movs	r0, #1
  40a396:	f882 0045 	strb.w	r0, [r2, #69]	; 0x45
    writeQueue.nextPos = 0;
  40a39a:	4906      	ldr	r1, [pc, #24]	; (40a3b4 <Console_UART_Flush+0x34>)
  40a39c:	604b      	str	r3, [r1, #4]
    writeQueue.tailPos = 0;
  40a39e:	600b      	str	r3, [r1, #0]
    writeQueue.numElem = 0;
  40a3a0:	608b      	str	r3, [r1, #8]
    consUartData.isReadComplete = true;
  40a3a2:	f882 0044 	strb.w	r0, [r2, #68]	; 0x44
    readQueue.nextPos = 0;
  40a3a6:	4a04      	ldr	r2, [pc, #16]	; (40a3b8 <Console_UART_Flush+0x38>)
  40a3a8:	6053      	str	r3, [r2, #4]
    readQueue.tailPos = 0;
  40a3aa:	6013      	str	r3, [r2, #0]
    readQueue.numElem = 0;
  40a3ac:	6093      	str	r3, [r2, #8]
  40a3ae:	4770      	bx	lr
  40a3b0:	2040db4c 	.word	0x2040db4c
  40a3b4:	2040dc68 	.word	0x2040dc68
  40a3b8:	2040dc54 	.word	0x2040dc54

Disassembly of section .text.SYS_TIME_GetTimerObject%113:

0040a3bc <SYS_TIME_GetTimerObject>:
    if ((handle != SYS_TIME_HANDLE_INVALID) && (handle != 0))
  40a3bc:	1e43      	subs	r3, r0, #1
  40a3be:	f113 0f03 	cmn.w	r3, #3
  40a3c2:	d80f      	bhi.n	40a3e4 <.LVL10>
        if ((handle & _SYS_TIME_INDEX_MASK) < SYS_TIME_MAX_TIMERS)
  40a3c4:	b283      	uxth	r3, r0
  40a3c6:	2b09      	cmp	r3, #9
  40a3c8:	d80e      	bhi.n	40a3e8 <.LVL12>

0040a3ca <.LVL6>:
            if ((timerObj->tmrHandle == handle) && (timerObj->inUse == true))
  40a3ca:	4a0a      	ldr	r2, [pc, #40]	; (40a3f4 <.LVL17+0x2>)
  40a3cc:	eb02 1243 	add.w	r2, r2, r3, lsl #5
  40a3d0:	69d2      	ldr	r2, [r2, #28]
  40a3d2:	4290      	cmp	r0, r2
  40a3d4:	d10a      	bne.n	40a3ec <.LVL14>
  40a3d6:	015a      	lsls	r2, r3, #5

0040a3d8 <.LVL7>:
  40a3d8:	4906      	ldr	r1, [pc, #24]	; (40a3f4 <.LVL17+0x2>)
  40a3da:	5c8a      	ldrb	r2, [r1, r2]

0040a3dc <.LVL8>:
  40a3dc:	b142      	cbz	r2, 40a3f0 <.LVL16>
            timerObj = &timers[handle & _SYS_TIME_INDEX_MASK];
  40a3de:	eb01 1043 	add.w	r0, r1, r3, lsl #5

0040a3e2 <.LVL9>:
                return timerObj;
  40a3e2:	4770      	bx	lr

0040a3e4 <.LVL10>:
    return NULL;
  40a3e4:	2000      	movs	r0, #0

0040a3e6 <.LVL11>:
  40a3e6:	4770      	bx	lr

0040a3e8 <.LVL12>:
  40a3e8:	2000      	movs	r0, #0

0040a3ea <.LVL13>:
  40a3ea:	4770      	bx	lr

0040a3ec <.LVL14>:
  40a3ec:	2000      	movs	r0, #0

0040a3ee <.LVL15>:
  40a3ee:	4770      	bx	lr

0040a3f0 <.LVL16>:
  40a3f0:	2000      	movs	r0, #0

0040a3f2 <.LVL17>:
}
  40a3f2:	4770      	bx	lr
  40a3f4:	2040d9bc 	.word	0x2040d9bc

Disassembly of section .text.SYS_TIME_Counter64Get%114:

0040a3f8 <SYS_TIME_Counter64Get>:
{
    return gSystemCounterObj.hwTimerFrequency;
}

uint64_t SYS_TIME_Counter64Get ( void )
{
  40a3f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040a3fa <.LCFI14>:
    uint64_t counter64 = 0;
    uint32_t counter32 = 0;
    uint32_t elapsedCount;
    uint8_t isSwCounter32Oveflow = false;

    if (SYS_TIME_ResourceLock() == false)
  40a3fa:	f000 f8e3 	bl	40a5c4 <SYS_TIME_ResourceLock>

0040a3fe <.LVL147>:
  40a3fe:	b920      	cbnz	r0, 40a40a <.LVL149>
    {
        return counter64;
  40a400:	2400      	movs	r4, #0
  40a402:	2500      	movs	r5, #0

0040a404 <.LVL148>:
    counter64 = ((counter64 << 32) + counter32);

    SYS_TIME_ResourceUnlock();

    return counter64;
}
  40a404:	4620      	mov	r0, r4
  40a406:	4629      	mov	r1, r5
  40a408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040a40a <.LVL149>:
    elapsedCount = SYS_TIME_GetElapsedCount(counterObj->timePlib->timerCounterGet());
  40a40a:	4c09      	ldr	r4, [pc, #36]	; (40a430 <.LVL157+0x4>)
  40a40c:	6863      	ldr	r3, [r4, #4]
  40a40e:	699b      	ldr	r3, [r3, #24]
  40a410:	4798      	blx	r3
  40a412:	f000 fb17 	bl	40aa44 <.LFE172>

0040a416 <.LBB42>:
    uint32_t prevSwCounter32Bit = counterObj->swCounter64Low;
  40a416:	6a63      	ldr	r3, [r4, #36]	; 0x24

0040a418 <.LBE42>:
    counter64 = counterObj->swCounter64High;
  40a418:	6aa6      	ldr	r6, [r4, #40]	; 0x28

0040a41a <.LVL153>:
    if (isSwCounter32Oveflow == true)
  40a41a:	18c0      	adds	r0, r0, r3

0040a41c <.LVL154>:
  40a41c:	d206      	bcs.n	40a42c <.LVL157>
    counter64 = ((counter64 << 32) + counter32);
  40a41e:	2400      	movs	r4, #0
  40a420:	1824      	adds	r4, r4, r0
  40a422:	f146 0500 	adc.w	r5, r6, #0

0040a426 <.LVL155>:
    SYS_TIME_ResourceUnlock();
  40a426:	f000 f87b 	bl	40a520 <.LFE17>

0040a42a <.LVL156>:
    return counter64;
  40a42a:	e7eb      	b.n	40a404 <.LVL148>

0040a42c <.LVL157>:
        counter64++;
  40a42c:	3601      	adds	r6, #1
  40a42e:	e7f6      	b.n	40a41e <.LVL154+0x2>
  40a430:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.SYS_TIME_TimerDestroy%115:

0040a434 <SYS_TIME_TimerDestroy>:
    SYS_TIME_ResourceUnlock();
    return result;
}

SYS_TIME_RESULT SYS_TIME_TimerDestroy(SYS_TIME_HANDLE handle)
{
  40a434:	b510      	push	{r4, lr}

0040a436 <.LCFI22>:
  40a436:	4604      	mov	r4, r0

0040a438 <.LVL195>:
    SYS_TIME_TIMER_OBJ *tmr = NULL;
    SYS_TIME_RESULT result = SYS_TIME_ERROR;

    if (SYS_TIME_ResourceLock() == false)
  40a438:	f000 f8c4 	bl	40a5c4 <SYS_TIME_ResourceLock>

0040a43c <.LVL196>:
  40a43c:	b1b0      	cbz	r0, 40a46c <.LVL206>
    {
        return result;
    }

    tmr = SYS_TIME_GetTimerObject(handle);
  40a43e:	4620      	mov	r0, r4
  40a440:	f7ff ffbc 	bl	40a3bc <.LFE170>

0040a444 <.LVL197>:

    if(tmr != NULL)
  40a444:	4604      	mov	r4, r0

0040a446 <.LVL198>:
  40a446:	b178      	cbz	r0, 40a468 <.LVL205>
    {
        if(tmr->active == true)
  40a448:	7843      	ldrb	r3, [r0, #1]
  40a44a:	b943      	cbnz	r3, 40a45e <.LVL203>

0040a44c <.LVL199>:
        {
            SYS_TIME_RemoveFromList(tmr);
            tmr->active = false;
        }
        tmr->tmrElapsedFlag = false;
  40a44c:	2000      	movs	r0, #0
  40a44e:	7520      	strb	r0, [r4, #20]
        tmr->tmrElapsed = false;
  40a450:	7560      	strb	r0, [r4, #21]
        tmr->inUse = false;
  40a452:	7020      	strb	r0, [r4, #0]

0040a454 <.LVL200>:
        result = SYS_TIME_SUCCESS;
  40a454:	4604      	mov	r4, r0

0040a456 <.LVL201>:
    }

    SYS_TIME_ResourceUnlock();
  40a456:	f000 f863 	bl	40a520 <.LFE17>

0040a45a <.LVL202>:
    return result;
}
  40a45a:	4620      	mov	r0, r4
  40a45c:	bd10      	pop	{r4, pc}

0040a45e <.LVL203>:
            SYS_TIME_RemoveFromList(tmr);
  40a45e:	f7ff fd99 	bl	409f94 <.LFE167>

0040a462 <.LVL204>:
            tmr->active = false;
  40a462:	2300      	movs	r3, #0
  40a464:	7063      	strb	r3, [r4, #1]
  40a466:	e7f1      	b.n	40a44c <.LVL199>

0040a468 <.LVL205>:
    SYS_TIME_RESULT result = SYS_TIME_ERROR;
  40a468:	2401      	movs	r4, #1
  40a46a:	e7f4      	b.n	40a456 <.LVL201>

0040a46c <.LVL206>:
        return result;
  40a46c:	2401      	movs	r4, #1

0040a46e <.LVL207>:
  40a46e:	e7f4      	b.n	40a45a <.LVL202>

Disassembly of section .text.USART1_Initialize%116:

0040a470 <USART1_Initialize>:
    USART1_REGS->US_CR = (US_CR_RSTRX_Msk | US_CR_RSTTX_Msk | US_CR_RSTSTA_Msk);
  40a470:	4b0c      	ldr	r3, [pc, #48]	; (40a4a4 <.LFE186+0x34>)
  40a472:	f44f 7286 	mov.w	r2, #268	; 0x10c
  40a476:	601a      	str	r2, [r3, #0]
    USART1_REGS->US_CR = (US_CR_TXEN_Msk | US_CR_RXEN_Msk);
  40a478:	2250      	movs	r2, #80	; 0x50
  40a47a:	601a      	str	r2, [r3, #0]
    USART1_REGS->US_MR = ((US_MR_USCLKS_MCK) | (0 << US_MR_MODE9_Pos) | US_MR_CHRL_8_BIT | US_MR_PAR_NO | US_MR_NBSTOP_1_BIT | (0 << US_MR_OVER_Pos));
  40a47c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
  40a480:	605a      	str	r2, [r3, #4]
    USART1_REGS->US_BRGR = US_BRGR_CD(81);
  40a482:	2251      	movs	r2, #81	; 0x51
  40a484:	621a      	str	r2, [r3, #32]
    usart1Obj.rxBuffer = NULL;
  40a486:	4b08      	ldr	r3, [pc, #32]	; (40a4a8 <.LFE186+0x38>)
  40a488:	2200      	movs	r2, #0
  40a48a:	619a      	str	r2, [r3, #24]
    usart1Obj.rxSize = 0;
  40a48c:	61da      	str	r2, [r3, #28]
    usart1Obj.rxProcessedSize = 0;
  40a48e:	621a      	str	r2, [r3, #32]
    usart1Obj.rxBusyStatus = false;
  40a490:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    usart1Obj.rxCallback = NULL;
  40a494:	625a      	str	r2, [r3, #36]	; 0x24
    usart1Obj.txBuffer = NULL;
  40a496:	601a      	str	r2, [r3, #0]
    usart1Obj.txSize = 0;
  40a498:	605a      	str	r2, [r3, #4]
    usart1Obj.txProcessedSize = 0;
  40a49a:	609a      	str	r2, [r3, #8]
    usart1Obj.txBusyStatus = false;
  40a49c:	751a      	strb	r2, [r3, #20]
    usart1Obj.txCallback = NULL;
  40a49e:	60da      	str	r2, [r3, #12]
  40a4a0:	4770      	bx	lr
  40a4a2:	bf00      	nop
  40a4a4:	40028000 	.word	0x40028000
  40a4a8:	20400454 	.word	0x20400454

Disassembly of section .text.USART1_Read%117:

0040a4ac <USART1_Read>:
    if(NULL != lBuffer)
  40a4ac:	b1a0      	cbz	r0, 40a4d8 <.LCFI6>
{
  40a4ae:	b538      	push	{r3, r4, r5, lr}

0040a4b0 <.LCFI5>:
  40a4b0:	4605      	mov	r5, r0
  40a4b2:	460c      	mov	r4, r1
        USART1_ErrorGet();
  40a4b4:	f000 f8d2 	bl	40a65c <.LFE6>

0040a4b8 <.LVL27>:
        if(usart1Obj.rxBusyStatus == false)
  40a4b8:	4b09      	ldr	r3, [pc, #36]	; (40a4e0 <.LVL33>)
  40a4ba:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40a4be:	b96b      	cbnz	r3, 40a4dc <.LCFI7>
            usart1Obj.rxBuffer = lBuffer;
  40a4c0:	4b07      	ldr	r3, [pc, #28]	; (40a4e0 <.LVL33>)
  40a4c2:	619d      	str	r5, [r3, #24]
            usart1Obj.rxSize = size;
  40a4c4:	61dc      	str	r4, [r3, #28]
            usart1Obj.rxProcessedSize = 0;
  40a4c6:	2200      	movs	r2, #0
  40a4c8:	621a      	str	r2, [r3, #32]
            usart1Obj.rxBusyStatus = true;
  40a4ca:	2001      	movs	r0, #1
  40a4cc:	f883 002c 	strb.w	r0, [r3, #44]	; 0x2c

0040a4d0 <.LVL28>:
            USART1_REGS->US_IER = (US_IER_RXRDY_Msk | US_IER_FRAME_Msk | US_IER_PARE_Msk | US_IER_OVRE_Msk);
  40a4d0:	22e1      	movs	r2, #225	; 0xe1
  40a4d2:	4b04      	ldr	r3, [pc, #16]	; (40a4e4 <.LVL33+0x4>)
  40a4d4:	609a      	str	r2, [r3, #8]
  40a4d6:	bd38      	pop	{r3, r4, r5, pc}

0040a4d8 <.LCFI6>:
    bool status = false;
  40a4d8:	2000      	movs	r0, #0

0040a4da <.LVL30>:
  40a4da:	4770      	bx	lr

0040a4dc <.LCFI7>:
  40a4dc:	2000      	movs	r0, #0

0040a4de <.LVL32>:
}
  40a4de:	bd38      	pop	{r3, r4, r5, pc}

0040a4e0 <.LVL33>:
  40a4e0:	20400454 	.word	0x20400454
  40a4e4:	40028000 	.word	0x40028000

Disassembly of section .text.wc_InitMd5_ex%118:

0040a4e8 <wc_InitMd5_ex>:
    if (md5 == NULL)
  40a4e8:	4603      	mov	r3, r0
  40a4ea:	b1a0      	cbz	r0, 40a516 <.LVL328>
    md5->heap = heap;
  40a4ec:	65c1      	str	r1, [r0, #92]	; 0x5c

0040a4ee <.LBB139>:
    md5->digest[0] = 0x67452301L;
  40a4ee:	4a0b      	ldr	r2, [pc, #44]	; (40a51c <.LVL329+0x2>)

0040a4f0 <.LVL325>:
  40a4f0:	64c2      	str	r2, [r0, #76]	; 0x4c
    md5->digest[1] = 0xefcdab89L;
  40a4f2:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
  40a4f6:	6502      	str	r2, [r0, #80]	; 0x50
    md5->digest[2] = 0x98badcfeL;
  40a4f8:	f102 4229 	add.w	r2, r2, #2835349504	; 0xa9000000
  40a4fc:	f5a2 1296 	sub.w	r2, r2, #1228800	; 0x12c000
  40a500:	f6a2 628b 	subw	r2, r2, #3723	; 0xe8b
  40a504:	6542      	str	r2, [r0, #84]	; 0x54
    md5->digest[3] = 0x10325476L;
  40a506:	f1a2 3288 	sub.w	r2, r2, #2290649224	; 0x88888888
  40a50a:	6582      	str	r2, [r0, #88]	; 0x58
    md5->buffLen = 0;
  40a50c:	2000      	movs	r0, #0

0040a50e <.LVL326>:
  40a50e:	6018      	str	r0, [r3, #0]
    md5->loLen   = 0;
  40a510:	6058      	str	r0, [r3, #4]
    md5->hiLen   = 0;
  40a512:	6098      	str	r0, [r3, #8]

0040a514 <.LBE139>:
  40a514:	4770      	bx	lr

0040a516 <.LVL328>:
        return BAD_FUNC_ARG;
  40a516:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a51a <.LVL329>:
}
  40a51a:	4770      	bx	lr
  40a51c:	67452301 	.word	0x67452301

Disassembly of section .text.SYS_TIME_ResourceUnlock%119:

0040a520 <SYS_TIME_ResourceUnlock>:
    SYS_INT_SourceEnable(gSystemCounterObj.hwTimerIntNum);
  40a520:	4b0b      	ldr	r3, [pc, #44]	; (40a550 <.LVL4+0x4>)
  40a522:	f993 3008 	ldrsb.w	r3, [r3, #8]

0040a526 <.LBB16>:
  if ((int32_t)(IRQn) >= 0)
  40a526:	2b00      	cmp	r3, #0
  40a528:	db08      	blt.n	40a53c <.LBE16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40a52a:	0959      	lsrs	r1, r3, #5
  40a52c:	f003 031f 	and.w	r3, r3, #31

0040a530 <.LVL1>:
  40a530:	2201      	movs	r2, #1
  40a532:	fa02 f303 	lsl.w	r3, r2, r3
  40a536:	4a07      	ldr	r2, [pc, #28]	; (40a554 <.LVL4+0x8>)
  40a538:	f842 3021 	str.w	r3, [r2, r1, lsl #2]

0040a53c <.LBE16>:
    if(gSystemCounterObj.interruptNestingCount == 0)
  40a53c:	4b04      	ldr	r3, [pc, #16]	; (40a550 <.LVL4+0x4>)
  40a53e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40a542:	b91b      	cbnz	r3, 40a54c <.LVL4>

0040a544 <.LBB18>:
// *****************************************************************************
/* Function: OSAL_RESULT OSAL_MUTEX_Unlock(OSAL_MUTEX_HANDLE_TYPE mutexID)
 */
static OSAL_RESULT __attribute__((always_inline)) OSAL_MUTEX_Unlock(OSAL_MUTEX_HANDLE_TYPE* mutexID)
{
    *mutexID = 1;
  40a544:	2201      	movs	r2, #1
  40a546:	4b02      	ldr	r3, [pc, #8]	; (40a550 <.LVL4+0x4>)
  40a548:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

0040a54c <.LVL4>:
  40a54c:	4770      	bx	lr
  40a54e:	bf00      	nop
  40a550:	2040db9c 	.word	0x2040db9c
  40a554:	e000e100 	.word	0xe000e100

Disassembly of section .text.__mcmp%120:

0040a558 <__mcmp>:
  40a558:	b430      	push	{r4, r5}

0040a55a <.LCFI12>:
  40a55a:	690b      	ldr	r3, [r1, #16]
  40a55c:	4605      	mov	r5, r0
  40a55e:	6900      	ldr	r0, [r0, #16]

0040a560 <.LVL212>:
  40a560:	1ac0      	subs	r0, r0, r3

0040a562 <.LVL213>:
  40a562:	d10f      	bne.n	40a584 <.LVL223>
  40a564:	009b      	lsls	r3, r3, #2

0040a566 <.LVL214>:
  40a566:	3514      	adds	r5, #20

0040a568 <.LVL215>:
  40a568:	3114      	adds	r1, #20

0040a56a <.LVL216>:
  40a56a:	4419      	add	r1, r3

0040a56c <.LVL217>:
  40a56c:	442b      	add	r3, r5

0040a56e <.LVL218>:
  40a56e:	e001      	b.n	40a574 <.LVL220>

0040a570 <.LVL219>:
  40a570:	429d      	cmp	r5, r3
  40a572:	d207      	bcs.n	40a584 <.LVL223>

0040a574 <.LVL220>:
  40a574:	f853 4d04 	ldr.w	r4, [r3, #-4]!

0040a578 <.LVL221>:
  40a578:	f851 2d04 	ldr.w	r2, [r1, #-4]!

0040a57c <.LVL222>:
  40a57c:	4294      	cmp	r4, r2
  40a57e:	d0f7      	beq.n	40a570 <.LVL219>
  40a580:	d302      	bcc.n	40a588 <.LCFI14>
  40a582:	2001      	movs	r0, #1

0040a584 <.LVL223>:
  40a584:	bc30      	pop	{r4, r5}

0040a586 <.LCFI13>:
  40a586:	4770      	bx	lr

0040a588 <.LCFI14>:
  40a588:	f04f 30ff 	mov.w	r0, #4294967295

0040a58c <.LVL225>:
  40a58c:	e7fa      	b.n	40a584 <.LVL223>

0040a58e <.LFE27>:
  40a58e:	bf00      	nop

Disassembly of section .rodata.SHA384Expected%121:

0040a590 <SHA384Expected>:
  40a590:	50a5 1a56 3063 8e04 82fe 976a fee5 43d8     .PV.c0....j....C
  40a5a0:	1cfa 46e6 bfa9 6c54 43cb 2f3c 0ecb 8254     ...F..Tl.C</..T.
  40a5b0:	4c1c 5e94 9aed 2b59 f45b 5731 12e2 77f2     .L.^..Y+[.1W...w
  40a5c0:	0000 bf00                                   ....

Disassembly of section .text.SYS_TIME_ResourceLock%122:

0040a5c4 <SYS_TIME_ResourceLock>:
{
  40a5c4:	b508      	push	{r3, lr}

0040a5c6 <.LCFI9>:
    if (gSystemCounterObj.interruptNestingCount == 0)
  40a5c6:	4b0b      	ldr	r3, [pc, #44]	; (40a5f4 <.LVL98+0x8>)
  40a5c8:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40a5cc:	b983      	cbnz	r3, 40a5f0 <.LVL98+0x4>

0040a5ce <.LBB24>:
    if (*mutexID == 1)
  40a5ce:	4b09      	ldr	r3, [pc, #36]	; (40a5f4 <.LVL98+0x8>)
  40a5d0:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
  40a5d4:	2b01      	cmp	r3, #1
  40a5d6:	d001      	beq.n	40a5dc <.LBB27>

0040a5d8 <.LBE24>:
            return false;
  40a5d8:	2000      	movs	r0, #0
}
  40a5da:	bd08      	pop	{r3, pc}

0040a5dc <.LBB27>:
        *mutexID = 0;
  40a5dc:	4b05      	ldr	r3, [pc, #20]	; (40a5f4 <.LVL98+0x8>)
  40a5de:	2200      	movs	r2, #0
  40a5e0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

0040a5e4 <.LBE27>:
            SYS_INT_SourceDisable(gSystemCounterObj.hwTimerIntNum);
  40a5e4:	f993 0008 	ldrsb.w	r0, [r3, #8]
  40a5e8:	f7ff fe04 	bl	40a1f4 <.LFE149>

0040a5ec <.LVL98>:
            return true;
  40a5ec:	2001      	movs	r0, #1
  40a5ee:	bd08      	pop	{r3, pc}
    return true;
  40a5f0:	2001      	movs	r0, #1
  40a5f2:	bd08      	pop	{r3, pc}
  40a5f4:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__libc_fini_array%123:

0040a5f8 <__libc_fini_array>:
  40a5f8:	b538      	push	{r3, r4, r5, lr}

0040a5fa <.LCFI0>:
  40a5fa:	4c0a      	ldr	r4, [pc, #40]	; (40a624 <.LVL6+0x2>)
  40a5fc:	4d0a      	ldr	r5, [pc, #40]	; (40a628 <.LVL6+0x6>)
  40a5fe:	1b64      	subs	r4, r4, r5

0040a600 <.LVL0>:
  40a600:	10a4      	asrs	r4, r4, #2

0040a602 <.LVL1>:
  40a602:	d00a      	beq.n	40a61a <.LVL4+0x4>
  40a604:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40a608:	3b01      	subs	r3, #1
  40a60a:	eb05 0583 	add.w	r5, r5, r3, lsl #2

0040a60e <.LVL2>:
  40a60e:	3c01      	subs	r4, #1

0040a610 <.LVL3>:
  40a610:	f855 3904 	ldr.w	r3, [r5], #-4
  40a614:	4798      	blx	r3

0040a616 <.LVL4>:
  40a616:	2c00      	cmp	r4, #0
  40a618:	d1f9      	bne.n	40a60e <.LVL2>
  40a61a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}

0040a61e <.LCFI1>:
  40a61e:	f7f5 bdad 	b.w	40017c <_fini>

0040a622 <.LVL6>:
  40a622:	bf00      	nop
  40a624:	0040018c 	.word	0x0040018c
  40a628:	00400188 	.word	0x00400188

Disassembly of section .text.SYS_CONSOLE_Write%124:

0040a62c <SYS_CONSOLE_Write>:
    None.
*/

ssize_t SYS_CONSOLE_Write(const SYS_MODULE_INDEX index, int fd, const char *buf, size_t count )
{
    if (index >= SYS_CONSOLE_DEVICE_MAX_INSTANCES)
  40a62c:	b970      	cbnz	r0, 40a64c <.LCFI9>
        return 0;

    if (consoleDeviceInstance[index].consoleDeviceInstanceStatus == SYS_STATUS_UNINITIALIZED
  40a62e:	480a      	ldr	r0, [pc, #40]	; (40a658 <.LVL48>)

0040a630 <.LVL42>:
  40a630:	f990 0000 	ldrsb.w	r0, [r0]
  40a634:	b160      	cbz	r0, 40a650 <.LVL47+0x2>
{
  40a636:	b538      	push	{r3, r4, r5, lr}

0040a638 <.LCFI8>:
            || consoleDeviceInstance[index].consoleInstanceDevDesc == NULL)
  40a638:	4807      	ldr	r0, [pc, #28]	; (40a658 <.LVL48>)
  40a63a:	6845      	ldr	r5, [r0, #4]
  40a63c:	b155      	cbz	r5, 40a654 <.LCFI10>
  40a63e:	4614      	mov	r4, r2
  40a640:	4608      	mov	r0, r1
    {
        return 0;
    }

    return consoleDeviceInstance[index].consoleInstanceDevDesc->sysConsoleWrite(fd, buf, count);
  40a642:	68ed      	ldr	r5, [r5, #12]
  40a644:	461a      	mov	r2, r3

0040a646 <.LVL43>:
  40a646:	4621      	mov	r1, r4

0040a648 <.LVL44>:
  40a648:	47a8      	blx	r5

0040a64a <.LVL45>:
  40a64a:	bd38      	pop	{r3, r4, r5, pc}

0040a64c <.LCFI9>:
        return 0;
  40a64c:	2000      	movs	r0, #0

0040a64e <.LVL47>:
  40a64e:	4770      	bx	lr
        return 0;
  40a650:	2000      	movs	r0, #0
  40a652:	4770      	bx	lr

0040a654 <.LCFI10>:
  40a654:	2000      	movs	r0, #0
}
  40a656:	bd38      	pop	{r3, r4, r5, pc}

0040a658 <.LVL48>:
  40a658:	2040dc7c 	.word	0x2040dc7c

Disassembly of section .text.USART1_ErrorGet%125:

0040a65c <USART1_ErrorGet>:
    uint32_t status = USART1_REGS->US_CSR;
  40a65c:	4b0a      	ldr	r3, [pc, #40]	; (40a688 <.LVL9+0xe>)
  40a65e:	6958      	ldr	r0, [r3, #20]

0040a660 <.LVL6>:
    if(errors != USART_ERROR_NONE)
  40a660:	f010 00e0 	ands.w	r0, r0, #224	; 0xe0

0040a664 <.LVL7>:
  40a664:	d100      	bne.n	40a668 <.LBB14>
}
  40a666:	4770      	bx	lr

0040a668 <.LBB14>:
    USART1_REGS->US_CR|= US_CR_RSTSTA_Msk;
  40a668:	681a      	ldr	r2, [r3, #0]
  40a66a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  40a66e:	601a      	str	r2, [r3, #0]
    while( US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk) )
  40a670:	695b      	ldr	r3, [r3, #20]
  40a672:	f013 0f01 	tst.w	r3, #1
  40a676:	d0f6      	beq.n	40a666 <.LVL7+0x2>
        dummyData = (USART1_REGS->US_RHR& US_RHR_RXCHR_Msk);
  40a678:	4b03      	ldr	r3, [pc, #12]	; (40a688 <.LVL9+0xe>)

0040a67a <.LVL9>:
  40a67a:	699a      	ldr	r2, [r3, #24]
    while( US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk) )
  40a67c:	695a      	ldr	r2, [r3, #20]
  40a67e:	f012 0f01 	tst.w	r2, #1
  40a682:	d1fa      	bne.n	40a67a <.LVL9>
  40a684:	e7ef      	b.n	40a666 <.LVL7+0x2>
  40a686:	bf00      	nop
  40a688:	40028000 	.word	0x40028000

Disassembly of section .text%126:

0040a68c <__aeabi_uldivmod>:
  40a68c:	b953      	cbnz	r3, 40a6a4 <__aeabi_uldivmod+0x18>
  40a68e:	b94a      	cbnz	r2, 40a6a4 <__aeabi_uldivmod+0x18>
  40a690:	2900      	cmp	r1, #0
  40a692:	bf08      	it	eq
  40a694:	2800      	cmpeq	r0, #0
  40a696:	bf1c      	itt	ne
  40a698:	f04f 31ff 	movne.w	r1, #4294967295
  40a69c:	f04f 30ff 	movne.w	r0, #4294967295
  40a6a0:	f7fc bbc4 	b.w	406e2c <.LFE1>
  40a6a4:	f1ad 0c08 	sub.w	ip, sp, #8
  40a6a8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40a6ac:	f7fc fa50 	bl	406b50 <.LBE16>
  40a6b0:	f8dd e004 	ldr.w	lr, [sp, #4]
  40a6b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40a6b8:	b004      	add	sp, #16
  40a6ba:	4770      	bx	lr

Disassembly of section .text.APP_DisplayHash%127:

0040a6bc <APP_DisplayHash>:
    while (hashSz--) {
  40a6bc:	b179      	cbz	r1, 40a6de <.LCFI2>
void APP_DisplayHash(uint8_t *hash, uint32_t hashSz) {
  40a6be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040a6c0 <.LCFI1>:
  40a6c0:	4604      	mov	r4, r0
  40a6c2:	460e      	mov	r6, r1
  40a6c4:	4406      	add	r6, r0
        sprintf(printBuffer, "%s%02X", printBuffer, *hash++);
  40a6c6:	4d06      	ldr	r5, [pc, #24]	; (40a6e0 <.LCFI2+0x2>)
  40a6c8:	4f06      	ldr	r7, [pc, #24]	; (40a6e4 <.LCFI2+0x6>)

0040a6ca <.LVL2>:
  40a6ca:	f814 3b01 	ldrb.w	r3, [r4], #1

0040a6ce <.LVL3>:
  40a6ce:	462a      	mov	r2, r5
  40a6d0:	4639      	mov	r1, r7
  40a6d2:	4628      	mov	r0, r5
  40a6d4:	f7ff fcd6 	bl	40a084 <.LFE166>

0040a6d8 <.LVL4>:
    while (hashSz--) {
  40a6d8:	42a6      	cmp	r6, r4
  40a6da:	d1f6      	bne.n	40a6ca <.LVL2>
  40a6dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040a6de <.LCFI2>:
  40a6de:	4770      	bx	lr
  40a6e0:	20400488 	.word	0x20400488
  40a6e4:	004081f8 	.word	0x004081f8

Disassembly of section .text.SYS_TIME_UpdateTimerList%128:

0040a6e8 <SYS_TIME_UpdateTimerList>:
    tmr = counterObj->tmrActive;
  40a6e8:	4b09      	ldr	r3, [pc, #36]	; (40a710 <.LVL81+0x8>)
  40a6ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30

0040a6ec <.LVL77>:
    while ((tmr != NULL) && (elapsedCount > 0))
  40a6ec:	b162      	cbz	r2, 40a708 <.LVL81>
  40a6ee:	b158      	cbz	r0, 40a708 <.LVL81>
            tmr->relativeTimePending = 0;
  40a6f0:	2100      	movs	r1, #0
  40a6f2:	e004      	b.n	40a6fe <.LVL80+0x4>
            elapsedCount -= tmr->relativeTimePending;
  40a6f4:	1ac0      	subs	r0, r0, r3

0040a6f6 <.LVL78>:
            tmr->relativeTimePending = 0;
  40a6f6:	6091      	str	r1, [r2, #8]

0040a6f8 <.LVL79>:
        tmr = tmr->tmrNext;
  40a6f8:	6992      	ldr	r2, [r2, #24]

0040a6fa <.LVL80>:
    while ((tmr != NULL) && (elapsedCount > 0))
  40a6fa:	b12a      	cbz	r2, 40a708 <.LVL81>
  40a6fc:	b120      	cbz	r0, 40a708 <.LVL81>
        if (tmr->relativeTimePending >= elapsedCount)
  40a6fe:	6893      	ldr	r3, [r2, #8]
  40a700:	4283      	cmp	r3, r0
  40a702:	d3f7      	bcc.n	40a6f4 <.LVL77+0x8>
            tmr->relativeTimePending -= elapsedCount;
  40a704:	1a1b      	subs	r3, r3, r0
  40a706:	6093      	str	r3, [r2, #8]

0040a708 <.LVL81>:
    counterObj->hwTimerPreviousValue = counterObj->hwTimerCurrentValue;
  40a708:	4b01      	ldr	r3, [pc, #4]	; (40a710 <.LVL81+0x8>)
  40a70a:	695a      	ldr	r2, [r3, #20]
  40a70c:	611a      	str	r2, [r3, #16]
  40a70e:	4770      	bx	lr
  40a710:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__ascii_mbtowc%129:

0040a714 <__ascii_mbtowc>:
  40a714:	b082      	sub	sp, #8

0040a716 <.LCFI2>:
  40a716:	b149      	cbz	r1, 40a72c <.LCFI4>
  40a718:	b15a      	cbz	r2, 40a732 <.LVL9+0x4>
  40a71a:	b16b      	cbz	r3, 40a738 <.LCFI6>
  40a71c:	7813      	ldrb	r3, [r2, #0]

0040a71e <.LVL4>:
  40a71e:	600b      	str	r3, [r1, #0]
  40a720:	7812      	ldrb	r2, [r2, #0]

0040a722 <.LVL5>:
  40a722:	1c10      	adds	r0, r2, #0

0040a724 <.LVL6>:
  40a724:	bf18      	it	ne
  40a726:	2001      	movne	r0, #1
  40a728:	b002      	add	sp, #8

0040a72a <.LCFI3>:
  40a72a:	4770      	bx	lr

0040a72c <.LCFI4>:
  40a72c:	a901      	add	r1, sp, #4

0040a72e <.LVL9>:
  40a72e:	2a00      	cmp	r2, #0
  40a730:	d1f3      	bne.n	40a71a <.LCFI2+0x4>
  40a732:	4610      	mov	r0, r2

0040a734 <.LVL10>:
  40a734:	b002      	add	sp, #8

0040a736 <.LCFI5>:
  40a736:	4770      	bx	lr

0040a738 <.LCFI6>:
  40a738:	f06f 0001 	mvn.w	r0, #1

0040a73c <.LVL13>:
  40a73c:	e7f4      	b.n	40a728 <.LVL6+0x4>

0040a73e <.LFE18>:
  40a73e:	bf00      	nop

Disassembly of section .text._sbrk%130:

0040a740 <_sbrk>:
  40a740:	4a07      	ldr	r2, [pc, #28]	; (40a760 <_sbrk+0x20>)
  40a742:	6813      	ldr	r3, [r2, #0]
  40a744:	b143      	cbz	r3, 40a758 <_sbrk+0x18>
  40a746:	4907      	ldr	r1, [pc, #28]	; (40a764 <_sbrk+0x24>)
  40a748:	4418      	add	r0, r3
  40a74a:	4288      	cmp	r0, r1
  40a74c:	bf9a      	itte	ls
  40a74e:	6010      	strls	r0, [r2, #0]
  40a750:	4618      	movls	r0, r3
  40a752:	f04f 30ff 	movhi.w	r0, #4294967295
  40a756:	4770      	bx	lr
  40a758:	4b03      	ldr	r3, [pc, #12]	; (40a768 <_sbrk+0x28>)
  40a75a:	6013      	str	r3, [r2, #0]
  40a75c:	e7f3      	b.n	40a746 <_sbrk+0x6>
  40a75e:	bf00      	nop
  40a760:	2040dcb8 	.word	0x2040dcb8
  40a764:	2040dcc0 	.word	0x2040dcc0
  40a768:	2040dcc0 	.word	0x2040dcc0

Disassembly of section .text.TC0_CH0_TimerInitialize%131:

0040a76c <TC0_CH0_TimerInitialize>:

/* Initialize channel in timer mode */
void TC0_CH0_TimerInitialize (void)
{
    /* Use peripheral clock */
    TC0_REGS->TC_CHANNEL[0].TC_EMR = TC_EMR_NODIVCLK_Msk;
  40a76c:	4b07      	ldr	r3, [pc, #28]	; (40a78c <.LFE1+0x20>)
  40a76e:	f44f 7280 	mov.w	r2, #256	; 0x100
  40a772:	631a      	str	r2, [r3, #48]	; 0x30
    /* clock selection and waveform selection */
    TC0_REGS->TC_CHANNEL[0].TC_CMR =  TC_CMR_WAVSEL_UP_RC | TC_CMR_WAVE_Msk ;
  40a774:	f44f 4240 	mov.w	r2, #49152	; 0xc000
  40a778:	605a      	str	r2, [r3, #4]

    /* write period */
    TC0_REGS->TC_CHANNEL[0].TC_RC = 60000U;
  40a77a:	f64e 2260 	movw	r2, #60000	; 0xea60
  40a77e:	61da      	str	r2, [r3, #28]


    /* enable interrupt */
    TC0_REGS->TC_CHANNEL[0].TC_IER = TC_IER_CPAS_Msk;
  40a780:	2204      	movs	r2, #4
  40a782:	625a      	str	r2, [r3, #36]	; 0x24
    TC0_CH0_CallbackObj.callback_fn = NULL;
  40a784:	2200      	movs	r2, #0
  40a786:	4b02      	ldr	r3, [pc, #8]	; (40a790 <.LFE1+0x24>)
  40a788:	601a      	str	r2, [r3, #0]
  40a78a:	4770      	bx	lr
  40a78c:	4000c000 	.word	0x4000c000
  40a790:	2040044c 	.word	0x2040044c

Disassembly of section .rodata.__mprec_bigtens%132:

0040a798 <__mprec_bigtens>:
  40a798:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  40a7a8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  40a7b8:	7f73bf3c 75154fdd                       <.s..O.u

Disassembly of section .rodata.SHA256Expected%133:

0040a7c0 <SHA256Expected>:
  40a7c0:	754aa885 528a6e88 e1c4be6d fa75336e     ..Ju.n.Rm...n3u.
  40a7d0:	aeb407a3 edc979ad 47c06432 ba6e6f7a     .....y..2d.Gzon.
  40a7e0:	bf000000                                ....

Disassembly of section .text._sbrk_r%134:

0040a7e4 <_sbrk_r>:
  40a7e4:	b538      	push	{r3, r4, r5, lr}

0040a7e6 <.LCFI0>:
  40a7e6:	4c07      	ldr	r4, [pc, #28]	; (40a804 <.LVL4>)
  40a7e8:	2300      	movs	r3, #0
  40a7ea:	4605      	mov	r5, r0
  40a7ec:	4608      	mov	r0, r1

0040a7ee <.LVL1>:
  40a7ee:	6023      	str	r3, [r4, #0]
  40a7f0:	f7ff ffa6 	bl	40a740 <_sbrk>

0040a7f4 <.LVL2>:
  40a7f4:	1c43      	adds	r3, r0, #1
  40a7f6:	d000      	beq.n	40a7fa <.LVL2+0x6>
  40a7f8:	bd38      	pop	{r3, r4, r5, pc}
  40a7fa:	6823      	ldr	r3, [r4, #0]
  40a7fc:	2b00      	cmp	r3, #0
  40a7fe:	d0fb      	beq.n	40a7f8 <.LVL2+0x4>
  40a800:	602b      	str	r3, [r5, #0]
  40a802:	bd38      	pop	{r3, r4, r5, pc}

0040a804 <.LVL4>:
  40a804:	20400484 	.word	0x20400484

Disassembly of section .text.Console_UART_ReadC%135:

0040a808 <Console_UART_ReadC>:
{
  40a808:	b500      	push	{lr}

0040a80a <.LCFI1>:
  40a80a:	b083      	sub	sp, #12

0040a80c <.LCFI2>:
    USART1_Read(&readBuffer, 1);
  40a80c:	2101      	movs	r1, #1
  40a80e:	f10d 0007 	add.w	r0, sp, #7

0040a812 <.LVL13>:
  40a812:	f7ff fe4b 	bl	40a4ac <.LFE145>

0040a816 <.LVL14>:
    while (USART1_ReadCountGet() == 0);
  40a816:	f000 fa27 	bl	40ac68 <.LFE149>

0040a81a <.LVL15>:
  40a81a:	2800      	cmp	r0, #0
  40a81c:	d0fb      	beq.n	40a816 <.LVL14>
}
  40a81e:	f89d 0007 	ldrb.w	r0, [sp, #7]
  40a822:	b003      	add	sp, #12

0040a824 <.LCFI3>:
  40a824:	f85d fb04 	ldr.w	pc, [sp], #4

Disassembly of section .text.SYS_DEBUG_Initialize%136:

0040a828 <SYS_DEBUG_Initialize>:

SYS_MODULE_OBJ SYS_DEBUG_Initialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init )
{
    SYS_DEBUG_INIT *initConfig = (SYS_DEBUG_INIT*)init;

    gblErrLvl = initConfig->errorLevel;
  40a828:	784a      	ldrb	r2, [r1, #1]
  40a82a:	4b05      	ldr	r3, [pc, #20]	; (40a840 <.LVL1+0xa>)
  40a82c:	701a      	strb	r2, [r3, #0]

    sysDebugInstance.debugConsole = initConfig->consoleIndex;
  40a82e:	884a      	ldrh	r2, [r1, #2]
  40a830:	4b04      	ldr	r3, [pc, #16]	; (40a844 <.LVL1+0xe>)
  40a832:	805a      	strh	r2, [r3, #2]
    sysDebugInstance.state = SYS_DEBUG_STATE_IDLE;
  40a834:	2000      	movs	r0, #0

0040a836 <.LVL1>:
  40a836:	7058      	strb	r0, [r3, #1]
    sysDebugInstance.status = SYS_STATUS_READY;
  40a838:	2202      	movs	r2, #2
  40a83a:	701a      	strb	r2, [r3, #0]
    sysDebugInstance.prtBufPtr = 0;
  40a83c:	6058      	str	r0, [r3, #4]

    return SYS_MODULE_OBJ_STATIC;
}
  40a83e:	4770      	bx	lr
  40a840:	20400448 	.word	0x20400448
  40a844:	20400440 	.word	0x20400440

Disassembly of section .text.TC0_CH0_InterruptHandler%137:

0040a848 <TC0_CH0_InterruptHandler>:
    TC0_CH0_CallbackObj.callback_fn = callback;
    TC0_CH0_CallbackObj.context = context;
}

void TC0_CH0_InterruptHandler(void)
{
  40a848:	b508      	push	{r3, lr}

0040a84a <.LCFI0>:
    TC_TIMER_STATUS timer_status = TC0_REGS->TC_CHANNEL[0].TC_SR & TC_TIMER_STATUS_MSK;
  40a84a:	4b05      	ldr	r3, [pc, #20]	; (40a860 <.LVL4+0x8>)
  40a84c:	6a18      	ldr	r0, [r3, #32]

0040a84e <.LVL3>:
    /* Call registered callback function */
    if (TC0_CH0_CallbackObj.callback_fn != NULL)
  40a84e:	4b05      	ldr	r3, [pc, #20]	; (40a864 <.LVL4+0xc>)
  40a850:	681b      	ldr	r3, [r3, #0]
  40a852:	b123      	cbz	r3, 40a85e <.LVL4+0x6>
  40a854:	f000 0014 	and.w	r0, r0, #20

0040a858 <.LVL4>:
    {
        TC0_CH0_CallbackObj.callback_fn(timer_status, TC0_CH0_CallbackObj.context);
  40a858:	4a02      	ldr	r2, [pc, #8]	; (40a864 <.LVL4+0xc>)
  40a85a:	6851      	ldr	r1, [r2, #4]
  40a85c:	4798      	blx	r3
  40a85e:	bd08      	pop	{r3, pc}
  40a860:	4000c000 	.word	0x4000c000
  40a864:	2040044c 	.word	0x2040044c

Disassembly of section .text.SYS_CONSOLE_Tasks%138:

0040a868 <SYS_CONSOLE_Tasks>:
{
  40a868:	b508      	push	{r3, lr}

0040a86a <.LCFI6>:
    if (consoleDeviceInstance[(SYS_MODULE_INDEX)object].consoleInstanceDevDesc == NULL)
  40a86a:	b283      	uxth	r3, r0
  40a86c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  40a870:	4a03      	ldr	r2, [pc, #12]	; (40a880 <.LVL31+0x2>)
  40a872:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40a876:	685b      	ldr	r3, [r3, #4]
  40a878:	b10b      	cbz	r3, 40a87e <.LVL31>
    consoleDeviceInstance[(SYS_MODULE_INDEX)object].consoleInstanceDevDesc->sysConsoleTasks(object);
  40a87a:	695b      	ldr	r3, [r3, #20]
  40a87c:	4798      	blx	r3

0040a87e <.LVL31>:
  40a87e:	bd08      	pop	{r3, pc}
  40a880:	2040dc7c 	.word	0x2040dc7c

Disassembly of section .text.popQueue%139:

0040a884 <popQueue>:
    (q->tailPos < (q->elemArrSz - 1)) ? q->tailPos++ : (q->tailPos = 0);
  40a884:	6802      	ldr	r2, [r0, #0]
  40a886:	6903      	ldr	r3, [r0, #16]
  40a888:	3b01      	subs	r3, #1
  40a88a:	429a      	cmp	r2, r3
  40a88c:	d305      	bcc.n	40a89a <popQueue+0x16>
  40a88e:	2300      	movs	r3, #0
  40a890:	6003      	str	r3, [r0, #0]
    q->numElem--;
  40a892:	6883      	ldr	r3, [r0, #8]
  40a894:	3b01      	subs	r3, #1
  40a896:	6083      	str	r3, [r0, #8]
  40a898:	4770      	bx	lr
    (q->tailPos < (q->elemArrSz - 1)) ? q->tailPos++ : (q->tailPos = 0);
  40a89a:	3201      	adds	r2, #1
  40a89c:	6002      	str	r2, [r0, #0]
  40a89e:	e7f8      	b.n	40a892 <popQueue+0xe>

Disassembly of section .text.SYS_TIME_Counter64Update%140:

0040a8a0 <SYS_TIME_Counter64Update>:
    uint32_t prevSwCounter32Bit = counterObj->swCounter64Low;
  40a8a0:	4a05      	ldr	r2, [pc, #20]	; (40a8b8 <.LVL35+0x8>)
  40a8a2:	6a53      	ldr	r3, [r2, #36]	; 0x24

0040a8a4 <.LVL31>:
    newSwCounter32Bit = prevSwCounter32Bit + elapsedCount;
  40a8a4:	4418      	add	r0, r3

0040a8a6 <.LBE22>:
    counterObj->swCounter64Low = SYS_TIME_Counter32Update(elapsedCount, &isSwCounter32Oveflow);
  40a8a6:	6250      	str	r0, [r2, #36]	; 0x24
    if (isSwCounter32Oveflow == true)
  40a8a8:	4283      	cmp	r3, r0
  40a8aa:	d800      	bhi.n	40a8ae <.LVL34>

0040a8ac <.LVL33>:
  40a8ac:	4770      	bx	lr

0040a8ae <.LVL34>:
        counterObj->swCounter64High++;
  40a8ae:	6a93      	ldr	r3, [r2, #40]	; 0x28

0040a8b0 <.LVL35>:
  40a8b0:	3301      	adds	r3, #1
  40a8b2:	6293      	str	r3, [r2, #40]	; 0x28
}
  40a8b4:	e7fa      	b.n	40a8ac <.LVL33>
  40a8b6:	bf00      	nop
  40a8b8:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__ascii_wctomb%141:

0040a8bc <__ascii_wctomb>:
  40a8bc:	b121      	cbz	r1, 40a8c8 <.LVL4>
  40a8be:	2aff      	cmp	r2, #255	; 0xff
  40a8c0:	d804      	bhi.n	40a8cc <.LVL6>
  40a8c2:	700a      	strb	r2, [r1, #0]
  40a8c4:	2001      	movs	r0, #1

0040a8c6 <.LVL3>:
  40a8c6:	4770      	bx	lr

0040a8c8 <.LVL4>:
  40a8c8:	4608      	mov	r0, r1

0040a8ca <.LVL5>:
  40a8ca:	4770      	bx	lr

0040a8cc <.LVL6>:
  40a8cc:	238a      	movs	r3, #138	; 0x8a

0040a8ce <.LVL7>:
  40a8ce:	6003      	str	r3, [r0, #0]
  40a8d0:	f04f 30ff 	mov.w	r0, #4294967295

0040a8d4 <.LVL8>:
  40a8d4:	4770      	bx	lr

0040a8d6 <.LFE18>:
  40a8d6:	bf00      	nop

Disassembly of section .text._localeconv_r%142:

0040a8d8 <_localeconv_r>:
  40a8d8:	4a04      	ldr	r2, [pc, #16]	; (40a8ec <.LBE19+0x6>)
  40a8da:	4b05      	ldr	r3, [pc, #20]	; (40a8f0 <.LBE19+0xa>)
  40a8dc:	6812      	ldr	r2, [r2, #0]
  40a8de:	6b50      	ldr	r0, [r2, #52]	; 0x34

0040a8e0 <.LVL3>:
  40a8e0:	2800      	cmp	r0, #0
  40a8e2:	bf08      	it	eq
  40a8e4:	4618      	moveq	r0, r3

0040a8e6 <.LBE19>:
  40a8e6:	30f0      	adds	r0, #240	; 0xf0
  40a8e8:	4770      	bx	lr
  40a8ea:	bf00      	nop
  40a8ec:	2040dca0 	.word	0x2040dca0
  40a8f0:	2040d850 	.word	0x2040d850

Disassembly of section .text.BSP_Initialize%143:

0040a8f4 <BSP_Initialize>:
void BSP_Initialize(void )
{


    /* Switch off LEDs */
		LED1_Off(); 
  40a8f4:	2220      	movs	r2, #32
  40a8f6:	4b04      	ldr	r3, [pc, #16]	; (40a908 <.LFE18+0x14>)
  40a8f8:	631a      	str	r2, [r3, #48]	; 0x30
		LED2_Off(); 
  40a8fa:	f44f 7280 	mov.w	r2, #256	; 0x100
  40a8fe:	f503 7300 	add.w	r3, r3, #512	; 0x200
  40a902:	631a      	str	r2, [r3, #48]	; 0x30
  40a904:	4770      	bx	lr
  40a906:	bf00      	nop
  40a908:	400e0e00 	.word	0x400e0e00

Disassembly of section .rodata.SHAExpected%144:

0040a90c <SHAExpected>:
  40a90c:	28c1fef7 92d5fcd7 3637ba22 10723b8d     ...(....".76.;r.
  40a91c:	efb6c7d4 bf000000                       ........

Disassembly of section .text.CRYPT_MD5_DataAdd%145:

0040a924 <CRYPT_MD5_DataAdd>:

/* Add data to MD5 */
int CRYPT_MD5_DataAdd(CRYPT_MD5_CTX* md5, const unsigned char* input,
                      unsigned int sz)
{
    if (md5 == NULL || input == NULL)
  40a924:	b138      	cbz	r0, 40a936 <.LCFI3>
{
  40a926:	b508      	push	{r3, lr}

0040a928 <.LCFI2>:
    if (md5 == NULL || input == NULL)
  40a928:	b111      	cbz	r1, 40a930 <.LVL8>
        return BAD_FUNC_ARG;

    return wc_Md5Update((Md5*)md5, input, sz);
  40a92a:	f7fe fea9 	bl	409680 <.LFE149>

0040a92e <.LVL7>:
  40a92e:	bd08      	pop	{r3, pc}

0040a930 <.LVL8>:
        return BAD_FUNC_ARG;
  40a930:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a934 <.LVL9>:
}
  40a934:	bd08      	pop	{r3, pc}

0040a936 <.LCFI3>:
        return BAD_FUNC_ARG;
  40a936:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a93a <.LVL11>:
  40a93a:	4770      	bx	lr

Disassembly of section .text.CRYPT_MD5_Finalize%146:

0040a93c <CRYPT_MD5_Finalize>:


/* Get MD5 Final into digest */
int CRYPT_MD5_Finalize(CRYPT_MD5_CTX* md5, unsigned char* digest)
{
    if (md5 == NULL || digest == NULL)
  40a93c:	b138      	cbz	r0, 40a94e <.LCFI5>
{
  40a93e:	b508      	push	{r3, lr}

0040a940 <.LCFI4>:
    if (md5 == NULL || digest == NULL)
  40a940:	b111      	cbz	r1, 40a948 <.LVL14>
        return BAD_FUNC_ARG;

    return wc_Md5Final((Md5*)md5, digest);
  40a942:	f7fe f93d 	bl	408bc0 <wc_Md5Final>

0040a946 <.LVL13>:
  40a946:	bd08      	pop	{r3, pc}

0040a948 <.LVL14>:
        return BAD_FUNC_ARG;
  40a948:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a94c <.LVL15>:
}
  40a94c:	bd08      	pop	{r3, pc}

0040a94e <.LCFI5>:
        return BAD_FUNC_ARG;
  40a94e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a952 <.LVL17>:
  40a952:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_DataAdd%147:

0040a954 <CRYPT_SHA_DataAdd>:

/* Add data to SHA */
int CRYPT_SHA_DataAdd(CRYPT_SHA_CTX* sha, const unsigned char* input,
                       unsigned int sz)
{
    if (sha == NULL || input == NULL)
  40a954:	b138      	cbz	r0, 40a966 <.LCFI9>
{
  40a956:	b508      	push	{r3, lr}

0040a958 <.LCFI8>:
    if (sha == NULL || input == NULL)
  40a958:	b111      	cbz	r1, 40a960 <.LVL26>
        return BAD_FUNC_ARG;

    return wc_ShaUpdate((Sha*)sha, input, sz);
  40a95a:	f7fe ff17 	bl	40978c <.LFE159>

0040a95e <.LVL25>:
  40a95e:	bd08      	pop	{r3, pc}

0040a960 <.LVL26>:
        return BAD_FUNC_ARG;
  40a960:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a964 <.LVL27>:
}
  40a964:	bd08      	pop	{r3, pc}

0040a966 <.LCFI9>:
        return BAD_FUNC_ARG;
  40a966:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a96a <.LVL29>:
  40a96a:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_Finalize%148:

0040a96c <CRYPT_SHA_Finalize>:


/* Get SHA Final into digest */
int CRYPT_SHA_Finalize(CRYPT_SHA_CTX* sha, unsigned char* digest)
{
    if (sha == NULL || digest == NULL)
  40a96c:	b138      	cbz	r0, 40a97e <.LCFI11>
{
  40a96e:	b508      	push	{r3, lr}

0040a970 <.LCFI10>:
    if (sha == NULL || digest == NULL)
  40a970:	b111      	cbz	r1, 40a978 <.LVL32>
        return BAD_FUNC_ARG;

    return wc_ShaFinal((Sha*)sha, digest);
  40a972:	f7fe fdf9 	bl	409568 <.LFE2>

0040a976 <.LVL31>:
  40a976:	bd08      	pop	{r3, pc}

0040a978 <.LVL32>:
        return BAD_FUNC_ARG;
  40a978:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a97c <.LVL33>:
}
  40a97c:	bd08      	pop	{r3, pc}

0040a97e <.LCFI11>:
        return BAD_FUNC_ARG;
  40a97e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a982 <.LVL35>:
  40a982:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_DataAdd%149:

0040a984 <CRYPT_SHA256_DataAdd>:

/* Add data to SHA-256 */
int CRYPT_SHA256_DataAdd(CRYPT_SHA256_CTX* sha256, const unsigned char* input,
                         unsigned int sz)
{
    if (sha256 == NULL || input == NULL)
  40a984:	b138      	cbz	r0, 40a996 <.LCFI15>
{
  40a986:	b508      	push	{r3, lr}

0040a988 <.LCFI14>:
    if (sha256 == NULL || input == NULL)
  40a988:	b111      	cbz	r1, 40a990 <.LVL44>
        return BAD_FUNC_ARG;

    return wc_Sha256Update((Sha256*)sha256, input, sz);
  40a98a:	f7fe ff40 	bl	40980e <.LFE165>

0040a98e <.LVL43>:
  40a98e:	bd08      	pop	{r3, pc}

0040a990 <.LVL44>:
        return BAD_FUNC_ARG;
  40a990:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a994 <.LVL45>:
}
  40a994:	bd08      	pop	{r3, pc}

0040a996 <.LCFI15>:
        return BAD_FUNC_ARG;
  40a996:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a99a <.LVL47>:
  40a99a:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_Finalize%150:

0040a99c <CRYPT_SHA256_Finalize>:


/* Get SHA-256 Final into digest */
int CRYPT_SHA256_Finalize(CRYPT_SHA256_CTX* sha256, unsigned char* digest)
{
    if (sha256 == NULL || digest == NULL)
  40a99c:	b138      	cbz	r0, 40a9ae <.LCFI17>
{
  40a99e:	b508      	push	{r3, lr}

0040a9a0 <.LCFI16>:
    if (sha256 == NULL || digest == NULL)
  40a9a0:	b111      	cbz	r1, 40a9a8 <.LVL50>
        return BAD_FUNC_ARG;

    return wc_Sha256Final((Sha256*)sha256, digest);
  40a9a2:	f7fe fc1d 	bl	4091e0 <.LFE25>

0040a9a6 <.LVL49>:
  40a9a6:	bd08      	pop	{r3, pc}

0040a9a8 <.LVL50>:
        return BAD_FUNC_ARG;
  40a9a8:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9ac <.LVL51>:
}
  40a9ac:	bd08      	pop	{r3, pc}

0040a9ae <.LCFI17>:
        return BAD_FUNC_ARG;
  40a9ae:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9b2 <.LVL53>:
  40a9b2:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA384_DataAdd%151:

0040a9b4 <CRYPT_SHA384_DataAdd>:

/* Add data to SHA-384 */
int CRYPT_SHA384_DataAdd(CRYPT_SHA384_CTX* sha384, const unsigned char* input,
                         unsigned int sz)
{
    if (sha384 == NULL || input == NULL)
  40a9b4:	b138      	cbz	r0, 40a9c6 <.LCFI21>
{
  40a9b6:	b508      	push	{r3, lr}

0040a9b8 <.LCFI20>:
    if (sha384 == NULL || input == NULL)
  40a9b8:	b111      	cbz	r1, 40a9c0 <.LVL60>
        return BAD_FUNC_ARG;

    return wc_Sha384Update((Sha384*)sha384, input, sz);
  40a9ba:	f7fd fe14 	bl	4085e6 <.LBE719>

0040a9be <.LVL59>:
  40a9be:	bd08      	pop	{r3, pc}

0040a9c0 <.LVL60>:
        return BAD_FUNC_ARG;
  40a9c0:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9c4 <.LVL61>:
}
  40a9c4:	bd08      	pop	{r3, pc}

0040a9c6 <.LCFI21>:
        return BAD_FUNC_ARG;
  40a9c6:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9ca <.LVL63>:
  40a9ca:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA384_Finalize%152:

0040a9cc <CRYPT_SHA384_Finalize>:


/* Get SHA-384 Final into digest */
int CRYPT_SHA384_Finalize(CRYPT_SHA384_CTX* sha384, unsigned char* digest)
{
    if (sha384 == NULL || digest == NULL)
  40a9cc:	b138      	cbz	r0, 40a9de <.LCFI23>
{
  40a9ce:	b508      	push	{r3, lr}

0040a9d0 <.LCFI22>:
    if (sha384 == NULL || digest == NULL)
  40a9d0:	b111      	cbz	r1, 40a9d8 <.LVL66>
        return BAD_FUNC_ARG;

    return wc_Sha384Final((Sha384*)sha384, digest);
  40a9d2:	f7fc fb75 	bl	4070c0 <.LFE21>

0040a9d6 <.LVL65>:
  40a9d6:	bd08      	pop	{r3, pc}

0040a9d8 <.LVL66>:
        return BAD_FUNC_ARG;
  40a9d8:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9dc <.LVL67>:
}
  40a9dc:	bd08      	pop	{r3, pc}

0040a9de <.LCFI23>:
        return BAD_FUNC_ARG;
  40a9de:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9e2 <.LVL69>:
  40a9e2:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA512_DataAdd%153:

0040a9e4 <CRYPT_SHA512_DataAdd>:

/* Add data to SHA-512 */
int CRYPT_SHA512_DataAdd(CRYPT_SHA512_CTX* sha512, const unsigned char* input,
                         unsigned int sz)
{
    if (sha512 == NULL || input == NULL)
  40a9e4:	b138      	cbz	r0, 40a9f6 <.LCFI27>
{
  40a9e6:	b508      	push	{r3, lr}

0040a9e8 <.LCFI26>:
    if (sha512 == NULL || input == NULL)
  40a9e8:	b111      	cbz	r1, 40a9f0 <.LVL76>
        return BAD_FUNC_ARG;

    return wc_Sha512Update((Sha512*)sha512, input, sz);
  40a9ea:	f7fd fd87 	bl	4084fc <.LFE18>

0040a9ee <.LVL75>:
  40a9ee:	bd08      	pop	{r3, pc}

0040a9f0 <.LVL76>:
        return BAD_FUNC_ARG;
  40a9f0:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9f4 <.LVL77>:
}
  40a9f4:	bd08      	pop	{r3, pc}

0040a9f6 <.LCFI27>:
        return BAD_FUNC_ARG;
  40a9f6:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a9fa <.LVL79>:
  40a9fa:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA512_Finalize%154:

0040a9fc <CRYPT_SHA512_Finalize>:


/* Get SHA-512 Final into digest */
int CRYPT_SHA512_Finalize(CRYPT_SHA512_CTX* sha512, unsigned char* digest)
{
    if (sha512 == NULL || digest == NULL)
  40a9fc:	b138      	cbz	r0, 40aa0e <.LCFI29>
{
  40a9fe:	b508      	push	{r3, lr}

0040aa00 <.LCFI28>:
    if (sha512 == NULL || digest == NULL)
  40aa00:	b111      	cbz	r1, 40aa08 <.LVL82>
        return BAD_FUNC_ARG;

    return wc_Sha512Final((Sha512*)sha512, digest);
  40aa02:	f7fc fa15 	bl	406e30 <wc_Sha512Final>

0040aa06 <.LVL81>:
  40aa06:	bd08      	pop	{r3, pc}

0040aa08 <.LVL82>:
        return BAD_FUNC_ARG;
  40aa08:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040aa0c <.LVL83>:
}
  40aa0c:	bd08      	pop	{r3, pc}

0040aa0e <.LCFI29>:
        return BAD_FUNC_ARG;
  40aa0e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040aa12 <.LVL85>:
  40aa12:	4770      	bx	lr

Disassembly of section .text.Console_UART_RegisterCallback%155:

0040aa14 <Console_UART_RegisterCallback>:
    switch (event)
  40aa14:	b121      	cbz	r1, 40aa20 <Console_UART_RegisterCallback+0xc>
  40aa16:	2901      	cmp	r1, #1
  40aa18:	d104      	bne.n	40aa24 <Console_UART_RegisterCallback+0x10>
            consUartData.rdCallback = consCallback;
  40aa1a:	4b03      	ldr	r3, [pc, #12]	; (40aa28 <.LFE180+0x14>)
  40aa1c:	6498      	str	r0, [r3, #72]	; 0x48
            break;
  40aa1e:	4770      	bx	lr
            consUartData.wrCallback = consCallback;
  40aa20:	4b01      	ldr	r3, [pc, #4]	; (40aa28 <.LFE180+0x14>)
  40aa22:	64d8      	str	r0, [r3, #76]	; 0x4c
  40aa24:	4770      	bx	lr
  40aa26:	bf00      	nop
  40aa28:	2040db4c 	.word	0x2040db4c

Disassembly of section .text.UARTDeviceReadCallback%156:

0040aa2c <UARTDeviceReadCallback>:
{
  40aa2c:	b508      	push	{r3, lr}

0040aa2e <.LCFI4>:
    if (USART1_ErrorGet() == 0)
  40aa2e:	f7ff fe15 	bl	40a65c <.LFE6>

0040aa32 <.LVL17>:
  40aa32:	b918      	cbnz	r0, 40aa3c <.LVL17+0xa>
        consUartData.isReadComplete = true;
  40aa34:	2201      	movs	r2, #1
  40aa36:	4b02      	ldr	r3, [pc, #8]	; (40aa40 <.LVL17+0xe>)
  40aa38:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  40aa3c:	bd08      	pop	{r3, pc}
  40aa3e:	bf00      	nop
  40aa40:	2040db4c 	.word	0x2040db4c

Disassembly of section .text.SYS_TIME_GetElapsedCount%157:

0040aa44 <SYS_TIME_GetElapsedCount>:
    if (hwTimerCurrentValue > counterObj->hwTimerPreviousValue)
  40aa44:	4b04      	ldr	r3, [pc, #16]	; (40aa58 <.LVL75+0x2>)
  40aa46:	691b      	ldr	r3, [r3, #16]
  40aa48:	4283      	cmp	r3, r0
  40aa4a:	d303      	bcc.n	40aa54 <.LVL74>
        elapsedCount = (SYS_TIME_HW_COUNTER_PERIOD - counterObj->hwTimerPreviousValue) + hwTimerCurrentValue + 1;
  40aa4c:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
  40aa50:	4418      	add	r0, r3

0040aa52 <.LVL73>:
}
  40aa52:	4770      	bx	lr

0040aa54 <.LVL74>:
        elapsedCount = hwTimerCurrentValue - counterObj->hwTimerPreviousValue;
  40aa54:	1ac0      	subs	r0, r0, r3

0040aa56 <.LVL75>:
  40aa56:	4770      	bx	lr
  40aa58:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.wc_InitMd5%158:

0040aa5c <wc_InitMd5>:
#endif /* !HAVE_MD5_CUST_API */


int wc_InitMd5(Md5* md5)
{
    if (md5 == NULL) {
  40aa5c:	b130      	cbz	r0, 40aa6c <.LCFI9>
{
  40aa5e:	b508      	push	{r3, lr}

0040aa60 <.LCFI8>:
        return BAD_FUNC_ARG;
    }
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
  40aa60:	f06f 0201 	mvn.w	r2, #1
  40aa64:	2100      	movs	r1, #0
  40aa66:	f7ff fd3f 	bl	40a4e8 <.LFE148>

0040aa6a <.LVL369>:
  40aa6a:	bd08      	pop	{r3, pc}

0040aa6c <.LCFI9>:
        return BAD_FUNC_ARG;
  40aa6c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040aa70 <.LVL371>:
  40aa70:	4770      	bx	lr

Disassembly of section .rodata.MD5Expected%159:

004087ac <MD5Expected>:
  4087ac:	c230 7e55 0283 bea5 90b2 15c7 d820 427f     0.U~........ ..B
  4087bc:	0000 bf00                                   ....

Disassembly of section .text.SYS_Tasks%160:

0040aa74 <SYS_Tasks>:
  Remarks:
    See prototype in system/common/sys_module.h.
*/

void SYS_Tasks ( void )
{
  40aa74:	b508      	push	{r3, lr}

0040aa76 <.LCFI0>:
    /* Maintain system services */
    SYS_CONSOLE_Tasks(sysObj.sysConsole0);
  40aa76:	4b03      	ldr	r3, [pc, #12]	; (40aa84 <.LVL1+0x2>)
  40aa78:	6818      	ldr	r0, [r3, #0]
  40aa7a:	f7ff fef5 	bl	40a868 <.LFE150>

0040aa7e <.LVL0>:
    /* Maintain Middleware & Other Libraries */
    

    /* Maintain the application's state machine. */
        /* Call Application task APP. */
    APP_Tasks();
  40aa7e:	f7fc fda7 	bl	4075d0 <APP_Tasks>

0040aa82 <.LVL1>:
  40aa82:	bd08      	pop	{r3, pc}
  40aa84:	20400000 	.word	0x20400000

Disassembly of section .rodata%161:

0040aa88 <.LANCHOR0>:
  40aa88:	00000043 	.word	0x00000043
  40aa8c:	49534f50 	.word	0x49534f50
  40aa90:	00000058 	.word	0x00000058
  40aa94:	00000000 	.word	0x00000000
  40aa98:	002e      	.short	0x002e
  40aa9a:	bf00      	nop

Disassembly of section .text.register_fini%162:

0040aa9c <register_fini>:
  40aa9c:	4b02      	ldr	r3, [pc, #8]	; (40aaa8 <.LVL0+0x2>)
  40aa9e:	b113      	cbz	r3, 40aaa6 <.LVL0>

0040aaa0 <.LBB2>:
  40aaa0:	4802      	ldr	r0, [pc, #8]	; (40aaac <.LVL0+0x6>)
  40aaa2:	f000 b8e7 	b.w	40ac74 <.LFE155>

0040aaa6 <.LVL0>:
  40aaa6:	4770      	bx	lr
  40aaa8:	00000000 	.word	0x00000000
  40aaac:	0040a5f9 	.word	0x0040a5f9

Disassembly of section .rodata%163:

0040aab0 <.LC0>:
  40aab0:	69666e49 	.word	0x69666e49
  40aab4:	7974696e 	.word	0x7974696e
  40aab8:	00000000 	.word	0x00000000

0040aabc <.LC1>:
  40aabc:	004e614e 	.word	0x004e614e

0040aac0 <.LC2>:
  40aac0:	0030      	.short	0x0030
  40aac2:	bf00      	nop

Disassembly of section .text._Bfree%164:

0040aac4 <_Bfree>:
  40aac4:	b131      	cbz	r1, 40aad4 <.LVL11+0x6>
  40aac6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40aac8:	684a      	ldr	r2, [r1, #4]
  40aaca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]

0040aace <.LVL11>:
  40aace:	6008      	str	r0, [r1, #0]
  40aad0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40aad4:	4770      	bx	lr

0040aad6 <.LFE18>:
  40aad6:	bf00      	nop

Disassembly of section .text.__i2b%165:

0040aad8 <__i2b>:
  40aad8:	b510      	push	{r4, lr}

0040aada <.LCFI6>:
  40aada:	460c      	mov	r4, r1
  40aadc:	2101      	movs	r1, #1

0040aade <.LVL105>:
  40aade:	f7ff faf7 	bl	40a0d0 <.LFE2>

0040aae2 <.LVL106>:
  40aae2:	2201      	movs	r2, #1
  40aae4:	6144      	str	r4, [r0, #20]
  40aae6:	6102      	str	r2, [r0, #16]
  40aae8:	bd10      	pop	{r4, pc}

0040aaea <.LFE23>:
  40aaea:	bf00      	nop

Disassembly of section .text.SYS_INT_Disable%166:

0040aaec <SYS_INT_Disable>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40aaec:	f3ef 8010 	mrs	r0, PRIMASK

0040aaf0 <.LBB38>:
  __ASM volatile ("cpsid i" : : : "memory");
  40aaf0:	b672      	cpsid	i

0040aaf2 <.LBB40>:
  __ASM volatile ("dmb 0xF":::"memory");
  40aaf2:	f3bf 8f5f 	dmb	sy

0040aaf6 <.LBE40>:
}
  40aaf6:	fab0 f080 	clz	r0, r0

0040aafa <.LVL1>:
  40aafa:	0940      	lsrs	r0, r0, #5
  40aafc:	4770      	bx	lr

Disassembly of section .text.SYS_INT_Restore%167:

0040aafe <SYS_INT_Restore>:
    if( state == true )
  40aafe:	b918      	cbnz	r0, 40ab08 <.LBB46>

0040ab00 <.LBB42>:
  __ASM volatile ("cpsid i" : : : "memory");
  40ab00:	b672      	cpsid	i

0040ab02 <.LBB44>:
  __ASM volatile ("dmb 0xF":::"memory");
  40ab02:	f3bf 8f5f 	dmb	sy
  40ab06:	4770      	bx	lr

0040ab08 <.LBB46>:
  40ab08:	f3bf 8f5f 	dmb	sy

0040ab0c <.LBB48>:
  __ASM volatile ("cpsie i" : : : "memory");
  40ab0c:	b662      	cpsie	i
  40ab0e:	4770      	bx	lr

Disassembly of section .text.CRYPT_MD5_Initialize%168:

0040ab10 <CRYPT_MD5_Initialize>:
    if (md5 == NULL)
  40ab10:	b120      	cbz	r0, 40ab1c <.LCFI1>
{
  40ab12:	b508      	push	{r3, lr}

0040ab14 <.LCFI0>:
    wc_InitMd5((Md5*)md5);
  40ab14:	f7ff ffa2 	bl	40aa5c <.LFE164>

0040ab18 <.LVL1>:
    return 0;
  40ab18:	2000      	movs	r0, #0
  40ab1a:	bd08      	pop	{r3, pc}

0040ab1c <.LCFI1>:
        return BAD_FUNC_ARG;
  40ab1c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040ab20 <.LVL3>:
  40ab20:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_Initialize%169:

0040ab22 <CRYPT_SHA_Initialize>:
    if (sha == NULL)
  40ab22:	b118      	cbz	r0, 40ab2c <.LCFI7>
{
  40ab24:	b508      	push	{r3, lr}

0040ab26 <.LCFI6>:
    return wc_InitSha((Sha*)sha);
  40ab26:	f7ff f8eb 	bl	409d00 <.LFE163>

0040ab2a <.LVL19>:
  40ab2a:	bd08      	pop	{r3, pc}

0040ab2c <.LCFI7>:
        return BAD_FUNC_ARG;
  40ab2c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040ab30 <.LVL21>:
  40ab30:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_Initialize%170:

0040ab32 <CRYPT_SHA256_Initialize>:
    if (sha256 == NULL)
  40ab32:	b118      	cbz	r0, 40ab3c <.LCFI13>
{
  40ab34:	b508      	push	{r3, lr}

0040ab36 <.LCFI12>:
    return wc_InitSha256((Sha256*)sha256);
  40ab36:	f7fe fbef 	bl	409318 <wc_InitSha256>

0040ab3a <.LVL37>:
  40ab3a:	bd08      	pop	{r3, pc}

0040ab3c <.LCFI13>:
        return BAD_FUNC_ARG;
  40ab3c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040ab40 <.LVL39>:
  40ab40:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA384_Initialize%171:

0040ab42 <CRYPT_SHA384_Initialize>:
    if (sha384 == NULL)
  40ab42:	b118      	cbz	r0, 40ab4c <.LCFI19>
{
  40ab44:	b508      	push	{r3, lr}

0040ab46 <.LCFI18>:
    return wc_InitSha384((Sha384*)sha384);
  40ab46:	f000 f84b 	bl	40abe0 <.LFE22>

0040ab4a <.LVL55>:
  40ab4a:	bd08      	pop	{r3, pc}

0040ab4c <.LCFI19>:
        return BAD_FUNC_ARG;
  40ab4c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040ab50 <.LVL57>:
  40ab50:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA512_Initialize%172:

0040ab52 <CRYPT_SHA512_Initialize>:
    if (sha512 == NULL)
  40ab52:	b118      	cbz	r0, 40ab5c <.LCFI25>
{
  40ab54:	b508      	push	{r3, lr}

0040ab56 <.LCFI24>:
    return wc_InitSha512((Sha512*)sha512);
  40ab56:	f000 f83c 	bl	40abd2 <.LFE163>

0040ab5a <.LVL71>:
  40ab5a:	bd08      	pop	{r3, pc}

0040ab5c <.LCFI25>:
        return BAD_FUNC_ARG;
  40ab5c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040ab60 <.LVL73>:
  40ab60:	4770      	bx	lr

Disassembly of section .text.UARTDeviceWriteCallback%173:

0040ab64 <UARTDeviceWriteCallback>:
    consUartData.isWriteComplete = true;
  40ab64:	2201      	movs	r2, #1
  40ab66:	4b02      	ldr	r3, [pc, #8]	; (40ab70 <UARTDeviceWriteCallback+0xc>)
  40ab68:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
  40ab6c:	4770      	bx	lr
  40ab6e:	bf00      	nop
  40ab70:	2040db4c 	.word	0x2040db4c

Disassembly of section .text.USART1_WriteCallbackRegister%174:

0040ab74 <USART1_WriteCallbackRegister>:


bool USART1_WriteCallbackRegister( USART_CALLBACK callback, uintptr_t context )
{
    usart1Obj.txCallback = callback;
  40ab74:	4b02      	ldr	r3, [pc, #8]	; (40ab80 <.LVL43+0x4>)
  40ab76:	60d8      	str	r0, [r3, #12]
    usart1Obj.txContext = context;
  40ab78:	6119      	str	r1, [r3, #16]

    return true;
}
  40ab7a:	2001      	movs	r0, #1

0040ab7c <.LVL43>:
  40ab7c:	4770      	bx	lr
  40ab7e:	bf00      	nop
  40ab80:	20400454 	.word	0x20400454

Disassembly of section .text.USART1_ReadCallbackRegister%175:

0040ab84 <USART1_ReadCallbackRegister>:

bool USART1_ReadCallbackRegister( USART_CALLBACK callback, uintptr_t context )
{
    usart1Obj.rxCallback = callback;
  40ab84:	4b02      	ldr	r3, [pc, #8]	; (40ab90 <.LVL45+0x4>)
  40ab86:	6258      	str	r0, [r3, #36]	; 0x24
    usart1Obj.rxContext = context;
  40ab88:	6299      	str	r1, [r3, #40]	; 0x28

    return true;
}
  40ab8a:	2001      	movs	r0, #1

0040ab8c <.LVL45>:
  40ab8c:	4770      	bx	lr
  40ab8e:	bf00      	nop
  40ab90:	20400454 	.word	0x20400454

Disassembly of section .text.malloc%176:

0040ab94 <malloc>:
  40ab94:	4b02      	ldr	r3, [pc, #8]	; (40aba0 <.LVL2+0x2>)
  40ab96:	4601      	mov	r1, r0
  40ab98:	6818      	ldr	r0, [r3, #0]

0040ab9a <.LVL1>:
  40ab9a:	f7fb bb8b 	b.w	4062b4 <.LFE14>

0040ab9e <.LVL2>:
  40ab9e:	bf00      	nop
  40aba0:	2040dca0 	.word	0x2040dca0

Disassembly of section .rodata.blanks.8352%177:

0040aba4 <blanks.8352>:
  40aba4:	20202020 20202020 20202020 20202020                     

Disassembly of section .rodata.zeroes.8353%178:

0040abb4 <zeroes.8353>:
  40abb4:	30303030 30303030 30303030 30303030     0000000000000000

Disassembly of section .text.main%179:

0040abc4 <main>:
// Section: Main Entry Point
// *****************************************************************************
// *****************************************************************************

int main ( void )
{
  40abc4:	b508      	push	{r3, lr}

0040abc6 <.LCFI0>:
    /* Initialize all modules */
    SYS_Initialize ( NULL );
  40abc6:	2000      	movs	r0, #0
  40abc8:	f7ff f86a 	bl	409ca0 <SYS_Initialize>

0040abcc <.LVL0>:

    while ( true )
    {
        /* Maintain state machines of all polled MPLAB Harmony modules. */
        SYS_Tasks ( );
  40abcc:	f7ff ff52 	bl	40aa74 <SYS_Tasks>

0040abd0 <.LVL1>:
  40abd0:	e7fc      	b.n	40abcc <.LVL0>

Disassembly of section .text.wc_InitSha512%180:

0040abd2 <wc_InitSha512>:
{
  40abd2:	b508      	push	{r3, lr}

0040abd4 <.LCFI12>:
    return wc_InitSha512_ex(sha512, NULL, INVALID_DEVID);
  40abd4:	f06f 0201 	mvn.w	r2, #1
  40abd8:	2100      	movs	r1, #0
  40abda:	f7fe f8b1 	bl	408d40 <wc_InitSha512_ex>

0040abde <.LVL80>:
}
  40abde:	bd08      	pop	{r3, pc}

Disassembly of section .text.wc_InitSha384%181:

0040abe0 <wc_InitSha384>:
#endif

int wc_InitSha384(Sha384* sha384)
{
  40abe0:	b508      	push	{r3, lr}

0040abe2 <.LCFI21>:
    return wc_InitSha384_ex(sha384, NULL, INVALID_DEVID);
  40abe2:	f06f 0201 	mvn.w	r2, #1
  40abe6:	2100      	movs	r1, #0
  40abe8:	f7fe f906 	bl	408df8 <.LFE15>

0040abec <.LVL145>:
}
  40abec:	bd08      	pop	{r3, pc}

Disassembly of section .text.APP_Initialize%182:

0040abf0 <APP_Initialize>:
    appData.state = APP_STATE_INIT;
  40abf0:	2200      	movs	r2, #0
  40abf2:	4b01      	ldr	r3, [pc, #4]	; (40abf8 <APP_Initialize+0x8>)
  40abf4:	701a      	strb	r2, [r3, #0]
  40abf6:	4770      	bx	lr
  40abf8:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.CRYPT_MD5_DataSizeSet%183:

0040abfc <CRYPT_MD5_DataSizeSet>:
    if (md5 == NULL)
  40abfc:	2800      	cmp	r0, #0
}
  40abfe:	bf0c      	ite	eq
  40ac00:	f06f 00ac 	mvneq.w	r0, #172	; 0xac

0040ac04 <.LVL5>:
  40ac04:	2000      	movne	r0, #0
  40ac06:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_DataSizeSet%184:

0040ac08 <CRYPT_SHA_DataSizeSet>:
    if (sha == NULL)
  40ac08:	2800      	cmp	r0, #0
}
  40ac0a:	bf0c      	ite	eq
  40ac0c:	f06f 00ac 	mvneq.w	r0, #172	; 0xac

0040ac10 <.LVL23>:
  40ac10:	2000      	movne	r0, #0
  40ac12:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_DataSizeSet%185:

0040ac14 <CRYPT_SHA256_DataSizeSet>:
    if (sha256 == NULL)
  40ac14:	2800      	cmp	r0, #0
}
  40ac16:	bf0c      	ite	eq
  40ac18:	f06f 00ac 	mvneq.w	r0, #172	; 0xac

0040ac1c <.LVL41>:
  40ac1c:	2000      	movne	r0, #0
  40ac1e:	4770      	bx	lr

Disassembly of section .text.TC0_CH0_TimerStart%186:

0040ac20 <TC0_CH0_TimerStart>:
    TC0_REGS->TC_CHANNEL[0].TC_CCR = (TC_CCR_CLKEN_Msk | TC_CCR_SWTRG_Msk);
  40ac20:	2205      	movs	r2, #5
  40ac22:	4b01      	ldr	r3, [pc, #4]	; (40ac28 <.LFE172+0x8>)
  40ac24:	601a      	str	r2, [r3, #0]
  40ac26:	4770      	bx	lr
  40ac28:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerStop%187:

0040ac2c <TC0_CH0_TimerStop>:
    TC0_REGS->TC_CHANNEL[0].TC_CCR = (TC_CCR_CLKDIS_Msk);
  40ac2c:	2202      	movs	r2, #2
  40ac2e:	4b01      	ldr	r3, [pc, #4]	; (40ac34 <.LFE142+0x8>)
  40ac30:	601a      	str	r2, [r3, #0]
  40ac32:	4770      	bx	lr
  40ac34:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerPeriodSet%188:

0040ac38 <TC0_CH0_TimerPeriodSet>:
    TC0_REGS->TC_CHANNEL[0].TC_RC = period;
  40ac38:	4b01      	ldr	r3, [pc, #4]	; (40ac40 <.LFE143+0x8>)
  40ac3a:	61d8      	str	r0, [r3, #28]
  40ac3c:	4770      	bx	lr
  40ac3e:	bf00      	nop
  40ac40:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerCompareSet%189:

0040ac44 <TC0_CH0_TimerCompareSet>:
    TC0_REGS->TC_CHANNEL[0].TC_RA = compare;
  40ac44:	4b01      	ldr	r3, [pc, #4]	; (40ac4c <.LFE145+0x8>)
  40ac46:	6158      	str	r0, [r3, #20]
  40ac48:	4770      	bx	lr
  40ac4a:	bf00      	nop
  40ac4c:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerCounterGet%190:

0040ac50 <TC0_CH0_TimerCounterGet>:
    return TC0_REGS->TC_CHANNEL[0].TC_CV;
  40ac50:	4b01      	ldr	r3, [pc, #4]	; (40ac58 <.LFE146+0x8>)
  40ac52:	6918      	ldr	r0, [r3, #16]
}
  40ac54:	b280      	uxth	r0, r0
  40ac56:	4770      	bx	lr
  40ac58:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerCallbackRegister%191:

0040ac5c <TC0_CH0_TimerCallbackRegister>:
    TC0_CH0_CallbackObj.callback_fn = callback;
  40ac5c:	4b01      	ldr	r3, [pc, #4]	; (40ac64 <.LFE148+0x8>)
  40ac5e:	6018      	str	r0, [r3, #0]
    TC0_CH0_CallbackObj.context = context;
  40ac60:	6059      	str	r1, [r3, #4]
  40ac62:	4770      	bx	lr
  40ac64:	2040044c 	.word	0x2040044c

Disassembly of section .text.USART1_ReadCountGet%192:

0040ac68 <USART1_ReadCountGet>:
}

size_t USART1_ReadCountGet( void )
{
    return usart1Obj.rxProcessedSize;
}
  40ac68:	4b01      	ldr	r3, [pc, #4]	; (40ac70 <.LFE149+0x8>)
  40ac6a:	6a18      	ldr	r0, [r3, #32]
  40ac6c:	4770      	bx	lr
  40ac6e:	bf00      	nop
  40ac70:	20400454 	.word	0x20400454

Disassembly of section .text.atexit%193:

0040ac74 <atexit>:
  40ac74:	2300      	movs	r3, #0
  40ac76:	4601      	mov	r1, r0
  40ac78:	461a      	mov	r2, r3
  40ac7a:	4618      	mov	r0, r3

0040ac7c <.LVL1>:
  40ac7c:	f7fe b96a 	b.w	408f54 <__register_exitproc>

Disassembly of section .rodata.p05.7179%194:

0040ac80 <p05.7179>:
  40ac80:	0005 0000 0019 0000 007d 0000               ........}...

Disassembly of section .text.SYS_TIME_CounterGet%195:

00409098 <SYS_TIME_CounterGet>:
{
  409098:	b508      	push	{r3, lr}

0040909a <.LCFI15>:
    counter32 = (uint32_t)SYS_TIME_Counter64Get();
  40909a:	f001 f9ad 	bl	40a3f8 <.LFE158>

0040909e <.LVL158>:
}
  40909e:	bd08      	pop	{r3, pc}

Disassembly of section .text.TC0_CH0_TimerFrequencyGet%196:

0040ac8c <TC0_CH0_TimerFrequencyGet>:
}
  40ac8c:	4800      	ldr	r0, [pc, #0]	; (40ac90 <TC0_CH0_TimerFrequencyGet+0x4>)
  40ac8e:	4770      	bx	lr
  40ac90:	08f0d180 	.word	0x08f0d180

Disassembly of section .text%197:

00406e2c <__aeabi_idiv0>:
  406e2c:	4770      	bx	lr

00406e2e <L0>:
  406e2e:	bf00      	nop

Disassembly of section .rodata._global_impure_ptr%198:

0040a794 <_global_impure_ptr>:
  40a794:	cc88 2040                                   ..@ 

Disassembly of section .text.__malloc_lock%199:

0040ac94 <__malloc_lock>:
  40ac94:	4770      	bx	lr
  40ac96:	bf00      	nop

Disassembly of section .text.__malloc_unlock%200:

0040ac98 <__malloc_unlock>:
  40ac98:	4770      	bx	lr

0040ac9a <.LFE1>:
  40ac9a:	bf00      	nop

Disassembly of section .text.Dummy_Handler%201:

0040aa72 <Dummy_Handler>:

extern uint32_t _stack;

/* Brief default interrupt handler for unused IRQs.*/
void __attribute__((optimize("-O1"),section(".text.Dummy_Handler"),long_call))Dummy_Handler(void)
{
  40aa72:	e7fe      	b.n	40aa72 <Dummy_Handler>

Disassembly of section .text.NonMaskableInt_Handler%202:

0040ab62 <NonMaskableInt_Handler>:
// *****************************************************************************

/* Brief default interrupt handlers for core IRQs.*/

void NonMaskableInt_Handler(void)
{
  40ab62:	e7fe      	b.n	40ab62 <NonMaskableInt_Handler>

Disassembly of section .text.HardFault_Handler%203:

0040abee <HardFault_Handler>:
    {
    }
}

void HardFault_Handler(void)
{
  40abee:	e7fe      	b.n	40abee <HardFault_Handler>

Disassembly of section .text.DebugMonitor_Handler%204:

0040ac9c <DebugMonitor_Handler>:
   {
   }
}

void DebugMonitor_Handler(void)
{
  40ac9c:	e7fe      	b.n	40ac9c <DebugMonitor_Handler>

Disassembly of section .text.MemoryManagement_Handler%205:

0040ac9e <MemoryManagement_Handler>:
   {
   }
}

void MemoryManagement_Handler(void)
{
  40ac9e:	e7fe      	b.n	40ac9e <MemoryManagement_Handler>

Disassembly of section .text.BusFault_Handler%206:

0040aca0 <BusFault_Handler>:
   {
   }
}

void BusFault_Handler(void)
{
  40aca0:	e7fe      	b.n	40aca0 <BusFault_Handler>

Disassembly of section .text.UsageFault_Handler%207:

0040aca2 <UsageFault_Handler>:
   {
   }
}

void UsageFault_Handler(void)
{
  40aca2:	e7fe      	b.n	40aca2 <UsageFault_Handler>
