
dist\same70_sw\production\same70_sw.X.production.elf:     file format elf32-littlearm


Disassembly of section .vectors:

00400000 <exception_table>:
  400000:	f0 ff 45 20 71 94 40 00 87 bd 40 00 2f be 40 00     ..E q.@...@./.@.
  400010:	e3 be 40 00 e5 be 40 00 e7 be 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	83 bc 40 00 e1 be 40 00 00 00 00 00 83 bc 40 00     ..@...@.......@.
  40003c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40004c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40005c:	83 bc 40 00 83 bc 40 00 00 00 00 00 83 bc 40 00     ..@...@.......@.
  40006c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 29 92 40 00     ..@...@...@.).@.
  40007c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40008c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40009c:	71 ba 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     q.@...@...@...@.
  4000ac:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  4000bc:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  4000cc:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  4000dc:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  4000ec:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  4000fc:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40010c:	83 bc 40 00 83 bc 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ......@...@...@.
  40012c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40013c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40014c:	83 bc 40 00 83 bc 40 00 83 bc 40 00 83 bc 40 00     ..@...@...@...@.
  40015c:	83 bc 40 00 83 bc 40 00 83 bc 40 00                 ..@...@...@.

Disassembly of section .text:

00400168 <_init>:
  400168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40016a:	bf00      	nop
  40016c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40016e:	bc08      	pop	{r3}
  400170:	469e      	mov	lr, r3
  400172:	4770      	bx	lr

00400174 <__init_array_start>:
  400174:	0040bcc1 	.word	0x0040bcc1

00400178 <__frame_dummy_init_array_entry>:
  400178:	0040adad                                ..@.

0040017c <_fini>:
  40017c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40017e:	bf00      	nop
  400180:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400182:	bc08      	pop	{r3}
  400184:	469e      	mov	lr, r3
  400186:	4770      	bx	lr

00400188 <__fini_array_start>:
  400188:	0040ad89 	.word	0x0040ad89

Disassembly of section .ARM.exidx:

0040018c <.ARM.exidx>:
  40018c:	00007b98 	.word	0x00007b98
  400190:	00000001 	.word	0x00000001

Disassembly of section .text._Transform%29:

00400194 <_Transform>:

#define R(i) h(i)+=S1(e(i))+Ch(e(i),f(i),g(i))+K[i+j]+(j?blk2(i):blk0(i));\
    d(i)+=h(i);h(i)+=S0(a(i))+Maj(a(i),b(i),c(i))

static int _Transform(Sha512* sha512)
{
  400194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00400198 <.LCFI0>:
  400198:	f2ad 7d94 	subw	sp, sp, #1940	; 0x794

0040019c <.LCFI1>:
  40019c:	f8cd 06cc 	str.w	r0, [sp, #1740]	; 0x6cc
#else
    word64 W[16];
#endif

    /* Copy digest to working vars */
    XMEMCPY(T, sha512->digest, sizeof(T));
  4001a0:	f100 0418 	add.w	r4, r0, #24
  4001a4:	f50d 66ea 	add.w	r6, sp, #1872	; 0x750
  4001a8:	f100 0758 	add.w	r7, r0, #88	; 0x58

004001ac <.LVL2>:
  4001ac:	4635      	mov	r5, r6
  4001ae:	6820      	ldr	r0, [r4, #0]
  4001b0:	6861      	ldr	r1, [r4, #4]
  4001b2:	68a2      	ldr	r2, [r4, #8]
  4001b4:	68e3      	ldr	r3, [r4, #12]
  4001b6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  4001b8:	3410      	adds	r4, #16
  4001ba:	462e      	mov	r6, r5
  4001bc:	42bc      	cmp	r4, r7
  4001be:	d1f5      	bne.n	4001ac <.LVL2>

004001c0 <.LVL3>:
  4001c0:	f50d 63da 	add.w	r3, sp, #1744	; 0x6d0
  4001c4:	e9d3 3400 	ldrd	r3, r4, [r3]
  4001c8:	e9cd 341c 	strd	r3, r4, [sp, #112]	; 0x70
  4001cc:	f50d 63ed 	add.w	r3, sp, #1896	; 0x768
  4001d0:	e9d3 ab00 	ldrd	sl, fp, [r3]
  4001d4:	f50d 63ea 	add.w	r3, sp, #1872	; 0x750
  4001d8:	e9d3 3400 	ldrd	r3, r4, [r3]
  4001dc:	4625      	mov	r5, r4
  4001de:	461c      	mov	r4, r3
  4001e0:	f50d 63eb 	add.w	r3, sp, #1880	; 0x758
  4001e4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4001e8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  4001ec:	f50d 63ec 	add.w	r3, sp, #1888	; 0x760
  4001f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4001f4:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8
  4001f8:	f50d 63f1 	add.w	r3, sp, #1928	; 0x788
  4001fc:	e9d3 2300 	ldrd	r2, r3, [r3]
  400200:	e9cd 2306 	strd	r2, r3, [sp, #24]
  400204:	f50d 63dc 	add.w	r3, sp, #1760	; 0x6e0
  400208:	e9d3 2300 	ldrd	r2, r3, [r3]
  40020c:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  400210:	f50d 63dd 	add.w	r3, sp, #1768	; 0x6e8
  400214:	e9d3 2300 	ldrd	r2, r3, [r3]
  400218:	e9cd 2320 	strd	r2, r3, [sp, #128]	; 0x80
  40021c:	f50d 63db 	add.w	r3, sp, #1752	; 0x6d8
  400220:	e9d3 2300 	ldrd	r2, r3, [r3]
  400224:	e9cd 2308 	strd	r2, r3, [sp, #32]
  400228:	f50d 63de 	add.w	r3, sp, #1776	; 0x6f0
  40022c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400230:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  400234:	f50d 63df 	add.w	r3, sp, #1784	; 0x6f8
  400238:	e9d3 2300 	ldrd	r2, r3, [r3]
  40023c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  400240:	f50d 63e0 	add.w	r3, sp, #1792	; 0x700
  400244:	e9d3 2300 	ldrd	r2, r3, [r3]
  400248:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  40024c:	f50d 63e1 	add.w	r3, sp, #1800	; 0x708
  400250:	e9d3 2300 	ldrd	r2, r3, [r3]
  400254:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  400258:	f50d 63e3 	add.w	r3, sp, #1816	; 0x718
  40025c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400260:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  400264:	f50d 63f0 	add.w	r3, sp, #1920	; 0x780
  400268:	e9d3 2300 	ldrd	r2, r3, [r3]
  40026c:	e9cd 2304 	strd	r2, r3, [sp, #16]
  400270:	f50d 63e2 	add.w	r3, sp, #1808	; 0x710
  400274:	e9d3 2300 	ldrd	r2, r3, [r3]
  400278:	e9cd 2300 	strd	r2, r3, [sp]
  40027c:	f50d 63e4 	add.w	r3, sp, #1824	; 0x720
  400280:	e9d3 2300 	ldrd	r2, r3, [r3]
  400284:	e9cd 2324 	strd	r2, r3, [sp, #144]	; 0x90
  400288:	f50d 63ef 	add.w	r3, sp, #1912	; 0x778
  40028c:	e9d3 8900 	ldrd	r8, r9, [r3]
  400290:	f50d 63e5 	add.w	r3, sp, #1832	; 0x728
  400294:	e9d3 2300 	ldrd	r2, r3, [r3]
  400298:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  40029c:	f50d 63ee 	add.w	r3, sp, #1904	; 0x770
  4002a0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002a4:	e9cd 2302 	strd	r2, r3, [sp, #8]
  4002a8:	f50d 63e6 	add.w	r3, sp, #1840	; 0x730
  4002ac:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002b0:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  4002b4:	f50d 63e7 	add.w	r3, sp, #1848	; 0x738
  4002b8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002bc:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
  4002c0:	f50d 63e8 	add.w	r3, sp, #1856	; 0x740
  4002c4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002c8:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
  4002cc:	f50d 63e9 	add.w	r3, sp, #1864	; 0x748
  4002d0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002d4:	e9cd 2328 	strd	r2, r3, [sp, #160]	; 0xa0
  4002d8:	4b5a      	ldr	r3, [pc, #360]	; (400444 <.LBE365+0x4e>)
            R(m);
        }
    }
#else
    /* 80 operations, partially loop unrolled */
    for (j = 0; j < 80; j += 16) {
  4002da:	f04f 0c00 	mov.w	ip, #0
  4002de:	469e      	mov	lr, r3
  4002e0:	4667      	mov	r7, ip

004002e2 <.LVL4>:
  4002e2:	f8dd c6cc 	ldr.w	ip, [sp, #1740]	; 0x6cc

004002e6 <.LBB353>:
}


STATIC INLINE word64 rotrFixed64(word64 x, word64 y)
{
    return (x >> y) | (x << (sizeof(y) * 8 - y));
  4002e6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4002ea:	0b83      	lsrs	r3, r0, #14
  4002ec:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  4002f0:	9370      	str	r3, [sp, #448]	; 0x1c0
  4002f2:	0b8b      	lsrs	r3, r1, #14
  4002f4:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  4002f8:	9371      	str	r3, [sp, #452]	; 0x1c4

004002fa <.LBB355>:
  4002fa:	0c83      	lsrs	r3, r0, #18
  4002fc:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  400300:	9372      	str	r3, [sp, #456]	; 0x1c8
  400302:	0c8b      	lsrs	r3, r1, #18
  400304:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  400308:	9373      	str	r3, [sp, #460]	; 0x1cc

0040030a <.LBE355>:
        R( 0); R( 1); R( 2); R( 3);
  40030a:	ab70      	add	r3, sp, #448	; 0x1c0
  40030c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400310:	a972      	add	r1, sp, #456	; 0x1c8
  400312:	e9d1 0100 	ldrd	r0, r1, [r1]
  400316:	4042      	eors	r2, r0
  400318:	404b      	eors	r3, r1
  40031a:	4610      	mov	r0, r2
  40031c:	4619      	mov	r1, r3

0040031e <.LBB357>:
  40031e:	9b03      	ldr	r3, [sp, #12]
  400320:	05db      	lsls	r3, r3, #23
  400322:	9a02      	ldr	r2, [sp, #8]
  400324:	ea43 2352 	orr.w	r3, r3, r2, lsr #9
  400328:	9375      	str	r3, [sp, #468]	; 0x1d4
  40032a:	05d3      	lsls	r3, r2, #23
  40032c:	9a03      	ldr	r2, [sp, #12]
  40032e:	ea43 2352 	orr.w	r3, r3, r2, lsr #9
  400332:	9374      	str	r3, [sp, #464]	; 0x1d0

00400334 <.LBE357>:
  400334:	ab74      	add	r3, sp, #464	; 0x1d0
  400336:	e9d3 2300 	ldrd	r2, r3, [r3]
  40033a:	4042      	eors	r2, r0
  40033c:	404b      	eors	r3, r1
  40033e:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68
  400342:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  400346:	ea82 0208 	eor.w	r2, r2, r8
  40034a:	ea83 0309 	eor.w	r3, r3, r9
  40034e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400352:	4010      	ands	r0, r2
  400354:	4019      	ands	r1, r3
  400356:	4602      	mov	r2, r0
  400358:	460b      	mov	r3, r1
  40035a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40035e:	4050      	eors	r0, r2
  400360:	4059      	eors	r1, r3
  400362:	4602      	mov	r2, r0
  400364:	460b      	mov	r3, r1
  400366:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  40036a:	1880      	adds	r0, r0, r2
  40036c:	4159      	adcs	r1, r3
  40036e:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400372:	4676      	mov	r6, lr
  400374:	e9de 2300 	ldrd	r2, r3, [lr]
  400378:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0
  40037c:	2f00      	cmp	r7, #0
  40037e:	f002 8255 	beq.w	40282c <.LCFI3>

00400382 <.LBB359>:
  400382:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  400386:	0cc3      	lsrs	r3, r0, #19
  400388:	ea43 3341 	orr.w	r3, r3, r1, lsl #13
  40038c:	9376      	str	r3, [sp, #472]	; 0x1d8
  40038e:	0ccb      	lsrs	r3, r1, #19
  400390:	ea43 3340 	orr.w	r3, r3, r0, lsl #13
  400394:	9377      	str	r3, [sp, #476]	; 0x1dc

00400396 <.LBB361>:
  400396:	00cb      	lsls	r3, r1, #3
  400398:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
  40039c:	9379      	str	r3, [sp, #484]	; 0x1e4
  40039e:	00c3      	lsls	r3, r0, #3
  4003a0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
  4003a4:	9378      	str	r3, [sp, #480]	; 0x1e0

004003a6 <.LBE361>:
  4003a6:	ab76      	add	r3, sp, #472	; 0x1d8
  4003a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4003ac:	a978      	add	r1, sp, #480	; 0x1e0
  4003ae:	e9d1 0100 	ldrd	r0, r1, [r1]
  4003b2:	4042      	eors	r2, r0
  4003b4:	404b      	eors	r3, r1
  4003b6:	990c      	ldr	r1, [sp, #48]	; 0x30
  4003b8:	0989      	lsrs	r1, r1, #6
  4003ba:	980d      	ldr	r0, [sp, #52]	; 0x34
  4003bc:	ea41 6180 	orr.w	r1, r1, r0, lsl #26
  4003c0:	9130      	str	r1, [sp, #192]	; 0xc0
  4003c2:	0981      	lsrs	r1, r0, #6
  4003c4:	9131      	str	r1, [sp, #196]	; 0xc4
  4003c6:	e9dd 0130 	ldrd	r0, r1, [sp, #192]	; 0xc0
  4003ca:	4050      	eors	r0, r2
  4003cc:	4059      	eors	r1, r3
  4003ce:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8

004003d2 <.LBB363>:
  4003d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  4003d6:	0851      	lsrs	r1, r2, #1
  4003d8:	ea41 71c3 	orr.w	r1, r1, r3, lsl #31
  4003dc:	917a      	str	r1, [sp, #488]	; 0x1e8
  4003de:	0859      	lsrs	r1, r3, #1
  4003e0:	ea41 71c2 	orr.w	r1, r1, r2, lsl #31
  4003e4:	917b      	str	r1, [sp, #492]	; 0x1ec

004003e6 <.LBB365>:
  4003e6:	0a11      	lsrs	r1, r2, #8
  4003e8:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
  4003ec:	917c      	str	r1, [sp, #496]	; 0x1f0
  4003ee:	0a19      	lsrs	r1, r3, #8
  4003f0:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
  4003f4:	917d      	str	r1, [sp, #500]	; 0x1f4

004003f6 <.LBE365>:
  4003f6:	ab7a      	add	r3, sp, #488	; 0x1e8
  4003f8:	e9d3 0100 	ldrd	r0, r1, [r3]
  4003fc:	ab7c      	add	r3, sp, #496	; 0x1f0
  4003fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  400402:	4050      	eors	r0, r2
  400404:	4059      	eors	r1, r3
  400406:	9b08      	ldr	r3, [sp, #32]
  400408:	09db      	lsrs	r3, r3, #7
  40040a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40040c:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
  400410:	9332      	str	r3, [sp, #200]	; 0xc8
  400412:	09d3      	lsrs	r3, r2, #7
  400414:	9333      	str	r3, [sp, #204]	; 0xcc
  400416:	e9dd 2332 	ldrd	r2, r3, [sp, #200]	; 0xc8
  40041a:	4042      	eors	r2, r0
  40041c:	404b      	eors	r3, r1
  40041e:	4610      	mov	r0, r2
  400420:	4619      	mov	r1, r3
  400422:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  400426:	1812      	adds	r2, r2, r0
  400428:	414b      	adcs	r3, r1
  40042a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40042e:	1880      	adds	r0, r0, r2
  400430:	4159      	adcs	r1, r3
  400432:	4602      	mov	r2, r0
  400434:	460b      	mov	r3, r1
  400436:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  40043a:	1880      	adds	r0, r0, r2
  40043c:	4159      	adcs	r1, r3
  40043e:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
  400442:	e001      	b.n	400448 <.LBE365+0x52>
  400444:	00408520 	.word	0x00408520
  400448:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  40044c:	e9dd 012c 	ldrd	r0, r1, [sp, #176]	; 0xb0
  400450:	1812      	adds	r2, r2, r0
  400452:	414b      	adcs	r3, r1
  400454:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  400458:	1880      	adds	r0, r0, r2
  40045a:	4159      	adcs	r1, r3
  40045c:	4602      	mov	r2, r0
  40045e:	460b      	mov	r3, r1
  400460:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  400464:	1880      	adds	r0, r0, r2
  400466:	4159      	adcs	r1, r3
  400468:	4602      	mov	r2, r0
  40046a:	460b      	mov	r3, r1
  40046c:	e9cd 2306 	strd	r2, r3, [sp, #24]
  400470:	eb10 020a 	adds.w	r2, r0, sl
  400474:	eb41 030b 	adc.w	r3, r1, fp
  400478:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0

0040047c <.LBB367>:
  40047c:	0f23      	lsrs	r3, r4, #28
  40047e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  400482:	937e      	str	r3, [sp, #504]	; 0x1f8
  400484:	0f2b      	lsrs	r3, r5, #28
  400486:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  40048a:	937f      	str	r3, [sp, #508]	; 0x1fc

0040048c <.LBB369>:
  40048c:	07ab      	lsls	r3, r5, #30
  40048e:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  400492:	9381      	str	r3, [sp, #516]	; 0x204
  400494:	07a3      	lsls	r3, r4, #30
  400496:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  40049a:	9380      	str	r3, [sp, #512]	; 0x200

0040049c <.LBE369>:
  40049c:	ab7e      	add	r3, sp, #504	; 0x1f8
  40049e:	e9d3 1200 	ldrd	r1, r2, [r3]
  4004a2:	ab80      	add	r3, sp, #512	; 0x200
  4004a4:	e9d3 ab00 	ldrd	sl, fp, [r3]
  4004a8:	ea81 010a 	eor.w	r1, r1, sl
  4004ac:	ea82 020b 	eor.w	r2, r2, fp
  4004b0:	4613      	mov	r3, r2
  4004b2:	460a      	mov	r2, r1

004004b4 <.LBB371>:
  4004b4:	0669      	lsls	r1, r5, #25
  4004b6:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  4004ba:	9183      	str	r1, [sp, #524]	; 0x20c
  4004bc:	0661      	lsls	r1, r4, #25
  4004be:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  4004c2:	9182      	str	r1, [sp, #520]	; 0x208

004004c4 <.LBE371>:
  4004c4:	a982      	add	r1, sp, #520	; 0x208
  4004c6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4004ca:	4050      	eors	r0, r2
  4004cc:	4059      	eors	r1, r3
  4004ce:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  4004d2:	e9dd ab18 	ldrd	sl, fp, [sp, #96]	; 0x60
  4004d6:	4650      	mov	r0, sl
  4004d8:	4659      	mov	r1, fp
  4004da:	4320      	orrs	r0, r4
  4004dc:	4329      	orrs	r1, r5
  4004de:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4004e2:	4002      	ands	r2, r0
  4004e4:	400b      	ands	r3, r1
  4004e6:	4650      	mov	r0, sl
  4004e8:	4659      	mov	r1, fp
  4004ea:	4020      	ands	r0, r4
  4004ec:	4029      	ands	r1, r5
  4004ee:	4310      	orrs	r0, r2
  4004f0:	4319      	orrs	r1, r3
  4004f2:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  4004f6:	1812      	adds	r2, r2, r0
  4004f8:	414b      	adcs	r3, r1
  4004fa:	4610      	mov	r0, r2
  4004fc:	4619      	mov	r1, r3
  4004fe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  400502:	1812      	adds	r2, r2, r0
  400504:	414b      	adcs	r3, r1
  400506:	e9cd 2306 	strd	r2, r3, [sp, #24]

0040050a <.LBB373>:
  40050a:	e9dd ab2c 	ldrd	sl, fp, [sp, #176]	; 0xb0
  40050e:	4653      	mov	r3, sl
  400510:	0b9b      	lsrs	r3, r3, #14
  400512:	465a      	mov	r2, fp
  400514:	ea43 438b 	orr.w	r3, r3, fp, lsl #18
  400518:	9384      	str	r3, [sp, #528]	; 0x210
  40051a:	0b93      	lsrs	r3, r2, #14
  40051c:	4652      	mov	r2, sl
  40051e:	ea43 438a 	orr.w	r3, r3, sl, lsl #18
  400522:	9385      	str	r3, [sp, #532]	; 0x214

00400524 <.LBB375>:
  400524:	0c93      	lsrs	r3, r2, #18
  400526:	465a      	mov	r2, fp
  400528:	ea43 338b 	orr.w	r3, r3, fp, lsl #14
  40052c:	9386      	str	r3, [sp, #536]	; 0x218
  40052e:	0c93      	lsrs	r3, r2, #18
  400530:	ea43 338a 	orr.w	r3, r3, sl, lsl #14
  400534:	9387      	str	r3, [sp, #540]	; 0x21c

00400536 <.LBE375>:
  400536:	ab84      	add	r3, sp, #528	; 0x210
  400538:	e9d3 2300 	ldrd	r2, r3, [r3]
  40053c:	a986      	add	r1, sp, #536	; 0x218
  40053e:	e9d1 0100 	ldrd	r0, r1, [r1]
  400542:	4042      	eors	r2, r0
  400544:	404b      	eors	r3, r1

00400546 <.LBB377>:
  400546:	4659      	mov	r1, fp
  400548:	05c9      	lsls	r1, r1, #23
  40054a:	4650      	mov	r0, sl
  40054c:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  400550:	9189      	str	r1, [sp, #548]	; 0x224
  400552:	05c1      	lsls	r1, r0, #23
  400554:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  400558:	9188      	str	r1, [sp, #544]	; 0x220

0040055a <.LBE377>:
  40055a:	a988      	add	r1, sp, #544	; 0x220
  40055c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400560:	4050      	eors	r0, r2
  400562:	4059      	eors	r1, r3
  400564:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400568:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40056c:	ea80 0008 	eor.w	r0, r0, r8
  400570:	ea81 0109 	eor.w	r1, r1, r9
  400574:	4652      	mov	r2, sl
  400576:	465b      	mov	r3, fp
  400578:	4002      	ands	r2, r0
  40057a:	400b      	ands	r3, r1
  40057c:	ea82 0a08 	eor.w	sl, r2, r8
  400580:	ea83 0b09 	eor.w	fp, r3, r9
  400584:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
  400588:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40058c:	1880      	adds	r0, r0, r2
  40058e:	4159      	adcs	r1, r3
  400590:	eb1a 0000 	adds.w	r0, sl, r0
  400594:	eb4b 0101 	adc.w	r1, fp, r1
  400598:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40059c:	2f00      	cmp	r7, #0
  40059e:	f002 814b 	beq.w	402838 <.LCFI3+0xc>

004005a2 <.LBB379>:
  4005a2:	e9dd 0128 	ldrd	r0, r1, [sp, #160]	; 0xa0
  4005a6:	0cc3      	lsrs	r3, r0, #19
  4005a8:	ea43 3341 	orr.w	r3, r3, r1, lsl #13
  4005ac:	938a      	str	r3, [sp, #552]	; 0x228
  4005ae:	0ccb      	lsrs	r3, r1, #19
  4005b0:	ea43 3340 	orr.w	r3, r3, r0, lsl #13
  4005b4:	938b      	str	r3, [sp, #556]	; 0x22c

004005b6 <.LBB381>:
  4005b6:	00cb      	lsls	r3, r1, #3
  4005b8:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
  4005bc:	938d      	str	r3, [sp, #564]	; 0x234
  4005be:	00c3      	lsls	r3, r0, #3
  4005c0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
  4005c4:	938c      	str	r3, [sp, #560]	; 0x230

004005c6 <.LBE381>:
  4005c6:	ab8a      	add	r3, sp, #552	; 0x228
  4005c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4005cc:	f50d 7a0c 	add.w	sl, sp, #560	; 0x230
  4005d0:	e9da ab00 	ldrd	sl, fp, [sl]
  4005d4:	ea82 020a 	eor.w	r2, r2, sl
  4005d8:	ea83 030b 	eor.w	r3, r3, fp
  4005dc:	468b      	mov	fp, r1
  4005de:	0981      	lsrs	r1, r0, #6
  4005e0:	4658      	mov	r0, fp
  4005e2:	ea41 618b 	orr.w	r1, r1, fp, lsl #26
  4005e6:	9134      	str	r1, [sp, #208]	; 0xd0
  4005e8:	0981      	lsrs	r1, r0, #6
  4005ea:	9135      	str	r1, [sp, #212]	; 0xd4
  4005ec:	e9dd 0134 	ldrd	r0, r1, [sp, #208]	; 0xd0
  4005f0:	4050      	eors	r0, r2
  4005f2:	4059      	eors	r1, r3
  4005f4:	4602      	mov	r2, r0
  4005f6:	460b      	mov	r3, r1
  4005f8:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	; 0x90
  4005fc:	e9dd ab08 	ldrd	sl, fp, [sp, #32]
  400600:	eb10 000a 	adds.w	r0, r0, sl
  400604:	eb41 010b 	adc.w	r1, r1, fp
  400608:	eb12 0a00 	adds.w	sl, r2, r0
  40060c:	eb43 0b01 	adc.w	fp, r3, r1
  400610:	e9cd ab08 	strd	sl, fp, [sp, #32]

00400614 <.LBB383>:
  400614:	e9dd 231e 	ldrd	r2, r3, [sp, #120]	; 0x78
  400618:	0851      	lsrs	r1, r2, #1
  40061a:	ea41 71c3 	orr.w	r1, r1, r3, lsl #31
  40061e:	918e      	str	r1, [sp, #568]	; 0x238
  400620:	0859      	lsrs	r1, r3, #1
  400622:	ea41 71c2 	orr.w	r1, r1, r2, lsl #31
  400626:	918f      	str	r1, [sp, #572]	; 0x23c

00400628 <.LBB385>:
  400628:	0a11      	lsrs	r1, r2, #8
  40062a:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
  40062e:	9190      	str	r1, [sp, #576]	; 0x240
  400630:	0a19      	lsrs	r1, r3, #8
  400632:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
  400636:	9191      	str	r1, [sp, #580]	; 0x244

00400638 <.LBE385>:
  400638:	a98e      	add	r1, sp, #568	; 0x238
  40063a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40063e:	f50d 7a10 	add.w	sl, sp, #576	; 0x240
  400642:	e9da ab00 	ldrd	sl, fp, [sl]
  400646:	ea80 000a 	eor.w	r0, r0, sl
  40064a:	ea81 010b 	eor.w	r1, r1, fp
  40064e:	469b      	mov	fp, r3
  400650:	09d3      	lsrs	r3, r2, #7
  400652:	465a      	mov	r2, fp
  400654:	ea43 634b 	orr.w	r3, r3, fp, lsl #25
  400658:	9336      	str	r3, [sp, #216]	; 0xd8
  40065a:	09d3      	lsrs	r3, r2, #7
  40065c:	9337      	str	r3, [sp, #220]	; 0xdc
  40065e:	e9dd 2336 	ldrd	r2, r3, [sp, #216]	; 0xd8
  400662:	4042      	eors	r2, r0
  400664:	404b      	eors	r3, r1
  400666:	4610      	mov	r0, r2
  400668:	4619      	mov	r1, r3
  40066a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  40066e:	1812      	adds	r2, r2, r0
  400670:	414b      	adcs	r3, r1
  400672:	e9cd 2308 	strd	r2, r3, [sp, #32]
  400676:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  40067a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40067e:	1812      	adds	r2, r2, r0
  400680:	414b      	adcs	r3, r1
  400682:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  400686:	1880      	adds	r0, r0, r2
  400688:	4159      	adcs	r1, r3
  40068a:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  40068e:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400692:	1812      	adds	r2, r2, r0
  400694:	414b      	adcs	r3, r1
  400696:	e9cd 2304 	strd	r2, r3, [sp, #16]

0040069a <.LBB387>:
  40069a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  40069e:	0f03      	lsrs	r3, r0, #28
  4006a0:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  4006a4:	9392      	str	r3, [sp, #584]	; 0x248
  4006a6:	0f0b      	lsrs	r3, r1, #28
  4006a8:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  4006ac:	9393      	str	r3, [sp, #588]	; 0x24c

004006ae <.LBB389>:
  4006ae:	078b      	lsls	r3, r1, #30
  4006b0:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  4006b4:	9395      	str	r3, [sp, #596]	; 0x254
  4006b6:	0783      	lsls	r3, r0, #30
  4006b8:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  4006bc:	9394      	str	r3, [sp, #592]	; 0x250

004006be <.LBE389>:
  4006be:	ab92      	add	r3, sp, #584	; 0x248
  4006c0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4006c4:	f50d 7a14 	add.w	sl, sp, #592	; 0x250
  4006c8:	e9da ab00 	ldrd	sl, fp, [sl]
  4006cc:	ea82 020a 	eor.w	r2, r2, sl
  4006d0:	ea83 030b 	eor.w	r3, r3, fp

004006d4 <.LBB391>:
  4006d4:	4682      	mov	sl, r0
  4006d6:	0649      	lsls	r1, r1, #25
  4006d8:	ea41 11da 	orr.w	r1, r1, sl, lsr #7
  4006dc:	9197      	str	r1, [sp, #604]	; 0x25c
  4006de:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
  4006e2:	4651      	mov	r1, sl
  4006e4:	0649      	lsls	r1, r1, #25
  4006e6:	ea41 11db 	orr.w	r1, r1, fp, lsr #7
  4006ea:	9196      	str	r1, [sp, #600]	; 0x258

004006ec <.LBE391>:
  4006ec:	a996      	add	r1, sp, #600	; 0x258
  4006ee:	e9d1 0100 	ldrd	r0, r1, [r1]
  4006f2:	4050      	eors	r0, r2
  4006f4:	4059      	eors	r1, r3
  4006f6:	e9cd 012a 	strd	r0, r1, [sp, #168]	; 0xa8
  4006fa:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
  4006fe:	4650      	mov	r0, sl
  400700:	4659      	mov	r1, fp
  400702:	4320      	orrs	r0, r4
  400704:	4329      	orrs	r1, r5
  400706:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  40070a:	4002      	ands	r2, r0
  40070c:	400b      	ands	r3, r1
  40070e:	4610      	mov	r0, r2
  400710:	4619      	mov	r1, r3
  400712:	4652      	mov	r2, sl
  400714:	465b      	mov	r3, fp
  400716:	4022      	ands	r2, r4
  400718:	402b      	ands	r3, r5
  40071a:	4302      	orrs	r2, r0
  40071c:	430b      	orrs	r3, r1
  40071e:	4610      	mov	r0, r2
  400720:	4619      	mov	r1, r3
  400722:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  400726:	1812      	adds	r2, r2, r0
  400728:	414b      	adcs	r3, r1
  40072a:	4610      	mov	r0, r2
  40072c:	4619      	mov	r1, r3
  40072e:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  400732:	1812      	adds	r2, r2, r0
  400734:	414b      	adcs	r3, r1
  400736:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8

0040073a <.LBB393>:
  40073a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40073e:	0b83      	lsrs	r3, r0, #14
  400740:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  400744:	9398      	str	r3, [sp, #608]	; 0x260
  400746:	0b8b      	lsrs	r3, r1, #14
  400748:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  40074c:	9399      	str	r3, [sp, #612]	; 0x264

0040074e <.LBB395>:
  40074e:	0c83      	lsrs	r3, r0, #18
  400750:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  400754:	939a      	str	r3, [sp, #616]	; 0x268
  400756:	0c8b      	lsrs	r3, r1, #18
  400758:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  40075c:	939b      	str	r3, [sp, #620]	; 0x26c

0040075e <.LBE395>:
  40075e:	ab98      	add	r3, sp, #608	; 0x260
  400760:	e9d3 2300 	ldrd	r2, r3, [r3]
  400764:	f50d 7a1a 	add.w	sl, sp, #616	; 0x268
  400768:	e9da ab00 	ldrd	sl, fp, [sl]
  40076c:	ea82 020a 	eor.w	r2, r2, sl
  400770:	ea83 030b 	eor.w	r3, r3, fp

00400774 <.LBB397>:
  400774:	4682      	mov	sl, r0
  400776:	468b      	mov	fp, r1
  400778:	05c9      	lsls	r1, r1, #23
  40077a:	4650      	mov	r0, sl
  40077c:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  400780:	919d      	str	r1, [sp, #628]	; 0x274
  400782:	05c1      	lsls	r1, r0, #23
  400784:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  400788:	919c      	str	r1, [sp, #624]	; 0x270

0040078a <.LBE397>:
  40078a:	a99c      	add	r1, sp, #624	; 0x270
  40078c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400790:	4050      	eors	r0, r2
  400792:	4059      	eors	r1, r3
  400794:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  400798:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  40079c:	4650      	mov	r0, sl
  40079e:	4659      	mov	r1, fp
  4007a0:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  4007a4:	4042      	eors	r2, r0
  4007a6:	404b      	eors	r3, r1
  4007a8:	4610      	mov	r0, r2
  4007aa:	4619      	mov	r1, r3
  4007ac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4007b0:	4002      	ands	r2, r0
  4007b2:	400b      	ands	r3, r1
  4007b4:	4610      	mov	r0, r2
  4007b6:	4619      	mov	r1, r3
  4007b8:	4652      	mov	r2, sl
  4007ba:	465b      	mov	r3, fp
  4007bc:	4042      	eors	r2, r0
  4007be:	404b      	eors	r3, r1
  4007c0:	4610      	mov	r0, r2
  4007c2:	4619      	mov	r1, r3
  4007c4:	e9d6 2304 	ldrd	r2, r3, [r6, #16]
  4007c8:	eb18 0802 	adds.w	r8, r8, r2
  4007cc:	eb49 0903 	adc.w	r9, r9, r3
  4007d0:	eb18 0800 	adds.w	r8, r8, r0
  4007d4:	eb49 0901 	adc.w	r9, r9, r1
  4007d8:	2f00      	cmp	r7, #0
  4007da:	f002 8033 	beq.w	402844 <.LCFI3+0x18>

004007de <.LBB399>:
  4007de:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  4007e2:	0843      	lsrs	r3, r0, #1
  4007e4:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  4007e8:	939e      	str	r3, [sp, #632]	; 0x278
  4007ea:	084b      	lsrs	r3, r1, #1
  4007ec:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  4007f0:	939f      	str	r3, [sp, #636]	; 0x27c

004007f2 <.LBB401>:
  4007f2:	0a03      	lsrs	r3, r0, #8
  4007f4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  4007f8:	93a0      	str	r3, [sp, #640]	; 0x280
  4007fa:	0a0b      	lsrs	r3, r1, #8
  4007fc:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  400800:	93a1      	str	r3, [sp, #644]	; 0x284

00400802 <.LBE401>:
  400802:	ab9e      	add	r3, sp, #632	; 0x278
  400804:	e9d3 2300 	ldrd	r2, r3, [r3]
  400808:	f50d 7a20 	add.w	sl, sp, #640	; 0x280
  40080c:	e9da ab00 	ldrd	sl, fp, [sl]
  400810:	ea82 020a 	eor.w	r2, r2, sl
  400814:	ea83 030b 	eor.w	r3, r3, fp
  400818:	468b      	mov	fp, r1
  40081a:	09c1      	lsrs	r1, r0, #7
  40081c:	4658      	mov	r0, fp
  40081e:	ea41 614b 	orr.w	r1, r1, fp, lsl #25
  400822:	9138      	str	r1, [sp, #224]	; 0xe0
  400824:	09c1      	lsrs	r1, r0, #7
  400826:	9139      	str	r1, [sp, #228]	; 0xe4
  400828:	e9dd 0138 	ldrd	r0, r1, [sp, #224]	; 0xe0
  40082c:	4050      	eors	r0, r2
  40082e:	4059      	eors	r1, r3
  400830:	4602      	mov	r2, r0
  400832:	460b      	mov	r3, r1
  400834:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
  400838:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	; 0x50
  40083c:	eb10 000a 	adds.w	r0, r0, sl
  400840:	eb41 010b 	adc.w	r1, r1, fp
  400844:	eb12 0a00 	adds.w	sl, r2, r0
  400848:	eb43 0b01 	adc.w	fp, r3, r1
  40084c:	e9cd ab1e 	strd	sl, fp, [sp, #120]	; 0x78

00400850 <.LBB403>:
  400850:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
  400854:	0cd1      	lsrs	r1, r2, #19
  400856:	ea41 3143 	orr.w	r1, r1, r3, lsl #13
  40085a:	91a2      	str	r1, [sp, #648]	; 0x288
  40085c:	0cd9      	lsrs	r1, r3, #19
  40085e:	ea41 3142 	orr.w	r1, r1, r2, lsl #13
  400862:	91a3      	str	r1, [sp, #652]	; 0x28c

00400864 <.LBB405>:
  400864:	00d9      	lsls	r1, r3, #3
  400866:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  40086a:	91a5      	str	r1, [sp, #660]	; 0x294
  40086c:	00d1      	lsls	r1, r2, #3
  40086e:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
  400872:	91a4      	str	r1, [sp, #656]	; 0x290

00400874 <.LBE405>:
  400874:	a9a2      	add	r1, sp, #648	; 0x288
  400876:	e9d1 0100 	ldrd	r0, r1, [r1]
  40087a:	f50d 7a24 	add.w	sl, sp, #656	; 0x290
  40087e:	e9da ab00 	ldrd	sl, fp, [sl]
  400882:	ea80 000a 	eor.w	r0, r0, sl
  400886:	ea81 010b 	eor.w	r1, r1, fp
  40088a:	469b      	mov	fp, r3
  40088c:	0993      	lsrs	r3, r2, #6
  40088e:	465a      	mov	r2, fp
  400890:	ea43 638b 	orr.w	r3, r3, fp, lsl #26
  400894:	933a      	str	r3, [sp, #232]	; 0xe8
  400896:	0993      	lsrs	r3, r2, #6
  400898:	933b      	str	r3, [sp, #236]	; 0xec
  40089a:	e9dd 233a 	ldrd	r2, r3, [sp, #232]	; 0xe8
  40089e:	4042      	eors	r2, r0
  4008a0:	404b      	eors	r3, r1
  4008a2:	4610      	mov	r0, r2
  4008a4:	4619      	mov	r1, r3
  4008a6:	e9dd 231e 	ldrd	r2, r3, [sp, #120]	; 0x78
  4008aa:	1812      	adds	r2, r2, r0
  4008ac:	414b      	adcs	r3, r1
  4008ae:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  4008b2:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  4008b6:	eb12 0208 	adds.w	r2, r2, r8
  4008ba:	eb43 0309 	adc.w	r3, r3, r9
  4008be:	4690      	mov	r8, r2
  4008c0:	4699      	mov	r9, r3
  4008c2:	e9dd 231e 	ldrd	r2, r3, [sp, #120]	; 0x78
  4008c6:	eb12 0208 	adds.w	r2, r2, r8
  4008ca:	eb43 0309 	adc.w	r3, r3, r9
  4008ce:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  4008d2:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68
  4008d6:	eb18 0802 	adds.w	r8, r8, r2
  4008da:	eb49 0903 	adc.w	r9, r9, r3
  4008de:	e9cd 8918 	strd	r8, r9, [sp, #96]	; 0x60

004008e2 <.LBB407>:
  4008e2:	e9dd 012a 	ldrd	r0, r1, [sp, #168]	; 0xa8
  4008e6:	0f03      	lsrs	r3, r0, #28
  4008e8:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  4008ec:	93a6      	str	r3, [sp, #664]	; 0x298
  4008ee:	0f0b      	lsrs	r3, r1, #28
  4008f0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  4008f4:	93a7      	str	r3, [sp, #668]	; 0x29c

004008f6 <.LBB409>:
  4008f6:	078b      	lsls	r3, r1, #30
  4008f8:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  4008fc:	93a9      	str	r3, [sp, #676]	; 0x2a4
  4008fe:	0783      	lsls	r3, r0, #30
  400900:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  400904:	93a8      	str	r3, [sp, #672]	; 0x2a0

00400906 <.LBE409>:
  400906:	aba6      	add	r3, sp, #664	; 0x298
  400908:	e9d3 2300 	ldrd	r2, r3, [r3]
  40090c:	f50d 7828 	add.w	r8, sp, #672	; 0x2a0
  400910:	e9d8 ab00 	ldrd	sl, fp, [r8]
  400914:	ea82 020a 	eor.w	r2, r2, sl
  400918:	ea83 030b 	eor.w	r3, r3, fp

0040091c <.LBB411>:
  40091c:	4680      	mov	r8, r0
  40091e:	4689      	mov	r9, r1
  400920:	0649      	lsls	r1, r1, #25
  400922:	4640      	mov	r0, r8
  400924:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
  400928:	91ab      	str	r1, [sp, #684]	; 0x2ac
  40092a:	0641      	lsls	r1, r0, #25
  40092c:	ea41 11d9 	orr.w	r1, r1, r9, lsr #7
  400930:	91aa      	str	r1, [sp, #680]	; 0x2a8

00400932 <.LBE411>:
  400932:	a9aa      	add	r1, sp, #680	; 0x2a8
  400934:	e9d1 0100 	ldrd	r0, r1, [r1]
  400938:	4050      	eors	r0, r2
  40093a:	4059      	eors	r1, r3
  40093c:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8
  400940:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
  400944:	4652      	mov	r2, sl
  400946:	465b      	mov	r3, fp
  400948:	4640      	mov	r0, r8
  40094a:	4649      	mov	r1, r9
  40094c:	4302      	orrs	r2, r0
  40094e:	430b      	orrs	r3, r1
  400950:	4022      	ands	r2, r4
  400952:	402b      	ands	r3, r5
  400954:	f50d 61d8 	add.w	r1, sp, #1728	; 0x6c0
  400958:	e9c1 2300 	strd	r2, r3, [r1]
  40095c:	4650      	mov	r0, sl
  40095e:	4659      	mov	r1, fp
  400960:	4642      	mov	r2, r8
  400962:	464b      	mov	r3, r9
  400964:	4010      	ands	r0, r2
  400966:	4019      	ands	r1, r3
  400968:	f50d 63d8 	add.w	r3, sp, #1728	; 0x6c0
  40096c:	e9d3 9a00 	ldrd	r9, sl, [r3]
  400970:	ea49 0900 	orr.w	r9, r9, r0
  400974:	ea4a 0a01 	orr.w	sl, sl, r1
  400978:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  40097c:	eb12 0209 	adds.w	r2, r2, r9
  400980:	eb43 030a 	adc.w	r3, r3, sl
  400984:	4610      	mov	r0, r2
  400986:	4619      	mov	r1, r3
  400988:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  40098c:	1812      	adds	r2, r2, r0
  40098e:	414b      	adcs	r3, r1
  400990:	e9cd 232e 	strd	r2, r3, [sp, #184]	; 0xb8

00400994 <.LBB413>:
  400994:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  400998:	4643      	mov	r3, r8
  40099a:	0b9b      	lsrs	r3, r3, #14
  40099c:	464a      	mov	r2, r9
  40099e:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  4009a2:	93ac      	str	r3, [sp, #688]	; 0x2b0
  4009a4:	0b93      	lsrs	r3, r2, #14
  4009a6:	4642      	mov	r2, r8
  4009a8:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  4009ac:	93ad      	str	r3, [sp, #692]	; 0x2b4

004009ae <.LBB415>:
  4009ae:	0c93      	lsrs	r3, r2, #18
  4009b0:	464a      	mov	r2, r9
  4009b2:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  4009b6:	93ae      	str	r3, [sp, #696]	; 0x2b8
  4009b8:	0c93      	lsrs	r3, r2, #18
  4009ba:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  4009be:	93af      	str	r3, [sp, #700]	; 0x2bc

004009c0 <.LBE415>:
  4009c0:	abac      	add	r3, sp, #688	; 0x2b0
  4009c2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4009c6:	a9ae      	add	r1, sp, #696	; 0x2b8
  4009c8:	e9d1 0100 	ldrd	r0, r1, [r1]
  4009cc:	4042      	eors	r2, r0
  4009ce:	404b      	eors	r3, r1

004009d0 <.LBB417>:
  4009d0:	4649      	mov	r1, r9
  4009d2:	05c9      	lsls	r1, r1, #23
  4009d4:	4640      	mov	r0, r8
  4009d6:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  4009da:	91b1      	str	r1, [sp, #708]	; 0x2c4
  4009dc:	05c1      	lsls	r1, r0, #23
  4009de:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  4009e2:	91b0      	str	r1, [sp, #704]	; 0x2c0

004009e4 <.LBE417>:
  4009e4:	a9b0      	add	r1, sp, #704	; 0x2c0
  4009e6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4009ea:	4050      	eors	r0, r2
  4009ec:	4059      	eors	r1, r3
  4009ee:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  4009f2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4009f6:	e9dd ab2c 	ldrd	sl, fp, [sp, #176]	; 0xb0
  4009fa:	4652      	mov	r2, sl
  4009fc:	465b      	mov	r3, fp
  4009fe:	4042      	eors	r2, r0
  400a00:	404b      	eors	r3, r1
  400a02:	4610      	mov	r0, r2
  400a04:	4619      	mov	r1, r3
  400a06:	4642      	mov	r2, r8
  400a08:	464b      	mov	r3, r9
  400a0a:	4002      	ands	r2, r0
  400a0c:	400b      	ands	r3, r1
  400a0e:	ea8a 0802 	eor.w	r8, sl, r2
  400a12:	ea8b 0903 	eor.w	r9, fp, r3
  400a16:	e9d6 2306 	ldrd	r2, r3, [r6, #24]
  400a1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400a1e:	1880      	adds	r0, r0, r2
  400a20:	4159      	adcs	r1, r3
  400a22:	eb18 0000 	adds.w	r0, r8, r0
  400a26:	eb49 0101 	adc.w	r1, r9, r1
  400a2a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400a2e:	2f00      	cmp	r7, #0
  400a30:	f001 870e 	beq.w	402850 <.LCFI3+0x24>

00400a34 <.LBB419>:
  400a34:	e9dd 8922 	ldrd	r8, r9, [sp, #136]	; 0x88
  400a38:	4643      	mov	r3, r8
  400a3a:	085b      	lsrs	r3, r3, #1
  400a3c:	464a      	mov	r2, r9
  400a3e:	ea43 73c9 	orr.w	r3, r3, r9, lsl #31
  400a42:	93b2      	str	r3, [sp, #712]	; 0x2c8
  400a44:	0853      	lsrs	r3, r2, #1
  400a46:	4642      	mov	r2, r8
  400a48:	ea43 73c8 	orr.w	r3, r3, r8, lsl #31
  400a4c:	93b3      	str	r3, [sp, #716]	; 0x2cc

00400a4e <.LBB421>:
  400a4e:	0a13      	lsrs	r3, r2, #8
  400a50:	464a      	mov	r2, r9
  400a52:	ea43 6309 	orr.w	r3, r3, r9, lsl #24
  400a56:	93b4      	str	r3, [sp, #720]	; 0x2d0
  400a58:	0a13      	lsrs	r3, r2, #8
  400a5a:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
  400a5e:	93b5      	str	r3, [sp, #724]	; 0x2d4

00400a60 <.LBE421>:
  400a60:	abb2      	add	r3, sp, #712	; 0x2c8
  400a62:	e9d3 2300 	ldrd	r2, r3, [r3]
  400a66:	a9b4      	add	r1, sp, #720	; 0x2d0
  400a68:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400a6c:	ea82 020a 	eor.w	r2, r2, sl
  400a70:	ea83 030b 	eor.w	r3, r3, fp
  400a74:	4641      	mov	r1, r8
  400a76:	09c9      	lsrs	r1, r1, #7
  400a78:	4648      	mov	r0, r9
  400a7a:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  400a7e:	913c      	str	r1, [sp, #240]	; 0xf0
  400a80:	09c1      	lsrs	r1, r0, #7
  400a82:	913d      	str	r1, [sp, #244]	; 0xf4
  400a84:	e9dd 013c 	ldrd	r0, r1, [sp, #240]	; 0xf0
  400a88:	4050      	eors	r0, r2
  400a8a:	4059      	eors	r1, r3
  400a8c:	4602      	mov	r2, r0
  400a8e:	460b      	mov	r3, r1
  400a90:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  400a94:	e9dd ab16 	ldrd	sl, fp, [sp, #88]	; 0x58
  400a98:	eb10 000a 	adds.w	r0, r0, sl
  400a9c:	eb41 010b 	adc.w	r1, r1, fp
  400aa0:	eb12 0800 	adds.w	r8, r2, r0
  400aa4:	eb43 0901 	adc.w	r9, r3, r1
  400aa8:	e9cd 8920 	strd	r8, r9, [sp, #128]	; 0x80

00400aac <.LBB423>:
  400aac:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  400ab0:	4641      	mov	r1, r8
  400ab2:	0cc9      	lsrs	r1, r1, #19
  400ab4:	4648      	mov	r0, r9
  400ab6:	ea41 3149 	orr.w	r1, r1, r9, lsl #13
  400aba:	91b6      	str	r1, [sp, #728]	; 0x2d8
  400abc:	0cc1      	lsrs	r1, r0, #19
  400abe:	4640      	mov	r0, r8
  400ac0:	ea41 3148 	orr.w	r1, r1, r8, lsl #13
  400ac4:	91b7      	str	r1, [sp, #732]	; 0x2dc

00400ac6 <.LBB425>:
  400ac6:	4649      	mov	r1, r9
  400ac8:	00c9      	lsls	r1, r1, #3
  400aca:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
  400ace:	91b9      	str	r1, [sp, #740]	; 0x2e4
  400ad0:	00c1      	lsls	r1, r0, #3
  400ad2:	ea41 7159 	orr.w	r1, r1, r9, lsr #29
  400ad6:	91b8      	str	r1, [sp, #736]	; 0x2e0

00400ad8 <.LBE425>:
  400ad8:	abb6      	add	r3, sp, #728	; 0x2d8
  400ada:	e9d3 0100 	ldrd	r0, r1, [r3]
  400ade:	abb8      	add	r3, sp, #736	; 0x2e0
  400ae0:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400ae4:	ea80 000a 	eor.w	r0, r0, sl
  400ae8:	ea81 010b 	eor.w	r1, r1, fp
  400aec:	4643      	mov	r3, r8
  400aee:	099b      	lsrs	r3, r3, #6
  400af0:	464a      	mov	r2, r9
  400af2:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  400af6:	933e      	str	r3, [sp, #248]	; 0xf8
  400af8:	0993      	lsrs	r3, r2, #6
  400afa:	933f      	str	r3, [sp, #252]	; 0xfc
  400afc:	e9dd 233e 	ldrd	r2, r3, [sp, #248]	; 0xf8
  400b00:	4042      	eors	r2, r0
  400b02:	404b      	eors	r3, r1
  400b04:	4610      	mov	r0, r2
  400b06:	4619      	mov	r1, r3
  400b08:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
  400b0c:	1812      	adds	r2, r2, r0
  400b0e:	414b      	adcs	r3, r1
  400b10:	e9cd 2320 	strd	r2, r3, [sp, #128]	; 0x80
  400b14:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  400b18:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400b1c:	1812      	adds	r2, r2, r0
  400b1e:	414b      	adcs	r3, r1
  400b20:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  400b24:	1880      	adds	r0, r0, r2
  400b26:	4159      	adcs	r1, r3
  400b28:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400b2c:	1902      	adds	r2, r0, r4
  400b2e:	eb41 0305 	adc.w	r3, r1, r5
  400b32:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68

00400b36 <.LBB427>:
  400b36:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  400b3a:	0f23      	lsrs	r3, r4, #28
  400b3c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  400b40:	93ba      	str	r3, [sp, #744]	; 0x2e8
  400b42:	0f2b      	lsrs	r3, r5, #28
  400b44:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  400b48:	93bb      	str	r3, [sp, #748]	; 0x2ec

00400b4a <.LBB429>:
  400b4a:	07ab      	lsls	r3, r5, #30
  400b4c:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  400b50:	93bd      	str	r3, [sp, #756]	; 0x2f4
  400b52:	07a3      	lsls	r3, r4, #30
  400b54:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  400b58:	93bc      	str	r3, [sp, #752]	; 0x2f0

00400b5a <.LBE429>:
  400b5a:	abba      	add	r3, sp, #744	; 0x2e8
  400b5c:	e9d3 1200 	ldrd	r1, r2, [r3]
  400b60:	abbc      	add	r3, sp, #752	; 0x2f0
  400b62:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400b66:	ea81 010a 	eor.w	r1, r1, sl
  400b6a:	ea82 020b 	eor.w	r2, r2, fp
  400b6e:	4613      	mov	r3, r2
  400b70:	460a      	mov	r2, r1

00400b72 <.LBB431>:
  400b72:	0669      	lsls	r1, r5, #25
  400b74:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  400b78:	91bf      	str	r1, [sp, #764]	; 0x2fc
  400b7a:	0661      	lsls	r1, r4, #25
  400b7c:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  400b80:	91be      	str	r1, [sp, #760]	; 0x2f8

00400b82 <.LBE431>:
  400b82:	a9be      	add	r1, sp, #760	; 0x2f8
  400b84:	e9d1 0100 	ldrd	r0, r1, [r1]
  400b88:	4050      	eors	r0, r2
  400b8a:	4059      	eors	r1, r3
  400b8c:	f50d 63d8 	add.w	r3, sp, #1728	; 0x6c0
  400b90:	e9c3 0100 	strd	r0, r1, [r3]
  400b94:	e9dd ab2a 	ldrd	sl, fp, [sp, #168]	; 0xa8
  400b98:	4650      	mov	r0, sl
  400b9a:	4659      	mov	r1, fp
  400b9c:	46a0      	mov	r8, r4
  400b9e:	4320      	orrs	r0, r4
  400ba0:	4329      	orrs	r1, r5
  400ba2:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  400ba6:	4003      	ands	r3, r0
  400ba8:	400c      	ands	r4, r1
  400baa:	4618      	mov	r0, r3
  400bac:	4621      	mov	r1, r4
  400bae:	4652      	mov	r2, sl
  400bb0:	465b      	mov	r3, fp
  400bb2:	4644      	mov	r4, r8
  400bb4:	4022      	ands	r2, r4
  400bb6:	402b      	ands	r3, r5
  400bb8:	4310      	orrs	r0, r2
  400bba:	4319      	orrs	r1, r3
  400bbc:	f50d 63d8 	add.w	r3, sp, #1728	; 0x6c0
  400bc0:	e9d3 3400 	ldrd	r3, r4, [r3]
  400bc4:	181b      	adds	r3, r3, r0
  400bc6:	414c      	adcs	r4, r1
  400bc8:	4621      	mov	r1, r4
  400bca:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  400bce:	18e4      	adds	r4, r4, r3
  400bd0:	414d      	adcs	r5, r1

00400bd2 <.LBB433>:
  400bd2:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  400bd6:	0b83      	lsrs	r3, r0, #14
  400bd8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  400bdc:	93c0      	str	r3, [sp, #768]	; 0x300
  400bde:	0b8b      	lsrs	r3, r1, #14
  400be0:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  400be4:	93c1      	str	r3, [sp, #772]	; 0x304

00400be6 <.LBB435>:
  400be6:	0c83      	lsrs	r3, r0, #18
  400be8:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  400bec:	93c2      	str	r3, [sp, #776]	; 0x308
  400bee:	0c8b      	lsrs	r3, r1, #18
  400bf0:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  400bf4:	93c3      	str	r3, [sp, #780]	; 0x30c

00400bf6 <.LBE435>:
        R( 4); R( 5); R( 6); R( 7);
  400bf6:	abc0      	add	r3, sp, #768	; 0x300
  400bf8:	e9d3 2300 	ldrd	r2, r3, [r3]
  400bfc:	f50d 7842 	add.w	r8, sp, #776	; 0x308
  400c00:	e9d8 ab00 	ldrd	sl, fp, [r8]
  400c04:	ea82 020a 	eor.w	r2, r2, sl
  400c08:	ea83 030b 	eor.w	r3, r3, fp

00400c0c <.LBB437>:
  400c0c:	4682      	mov	sl, r0
  400c0e:	468b      	mov	fp, r1
  400c10:	05c9      	lsls	r1, r1, #23
  400c12:	4650      	mov	r0, sl
  400c14:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  400c18:	91c5      	str	r1, [sp, #788]	; 0x314
  400c1a:	05c1      	lsls	r1, r0, #23
  400c1c:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  400c20:	91c4      	str	r1, [sp, #784]	; 0x310

00400c22 <.LBE437>:
  400c22:	a9c4      	add	r1, sp, #784	; 0x310
  400c24:	e9d1 0100 	ldrd	r0, r1, [r1]
  400c28:	4050      	eors	r0, r2
  400c2a:	4059      	eors	r1, r3
  400c2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400c30:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
  400c34:	4640      	mov	r0, r8
  400c36:	4649      	mov	r1, r9
  400c38:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  400c3c:	4042      	eors	r2, r0
  400c3e:	404b      	eors	r3, r1
  400c40:	4610      	mov	r0, r2
  400c42:	4619      	mov	r1, r3
  400c44:	4652      	mov	r2, sl
  400c46:	465b      	mov	r3, fp
  400c48:	4002      	ands	r2, r0
  400c4a:	400b      	ands	r3, r1
  400c4c:	4610      	mov	r0, r2
  400c4e:	4619      	mov	r1, r3
  400c50:	4642      	mov	r2, r8
  400c52:	464b      	mov	r3, r9
  400c54:	4042      	eors	r2, r0
  400c56:	404b      	eors	r3, r1
  400c58:	4610      	mov	r0, r2
  400c5a:	4619      	mov	r1, r3
  400c5c:	e9d6 2308 	ldrd	r2, r3, [r6, #32]
  400c60:	e9dd ab2c 	ldrd	sl, fp, [sp, #176]	; 0xb0
  400c64:	eb1a 0a02 	adds.w	sl, sl, r2
  400c68:	eb4b 0b03 	adc.w	fp, fp, r3
  400c6c:	eb1a 0200 	adds.w	r2, sl, r0
  400c70:	eb4b 0301 	adc.w	r3, fp, r1
  400c74:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0
  400c78:	2f00      	cmp	r7, #0
  400c7a:	f001 85ef 	beq.w	40285c <.LCFI3+0x30>

00400c7e <.LBB439>:
  400c7e:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
  400c82:	4643      	mov	r3, r8
  400c84:	085b      	lsrs	r3, r3, #1
  400c86:	464a      	mov	r2, r9
  400c88:	ea43 73c9 	orr.w	r3, r3, r9, lsl #31
  400c8c:	93c6      	str	r3, [sp, #792]	; 0x318
  400c8e:	0853      	lsrs	r3, r2, #1
  400c90:	4642      	mov	r2, r8
  400c92:	ea43 73c8 	orr.w	r3, r3, r8, lsl #31
  400c96:	93c7      	str	r3, [sp, #796]	; 0x31c

00400c98 <.LBB441>:
  400c98:	0a13      	lsrs	r3, r2, #8
  400c9a:	464a      	mov	r2, r9
  400c9c:	ea43 6309 	orr.w	r3, r3, r9, lsl #24
  400ca0:	93c8      	str	r3, [sp, #800]	; 0x320
  400ca2:	0a13      	lsrs	r3, r2, #8
  400ca4:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
  400ca8:	93c9      	str	r3, [sp, #804]	; 0x324

00400caa <.LBE441>:
  400caa:	abc6      	add	r3, sp, #792	; 0x318
  400cac:	e9d3 2300 	ldrd	r2, r3, [r3]
  400cb0:	a9c8      	add	r1, sp, #800	; 0x320
  400cb2:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400cb6:	ea82 020a 	eor.w	r2, r2, sl
  400cba:	ea83 030b 	eor.w	r3, r3, fp
  400cbe:	4641      	mov	r1, r8
  400cc0:	09c9      	lsrs	r1, r1, #7
  400cc2:	4648      	mov	r0, r9
  400cc4:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  400cc8:	9140      	str	r1, [sp, #256]	; 0x100
  400cca:	09c1      	lsrs	r1, r0, #7
  400ccc:	9141      	str	r1, [sp, #260]	; 0x104
  400cce:	a940      	add	r1, sp, #256	; 0x100
  400cd0:	e9d1 0100 	ldrd	r0, r1, [r1]
  400cd4:	4050      	eors	r0, r2
  400cd6:	4059      	eors	r1, r3
  400cd8:	4602      	mov	r2, r0
  400cda:	460b      	mov	r3, r1
  400cdc:	e9dd 0122 	ldrd	r0, r1, [sp, #136]	; 0x88
  400ce0:	e9dd ab26 	ldrd	sl, fp, [sp, #152]	; 0x98
  400ce4:	eb10 000a 	adds.w	r0, r0, sl
  400ce8:	eb41 010b 	adc.w	r1, r1, fp
  400cec:	eb12 0800 	adds.w	r8, r2, r0
  400cf0:	eb43 0901 	adc.w	r9, r3, r1
  400cf4:	e9cd 8922 	strd	r8, r9, [sp, #136]	; 0x88

00400cf8 <.LBB443>:
  400cf8:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
  400cfc:	4641      	mov	r1, r8
  400cfe:	0cc9      	lsrs	r1, r1, #19
  400d00:	4648      	mov	r0, r9
  400d02:	ea41 3149 	orr.w	r1, r1, r9, lsl #13
  400d06:	91ca      	str	r1, [sp, #808]	; 0x328
  400d08:	0cc1      	lsrs	r1, r0, #19
  400d0a:	4640      	mov	r0, r8
  400d0c:	ea41 3148 	orr.w	r1, r1, r8, lsl #13
  400d10:	91cb      	str	r1, [sp, #812]	; 0x32c

00400d12 <.LBB445>:
  400d12:	4649      	mov	r1, r9
  400d14:	00c9      	lsls	r1, r1, #3
  400d16:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
  400d1a:	91cd      	str	r1, [sp, #820]	; 0x334
  400d1c:	00c1      	lsls	r1, r0, #3
  400d1e:	ea41 7159 	orr.w	r1, r1, r9, lsr #29
  400d22:	91cc      	str	r1, [sp, #816]	; 0x330

00400d24 <.LBE445>:
  400d24:	abca      	add	r3, sp, #808	; 0x328
  400d26:	e9d3 0100 	ldrd	r0, r1, [r3]
  400d2a:	abcc      	add	r3, sp, #816	; 0x330
  400d2c:	e9d3 ab00 	ldrd	sl, fp, [r3]
  400d30:	ea80 000a 	eor.w	r0, r0, sl
  400d34:	ea81 010b 	eor.w	r1, r1, fp
  400d38:	4643      	mov	r3, r8
  400d3a:	099b      	lsrs	r3, r3, #6
  400d3c:	464a      	mov	r2, r9
  400d3e:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  400d42:	9342      	str	r3, [sp, #264]	; 0x108
  400d44:	0993      	lsrs	r3, r2, #6
  400d46:	9343      	str	r3, [sp, #268]	; 0x10c
  400d48:	ab42      	add	r3, sp, #264	; 0x108
  400d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
  400d4e:	4042      	eors	r2, r0
  400d50:	404b      	eors	r3, r1
  400d52:	4610      	mov	r0, r2
  400d54:	4619      	mov	r1, r3
  400d56:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
  400d5a:	1812      	adds	r2, r2, r0
  400d5c:	414b      	adcs	r3, r1
  400d5e:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  400d62:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400d66:	e9dd 012c 	ldrd	r0, r1, [sp, #176]	; 0xb0
  400d6a:	1880      	adds	r0, r0, r2
  400d6c:	4159      	adcs	r1, r3
  400d6e:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
  400d72:	1812      	adds	r2, r2, r0
  400d74:	414b      	adcs	r3, r1
  400d76:	4690      	mov	r8, r2
  400d78:	4699      	mov	r9, r3
  400d7a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  400d7e:	eb12 0208 	adds.w	r2, r2, r8
  400d82:	eb43 0309 	adc.w	r3, r3, r9
  400d86:	e9cd 2306 	strd	r2, r3, [sp, #24]

00400d8a <.LBB447>:
  400d8a:	0f23      	lsrs	r3, r4, #28
  400d8c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  400d90:	93ce      	str	r3, [sp, #824]	; 0x338
  400d92:	0f2b      	lsrs	r3, r5, #28
  400d94:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  400d98:	93cf      	str	r3, [sp, #828]	; 0x33c

00400d9a <.LBB449>:
  400d9a:	07ab      	lsls	r3, r5, #30
  400d9c:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  400da0:	93d1      	str	r3, [sp, #836]	; 0x344
  400da2:	07a3      	lsls	r3, r4, #30
  400da4:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  400da8:	93d0      	str	r3, [sp, #832]	; 0x340

00400daa <.LBE449>:
  400daa:	abce      	add	r3, sp, #824	; 0x338
  400dac:	e9d3 2300 	ldrd	r2, r3, [r3]
  400db0:	a9d0      	add	r1, sp, #832	; 0x340
  400db2:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400db6:	ea82 020a 	eor.w	r2, r2, sl
  400dba:	ea83 030b 	eor.w	r3, r3, fp

00400dbe <.LBB451>:
  400dbe:	0669      	lsls	r1, r5, #25
  400dc0:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  400dc4:	91d3      	str	r1, [sp, #844]	; 0x34c
  400dc6:	0661      	lsls	r1, r4, #25
  400dc8:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  400dcc:	91d2      	str	r1, [sp, #840]	; 0x348

00400dce <.LBE451>:
  400dce:	a9d2      	add	r1, sp, #840	; 0x348
  400dd0:	e9d1 ab00 	ldrd	sl, fp, [r1]
  400dd4:	ea8a 0a02 	eor.w	sl, sl, r2
  400dd8:	ea8b 0b03 	eor.w	fp, fp, r3
  400ddc:	e9cd ab02 	strd	sl, fp, [sp, #8]
  400de0:	e9dd ab2e 	ldrd	sl, fp, [sp, #184]	; 0xb8
  400de4:	4650      	mov	r0, sl
  400de6:	4659      	mov	r1, fp
  400de8:	4320      	orrs	r0, r4
  400dea:	4329      	orrs	r1, r5
  400dec:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  400df0:	4002      	ands	r2, r0
  400df2:	400b      	ands	r3, r1
  400df4:	ea0a 0a04 	and.w	sl, sl, r4
  400df8:	ea0b 0b05 	and.w	fp, fp, r5
  400dfc:	ea4a 0a02 	orr.w	sl, sl, r2
  400e00:	ea4b 0b03 	orr.w	fp, fp, r3
  400e04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400e08:	eb12 020a 	adds.w	r2, r2, sl
  400e0c:	eb43 030b 	adc.w	r3, r3, fp
  400e10:	eb18 0a02 	adds.w	sl, r8, r2
  400e14:	eb49 0b03 	adc.w	fp, r9, r3

00400e18 <.LBB453>:
  400e18:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  400e1c:	4643      	mov	r3, r8
  400e1e:	0b9b      	lsrs	r3, r3, #14
  400e20:	464a      	mov	r2, r9
  400e22:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  400e26:	93d4      	str	r3, [sp, #848]	; 0x350
  400e28:	0b93      	lsrs	r3, r2, #14
  400e2a:	4642      	mov	r2, r8
  400e2c:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  400e30:	93d5      	str	r3, [sp, #852]	; 0x354

00400e32 <.LBB455>:
  400e32:	0c93      	lsrs	r3, r2, #18
  400e34:	464a      	mov	r2, r9
  400e36:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  400e3a:	93d6      	str	r3, [sp, #856]	; 0x358
  400e3c:	0c93      	lsrs	r3, r2, #18
  400e3e:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  400e42:	93d7      	str	r3, [sp, #860]	; 0x35c

00400e44 <.LBE455>:
  400e44:	abd4      	add	r3, sp, #848	; 0x350
  400e46:	e9d3 2300 	ldrd	r2, r3, [r3]
  400e4a:	a9d6      	add	r1, sp, #856	; 0x358
  400e4c:	e9d1 0100 	ldrd	r0, r1, [r1]
  400e50:	4042      	eors	r2, r0
  400e52:	404b      	eors	r3, r1

00400e54 <.LBB457>:
  400e54:	4649      	mov	r1, r9
  400e56:	05c9      	lsls	r1, r1, #23
  400e58:	4640      	mov	r0, r8
  400e5a:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  400e5e:	91d9      	str	r1, [sp, #868]	; 0x364
  400e60:	05c1      	lsls	r1, r0, #23
  400e62:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  400e66:	91d8      	str	r1, [sp, #864]	; 0x360

00400e68 <.LBE457>:
  400e68:	a9d8      	add	r1, sp, #864	; 0x360
  400e6a:	e9d1 0100 	ldrd	r0, r1, [r1]
  400e6e:	4050      	eors	r0, r2
  400e70:	4059      	eors	r1, r3
  400e72:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400e76:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  400e7a:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  400e7e:	4042      	eors	r2, r0
  400e80:	404b      	eors	r3, r1
  400e82:	4610      	mov	r0, r2
  400e84:	4619      	mov	r1, r3
  400e86:	4642      	mov	r2, r8
  400e88:	464b      	mov	r3, r9
  400e8a:	4002      	ands	r2, r0
  400e8c:	400b      	ands	r3, r1
  400e8e:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  400e92:	ea88 0802 	eor.w	r8, r8, r2
  400e96:	ea89 0903 	eor.w	r9, r9, r3
  400e9a:	e9d6 230a 	ldrd	r2, r3, [r6, #40]	; 0x28
  400e9e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400ea2:	1880      	adds	r0, r0, r2
  400ea4:	4159      	adcs	r1, r3
  400ea6:	eb18 0000 	adds.w	r0, r8, r0
  400eaa:	eb49 0101 	adc.w	r1, r9, r1
  400eae:	e9cd 0104 	strd	r0, r1, [sp, #16]
  400eb2:	2f00      	cmp	r7, #0
  400eb4:	f001 84d8 	beq.w	402868 <.LCFI3+0x3c>

00400eb8 <.LBB459>:
  400eb8:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
  400ebc:	4643      	mov	r3, r8
  400ebe:	085b      	lsrs	r3, r3, #1
  400ec0:	464a      	mov	r2, r9
  400ec2:	ea43 73c9 	orr.w	r3, r3, r9, lsl #31
  400ec6:	93da      	str	r3, [sp, #872]	; 0x368
  400ec8:	0853      	lsrs	r3, r2, #1
  400eca:	4642      	mov	r2, r8
  400ecc:	ea43 73c8 	orr.w	r3, r3, r8, lsl #31
  400ed0:	93db      	str	r3, [sp, #876]	; 0x36c

00400ed2 <.LBB461>:
  400ed2:	0a13      	lsrs	r3, r2, #8
  400ed4:	464a      	mov	r2, r9
  400ed6:	ea43 6309 	orr.w	r3, r3, r9, lsl #24
  400eda:	93dc      	str	r3, [sp, #880]	; 0x370
  400edc:	0a13      	lsrs	r3, r2, #8
  400ede:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
  400ee2:	93dd      	str	r3, [sp, #884]	; 0x374

00400ee4 <.LBE461>:
  400ee4:	abda      	add	r3, sp, #872	; 0x368
  400ee6:	e9d3 2300 	ldrd	r2, r3, [r3]
  400eea:	a9dc      	add	r1, sp, #880	; 0x370
  400eec:	e9d1 0100 	ldrd	r0, r1, [r1]
  400ef0:	4042      	eors	r2, r0
  400ef2:	404b      	eors	r3, r1
  400ef4:	4641      	mov	r1, r8
  400ef6:	09c9      	lsrs	r1, r1, #7
  400ef8:	4648      	mov	r0, r9
  400efa:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  400efe:	9144      	str	r1, [sp, #272]	; 0x110
  400f00:	09c1      	lsrs	r1, r0, #7
  400f02:	9145      	str	r1, [sp, #276]	; 0x114
  400f04:	a944      	add	r1, sp, #272	; 0x110
  400f06:	e9d1 0100 	ldrd	r0, r1, [r1]
  400f0a:	4050      	eors	r0, r2
  400f0c:	4059      	eors	r1, r3
  400f0e:	4680      	mov	r8, r0
  400f10:	4689      	mov	r9, r1
  400f12:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  400f16:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  400f1a:	1880      	adds	r0, r0, r2
  400f1c:	4159      	adcs	r1, r3
  400f1e:	eb18 0200 	adds.w	r2, r8, r0
  400f22:	eb49 0301 	adc.w	r3, r9, r1
  400f26:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28

00400f2a <.LBB463>:
  400f2a:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
  400f2e:	4641      	mov	r1, r8
  400f30:	0cc9      	lsrs	r1, r1, #19
  400f32:	4648      	mov	r0, r9
  400f34:	ea41 3149 	orr.w	r1, r1, r9, lsl #13
  400f38:	91de      	str	r1, [sp, #888]	; 0x378
  400f3a:	0cc1      	lsrs	r1, r0, #19
  400f3c:	4640      	mov	r0, r8
  400f3e:	ea41 3148 	orr.w	r1, r1, r8, lsl #13
  400f42:	91df      	str	r1, [sp, #892]	; 0x37c

00400f44 <.LBB465>:
  400f44:	4649      	mov	r1, r9
  400f46:	00c9      	lsls	r1, r1, #3
  400f48:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
  400f4c:	91e1      	str	r1, [sp, #900]	; 0x384
  400f4e:	00c1      	lsls	r1, r0, #3
  400f50:	ea41 7159 	orr.w	r1, r1, r9, lsr #29
  400f54:	91e0      	str	r1, [sp, #896]	; 0x380

00400f56 <.LBE465>:
  400f56:	abde      	add	r3, sp, #888	; 0x378
  400f58:	e9d3 0100 	ldrd	r0, r1, [r3]
  400f5c:	abe0      	add	r3, sp, #896	; 0x380
  400f5e:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f62:	4050      	eors	r0, r2
  400f64:	4059      	eors	r1, r3
  400f66:	4643      	mov	r3, r8
  400f68:	099b      	lsrs	r3, r3, #6
  400f6a:	464a      	mov	r2, r9
  400f6c:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  400f70:	9346      	str	r3, [sp, #280]	; 0x118
  400f72:	0993      	lsrs	r3, r2, #6
  400f74:	9347      	str	r3, [sp, #284]	; 0x11c
  400f76:	ab46      	add	r3, sp, #280	; 0x118
  400f78:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f7c:	4042      	eors	r2, r0
  400f7e:	404b      	eors	r3, r1
  400f80:	4610      	mov	r0, r2
  400f82:	4619      	mov	r1, r3
  400f84:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  400f88:	1812      	adds	r2, r2, r0
  400f8a:	414b      	adcs	r3, r1
  400f8c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  400f90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400f94:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  400f98:	1812      	adds	r2, r2, r0
  400f9a:	414b      	adcs	r3, r1
  400f9c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  400fa0:	1880      	adds	r0, r0, r2
  400fa2:	4159      	adcs	r1, r3
  400fa4:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  400fa8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400fac:	1812      	adds	r2, r2, r0
  400fae:	414b      	adcs	r3, r1
  400fb0:	e9cd 2304 	strd	r2, r3, [sp, #16]

00400fb4 <.LBB467>:
  400fb4:	ea4f 731a 	mov.w	r3, sl, lsr #28
  400fb8:	ea43 130b 	orr.w	r3, r3, fp, lsl #4
  400fbc:	93e2      	str	r3, [sp, #904]	; 0x388
  400fbe:	ea4f 731b 	mov.w	r3, fp, lsr #28
  400fc2:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
  400fc6:	93e3      	str	r3, [sp, #908]	; 0x38c

00400fc8 <.LBB469>:
  400fc8:	ea4f 738b 	mov.w	r3, fp, lsl #30
  400fcc:	ea43 039a 	orr.w	r3, r3, sl, lsr #2
  400fd0:	93e5      	str	r3, [sp, #916]	; 0x394
  400fd2:	ea4f 738a 	mov.w	r3, sl, lsl #30
  400fd6:	ea43 039b 	orr.w	r3, r3, fp, lsr #2
  400fda:	93e4      	str	r3, [sp, #912]	; 0x390

00400fdc <.LBE469>:
  400fdc:	abe2      	add	r3, sp, #904	; 0x388
  400fde:	e9d3 1200 	ldrd	r1, r2, [r3]
  400fe2:	abe4      	add	r3, sp, #912	; 0x390
  400fe4:	e9d3 8900 	ldrd	r8, r9, [r3]
  400fe8:	ea81 0108 	eor.w	r1, r1, r8
  400fec:	ea82 0209 	eor.w	r2, r2, r9
  400ff0:	4613      	mov	r3, r2
  400ff2:	460a      	mov	r2, r1

00400ff4 <.LBB471>:
  400ff4:	ea4f 614b 	mov.w	r1, fp, lsl #25
  400ff8:	ea41 11da 	orr.w	r1, r1, sl, lsr #7
  400ffc:	91e7      	str	r1, [sp, #924]	; 0x39c
  400ffe:	ea4f 614a 	mov.w	r1, sl, lsl #25
  401002:	ea41 11db 	orr.w	r1, r1, fp, lsr #7
  401006:	91e6      	str	r1, [sp, #920]	; 0x398

00401008 <.LBE471>:
  401008:	a9e6      	add	r1, sp, #920	; 0x398
  40100a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40100e:	4050      	eors	r0, r2
  401010:	4059      	eors	r1, r3
  401012:	4680      	mov	r8, r0
  401014:	4689      	mov	r9, r1
  401016:	ea44 000a 	orr.w	r0, r4, sl
  40101a:	ea45 010b 	orr.w	r1, r5, fp
  40101e:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  401022:	4002      	ands	r2, r0
  401024:	400b      	ands	r3, r1
  401026:	4610      	mov	r0, r2
  401028:	4619      	mov	r1, r3
  40102a:	ea04 020a 	and.w	r2, r4, sl
  40102e:	ea05 030b 	and.w	r3, r5, fp
  401032:	4302      	orrs	r2, r0
  401034:	430b      	orrs	r3, r1
  401036:	eb12 0008 	adds.w	r0, r2, r8
  40103a:	eb43 0109 	adc.w	r1, r3, r9
  40103e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401042:	1812      	adds	r2, r2, r0
  401044:	414b      	adcs	r3, r1
  401046:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8

0040104a <.LBB473>:
  40104a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40104e:	0b83      	lsrs	r3, r0, #14
  401050:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  401054:	93e8      	str	r3, [sp, #928]	; 0x3a0
  401056:	0b8b      	lsrs	r3, r1, #14
  401058:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  40105c:	93e9      	str	r3, [sp, #932]	; 0x3a4

0040105e <.LBB475>:
  40105e:	0c83      	lsrs	r3, r0, #18
  401060:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  401064:	93ea      	str	r3, [sp, #936]	; 0x3a8
  401066:	0c8b      	lsrs	r3, r1, #18
  401068:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  40106c:	93eb      	str	r3, [sp, #940]	; 0x3ac

0040106e <.LBE475>:
  40106e:	abe8      	add	r3, sp, #928	; 0x3a0
  401070:	e9d3 2300 	ldrd	r2, r3, [r3]
  401074:	f50d 786a 	add.w	r8, sp, #936	; 0x3a8
  401078:	e9d8 8900 	ldrd	r8, r9, [r8]
  40107c:	ea82 0208 	eor.w	r2, r2, r8
  401080:	ea83 0309 	eor.w	r3, r3, r9

00401084 <.LBB477>:
  401084:	4680      	mov	r8, r0
  401086:	4689      	mov	r9, r1
  401088:	05c9      	lsls	r1, r1, #23
  40108a:	4640      	mov	r0, r8
  40108c:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  401090:	91ed      	str	r1, [sp, #948]	; 0x3b4
  401092:	05c1      	lsls	r1, r0, #23
  401094:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  401098:	91ec      	str	r1, [sp, #944]	; 0x3b0

0040109a <.LBE477>:
  40109a:	a9ec      	add	r1, sp, #944	; 0x3b0
  40109c:	e9d1 0100 	ldrd	r0, r1, [r1]
  4010a0:	4050      	eors	r0, r2
  4010a2:	4059      	eors	r1, r3
  4010a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4010a8:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  4010ac:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  4010b0:	ea80 0008 	eor.w	r0, r0, r8
  4010b4:	ea81 0109 	eor.w	r1, r1, r9
  4010b8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4010bc:	4002      	ands	r2, r0
  4010be:	400b      	ands	r3, r1
  4010c0:	4610      	mov	r0, r2
  4010c2:	4619      	mov	r1, r3
  4010c4:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  4010c8:	4042      	eors	r2, r0
  4010ca:	404b      	eors	r3, r1
  4010cc:	4610      	mov	r0, r2
  4010ce:	4619      	mov	r1, r3
  4010d0:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	; 0x30
  4010d4:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  4010d8:	eb18 0802 	adds.w	r8, r8, r2
  4010dc:	eb49 0903 	adc.w	r9, r9, r3
  4010e0:	eb18 0200 	adds.w	r2, r8, r0
  4010e4:	eb49 0301 	adc.w	r3, r9, r1
  4010e8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  4010ec:	2f00      	cmp	r7, #0
  4010ee:	f001 83c1 	beq.w	402874 <.LCFI3+0x48>

004010f2 <.LBB479>:
  4010f2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4010f6:	0843      	lsrs	r3, r0, #1
  4010f8:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  4010fc:	93ee      	str	r3, [sp, #952]	; 0x3b8
  4010fe:	084b      	lsrs	r3, r1, #1
  401100:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  401104:	93ef      	str	r3, [sp, #956]	; 0x3bc

00401106 <.LBB481>:
  401106:	0a03      	lsrs	r3, r0, #8
  401108:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  40110c:	93f0      	str	r3, [sp, #960]	; 0x3c0
  40110e:	0a0b      	lsrs	r3, r1, #8
  401110:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  401114:	93f1      	str	r3, [sp, #964]	; 0x3c4

00401116 <.LBE481>:
  401116:	abee      	add	r3, sp, #952	; 0x3b8
  401118:	e9d3 2300 	ldrd	r2, r3, [r3]
  40111c:	f50d 7870 	add.w	r8, sp, #960	; 0x3c0
  401120:	e9d8 8900 	ldrd	r8, r9, [r8]
  401124:	ea82 0208 	eor.w	r2, r2, r8
  401128:	ea83 0309 	eor.w	r3, r3, r9
  40112c:	4689      	mov	r9, r1
  40112e:	09c1      	lsrs	r1, r0, #7
  401130:	4648      	mov	r0, r9
  401132:	ea41 6149 	orr.w	r1, r1, r9, lsl #25
  401136:	9148      	str	r1, [sp, #288]	; 0x120
  401138:	09c1      	lsrs	r1, r0, #7
  40113a:	9149      	str	r1, [sp, #292]	; 0x124
  40113c:	a948      	add	r1, sp, #288	; 0x120
  40113e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401142:	4050      	eors	r0, r2
  401144:	4059      	eors	r1, r3
  401146:	4602      	mov	r2, r0
  401148:	460b      	mov	r3, r1
  40114a:	e9dd 0128 	ldrd	r0, r1, [sp, #160]	; 0xa0
  40114e:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
  401152:	eb10 0008 	adds.w	r0, r0, r8
  401156:	eb41 0109 	adc.w	r1, r1, r9
  40115a:	eb12 0800 	adds.w	r8, r2, r0
  40115e:	eb43 0901 	adc.w	r9, r3, r1
  401162:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38

00401166 <.LBB483>:
  401166:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
  40116a:	0cd1      	lsrs	r1, r2, #19
  40116c:	ea41 3143 	orr.w	r1, r1, r3, lsl #13
  401170:	91f2      	str	r1, [sp, #968]	; 0x3c8
  401172:	0cd9      	lsrs	r1, r3, #19
  401174:	ea41 3142 	orr.w	r1, r1, r2, lsl #13
  401178:	91f3      	str	r1, [sp, #972]	; 0x3cc

0040117a <.LBB485>:
  40117a:	00d9      	lsls	r1, r3, #3
  40117c:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  401180:	91f5      	str	r1, [sp, #980]	; 0x3d4
  401182:	00d1      	lsls	r1, r2, #3
  401184:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
  401188:	91f4      	str	r1, [sp, #976]	; 0x3d0

0040118a <.LBE485>:
  40118a:	a9f2      	add	r1, sp, #968	; 0x3c8
  40118c:	e9d1 0100 	ldrd	r0, r1, [r1]
  401190:	f50d 7874 	add.w	r8, sp, #976	; 0x3d0
  401194:	e9d8 8900 	ldrd	r8, r9, [r8]
  401198:	ea80 0008 	eor.w	r0, r0, r8
  40119c:	ea81 0109 	eor.w	r1, r1, r9
  4011a0:	4699      	mov	r9, r3
  4011a2:	0993      	lsrs	r3, r2, #6
  4011a4:	464a      	mov	r2, r9
  4011a6:	ea43 6389 	orr.w	r3, r3, r9, lsl #26
  4011aa:	934a      	str	r3, [sp, #296]	; 0x128
  4011ac:	0993      	lsrs	r3, r2, #6
  4011ae:	934b      	str	r3, [sp, #300]	; 0x12c
  4011b0:	ab4a      	add	r3, sp, #296	; 0x128
  4011b2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4011b6:	4042      	eors	r2, r0
  4011b8:	404b      	eors	r3, r1
  4011ba:	4610      	mov	r0, r2
  4011bc:	4619      	mov	r1, r3
  4011be:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  4011c2:	1812      	adds	r2, r2, r0
  4011c4:	414b      	adcs	r3, r1
  4011c6:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  4011ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4011ce:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  4011d2:	1880      	adds	r0, r0, r2
  4011d4:	4159      	adcs	r1, r3
  4011d6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  4011da:	1812      	adds	r2, r2, r0
  4011dc:	414b      	adcs	r3, r1
  4011de:	4610      	mov	r0, r2
  4011e0:	4619      	mov	r1, r3
  4011e2:	e9dd 232e 	ldrd	r2, r3, [sp, #184]	; 0xb8
  4011e6:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  4011ea:	1880      	adds	r0, r0, r2
  4011ec:	4159      	adcs	r1, r3
  4011ee:	4602      	mov	r2, r0
  4011f0:	460b      	mov	r3, r1
  4011f2:	e9cd 2302 	strd	r2, r3, [sp, #8]

004011f6 <.LBB487>:
  4011f6:	e9dd 892a 	ldrd	r8, r9, [sp, #168]	; 0xa8
  4011fa:	4643      	mov	r3, r8
  4011fc:	0f1b      	lsrs	r3, r3, #28
  4011fe:	464a      	mov	r2, r9
  401200:	ea43 1309 	orr.w	r3, r3, r9, lsl #4
  401204:	93f6      	str	r3, [sp, #984]	; 0x3d8
  401206:	0f13      	lsrs	r3, r2, #28
  401208:	4642      	mov	r2, r8
  40120a:	ea43 1308 	orr.w	r3, r3, r8, lsl #4
  40120e:	93f7      	str	r3, [sp, #988]	; 0x3dc

00401210 <.LBB489>:
  401210:	464b      	mov	r3, r9
  401212:	079b      	lsls	r3, r3, #30
  401214:	ea43 0398 	orr.w	r3, r3, r8, lsr #2
  401218:	93f9      	str	r3, [sp, #996]	; 0x3e4
  40121a:	0793      	lsls	r3, r2, #30
  40121c:	ea43 0399 	orr.w	r3, r3, r9, lsr #2
  401220:	93f8      	str	r3, [sp, #992]	; 0x3e0

00401222 <.LBE489>:
  401222:	abf6      	add	r3, sp, #984	; 0x3d8
  401224:	e9d3 2300 	ldrd	r2, r3, [r3]
  401228:	a9f8      	add	r1, sp, #992	; 0x3e0
  40122a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40122e:	4042      	eors	r2, r0
  401230:	404b      	eors	r3, r1

00401232 <.LBB491>:
  401232:	4649      	mov	r1, r9
  401234:	0649      	lsls	r1, r1, #25
  401236:	4640      	mov	r0, r8
  401238:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
  40123c:	91fb      	str	r1, [sp, #1004]	; 0x3ec
  40123e:	0641      	lsls	r1, r0, #25
  401240:	ea41 11d9 	orr.w	r1, r1, r9, lsr #7
  401244:	91fa      	str	r1, [sp, #1000]	; 0x3e8

00401246 <.LBE491>:
  401246:	a9fa      	add	r1, sp, #1000	; 0x3e8
  401248:	e9d1 0100 	ldrd	r0, r1, [r1]
  40124c:	4050      	eors	r0, r2
  40124e:	4059      	eors	r1, r3
  401250:	4602      	mov	r2, r0
  401252:	460b      	mov	r3, r1
  401254:	ea48 000a 	orr.w	r0, r8, sl
  401258:	ea49 010b 	orr.w	r1, r9, fp
  40125c:	4020      	ands	r0, r4
  40125e:	4029      	ands	r1, r5
  401260:	ea08 080a 	and.w	r8, r8, sl
  401264:	ea09 090b 	and.w	r9, r9, fp
  401268:	ea48 0800 	orr.w	r8, r8, r0
  40126c:	ea49 0901 	orr.w	r9, r9, r1
  401270:	eb18 0002 	adds.w	r0, r8, r2
  401274:	eb49 0103 	adc.w	r1, r9, r3
  401278:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
  40127c:	eb18 0800 	adds.w	r8, r8, r0
  401280:	eb49 0901 	adc.w	r9, r9, r1

00401284 <.LBB493>:
  401284:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401288:	0b83      	lsrs	r3, r0, #14
  40128a:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  40128e:	93fc      	str	r3, [sp, #1008]	; 0x3f0
  401290:	0b8b      	lsrs	r3, r1, #14
  401292:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  401296:	93fd      	str	r3, [sp, #1012]	; 0x3f4

00401298 <.LBB495>:
  401298:	0c83      	lsrs	r3, r0, #18
  40129a:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  40129e:	93fe      	str	r3, [sp, #1016]	; 0x3f8
  4012a0:	0c8b      	lsrs	r3, r1, #18
  4012a2:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  4012a6:	93ff      	str	r3, [sp, #1020]	; 0x3fc

004012a8 <.LBE495>:
  4012a8:	abfc      	add	r3, sp, #1008	; 0x3f0
  4012aa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4012ae:	a9fe      	add	r1, sp, #1016	; 0x3f8
  4012b0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4012b4:	4042      	eors	r2, r0
  4012b6:	404b      	eors	r3, r1

004012b8 <.LBB497>:
  4012b8:	9903      	ldr	r1, [sp, #12]
  4012ba:	05c9      	lsls	r1, r1, #23
  4012bc:	9802      	ldr	r0, [sp, #8]
  4012be:	ea41 2150 	orr.w	r1, r1, r0, lsr #9
  4012c2:	f8cd 1404 	str.w	r1, [sp, #1028]	; 0x404
  4012c6:	05c1      	lsls	r1, r0, #23
  4012c8:	9803      	ldr	r0, [sp, #12]
  4012ca:	ea41 2150 	orr.w	r1, r1, r0, lsr #9
  4012ce:	f8cd 1400 	str.w	r1, [sp, #1024]	; 0x400

004012d2 <.LBE497>:
  4012d2:	f50d 6180 	add.w	r1, sp, #1024	; 0x400
  4012d6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4012da:	4050      	eors	r0, r2
  4012dc:	4059      	eors	r1, r3
  4012de:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  4012e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  4012e6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4012ea:	4050      	eors	r0, r2
  4012ec:	4059      	eors	r1, r3
  4012ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4012f2:	4002      	ands	r2, r0
  4012f4:	400b      	ands	r3, r1
  4012f6:	4610      	mov	r0, r2
  4012f8:	4619      	mov	r1, r3
  4012fa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  4012fe:	4042      	eors	r2, r0
  401300:	404b      	eors	r3, r1
  401302:	e9cd 232c 	strd	r2, r3, [sp, #176]	; 0xb0
  401306:	e9d6 230e 	ldrd	r2, r3, [r6, #56]	; 0x38
  40130a:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  40130e:	1880      	adds	r0, r0, r2
  401310:	4159      	adcs	r1, r3
  401312:	4602      	mov	r2, r0
  401314:	460b      	mov	r3, r1
  401316:	e9dd 012c 	ldrd	r0, r1, [sp, #176]	; 0xb0
  40131a:	1880      	adds	r0, r0, r2
  40131c:	4159      	adcs	r1, r3
  40131e:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  401322:	2f00      	cmp	r7, #0
  401324:	f001 82ac 	beq.w	402880 <.LCFI3+0x54>

00401328 <.LBB499>:
  401328:	e9dd 0100 	ldrd	r0, r1, [sp]
  40132c:	0843      	lsrs	r3, r0, #1
  40132e:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  401332:	f8cd 3408 	str.w	r3, [sp, #1032]	; 0x408
  401336:	084b      	lsrs	r3, r1, #1
  401338:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  40133c:	f8cd 340c 	str.w	r3, [sp, #1036]	; 0x40c

00401340 <.LBB501>:
  401340:	0a03      	lsrs	r3, r0, #8
  401342:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  401346:	f8cd 3410 	str.w	r3, [sp, #1040]	; 0x410
  40134a:	0a0b      	lsrs	r3, r1, #8
  40134c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  401350:	f8cd 3414 	str.w	r3, [sp, #1044]	; 0x414

00401354 <.LBE501>:
  401354:	f50d 6381 	add.w	r3, sp, #1032	; 0x408
  401358:	e9d3 2300 	ldrd	r2, r3, [r3]
  40135c:	f50d 6182 	add.w	r1, sp, #1040	; 0x410
  401360:	e9d1 0100 	ldrd	r0, r1, [r1]
  401364:	4042      	eors	r2, r0
  401366:	404b      	eors	r3, r1
  401368:	9900      	ldr	r1, [sp, #0]
  40136a:	09c9      	lsrs	r1, r1, #7
  40136c:	9801      	ldr	r0, [sp, #4]
  40136e:	ea41 6140 	orr.w	r1, r1, r0, lsl #25
  401372:	914c      	str	r1, [sp, #304]	; 0x130
  401374:	09c1      	lsrs	r1, r0, #7
  401376:	914d      	str	r1, [sp, #308]	; 0x134
  401378:	a94c      	add	r1, sp, #304	; 0x130
  40137a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40137e:	4050      	eors	r0, r2
  401380:	4059      	eors	r1, r3
  401382:	4602      	mov	r2, r0
  401384:	460b      	mov	r3, r1
  401386:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  40138a:	1880      	adds	r0, r0, r2
  40138c:	4159      	adcs	r1, r3
  40138e:	4602      	mov	r2, r0
  401390:	460b      	mov	r3, r1
  401392:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  401396:	1880      	adds	r0, r0, r2
  401398:	4159      	adcs	r1, r3
  40139a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40

0040139e <.LBB503>:
  40139e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  4013a2:	0cd1      	lsrs	r1, r2, #19
  4013a4:	ea41 3143 	orr.w	r1, r1, r3, lsl #13
  4013a8:	f8cd 1418 	str.w	r1, [sp, #1048]	; 0x418
  4013ac:	0cd9      	lsrs	r1, r3, #19
  4013ae:	ea41 3142 	orr.w	r1, r1, r2, lsl #13
  4013b2:	f8cd 141c 	str.w	r1, [sp, #1052]	; 0x41c

004013b6 <.LBB505>:
  4013b6:	00d9      	lsls	r1, r3, #3
  4013b8:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  4013bc:	f8cd 1424 	str.w	r1, [sp, #1060]	; 0x424
  4013c0:	00d1      	lsls	r1, r2, #3
  4013c2:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
  4013c6:	f8cd 1420 	str.w	r1, [sp, #1056]	; 0x420

004013ca <.LBE505>:
  4013ca:	f50d 6383 	add.w	r3, sp, #1048	; 0x418
  4013ce:	e9d3 0100 	ldrd	r0, r1, [r3]
  4013d2:	f50d 6384 	add.w	r3, sp, #1056	; 0x420
  4013d6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4013da:	4050      	eors	r0, r2
  4013dc:	4059      	eors	r1, r3
  4013de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4013e0:	099b      	lsrs	r3, r3, #6
  4013e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4013e4:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
  4013e8:	934e      	str	r3, [sp, #312]	; 0x138
  4013ea:	0993      	lsrs	r3, r2, #6
  4013ec:	934f      	str	r3, [sp, #316]	; 0x13c
  4013ee:	ab4e      	add	r3, sp, #312	; 0x138
  4013f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4013f4:	4042      	eors	r2, r0
  4013f6:	404b      	eors	r3, r1
  4013f8:	4610      	mov	r0, r2
  4013fa:	4619      	mov	r1, r3
  4013fc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  401400:	1812      	adds	r2, r2, r0
  401402:	414b      	adcs	r3, r1
  401404:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  401408:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  40140c:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  401410:	1812      	adds	r2, r2, r0
  401412:	414b      	adcs	r3, r1
  401414:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  401418:	1880      	adds	r0, r0, r2
  40141a:	4159      	adcs	r1, r3
  40141c:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68
  401420:	1902      	adds	r2, r0, r4
  401422:	eb41 0305 	adc.w	r3, r1, r5
  401426:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60

0040142a <.LBB507>:
  40142a:	ea4f 7318 	mov.w	r3, r8, lsr #28
  40142e:	ea43 1309 	orr.w	r3, r3, r9, lsl #4
  401432:	f8cd 3428 	str.w	r3, [sp, #1064]	; 0x428
  401436:	ea4f 7319 	mov.w	r3, r9, lsr #28
  40143a:	ea43 1308 	orr.w	r3, r3, r8, lsl #4
  40143e:	f8cd 342c 	str.w	r3, [sp, #1068]	; 0x42c

00401442 <.LBB509>:
  401442:	ea4f 7389 	mov.w	r3, r9, lsl #30
  401446:	ea43 0398 	orr.w	r3, r3, r8, lsr #2
  40144a:	f8cd 3434 	str.w	r3, [sp, #1076]	; 0x434
  40144e:	ea4f 7388 	mov.w	r3, r8, lsl #30
  401452:	ea43 0399 	orr.w	r3, r3, r9, lsr #2
  401456:	f8cd 3430 	str.w	r3, [sp, #1072]	; 0x430

0040145a <.LBE509>:
  40145a:	f50d 6385 	add.w	r3, sp, #1064	; 0x428
  40145e:	e9d3 1200 	ldrd	r1, r2, [r3]
  401462:	f50d 6386 	add.w	r3, sp, #1072	; 0x430
  401466:	e9d3 3400 	ldrd	r3, r4, [r3]
  40146a:	4059      	eors	r1, r3
  40146c:	4062      	eors	r2, r4
  40146e:	4613      	mov	r3, r2
  401470:	460a      	mov	r2, r1

00401472 <.LBB511>:
  401472:	ea4f 6149 	mov.w	r1, r9, lsl #25
  401476:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
  40147a:	f8cd 143c 	str.w	r1, [sp, #1084]	; 0x43c
  40147e:	ea4f 6148 	mov.w	r1, r8, lsl #25
  401482:	ea41 11d9 	orr.w	r1, r1, r9, lsr #7
  401486:	f8cd 1438 	str.w	r1, [sp, #1080]	; 0x438

0040148a <.LBE511>:
  40148a:	f50d 6187 	add.w	r1, sp, #1080	; 0x438
  40148e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401492:	4050      	eors	r0, r2
  401494:	4059      	eors	r1, r3
  401496:	4602      	mov	r2, r0
  401498:	460b      	mov	r3, r1
  40149a:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  40149e:	ea44 0008 	orr.w	r0, r4, r8
  4014a2:	ea45 0109 	orr.w	r1, r5, r9
  4014a6:	ea00 000a 	and.w	r0, r0, sl
  4014aa:	ea01 010b 	and.w	r1, r1, fp
  4014ae:	ea04 0408 	and.w	r4, r4, r8
  4014b2:	ea05 0509 	and.w	r5, r5, r9
  4014b6:	4320      	orrs	r0, r4
  4014b8:	4329      	orrs	r1, r5
  4014ba:	1880      	adds	r0, r0, r2
  4014bc:	4159      	adcs	r1, r3
  4014be:	e9dd 341a 	ldrd	r3, r4, [sp, #104]	; 0x68
  4014c2:	181b      	adds	r3, r3, r0
  4014c4:	414c      	adcs	r4, r1
  4014c6:	e9cd 341a 	strd	r3, r4, [sp, #104]	; 0x68

004014ca <.LBB513>:
  4014ca:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  4014ce:	0ba3      	lsrs	r3, r4, #14
  4014d0:	ea43 4385 	orr.w	r3, r3, r5, lsl #18
  4014d4:	f8cd 3440 	str.w	r3, [sp, #1088]	; 0x440
  4014d8:	0bab      	lsrs	r3, r5, #14
  4014da:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  4014de:	f8cd 3444 	str.w	r3, [sp, #1092]	; 0x444

004014e2 <.LBB515>:
  4014e2:	0ca3      	lsrs	r3, r4, #18
  4014e4:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
  4014e8:	f8cd 3448 	str.w	r3, [sp, #1096]	; 0x448
  4014ec:	0cab      	lsrs	r3, r5, #18
  4014ee:	ea43 3384 	orr.w	r3, r3, r4, lsl #14
  4014f2:	f8cd 344c 	str.w	r3, [sp, #1100]	; 0x44c

004014f6 <.LBE515>:
        R( 8); R( 9); R(10); R(11);
  4014f6:	f50d 6388 	add.w	r3, sp, #1088	; 0x440
  4014fa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014fe:	f50d 6189 	add.w	r1, sp, #1096	; 0x448
  401502:	e9d1 0100 	ldrd	r0, r1, [r1]
  401506:	4042      	eors	r2, r0
  401508:	404b      	eors	r3, r1

0040150a <.LBB517>:
  40150a:	05e9      	lsls	r1, r5, #23
  40150c:	ea41 2154 	orr.w	r1, r1, r4, lsr #9
  401510:	f8cd 1454 	str.w	r1, [sp, #1108]	; 0x454
  401514:	05e1      	lsls	r1, r4, #23
  401516:	ea41 2155 	orr.w	r1, r1, r5, lsr #9
  40151a:	f8cd 1450 	str.w	r1, [sp, #1104]	; 0x450

0040151e <.LBE517>:
  40151e:	f50d 618a 	add.w	r1, sp, #1104	; 0x450
  401522:	e9d1 0100 	ldrd	r0, r1, [r1]
  401526:	4050      	eors	r0, r2
  401528:	4059      	eors	r1, r3
  40152a:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  40152e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
  401532:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
  401536:	404b      	eors	r3, r1
  401538:	4054      	eors	r4, r2
  40153a:	4625      	mov	r5, r4
  40153c:	461c      	mov	r4, r3
  40153e:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  401542:	4022      	ands	r2, r4
  401544:	402b      	ands	r3, r5
  401546:	4614      	mov	r4, r2
  401548:	461d      	mov	r5, r3
  40154a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  40154e:	4062      	eors	r2, r4
  401550:	406b      	eors	r3, r5
  401552:	4614      	mov	r4, r2
  401554:	461d      	mov	r5, r3
  401556:	e9d6 2310 	ldrd	r2, r3, [r6, #64]	; 0x40
  40155a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  40155e:	1880      	adds	r0, r0, r2
  401560:	4159      	adcs	r1, r3
  401562:	1820      	adds	r0, r4, r0
  401564:	eb45 0101 	adc.w	r1, r5, r1
  401568:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40156c:	2f00      	cmp	r7, #0
  40156e:	f001 818d 	beq.w	40288c <.LCFI3+0x60>

00401572 <.LBB519>:
  401572:	e9dd 4512 	ldrd	r4, r5, [sp, #72]	; 0x48
  401576:	0863      	lsrs	r3, r4, #1
  401578:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  40157c:	f8cd 3458 	str.w	r3, [sp, #1112]	; 0x458
  401580:	086b      	lsrs	r3, r5, #1
  401582:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  401586:	f8cd 345c 	str.w	r3, [sp, #1116]	; 0x45c

0040158a <.LBB521>:
  40158a:	0a23      	lsrs	r3, r4, #8
  40158c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401590:	f8cd 3460 	str.w	r3, [sp, #1120]	; 0x460
  401594:	0a2b      	lsrs	r3, r5, #8
  401596:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  40159a:	f8cd 3464 	str.w	r3, [sp, #1124]	; 0x464

0040159e <.LBE521>:
  40159e:	f50d 638b 	add.w	r3, sp, #1112	; 0x458
  4015a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4015a6:	f50d 618c 	add.w	r1, sp, #1120	; 0x460
  4015aa:	e9d1 0100 	ldrd	r0, r1, [r1]
  4015ae:	4042      	eors	r2, r0
  4015b0:	404b      	eors	r3, r1
  4015b2:	09e1      	lsrs	r1, r4, #7
  4015b4:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4015b8:	9150      	str	r1, [sp, #320]	; 0x140
  4015ba:	09e9      	lsrs	r1, r5, #7
  4015bc:	9151      	str	r1, [sp, #324]	; 0x144
  4015be:	a950      	add	r1, sp, #320	; 0x140
  4015c0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4015c4:	4050      	eors	r0, r2
  4015c6:	4059      	eors	r1, r3
  4015c8:	4602      	mov	r2, r0
  4015ca:	460b      	mov	r3, r1
  4015cc:	e9dd 0100 	ldrd	r0, r1, [sp]
  4015d0:	1880      	adds	r0, r0, r2
  4015d2:	4159      	adcs	r1, r3
  4015d4:	4602      	mov	r2, r0
  4015d6:	460b      	mov	r3, r1
  4015d8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4015dc:	1880      	adds	r0, r0, r2
  4015de:	4159      	adcs	r1, r3
  4015e0:	e9cd 0100 	strd	r0, r1, [sp]

004015e4 <.LBB523>:
  4015e4:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
  4015e8:	0ce1      	lsrs	r1, r4, #19
  4015ea:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  4015ee:	f8cd 1468 	str.w	r1, [sp, #1128]	; 0x468
  4015f2:	0ce9      	lsrs	r1, r5, #19
  4015f4:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  4015f8:	f8cd 146c 	str.w	r1, [sp, #1132]	; 0x46c

004015fc <.LBB525>:
  4015fc:	00e9      	lsls	r1, r5, #3
  4015fe:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401602:	f8cd 1474 	str.w	r1, [sp, #1140]	; 0x474
  401606:	00e1      	lsls	r1, r4, #3
  401608:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  40160c:	f8cd 1470 	str.w	r1, [sp, #1136]	; 0x470

00401610 <.LBE525>:
  401610:	f50d 638d 	add.w	r3, sp, #1128	; 0x468
  401614:	e9d3 0100 	ldrd	r0, r1, [r3]
  401618:	f50d 638e 	add.w	r3, sp, #1136	; 0x470
  40161c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401620:	4050      	eors	r0, r2
  401622:	4059      	eors	r1, r3
  401624:	09a4      	lsrs	r4, r4, #6
  401626:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  401628:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  40162c:	9452      	str	r4, [sp, #328]	; 0x148
  40162e:	09ac      	lsrs	r4, r5, #6
  401630:	9453      	str	r4, [sp, #332]	; 0x14c
  401632:	ab52      	add	r3, sp, #328	; 0x148
  401634:	e9d3 4500 	ldrd	r4, r5, [r3]
  401638:	4044      	eors	r4, r0
  40163a:	404d      	eors	r5, r1
  40163c:	4620      	mov	r0, r4
  40163e:	e9dd 3400 	ldrd	r3, r4, [sp]
  401642:	181b      	adds	r3, r3, r0
  401644:	416c      	adcs	r4, r5
  401646:	e9cd 3400 	strd	r3, r4, [sp]
  40164a:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  40164e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401652:	1912      	adds	r2, r2, r4
  401654:	416b      	adcs	r3, r5
  401656:	4614      	mov	r4, r2
  401658:	461d      	mov	r5, r3
  40165a:	e9dd 2300 	ldrd	r2, r3, [sp]
  40165e:	1912      	adds	r2, r2, r4
  401660:	416b      	adcs	r3, r5
  401662:	461c      	mov	r4, r3
  401664:	4613      	mov	r3, r2
  401666:	e9cd 3406 	strd	r3, r4, [sp, #24]
  40166a:	eb12 020a 	adds.w	r2, r2, sl
  40166e:	eb44 030b 	adc.w	r3, r4, fp
  401672:	4692      	mov	sl, r2
  401674:	469b      	mov	fp, r3

00401676 <.LBB527>:
  401676:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  40167a:	0f23      	lsrs	r3, r4, #28
  40167c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  401680:	f8cd 3478 	str.w	r3, [sp, #1144]	; 0x478
  401684:	0f2b      	lsrs	r3, r5, #28
  401686:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  40168a:	f8cd 347c 	str.w	r3, [sp, #1148]	; 0x47c

0040168e <.LBB529>:
  40168e:	07ab      	lsls	r3, r5, #30
  401690:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  401694:	f8cd 3484 	str.w	r3, [sp, #1156]	; 0x484
  401698:	07a3      	lsls	r3, r4, #30
  40169a:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  40169e:	f8cd 3480 	str.w	r3, [sp, #1152]	; 0x480

004016a2 <.LBE529>:
  4016a2:	f50d 638f 	add.w	r3, sp, #1144	; 0x478
  4016a6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4016aa:	f50d 6190 	add.w	r1, sp, #1152	; 0x480
  4016ae:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016b2:	4042      	eors	r2, r0
  4016b4:	404b      	eors	r3, r1

004016b6 <.LBB531>:
  4016b6:	0669      	lsls	r1, r5, #25
  4016b8:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  4016bc:	f8cd 148c 	str.w	r1, [sp, #1164]	; 0x48c
  4016c0:	0661      	lsls	r1, r4, #25
  4016c2:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  4016c6:	f8cd 1488 	str.w	r1, [sp, #1160]	; 0x488

004016ca <.LBE531>:
  4016ca:	f50d 6191 	add.w	r1, sp, #1160	; 0x488
  4016ce:	e9d1 0100 	ldrd	r0, r1, [r1]
  4016d2:	4050      	eors	r0, r2
  4016d4:	4059      	eors	r1, r3
  4016d6:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  4016da:	ea44 0008 	orr.w	r0, r4, r8
  4016de:	ea45 0109 	orr.w	r1, r5, r9
  4016e2:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4016e6:	4002      	ands	r2, r0
  4016e8:	400b      	ands	r3, r1
  4016ea:	ea04 0408 	and.w	r4, r4, r8
  4016ee:	ea05 0509 	and.w	r5, r5, r9
  4016f2:	4314      	orrs	r4, r2
  4016f4:	431d      	orrs	r5, r3
  4016f6:	4620      	mov	r0, r4
  4016f8:	4629      	mov	r1, r5
  4016fa:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  4016fe:	1824      	adds	r4, r4, r0
  401700:	414d      	adcs	r5, r1
  401702:	4620      	mov	r0, r4
  401704:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  401708:	181b      	adds	r3, r3, r0
  40170a:	416c      	adcs	r4, r5
  40170c:	e9cd 3406 	strd	r3, r4, [sp, #24]

00401710 <.LBB533>:
  401710:	ea4f 339a 	mov.w	r3, sl, lsr #14
  401714:	ea43 438b 	orr.w	r3, r3, fp, lsl #18
  401718:	f8cd 3490 	str.w	r3, [sp, #1168]	; 0x490
  40171c:	ea4f 339b 	mov.w	r3, fp, lsr #14
  401720:	ea43 438a 	orr.w	r3, r3, sl, lsl #18
  401724:	f8cd 3494 	str.w	r3, [sp, #1172]	; 0x494

00401728 <.LBB535>:
  401728:	ea4f 439a 	mov.w	r3, sl, lsr #18
  40172c:	ea43 338b 	orr.w	r3, r3, fp, lsl #14
  401730:	f8cd 3498 	str.w	r3, [sp, #1176]	; 0x498
  401734:	ea4f 439b 	mov.w	r3, fp, lsr #18
  401738:	ea43 338a 	orr.w	r3, r3, sl, lsl #14
  40173c:	f8cd 349c 	str.w	r3, [sp, #1180]	; 0x49c

00401740 <.LBE535>:
  401740:	f50d 6392 	add.w	r3, sp, #1168	; 0x490
  401744:	e9d3 2300 	ldrd	r2, r3, [r3]
  401748:	f50d 6193 	add.w	r1, sp, #1176	; 0x498
  40174c:	e9d1 0100 	ldrd	r0, r1, [r1]
  401750:	4042      	eors	r2, r0
  401752:	404b      	eors	r3, r1

00401754 <.LBB537>:
  401754:	ea4f 51cb 	mov.w	r1, fp, lsl #23
  401758:	ea41 215a 	orr.w	r1, r1, sl, lsr #9
  40175c:	f8cd 14a4 	str.w	r1, [sp, #1188]	; 0x4a4
  401760:	ea4f 51ca 	mov.w	r1, sl, lsl #23
  401764:	ea41 215b 	orr.w	r1, r1, fp, lsr #9
  401768:	f8cd 14a0 	str.w	r1, [sp, #1184]	; 0x4a0

0040176c <.LBE537>:
  40176c:	f50d 6194 	add.w	r1, sp, #1184	; 0x4a0
  401770:	e9d1 0100 	ldrd	r0, r1, [r1]
  401774:	4050      	eors	r0, r2
  401776:	4059      	eors	r1, r3
  401778:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  40177c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401780:	4614      	mov	r4, r2
  401782:	461d      	mov	r5, r3
  401784:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  401788:	4044      	eors	r4, r0
  40178a:	404d      	eors	r5, r1
  40178c:	ea04 040a 	and.w	r4, r4, sl
  401790:	ea05 050b 	and.w	r5, r5, fp
  401794:	4062      	eors	r2, r4
  401796:	406b      	eors	r3, r5
  401798:	4614      	mov	r4, r2
  40179a:	461d      	mov	r5, r3
  40179c:	e9d6 2312 	ldrd	r2, r3, [r6, #72]	; 0x48
  4017a0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4017a4:	1880      	adds	r0, r0, r2
  4017a6:	4159      	adcs	r1, r3
  4017a8:	1820      	adds	r0, r4, r0
  4017aa:	eb45 0101 	adc.w	r1, r5, r1
  4017ae:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4017b2:	2f00      	cmp	r7, #0
  4017b4:	f001 8070 	beq.w	402898 <.LCFI3+0x6c>

004017b8 <.LBB539>:
  4017b8:	e9dd 4524 	ldrd	r4, r5, [sp, #144]	; 0x90
  4017bc:	0863      	lsrs	r3, r4, #1
  4017be:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  4017c2:	f8cd 34a8 	str.w	r3, [sp, #1192]	; 0x4a8
  4017c6:	086b      	lsrs	r3, r5, #1
  4017c8:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  4017cc:	f8cd 34ac 	str.w	r3, [sp, #1196]	; 0x4ac

004017d0 <.LBB541>:
  4017d0:	0a23      	lsrs	r3, r4, #8
  4017d2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  4017d6:	f8cd 34b0 	str.w	r3, [sp, #1200]	; 0x4b0
  4017da:	0a2b      	lsrs	r3, r5, #8
  4017dc:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  4017e0:	f8cd 34b4 	str.w	r3, [sp, #1204]	; 0x4b4

004017e4 <.LBE541>:
  4017e4:	f50d 6395 	add.w	r3, sp, #1192	; 0x4a8
  4017e8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017ec:	f50d 6196 	add.w	r1, sp, #1200	; 0x4b0
  4017f0:	e9d1 0100 	ldrd	r0, r1, [r1]
  4017f4:	4042      	eors	r2, r0
  4017f6:	404b      	eors	r3, r1
  4017f8:	09e1      	lsrs	r1, r4, #7
  4017fa:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4017fe:	9154      	str	r1, [sp, #336]	; 0x150
  401800:	09e9      	lsrs	r1, r5, #7
  401802:	9155      	str	r1, [sp, #340]	; 0x154
  401804:	a954      	add	r1, sp, #336	; 0x150
  401806:	e9d1 0100 	ldrd	r0, r1, [r1]
  40180a:	4050      	eors	r0, r2
  40180c:	4059      	eors	r1, r3
  40180e:	4602      	mov	r2, r0
  401810:	460b      	mov	r3, r1
  401812:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  401816:	1880      	adds	r0, r0, r2
  401818:	4159      	adcs	r1, r3
  40181a:	4602      	mov	r2, r0
  40181c:	460b      	mov	r3, r1
  40181e:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
  401822:	1880      	adds	r0, r0, r2
  401824:	4159      	adcs	r1, r3
  401826:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48

0040182a <.LBB543>:
  40182a:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
  40182e:	0ce1      	lsrs	r1, r4, #19
  401830:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  401834:	f8cd 14b8 	str.w	r1, [sp, #1208]	; 0x4b8
  401838:	0ce9      	lsrs	r1, r5, #19
  40183a:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  40183e:	f8cd 14bc 	str.w	r1, [sp, #1212]	; 0x4bc

00401842 <.LBB545>:
  401842:	00e9      	lsls	r1, r5, #3
  401844:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401848:	f8cd 14c4 	str.w	r1, [sp, #1220]	; 0x4c4
  40184c:	00e1      	lsls	r1, r4, #3
  40184e:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  401852:	f8cd 14c0 	str.w	r1, [sp, #1216]	; 0x4c0

00401856 <.LBE545>:
  401856:	f50d 6397 	add.w	r3, sp, #1208	; 0x4b8
  40185a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40185e:	f50d 6398 	add.w	r3, sp, #1216	; 0x4c0
  401862:	e9d3 2300 	ldrd	r2, r3, [r3]
  401866:	4050      	eors	r0, r2
  401868:	4059      	eors	r1, r3
  40186a:	09a4      	lsrs	r4, r4, #6
  40186c:	9d11      	ldr	r5, [sp, #68]	; 0x44
  40186e:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  401872:	9456      	str	r4, [sp, #344]	; 0x158
  401874:	09ac      	lsrs	r4, r5, #6
  401876:	9457      	str	r4, [sp, #348]	; 0x15c
  401878:	ab56      	add	r3, sp, #344	; 0x158
  40187a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40187e:	4044      	eors	r4, r0
  401880:	404d      	eors	r5, r1
  401882:	4620      	mov	r0, r4
  401884:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	; 0x48
  401888:	181b      	adds	r3, r3, r0
  40188a:	416c      	adcs	r4, r5
  40188c:	e9cd 3412 	strd	r3, r4, [sp, #72]	; 0x48
  401890:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401894:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401898:	1912      	adds	r2, r2, r4
  40189a:	416b      	adcs	r3, r5
  40189c:	4614      	mov	r4, r2
  40189e:	461d      	mov	r5, r3
  4018a0:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
  4018a4:	1912      	adds	r2, r2, r4
  4018a6:	416b      	adcs	r3, r5
  4018a8:	4610      	mov	r0, r2
  4018aa:	4619      	mov	r1, r3
  4018ac:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4018b0:	e9cd 012a 	strd	r0, r1, [sp, #168]	; 0xa8
  4018b4:	1880      	adds	r0, r0, r2
  4018b6:	4159      	adcs	r1, r3
  4018b8:	4602      	mov	r2, r0
  4018ba:	460b      	mov	r3, r1
  4018bc:	e9cd 2304 	strd	r2, r3, [sp, #16]

004018c0 <.LBB547>:
  4018c0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  4018c4:	0f03      	lsrs	r3, r0, #28
  4018c6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  4018ca:	f8cd 34c8 	str.w	r3, [sp, #1224]	; 0x4c8
  4018ce:	0f0b      	lsrs	r3, r1, #28
  4018d0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  4018d4:	f8cd 34cc 	str.w	r3, [sp, #1228]	; 0x4cc

004018d8 <.LBB549>:
  4018d8:	078b      	lsls	r3, r1, #30
  4018da:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  4018de:	f8cd 34d4 	str.w	r3, [sp, #1236]	; 0x4d4
  4018e2:	0783      	lsls	r3, r0, #30
  4018e4:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  4018e8:	f8cd 34d0 	str.w	r3, [sp, #1232]	; 0x4d0

004018ec <.LBE549>:
  4018ec:	f50d 6399 	add.w	r3, sp, #1224	; 0x4c8
  4018f0:	e9d3 3400 	ldrd	r3, r4, [r3]
  4018f4:	f50d 629a 	add.w	r2, sp, #1232	; 0x4d0
  4018f8:	e9d2 1200 	ldrd	r1, r2, [r2]
  4018fc:	404b      	eors	r3, r1
  4018fe:	4054      	eors	r4, r2
  401900:	461a      	mov	r2, r3
  401902:	4623      	mov	r3, r4

00401904 <.LBB551>:
  401904:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
  401908:	0669      	lsls	r1, r5, #25
  40190a:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  40190e:	f8cd 14dc 	str.w	r1, [sp, #1244]	; 0x4dc
  401912:	0661      	lsls	r1, r4, #25
  401914:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  401918:	f8cd 14d8 	str.w	r1, [sp, #1240]	; 0x4d8

0040191c <.LBE551>:
  40191c:	f50d 619b 	add.w	r1, sp, #1240	; 0x4d8
  401920:	e9d1 0100 	ldrd	r0, r1, [r1]
  401924:	4050      	eors	r0, r2
  401926:	4059      	eors	r1, r3
  401928:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  40192c:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401930:	4322      	orrs	r2, r4
  401932:	432b      	orrs	r3, r5
  401934:	ea02 0208 	and.w	r2, r2, r8
  401938:	ea03 0309 	and.w	r3, r3, r9
  40193c:	e9cd 232e 	strd	r2, r3, [sp, #184]	; 0xb8
  401940:	e9dd 121a 	ldrd	r1, r2, [sp, #104]	; 0x68
  401944:	4623      	mov	r3, r4
  401946:	4019      	ands	r1, r3
  401948:	402a      	ands	r2, r5
  40194a:	4608      	mov	r0, r1
  40194c:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  401950:	4304      	orrs	r4, r0
  401952:	4315      	orrs	r5, r2
  401954:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  401958:	1912      	adds	r2, r2, r4
  40195a:	416b      	adcs	r3, r5
  40195c:	4619      	mov	r1, r3
  40195e:	e9dd 342a 	ldrd	r3, r4, [sp, #168]	; 0xa8
  401962:	189b      	adds	r3, r3, r2
  401964:	414c      	adcs	r4, r1
  401966:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8

0040196a <.LBB553>:
  40196a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  40196e:	0ba3      	lsrs	r3, r4, #14
  401970:	ea43 4385 	orr.w	r3, r3, r5, lsl #18
  401974:	f8cd 34e0 	str.w	r3, [sp, #1248]	; 0x4e0
  401978:	0bab      	lsrs	r3, r5, #14
  40197a:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  40197e:	f8cd 34e4 	str.w	r3, [sp, #1252]	; 0x4e4

00401982 <.LBB555>:
  401982:	0ca3      	lsrs	r3, r4, #18
  401984:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
  401988:	f8cd 34e8 	str.w	r3, [sp, #1256]	; 0x4e8
  40198c:	0cab      	lsrs	r3, r5, #18
  40198e:	ea43 3384 	orr.w	r3, r3, r4, lsl #14
  401992:	f8cd 34ec 	str.w	r3, [sp, #1260]	; 0x4ec

00401996 <.LBE555>:
  401996:	f50d 639c 	add.w	r3, sp, #1248	; 0x4e0
  40199a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40199e:	f50d 619d 	add.w	r1, sp, #1256	; 0x4e8
  4019a2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4019a6:	4042      	eors	r2, r0
  4019a8:	404b      	eors	r3, r1

004019aa <.LBB557>:
  4019aa:	05e9      	lsls	r1, r5, #23
  4019ac:	ea41 2154 	orr.w	r1, r1, r4, lsr #9
  4019b0:	f8cd 14f4 	str.w	r1, [sp, #1268]	; 0x4f4
  4019b4:	05e1      	lsls	r1, r4, #23
  4019b6:	ea41 2155 	orr.w	r1, r1, r5, lsr #9
  4019ba:	f8cd 14f0 	str.w	r1, [sp, #1264]	; 0x4f0

004019be <.LBE557>:
  4019be:	f50d 619e 	add.w	r1, sp, #1264	; 0x4f0
  4019c2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4019c6:	4050      	eors	r0, r2
  4019c8:	4059      	eors	r1, r3
  4019ca:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  4019ce:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  4019d2:	ea80 030a 	eor.w	r3, r0, sl
  4019d6:	ea81 040b 	eor.w	r4, r1, fp
  4019da:	4625      	mov	r5, r4
  4019dc:	461c      	mov	r4, r3
  4019de:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4019e2:	4022      	ands	r2, r4
  4019e4:	402b      	ands	r3, r5
  4019e6:	4614      	mov	r4, r2
  4019e8:	461d      	mov	r5, r3
  4019ea:	4602      	mov	r2, r0
  4019ec:	460b      	mov	r3, r1
  4019ee:	4062      	eors	r2, r4
  4019f0:	406b      	eors	r3, r5
  4019f2:	4614      	mov	r4, r2
  4019f4:	461d      	mov	r5, r3
  4019f6:	e9d6 2314 	ldrd	r2, r3, [r6, #80]	; 0x50
  4019fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4019fe:	1880      	adds	r0, r0, r2
  401a00:	4159      	adcs	r1, r3
  401a02:	1820      	adds	r0, r4, r0
  401a04:	eb45 0101 	adc.w	r1, r5, r1
  401a08:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401a0c:	2f00      	cmp	r7, #0
  401a0e:	f000 8749 	beq.w	4028a4 <.LCFI3+0x78>

00401a12 <.LBB559>:
  401a12:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
  401a16:	0863      	lsrs	r3, r4, #1
  401a18:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  401a1c:	f8cd 34f8 	str.w	r3, [sp, #1272]	; 0x4f8
  401a20:	086b      	lsrs	r3, r5, #1
  401a22:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  401a26:	f8cd 34fc 	str.w	r3, [sp, #1276]	; 0x4fc

00401a2a <.LBB561>:
  401a2a:	0a23      	lsrs	r3, r4, #8
  401a2c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401a30:	f8cd 3500 	str.w	r3, [sp, #1280]	; 0x500
  401a34:	0a2b      	lsrs	r3, r5, #8
  401a36:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  401a3a:	f8cd 3504 	str.w	r3, [sp, #1284]	; 0x504

00401a3e <.LBE561>:
  401a3e:	f50d 639f 	add.w	r3, sp, #1272	; 0x4f8
  401a42:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a46:	f50d 61a0 	add.w	r1, sp, #1280	; 0x500
  401a4a:	e9d1 0100 	ldrd	r0, r1, [r1]
  401a4e:	4042      	eors	r2, r0
  401a50:	404b      	eors	r3, r1
  401a52:	09e1      	lsrs	r1, r4, #7
  401a54:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  401a58:	9158      	str	r1, [sp, #352]	; 0x160
  401a5a:	09e9      	lsrs	r1, r5, #7
  401a5c:	9159      	str	r1, [sp, #356]	; 0x164
  401a5e:	a958      	add	r1, sp, #352	; 0x160
  401a60:	e9d1 0100 	ldrd	r0, r1, [r1]
  401a64:	4050      	eors	r0, r2
  401a66:	4059      	eors	r1, r3
  401a68:	4602      	mov	r2, r0
  401a6a:	460b      	mov	r3, r1
  401a6c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	; 0x90
  401a70:	1880      	adds	r0, r0, r2
  401a72:	4159      	adcs	r1, r3
  401a74:	4602      	mov	r2, r0
  401a76:	460b      	mov	r3, r1
  401a78:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  401a7c:	1880      	adds	r0, r0, r2
  401a7e:	4159      	adcs	r1, r3
  401a80:	e9cd 0124 	strd	r0, r1, [sp, #144]	; 0x90

00401a84 <.LBB563>:
  401a84:	e9dd 4500 	ldrd	r4, r5, [sp]
  401a88:	0ce1      	lsrs	r1, r4, #19
  401a8a:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  401a8e:	f8cd 1508 	str.w	r1, [sp, #1288]	; 0x508
  401a92:	0ce9      	lsrs	r1, r5, #19
  401a94:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  401a98:	f8cd 150c 	str.w	r1, [sp, #1292]	; 0x50c

00401a9c <.LBB565>:
  401a9c:	00e9      	lsls	r1, r5, #3
  401a9e:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401aa2:	f8cd 1514 	str.w	r1, [sp, #1300]	; 0x514
  401aa6:	00e1      	lsls	r1, r4, #3
  401aa8:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  401aac:	f8cd 1510 	str.w	r1, [sp, #1296]	; 0x510

00401ab0 <.LBE565>:
  401ab0:	f50d 63a1 	add.w	r3, sp, #1288	; 0x508
  401ab4:	e9d3 0100 	ldrd	r0, r1, [r3]
  401ab8:	f50d 63a2 	add.w	r3, sp, #1296	; 0x510
  401abc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ac0:	4050      	eors	r0, r2
  401ac2:	4059      	eors	r1, r3
  401ac4:	09a4      	lsrs	r4, r4, #6
  401ac6:	9d01      	ldr	r5, [sp, #4]
  401ac8:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  401acc:	945a      	str	r4, [sp, #360]	; 0x168
  401ace:	09ac      	lsrs	r4, r5, #6
  401ad0:	945b      	str	r4, [sp, #364]	; 0x16c
  401ad2:	ab5a      	add	r3, sp, #360	; 0x168
  401ad4:	e9d3 4500 	ldrd	r4, r5, [r3]
  401ad8:	4044      	eors	r4, r0
  401ada:	404d      	eors	r5, r1
  401adc:	4620      	mov	r0, r4
  401ade:	e9dd 3424 	ldrd	r3, r4, [sp, #144]	; 0x90
  401ae2:	181b      	adds	r3, r3, r0
  401ae4:	416c      	adcs	r4, r5
  401ae6:	e9cd 3424 	strd	r3, r4, [sp, #144]	; 0x90
  401aea:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401aee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401af2:	1912      	adds	r2, r2, r4
  401af4:	416b      	adcs	r3, r5
  401af6:	4614      	mov	r4, r2
  401af8:	461d      	mov	r5, r3
  401afa:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	; 0x90
  401afe:	1912      	adds	r2, r2, r4
  401b00:	416b      	adcs	r3, r5
  401b02:	461c      	mov	r4, r3
  401b04:	4613      	mov	r3, r2
  401b06:	e9cd 3402 	strd	r3, r4, [sp, #8]
  401b0a:	eb12 0208 	adds.w	r2, r2, r8
  401b0e:	eb44 0309 	adc.w	r3, r4, r9
  401b12:	4690      	mov	r8, r2
  401b14:	4699      	mov	r9, r3

00401b16 <.LBB567>:
  401b16:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  401b1a:	0f23      	lsrs	r3, r4, #28
  401b1c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  401b20:	f8cd 3518 	str.w	r3, [sp, #1304]	; 0x518
  401b24:	0f2b      	lsrs	r3, r5, #28
  401b26:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  401b2a:	f8cd 351c 	str.w	r3, [sp, #1308]	; 0x51c

00401b2e <.LBB569>:
  401b2e:	07ab      	lsls	r3, r5, #30
  401b30:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  401b34:	f8cd 3524 	str.w	r3, [sp, #1316]	; 0x524
  401b38:	07a3      	lsls	r3, r4, #30
  401b3a:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  401b3e:	f8cd 3520 	str.w	r3, [sp, #1312]	; 0x520

00401b42 <.LBE569>:
  401b42:	f50d 63a3 	add.w	r3, sp, #1304	; 0x518
  401b46:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b4a:	f50d 61a4 	add.w	r1, sp, #1312	; 0x520
  401b4e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401b52:	4042      	eors	r2, r0
  401b54:	404b      	eors	r3, r1

00401b56 <.LBB571>:
  401b56:	0669      	lsls	r1, r5, #25
  401b58:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  401b5c:	f8cd 152c 	str.w	r1, [sp, #1324]	; 0x52c
  401b60:	0661      	lsls	r1, r4, #25
  401b62:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  401b66:	f8cd 1528 	str.w	r1, [sp, #1320]	; 0x528

00401b6a <.LBE571>:
  401b6a:	f50d 61a5 	add.w	r1, sp, #1320	; 0x528
  401b6e:	e9d1 0100 	ldrd	r0, r1, [r1]
  401b72:	4050      	eors	r0, r2
  401b74:	4059      	eors	r1, r3
  401b76:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  401b7a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401b7e:	4322      	orrs	r2, r4
  401b80:	432b      	orrs	r3, r5
  401b82:	4610      	mov	r0, r2
  401b84:	4619      	mov	r1, r3
  401b86:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401b8a:	4002      	ands	r2, r0
  401b8c:	400b      	ands	r3, r1
  401b8e:	4610      	mov	r0, r2
  401b90:	4619      	mov	r1, r3
  401b92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401b96:	4022      	ands	r2, r4
  401b98:	402b      	ands	r3, r5
  401b9a:	4302      	orrs	r2, r0
  401b9c:	430b      	orrs	r3, r1
  401b9e:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401ba2:	18a4      	adds	r4, r4, r2
  401ba4:	415d      	adcs	r5, r3
  401ba6:	4620      	mov	r0, r4
  401ba8:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  401bac:	181b      	adds	r3, r3, r0
  401bae:	416c      	adcs	r4, r5
  401bb0:	e9cd 3402 	strd	r3, r4, [sp, #8]

00401bb4 <.LBB573>:
  401bb4:	ea4f 3398 	mov.w	r3, r8, lsr #14
  401bb8:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  401bbc:	f8cd 3530 	str.w	r3, [sp, #1328]	; 0x530
  401bc0:	ea4f 3399 	mov.w	r3, r9, lsr #14
  401bc4:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  401bc8:	f8cd 3534 	str.w	r3, [sp, #1332]	; 0x534

00401bcc <.LBB575>:
  401bcc:	ea4f 4398 	mov.w	r3, r8, lsr #18
  401bd0:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  401bd4:	f8cd 3538 	str.w	r3, [sp, #1336]	; 0x538
  401bd8:	ea4f 4399 	mov.w	r3, r9, lsr #18
  401bdc:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  401be0:	f8cd 353c 	str.w	r3, [sp, #1340]	; 0x53c

00401be4 <.LBE575>:
  401be4:	f50d 63a6 	add.w	r3, sp, #1328	; 0x530
  401be8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401bec:	f50d 61a7 	add.w	r1, sp, #1336	; 0x538
  401bf0:	e9d1 0100 	ldrd	r0, r1, [r1]
  401bf4:	4042      	eors	r2, r0
  401bf6:	404b      	eors	r3, r1

00401bf8 <.LBB577>:
  401bf8:	ea4f 51c9 	mov.w	r1, r9, lsl #23
  401bfc:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  401c00:	f8cd 1544 	str.w	r1, [sp, #1348]	; 0x544
  401c04:	ea4f 51c8 	mov.w	r1, r8, lsl #23
  401c08:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  401c0c:	f8cd 1540 	str.w	r1, [sp, #1344]	; 0x540

00401c10 <.LBE577>:
  401c10:	f50d 61a8 	add.w	r1, sp, #1344	; 0x540
  401c14:	e9d1 0100 	ldrd	r0, r1, [r1]
  401c18:	4050      	eors	r0, r2
  401c1a:	4059      	eors	r1, r3
  401c1c:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  401c20:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  401c24:	ea84 040a 	eor.w	r4, r4, sl
  401c28:	ea85 050b 	eor.w	r5, r5, fp
  401c2c:	ea04 0408 	and.w	r4, r4, r8
  401c30:	ea05 0509 	and.w	r5, r5, r9
  401c34:	ea84 040a 	eor.w	r4, r4, sl
  401c38:	ea85 050b 	eor.w	r5, r5, fp
  401c3c:	e9d6 2316 	ldrd	r2, r3, [r6, #88]	; 0x58
  401c40:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  401c44:	1880      	adds	r0, r0, r2
  401c46:	4159      	adcs	r1, r3
  401c48:	1820      	adds	r0, r4, r0
  401c4a:	eb45 0101 	adc.w	r1, r5, r1
  401c4e:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  401c52:	2f00      	cmp	r7, #0
  401c54:	f000 862c 	beq.w	4028b0 <.LCFI3+0x84>

00401c58 <.LBB579>:
  401c58:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
  401c5c:	0863      	lsrs	r3, r4, #1
  401c5e:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  401c62:	f8cd 3548 	str.w	r3, [sp, #1352]	; 0x548
  401c66:	086b      	lsrs	r3, r5, #1
  401c68:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  401c6c:	f8cd 354c 	str.w	r3, [sp, #1356]	; 0x54c

00401c70 <.LBB581>:
  401c70:	0a23      	lsrs	r3, r4, #8
  401c72:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401c76:	f8cd 3550 	str.w	r3, [sp, #1360]	; 0x550
  401c7a:	0a2b      	lsrs	r3, r5, #8
  401c7c:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  401c80:	f8cd 3554 	str.w	r3, [sp, #1364]	; 0x554

00401c84 <.LBE581>:
  401c84:	f50d 63a9 	add.w	r3, sp, #1352	; 0x548
  401c88:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c8c:	f50d 61aa 	add.w	r1, sp, #1360	; 0x550
  401c90:	e9d1 0100 	ldrd	r0, r1, [r1]
  401c94:	4042      	eors	r2, r0
  401c96:	404b      	eors	r3, r1
  401c98:	09e1      	lsrs	r1, r4, #7
  401c9a:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  401c9e:	915c      	str	r1, [sp, #368]	; 0x170
  401ca0:	09e9      	lsrs	r1, r5, #7
  401ca2:	915d      	str	r1, [sp, #372]	; 0x174
  401ca4:	a95c      	add	r1, sp, #368	; 0x170
  401ca6:	e9d1 0100 	ldrd	r0, r1, [r1]
  401caa:	4050      	eors	r0, r2
  401cac:	4059      	eors	r1, r3
  401cae:	4602      	mov	r2, r0
  401cb0:	460b      	mov	r3, r1
  401cb2:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
  401cb6:	1880      	adds	r0, r0, r2
  401cb8:	4159      	adcs	r1, r3
  401cba:	4602      	mov	r2, r0
  401cbc:	460b      	mov	r3, r1
  401cbe:	e9dd 0122 	ldrd	r0, r1, [sp, #136]	; 0x88
  401cc2:	1880      	adds	r0, r0, r2
  401cc4:	4159      	adcs	r1, r3
  401cc6:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50

00401cca <.LBB583>:
  401cca:	e9dd 4512 	ldrd	r4, r5, [sp, #72]	; 0x48
  401cce:	0ce1      	lsrs	r1, r4, #19
  401cd0:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  401cd4:	f8cd 1558 	str.w	r1, [sp, #1368]	; 0x558
  401cd8:	0ce9      	lsrs	r1, r5, #19
  401cda:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  401cde:	f8cd 155c 	str.w	r1, [sp, #1372]	; 0x55c

00401ce2 <.LBB585>:
  401ce2:	00e9      	lsls	r1, r5, #3
  401ce4:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  401ce8:	f8cd 1564 	str.w	r1, [sp, #1380]	; 0x564
  401cec:	00e1      	lsls	r1, r4, #3
  401cee:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  401cf2:	f8cd 1560 	str.w	r1, [sp, #1376]	; 0x560

00401cf6 <.LBE585>:
  401cf6:	f50d 63ab 	add.w	r3, sp, #1368	; 0x558
  401cfa:	e9d3 0100 	ldrd	r0, r1, [r3]
  401cfe:	f50d 63ac 	add.w	r3, sp, #1376	; 0x560
  401d02:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d06:	4050      	eors	r0, r2
  401d08:	4059      	eors	r1, r3
  401d0a:	09a4      	lsrs	r4, r4, #6
  401d0c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  401d0e:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  401d12:	945e      	str	r4, [sp, #376]	; 0x178
  401d14:	09ac      	lsrs	r4, r5, #6
  401d16:	945f      	str	r4, [sp, #380]	; 0x17c
  401d18:	ab5e      	add	r3, sp, #376	; 0x178
  401d1a:	e9d3 4500 	ldrd	r4, r5, [r3]
  401d1e:	4044      	eors	r4, r0
  401d20:	404d      	eors	r5, r1
  401d22:	4620      	mov	r0, r4
  401d24:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
  401d28:	181b      	adds	r3, r3, r0
  401d2a:	416c      	adcs	r4, r5
  401d2c:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
  401d30:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401d34:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  401d38:	1912      	adds	r2, r2, r4
  401d3a:	416b      	adcs	r3, r5
  401d3c:	4614      	mov	r4, r2
  401d3e:	461d      	mov	r5, r3
  401d40:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
  401d44:	1912      	adds	r2, r2, r4
  401d46:	416b      	adcs	r3, r5
  401d48:	4610      	mov	r0, r2
  401d4a:	4619      	mov	r1, r3
  401d4c:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401d50:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  401d54:	1880      	adds	r0, r0, r2
  401d56:	4159      	adcs	r1, r3
  401d58:	4602      	mov	r2, r0
  401d5a:	460b      	mov	r3, r1
  401d5c:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68

00401d60 <.LBB587>:
  401d60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401d64:	0f03      	lsrs	r3, r0, #28
  401d66:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  401d6a:	f8cd 3568 	str.w	r3, [sp, #1384]	; 0x568
  401d6e:	0f0b      	lsrs	r3, r1, #28
  401d70:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  401d74:	f8cd 356c 	str.w	r3, [sp, #1388]	; 0x56c

00401d78 <.LBB589>:
  401d78:	078b      	lsls	r3, r1, #30
  401d7a:	ea43 0390 	orr.w	r3, r3, r0, lsr #2
  401d7e:	f8cd 3574 	str.w	r3, [sp, #1396]	; 0x574
  401d82:	0783      	lsls	r3, r0, #30
  401d84:	ea43 0391 	orr.w	r3, r3, r1, lsr #2
  401d88:	f8cd 3570 	str.w	r3, [sp, #1392]	; 0x570

00401d8c <.LBE589>:
  401d8c:	f50d 63ad 	add.w	r3, sp, #1384	; 0x568
  401d90:	e9d3 3400 	ldrd	r3, r4, [r3]
  401d94:	f50d 62ae 	add.w	r2, sp, #1392	; 0x570
  401d98:	e9d2 1200 	ldrd	r1, r2, [r2]
  401d9c:	404b      	eors	r3, r1
  401d9e:	4054      	eors	r4, r2
  401da0:	461a      	mov	r2, r3
  401da2:	4623      	mov	r3, r4

00401da4 <.LBB591>:
  401da4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  401da8:	0669      	lsls	r1, r5, #25
  401daa:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  401dae:	f8cd 157c 	str.w	r1, [sp, #1404]	; 0x57c
  401db2:	0661      	lsls	r1, r4, #25
  401db4:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  401db8:	f8cd 1578 	str.w	r1, [sp, #1400]	; 0x578

00401dbc <.LBE591>:
  401dbc:	f50d 61af 	add.w	r1, sp, #1400	; 0x578
  401dc0:	e9d1 0100 	ldrd	r0, r1, [r1]
  401dc4:	4050      	eors	r0, r2
  401dc6:	4059      	eors	r1, r3
  401dc8:	e9cd 012c 	strd	r0, r1, [sp, #176]	; 0xb0
  401dcc:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  401dd0:	4322      	orrs	r2, r4
  401dd2:	432b      	orrs	r3, r5
  401dd4:	4619      	mov	r1, r3
  401dd6:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  401dda:	4013      	ands	r3, r2
  401ddc:	400c      	ands	r4, r1
  401dde:	e9cd 342e 	strd	r3, r4, [sp, #184]	; 0xb8
  401de2:	e9dd 122a 	ldrd	r1, r2, [sp, #168]	; 0xa8
  401de6:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  401dea:	4019      	ands	r1, r3
  401dec:	4022      	ands	r2, r4
  401dee:	4608      	mov	r0, r1
  401df0:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  401df4:	4304      	orrs	r4, r0
  401df6:	4315      	orrs	r5, r2
  401df8:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  401dfc:	1912      	adds	r2, r2, r4
  401dfe:	416b      	adcs	r3, r5
  401e00:	4619      	mov	r1, r3
  401e02:	e9dd 3418 	ldrd	r3, r4, [sp, #96]	; 0x60
  401e06:	189b      	adds	r3, r3, r2
  401e08:	414c      	adcs	r4, r1
  401e0a:	e9cd 342c 	strd	r3, r4, [sp, #176]	; 0xb0

00401e0e <.LBB593>:
  401e0e:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  401e12:	0ba3      	lsrs	r3, r4, #14
  401e14:	ea43 4385 	orr.w	r3, r3, r5, lsl #18
  401e18:	f8cd 3580 	str.w	r3, [sp, #1408]	; 0x580
  401e1c:	0bab      	lsrs	r3, r5, #14
  401e1e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  401e22:	f8cd 3584 	str.w	r3, [sp, #1412]	; 0x584

00401e26 <.LBB595>:
  401e26:	0ca3      	lsrs	r3, r4, #18
  401e28:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
  401e2c:	f8cd 3588 	str.w	r3, [sp, #1416]	; 0x588
  401e30:	0cab      	lsrs	r3, r5, #18
  401e32:	ea43 3384 	orr.w	r3, r3, r4, lsl #14
  401e36:	f8cd 358c 	str.w	r3, [sp, #1420]	; 0x58c

00401e3a <.LBE595>:
        R(12); R(13); R(14); R(15);
  401e3a:	f50d 63b0 	add.w	r3, sp, #1408	; 0x580
  401e3e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e42:	f50d 61b1 	add.w	r1, sp, #1416	; 0x588
  401e46:	e9d1 0100 	ldrd	r0, r1, [r1]
  401e4a:	4042      	eors	r2, r0
  401e4c:	404b      	eors	r3, r1

00401e4e <.LBB597>:
  401e4e:	05e9      	lsls	r1, r5, #23
  401e50:	ea41 2154 	orr.w	r1, r1, r4, lsr #9
  401e54:	f8cd 1594 	str.w	r1, [sp, #1428]	; 0x594
  401e58:	05e1      	lsls	r1, r4, #23
  401e5a:	ea41 2155 	orr.w	r1, r1, r5, lsr #9
  401e5e:	f8cd 1590 	str.w	r1, [sp, #1424]	; 0x590

00401e62 <.LBE597>:
  401e62:	f50d 61b2 	add.w	r1, sp, #1424	; 0x590
  401e66:	e9d1 0100 	ldrd	r0, r1, [r1]
  401e6a:	4050      	eors	r0, r2
  401e6c:	4059      	eors	r1, r3
  401e6e:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  401e72:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401e76:	ea80 0308 	eor.w	r3, r0, r8
  401e7a:	ea81 0409 	eor.w	r4, r1, r9
  401e7e:	4625      	mov	r5, r4
  401e80:	461c      	mov	r4, r3
  401e82:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
  401e86:	4022      	ands	r2, r4
  401e88:	402b      	ands	r3, r5
  401e8a:	4614      	mov	r4, r2
  401e8c:	461d      	mov	r5, r3
  401e8e:	4602      	mov	r2, r0
  401e90:	460b      	mov	r3, r1
  401e92:	4062      	eors	r2, r4
  401e94:	406b      	eors	r3, r5
  401e96:	4614      	mov	r4, r2
  401e98:	461d      	mov	r5, r3
  401e9a:	e9d6 2318 	ldrd	r2, r3, [r6, #96]	; 0x60
  401e9e:	eb12 020a 	adds.w	r2, r2, sl
  401ea2:	eb43 030b 	adc.w	r3, r3, fp
  401ea6:	18a4      	adds	r4, r4, r2
  401ea8:	415d      	adcs	r5, r3
  401eaa:	2f00      	cmp	r7, #0
  401eac:	f000 8506 	beq.w	4028bc <.LCFI3+0x90>

00401eb0 <.LBB599>:
  401eb0:	e9dd ab26 	ldrd	sl, fp, [sp, #152]	; 0x98
  401eb4:	4653      	mov	r3, sl
  401eb6:	085b      	lsrs	r3, r3, #1
  401eb8:	465a      	mov	r2, fp
  401eba:	ea43 73cb 	orr.w	r3, r3, fp, lsl #31
  401ebe:	f8cd 3598 	str.w	r3, [sp, #1432]	; 0x598
  401ec2:	0853      	lsrs	r3, r2, #1
  401ec4:	4652      	mov	r2, sl
  401ec6:	ea43 73ca 	orr.w	r3, r3, sl, lsl #31
  401eca:	f8cd 359c 	str.w	r3, [sp, #1436]	; 0x59c

00401ece <.LBB601>:
  401ece:	0a13      	lsrs	r3, r2, #8
  401ed0:	465a      	mov	r2, fp
  401ed2:	ea43 630b 	orr.w	r3, r3, fp, lsl #24
  401ed6:	f8cd 35a0 	str.w	r3, [sp, #1440]	; 0x5a0
  401eda:	0a13      	lsrs	r3, r2, #8
  401edc:	ea43 630a 	orr.w	r3, r3, sl, lsl #24
  401ee0:	f8cd 35a4 	str.w	r3, [sp, #1444]	; 0x5a4

00401ee4 <.LBE601>:
  401ee4:	f50d 63b3 	add.w	r3, sp, #1432	; 0x598
  401ee8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401eec:	f50d 61b4 	add.w	r1, sp, #1440	; 0x5a0
  401ef0:	e9d1 0100 	ldrd	r0, r1, [r1]
  401ef4:	4042      	eors	r2, r0
  401ef6:	404b      	eors	r3, r1
  401ef8:	4651      	mov	r1, sl
  401efa:	09c9      	lsrs	r1, r1, #7
  401efc:	4658      	mov	r0, fp
  401efe:	ea41 614b 	orr.w	r1, r1, fp, lsl #25
  401f02:	9160      	str	r1, [sp, #384]	; 0x180
  401f04:	09c1      	lsrs	r1, r0, #7
  401f06:	9161      	str	r1, [sp, #388]	; 0x184
  401f08:	a960      	add	r1, sp, #384	; 0x180
  401f0a:	e9d1 0100 	ldrd	r0, r1, [r1]
  401f0e:	4050      	eors	r0, r2
  401f10:	4059      	eors	r1, r3
  401f12:	4602      	mov	r2, r0
  401f14:	460b      	mov	r3, r1
  401f16:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  401f1a:	1880      	adds	r0, r0, r2
  401f1c:	4159      	adcs	r1, r3
  401f1e:	4602      	mov	r2, r0
  401f20:	460b      	mov	r3, r1
  401f22:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  401f26:	1880      	adds	r0, r0, r2
  401f28:	4159      	adcs	r1, r3
  401f2a:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58

00401f2e <.LBB603>:
  401f2e:	e9dd ab24 	ldrd	sl, fp, [sp, #144]	; 0x90
  401f32:	4651      	mov	r1, sl
  401f34:	0cc9      	lsrs	r1, r1, #19
  401f36:	4658      	mov	r0, fp
  401f38:	ea41 314b 	orr.w	r1, r1, fp, lsl #13
  401f3c:	f8cd 15a8 	str.w	r1, [sp, #1448]	; 0x5a8
  401f40:	0cc1      	lsrs	r1, r0, #19
  401f42:	4650      	mov	r0, sl
  401f44:	ea41 314a 	orr.w	r1, r1, sl, lsl #13
  401f48:	f8cd 15ac 	str.w	r1, [sp, #1452]	; 0x5ac

00401f4c <.LBB605>:
  401f4c:	4659      	mov	r1, fp
  401f4e:	00c9      	lsls	r1, r1, #3
  401f50:	ea41 715a 	orr.w	r1, r1, sl, lsr #29
  401f54:	f8cd 15b4 	str.w	r1, [sp, #1460]	; 0x5b4
  401f58:	00c1      	lsls	r1, r0, #3
  401f5a:	ea41 715b 	orr.w	r1, r1, fp, lsr #29
  401f5e:	f8cd 15b0 	str.w	r1, [sp, #1456]	; 0x5b0

00401f62 <.LBE605>:
  401f62:	f50d 63b5 	add.w	r3, sp, #1448	; 0x5a8
  401f66:	e9d3 0100 	ldrd	r0, r1, [r3]
  401f6a:	f50d 63b6 	add.w	r3, sp, #1456	; 0x5b0
  401f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f72:	4050      	eors	r0, r2
  401f74:	4059      	eors	r1, r3
  401f76:	4653      	mov	r3, sl
  401f78:	099b      	lsrs	r3, r3, #6
  401f7a:	465a      	mov	r2, fp
  401f7c:	ea43 638b 	orr.w	r3, r3, fp, lsl #26
  401f80:	9362      	str	r3, [sp, #392]	; 0x188
  401f82:	0993      	lsrs	r3, r2, #6
  401f84:	9363      	str	r3, [sp, #396]	; 0x18c
  401f86:	ab62      	add	r3, sp, #392	; 0x188
  401f88:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f8c:	4042      	eors	r2, r0
  401f8e:	404b      	eors	r3, r1
  401f90:	4610      	mov	r0, r2
  401f92:	4619      	mov	r1, r3
  401f94:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  401f98:	1812      	adds	r2, r2, r0
  401f9a:	414b      	adcs	r3, r1
  401f9c:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  401fa0:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  401fa4:	1912      	adds	r2, r2, r4
  401fa6:	416b      	adcs	r3, r5
  401fa8:	e9dd ab16 	ldrd	sl, fp, [sp, #88]	; 0x58
  401fac:	eb1a 0a02 	adds.w	sl, sl, r2
  401fb0:	eb4b 0b03 	adc.w	fp, fp, r3
  401fb4:	4651      	mov	r1, sl
  401fb6:	465a      	mov	r2, fp
  401fb8:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  401fbc:	e9cd 1218 	strd	r1, r2, [sp, #96]	; 0x60
  401fc0:	eb1a 0103 	adds.w	r1, sl, r3
  401fc4:	eb4b 0204 	adc.w	r2, fp, r4
  401fc8:	460b      	mov	r3, r1
  401fca:	4614      	mov	r4, r2
  401fcc:	e9cd 3406 	strd	r3, r4, [sp, #24]

00401fd0 <.LBB607>:
  401fd0:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  401fd4:	0f23      	lsrs	r3, r4, #28
  401fd6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  401fda:	f8cd 35b8 	str.w	r3, [sp, #1464]	; 0x5b8
  401fde:	0f2b      	lsrs	r3, r5, #28
  401fe0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  401fe4:	f8cd 35bc 	str.w	r3, [sp, #1468]	; 0x5bc

00401fe8 <.LBB609>:
  401fe8:	07ab      	lsls	r3, r5, #30
  401fea:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  401fee:	f8cd 35c4 	str.w	r3, [sp, #1476]	; 0x5c4
  401ff2:	07a3      	lsls	r3, r4, #30
  401ff4:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  401ff8:	f8cd 35c0 	str.w	r3, [sp, #1472]	; 0x5c0

00401ffc <.LBE609>:
  401ffc:	f50d 63b7 	add.w	r3, sp, #1464	; 0x5b8
  402000:	e9d3 2300 	ldrd	r2, r3, [r3]
  402004:	f50d 61b8 	add.w	r1, sp, #1472	; 0x5c0
  402008:	e9d1 ab00 	ldrd	sl, fp, [r1]
  40200c:	ea82 020a 	eor.w	r2, r2, sl
  402010:	ea83 030b 	eor.w	r3, r3, fp

00402014 <.LBB611>:
  402014:	0669      	lsls	r1, r5, #25
  402016:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  40201a:	f8cd 15cc 	str.w	r1, [sp, #1484]	; 0x5cc
  40201e:	0661      	lsls	r1, r4, #25
  402020:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  402024:	f8cd 15c8 	str.w	r1, [sp, #1480]	; 0x5c8

00402028 <.LBE611>:
  402028:	f50d 61b9 	add.w	r1, sp, #1480	; 0x5c8
  40202c:	e9d1 0100 	ldrd	r0, r1, [r1]
  402030:	4050      	eors	r0, r2
  402032:	4059      	eors	r1, r3
  402034:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8
  402038:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40203c:	4610      	mov	r0, r2
  40203e:	4619      	mov	r1, r3
  402040:	4320      	orrs	r0, r4
  402042:	4329      	orrs	r1, r5
  402044:	e9dd ab2a 	ldrd	sl, fp, [sp, #168]	; 0xa8
  402048:	ea0a 0a00 	and.w	sl, sl, r0
  40204c:	ea0b 0b01 	and.w	fp, fp, r1
  402050:	4650      	mov	r0, sl
  402052:	4659      	mov	r1, fp
  402054:	4022      	ands	r2, r4
  402056:	402b      	ands	r3, r5
  402058:	4310      	orrs	r0, r2
  40205a:	4319      	orrs	r1, r3
  40205c:	e9dd 342e 	ldrd	r3, r4, [sp, #184]	; 0xb8
  402060:	181b      	adds	r3, r3, r0
  402062:	414c      	adcs	r4, r1
  402064:	e9dd ab18 	ldrd	sl, fp, [sp, #96]	; 0x60
  402068:	eb1a 0a03 	adds.w	sl, sl, r3
  40206c:	eb4b 0b04 	adc.w	fp, fp, r4

00402070 <.LBB613>:
  402070:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  402074:	0b83      	lsrs	r3, r0, #14
  402076:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  40207a:	f8cd 35d0 	str.w	r3, [sp, #1488]	; 0x5d0
  40207e:	0b8b      	lsrs	r3, r1, #14
  402080:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  402084:	f8cd 35d4 	str.w	r3, [sp, #1492]	; 0x5d4

00402088 <.LBB615>:
  402088:	0c83      	lsrs	r3, r0, #18
  40208a:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  40208e:	f8cd 35d8 	str.w	r3, [sp, #1496]	; 0x5d8
  402092:	0c8b      	lsrs	r3, r1, #18
  402094:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  402098:	f8cd 35dc 	str.w	r3, [sp, #1500]	; 0x5dc

0040209c <.LBE615>:
  40209c:	f50d 63ba 	add.w	r3, sp, #1488	; 0x5d0
  4020a0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4020a4:	f50d 63bb 	add.w	r3, sp, #1496	; 0x5d8
  4020a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4020ac:	4054      	eors	r4, r2
  4020ae:	405d      	eors	r5, r3

004020b0 <.LBB617>:
  4020b0:	05c9      	lsls	r1, r1, #23
  4020b2:	9b06      	ldr	r3, [sp, #24]
  4020b4:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  4020b8:	f8cd 35e4 	str.w	r3, [sp, #1508]	; 0x5e4
  4020bc:	9b06      	ldr	r3, [sp, #24]
  4020be:	05d9      	lsls	r1, r3, #23
  4020c0:	9b07      	ldr	r3, [sp, #28]
  4020c2:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  4020c6:	f8cd 35e0 	str.w	r3, [sp, #1504]	; 0x5e0

004020ca <.LBE617>:
  4020ca:	f50d 63bc 	add.w	r3, sp, #1504	; 0x5e0
  4020ce:	e9d3 2300 	ldrd	r2, r3, [r3]
  4020d2:	4062      	eors	r2, r4
  4020d4:	406b      	eors	r3, r5
  4020d6:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  4020da:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  4020de:	ea80 0008 	eor.w	r0, r0, r8
  4020e2:	ea81 0109 	eor.w	r1, r1, r9
  4020e6:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
  4020ea:	4003      	ands	r3, r0
  4020ec:	400c      	ands	r4, r1
  4020ee:	ea83 0008 	eor.w	r0, r3, r8
  4020f2:	ea84 0109 	eor.w	r1, r4, r9
  4020f6:	e9d6 231a 	ldrd	r2, r3, [r6, #104]	; 0x68
  4020fa:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  4020fe:	18a4      	adds	r4, r4, r2
  402100:	415d      	adcs	r5, r3
  402102:	1904      	adds	r4, r0, r4
  402104:	eb41 0505 	adc.w	r5, r1, r5
  402108:	e9cd 4504 	strd	r4, r5, [sp, #16]
  40210c:	2f00      	cmp	r7, #0
  40210e:	f000 83db 	beq.w	4028c8 <.LCFI3+0x9c>

00402112 <.LBB619>:
  402112:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
  402116:	0863      	lsrs	r3, r4, #1
  402118:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  40211c:	f8cd 35e8 	str.w	r3, [sp, #1512]	; 0x5e8
  402120:	086b      	lsrs	r3, r5, #1
  402122:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  402126:	f8cd 35ec 	str.w	r3, [sp, #1516]	; 0x5ec

0040212a <.LBB621>:
  40212a:	0a23      	lsrs	r3, r4, #8
  40212c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  402130:	f8cd 35f0 	str.w	r3, [sp, #1520]	; 0x5f0
  402134:	0a2b      	lsrs	r3, r5, #8
  402136:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  40213a:	f8cd 35f4 	str.w	r3, [sp, #1524]	; 0x5f4

0040213e <.LBE621>:
  40213e:	f50d 63bd 	add.w	r3, sp, #1512	; 0x5e8
  402142:	e9d3 2300 	ldrd	r2, r3, [r3]
  402146:	f50d 61be 	add.w	r1, sp, #1520	; 0x5f0
  40214a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40214e:	4042      	eors	r2, r0
  402150:	404b      	eors	r3, r1
  402152:	09e1      	lsrs	r1, r4, #7
  402154:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  402158:	9164      	str	r1, [sp, #400]	; 0x190
  40215a:	09e9      	lsrs	r1, r5, #7
  40215c:	9165      	str	r1, [sp, #404]	; 0x194
  40215e:	a964      	add	r1, sp, #400	; 0x190
  402160:	e9d1 0100 	ldrd	r0, r1, [r1]
  402164:	4050      	eors	r0, r2
  402166:	4059      	eors	r1, r3
  402168:	4602      	mov	r2, r0
  40216a:	460b      	mov	r3, r1
  40216c:	e9dd 0126 	ldrd	r0, r1, [sp, #152]	; 0x98
  402170:	1880      	adds	r0, r0, r2
  402172:	4159      	adcs	r1, r3
  402174:	4602      	mov	r2, r0
  402176:	460b      	mov	r3, r1
  402178:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  40217c:	1880      	adds	r0, r0, r2
  40217e:	4159      	adcs	r1, r3
  402180:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98

00402184 <.LBB623>:
  402184:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
  402188:	0ce1      	lsrs	r1, r4, #19
  40218a:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  40218e:	f8cd 15f8 	str.w	r1, [sp, #1528]	; 0x5f8
  402192:	0ce9      	lsrs	r1, r5, #19
  402194:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  402198:	f8cd 15fc 	str.w	r1, [sp, #1532]	; 0x5fc

0040219c <.LBB625>:
  40219c:	00e9      	lsls	r1, r5, #3
  40219e:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  4021a2:	f8cd 1604 	str.w	r1, [sp, #1540]	; 0x604
  4021a6:	00e1      	lsls	r1, r4, #3
  4021a8:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  4021ac:	f8cd 1600 	str.w	r1, [sp, #1536]	; 0x600

004021b0 <.LBE625>:
  4021b0:	f50d 63bf 	add.w	r3, sp, #1528	; 0x5f8
  4021b4:	e9d3 0100 	ldrd	r0, r1, [r3]
  4021b8:	f50d 63c0 	add.w	r3, sp, #1536	; 0x600
  4021bc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4021c0:	4050      	eors	r0, r2
  4021c2:	4059      	eors	r1, r3
  4021c4:	09a4      	lsrs	r4, r4, #6
  4021c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4021c8:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  4021cc:	9466      	str	r4, [sp, #408]	; 0x198
  4021ce:	09ac      	lsrs	r4, r5, #6
  4021d0:	9467      	str	r4, [sp, #412]	; 0x19c
  4021d2:	ab66      	add	r3, sp, #408	; 0x198
  4021d4:	e9d3 4500 	ldrd	r4, r5, [r3]
  4021d8:	4044      	eors	r4, r0
  4021da:	404d      	eors	r5, r1
  4021dc:	4620      	mov	r0, r4
  4021de:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
  4021e2:	181b      	adds	r3, r3, r0
  4021e4:	416c      	adcs	r4, r5
  4021e6:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
  4021ea:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  4021ee:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
  4021f2:	1912      	adds	r2, r2, r4
  4021f4:	416b      	adcs	r3, r5
  4021f6:	4614      	mov	r4, r2
  4021f8:	461d      	mov	r5, r3
  4021fa:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
  4021fe:	1912      	adds	r2, r2, r4
  402200:	416b      	adcs	r3, r5
  402202:	4610      	mov	r0, r2
  402204:	4619      	mov	r1, r3
  402206:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  40220a:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  40220e:	1880      	adds	r0, r0, r2
  402210:	4159      	adcs	r1, r3
  402212:	4602      	mov	r2, r0
  402214:	460b      	mov	r3, r1
  402216:	e9cd 2304 	strd	r2, r3, [sp, #16]

0040221a <.LBB627>:
  40221a:	ea4f 731a 	mov.w	r3, sl, lsr #28
  40221e:	ea43 130b 	orr.w	r3, r3, fp, lsl #4
  402222:	f8cd 3608 	str.w	r3, [sp, #1544]	; 0x608
  402226:	ea4f 731b 	mov.w	r3, fp, lsr #28
  40222a:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
  40222e:	f8cd 360c 	str.w	r3, [sp, #1548]	; 0x60c

00402232 <.LBB629>:
  402232:	ea4f 738b 	mov.w	r3, fp, lsl #30
  402236:	ea43 039a 	orr.w	r3, r3, sl, lsr #2
  40223a:	f8cd 3614 	str.w	r3, [sp, #1556]	; 0x614
  40223e:	ea4f 738a 	mov.w	r3, sl, lsl #30
  402242:	ea43 039b 	orr.w	r3, r3, fp, lsr #2
  402246:	f8cd 3610 	str.w	r3, [sp, #1552]	; 0x610

0040224a <.LBE629>:
  40224a:	f50d 63c1 	add.w	r3, sp, #1544	; 0x608
  40224e:	e9d3 3400 	ldrd	r3, r4, [r3]
  402252:	f50d 62c2 	add.w	r2, sp, #1552	; 0x610
  402256:	e9d2 1200 	ldrd	r1, r2, [r2]
  40225a:	404b      	eors	r3, r1
  40225c:	4054      	eors	r4, r2
  40225e:	461a      	mov	r2, r3
  402260:	4623      	mov	r3, r4

00402262 <.LBB631>:
  402262:	ea4f 614b 	mov.w	r1, fp, lsl #25
  402266:	ea41 11da 	orr.w	r1, r1, sl, lsr #7
  40226a:	f8cd 161c 	str.w	r1, [sp, #1564]	; 0x61c
  40226e:	ea4f 614a 	mov.w	r1, sl, lsl #25
  402272:	ea41 11db 	orr.w	r1, r1, fp, lsr #7
  402276:	f8cd 1618 	str.w	r1, [sp, #1560]	; 0x618

0040227a <.LBE631>:
  40227a:	f50d 61c3 	add.w	r1, sp, #1560	; 0x618
  40227e:	e9d1 4500 	ldrd	r4, r5, [r1]
  402282:	4054      	eors	r4, r2
  402284:	405d      	eors	r5, r3
  402286:	e9cd 452a 	strd	r4, r5, [sp, #168]	; 0xa8
  40228a:	e9dd 452c 	ldrd	r4, r5, [sp, #176]	; 0xb0
  40228e:	ea44 000a 	orr.w	r0, r4, sl
  402292:	ea45 010b 	orr.w	r1, r5, fp
  402296:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40229a:	4002      	ands	r2, r0
  40229c:	400b      	ands	r3, r1
  40229e:	ea04 040a 	and.w	r4, r4, sl
  4022a2:	ea05 050b 	and.w	r5, r5, fp
  4022a6:	4314      	orrs	r4, r2
  4022a8:	431d      	orrs	r5, r3
  4022aa:	e9dd 232a 	ldrd	r2, r3, [sp, #168]	; 0xa8
  4022ae:	1912      	adds	r2, r2, r4
  4022b0:	416b      	adcs	r3, r5
  4022b2:	4619      	mov	r1, r3
  4022b4:	e9dd 3418 	ldrd	r3, r4, [sp, #96]	; 0x60
  4022b8:	189b      	adds	r3, r3, r2
  4022ba:	414c      	adcs	r4, r1
  4022bc:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8

004022c0 <.LBB633>:
  4022c0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4022c4:	0b83      	lsrs	r3, r0, #14
  4022c6:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
  4022ca:	f8cd 3620 	str.w	r3, [sp, #1568]	; 0x620
  4022ce:	0b8b      	lsrs	r3, r1, #14
  4022d0:	ea43 4380 	orr.w	r3, r3, r0, lsl #18
  4022d4:	f8cd 3624 	str.w	r3, [sp, #1572]	; 0x624

004022d8 <.LBB635>:
  4022d8:	0c83      	lsrs	r3, r0, #18
  4022da:	ea43 3381 	orr.w	r3, r3, r1, lsl #14
  4022de:	f8cd 3628 	str.w	r3, [sp, #1576]	; 0x628
  4022e2:	0c8b      	lsrs	r3, r1, #18
  4022e4:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
  4022e8:	f8cd 362c 	str.w	r3, [sp, #1580]	; 0x62c

004022ec <.LBE635>:
  4022ec:	f50d 63c4 	add.w	r3, sp, #1568	; 0x620
  4022f0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4022f4:	f50d 63c5 	add.w	r3, sp, #1576	; 0x628
  4022f8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4022fc:	4054      	eors	r4, r2
  4022fe:	405d      	eors	r5, r3

00402300 <.LBB637>:
  402300:	05c9      	lsls	r1, r1, #23
  402302:	9b04      	ldr	r3, [sp, #16]
  402304:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  402308:	f8cd 3634 	str.w	r3, [sp, #1588]	; 0x634
  40230c:	9b04      	ldr	r3, [sp, #16]
  40230e:	05d9      	lsls	r1, r3, #23
  402310:	9b05      	ldr	r3, [sp, #20]
  402312:	ea41 2353 	orr.w	r3, r1, r3, lsr #9
  402316:	f8cd 3630 	str.w	r3, [sp, #1584]	; 0x630

0040231a <.LBE637>:
  40231a:	f50d 63c6 	add.w	r3, sp, #1584	; 0x630
  40231e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402322:	4062      	eors	r2, r4
  402324:	406b      	eors	r3, r5
  402326:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
  40232a:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
  40232e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  402332:	4050      	eors	r0, r2
  402334:	4059      	eors	r1, r3
  402336:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
  40233a:	4003      	ands	r3, r0
  40233c:	400c      	ands	r4, r1
  40233e:	4618      	mov	r0, r3
  402340:	4621      	mov	r1, r4
  402342:	e9dd 341a 	ldrd	r3, r4, [sp, #104]	; 0x68
  402346:	4043      	eors	r3, r0
  402348:	404c      	eors	r4, r1
  40234a:	4618      	mov	r0, r3
  40234c:	e9d6 231c 	ldrd	r2, r3, [r6, #112]	; 0x70
  402350:	eb18 0802 	adds.w	r8, r8, r2
  402354:	eb49 0903 	adc.w	r9, r9, r3
  402358:	eb18 0800 	adds.w	r8, r8, r0
  40235c:	eb49 0904 	adc.w	r9, r9, r4
  402360:	2f00      	cmp	r7, #0
  402362:	f000 82b6 	beq.w	4028d2 <.LCFI3+0xa6>

00402366 <.LBB639>:
  402366:	e9dd 4528 	ldrd	r4, r5, [sp, #160]	; 0xa0
  40236a:	0863      	lsrs	r3, r4, #1
  40236c:	ea43 73c5 	orr.w	r3, r3, r5, lsl #31
  402370:	f8cd 3638 	str.w	r3, [sp, #1592]	; 0x638
  402374:	086b      	lsrs	r3, r5, #1
  402376:	ea43 73c4 	orr.w	r3, r3, r4, lsl #31
  40237a:	f8cd 363c 	str.w	r3, [sp, #1596]	; 0x63c

0040237e <.LBB641>:
  40237e:	0a23      	lsrs	r3, r4, #8
  402380:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  402384:	f8cd 3640 	str.w	r3, [sp, #1600]	; 0x640
  402388:	0a2b      	lsrs	r3, r5, #8
  40238a:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  40238e:	f8cd 3644 	str.w	r3, [sp, #1604]	; 0x644

00402392 <.LBE641>:
  402392:	f50d 63c7 	add.w	r3, sp, #1592	; 0x638
  402396:	e9d3 2300 	ldrd	r2, r3, [r3]
  40239a:	f50d 61c8 	add.w	r1, sp, #1600	; 0x640
  40239e:	e9d1 0100 	ldrd	r0, r1, [r1]
  4023a2:	4042      	eors	r2, r0
  4023a4:	404b      	eors	r3, r1
  4023a6:	09e1      	lsrs	r1, r4, #7
  4023a8:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4023ac:	9168      	str	r1, [sp, #416]	; 0x1a0
  4023ae:	09e9      	lsrs	r1, r5, #7
  4023b0:	9169      	str	r1, [sp, #420]	; 0x1a4
  4023b2:	a968      	add	r1, sp, #416	; 0x1a0
  4023b4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4023b8:	4050      	eors	r0, r2
  4023ba:	4059      	eors	r1, r3
  4023bc:	4602      	mov	r2, r0
  4023be:	460b      	mov	r3, r1
  4023c0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  4023c4:	1880      	adds	r0, r0, r2
  4023c6:	4159      	adcs	r1, r3
  4023c8:	4602      	mov	r2, r0
  4023ca:	460b      	mov	r3, r1
  4023cc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4023d0:	1880      	adds	r0, r0, r2
  4023d2:	4159      	adcs	r1, r3
  4023d4:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30

004023d8 <.LBB643>:
  4023d8:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
  4023dc:	0ce1      	lsrs	r1, r4, #19
  4023de:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  4023e2:	f8cd 1648 	str.w	r1, [sp, #1608]	; 0x648
  4023e6:	0ce9      	lsrs	r1, r5, #19
  4023e8:	ea41 3144 	orr.w	r1, r1, r4, lsl #13
  4023ec:	f8cd 164c 	str.w	r1, [sp, #1612]	; 0x64c

004023f0 <.LBB645>:
  4023f0:	00e9      	lsls	r1, r5, #3
  4023f2:	ea41 7154 	orr.w	r1, r1, r4, lsr #29
  4023f6:	f8cd 1654 	str.w	r1, [sp, #1620]	; 0x654
  4023fa:	00e1      	lsls	r1, r4, #3
  4023fc:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  402400:	f8cd 1650 	str.w	r1, [sp, #1616]	; 0x650

00402404 <.LBE645>:
  402404:	f50d 63c9 	add.w	r3, sp, #1608	; 0x648
  402408:	e9d3 0100 	ldrd	r0, r1, [r3]
  40240c:	f50d 63ca 	add.w	r3, sp, #1616	; 0x650
  402410:	e9d3 2300 	ldrd	r2, r3, [r3]
  402414:	4050      	eors	r0, r2
  402416:	4059      	eors	r1, r3
  402418:	09a4      	lsrs	r4, r4, #6
  40241a:	9d17      	ldr	r5, [sp, #92]	; 0x5c
  40241c:	ea44 6485 	orr.w	r4, r4, r5, lsl #26
  402420:	946a      	str	r4, [sp, #424]	; 0x1a8
  402422:	09ac      	lsrs	r4, r5, #6
  402424:	946b      	str	r4, [sp, #428]	; 0x1ac
  402426:	ab6a      	add	r3, sp, #424	; 0x1a8
  402428:	e9d3 4500 	ldrd	r4, r5, [r3]
  40242c:	4044      	eors	r4, r0
  40242e:	404d      	eors	r5, r1
  402430:	4620      	mov	r0, r4
  402432:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
  402436:	181b      	adds	r3, r3, r0
  402438:	416c      	adcs	r4, r5
  40243a:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
  40243e:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  402442:	eb14 0408 	adds.w	r4, r4, r8
  402446:	eb45 0509 	adc.w	r5, r5, r9
  40244a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  40244e:	1912      	adds	r2, r2, r4
  402450:	416b      	adcs	r3, r5
  402452:	461c      	mov	r4, r3
  402454:	4613      	mov	r3, r2
  402456:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  40245a:	e9cd 3402 	strd	r3, r4, [sp, #8]
  40245e:	eb12 0208 	adds.w	r2, r2, r8
  402462:	eb44 0309 	adc.w	r3, r4, r9
  402466:	4690      	mov	r8, r2
  402468:	4699      	mov	r9, r3

0040246a <.LBB647>:
  40246a:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  40246e:	0f23      	lsrs	r3, r4, #28
  402470:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  402474:	f8cd 3658 	str.w	r3, [sp, #1624]	; 0x658
  402478:	0f2b      	lsrs	r3, r5, #28
  40247a:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  40247e:	f8cd 365c 	str.w	r3, [sp, #1628]	; 0x65c

00402482 <.LBB649>:
  402482:	07ab      	lsls	r3, r5, #30
  402484:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  402488:	f8cd 3664 	str.w	r3, [sp, #1636]	; 0x664
  40248c:	07a3      	lsls	r3, r4, #30
  40248e:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  402492:	f8cd 3660 	str.w	r3, [sp, #1632]	; 0x660

00402496 <.LBE649>:
  402496:	f50d 63cb 	add.w	r3, sp, #1624	; 0x658
  40249a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40249e:	f50d 61cc 	add.w	r1, sp, #1632	; 0x660
  4024a2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4024a6:	4042      	eors	r2, r0
  4024a8:	404b      	eors	r3, r1

004024aa <.LBB651>:
  4024aa:	0669      	lsls	r1, r5, #25
  4024ac:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  4024b0:	f8cd 166c 	str.w	r1, [sp, #1644]	; 0x66c
  4024b4:	0661      	lsls	r1, r4, #25
  4024b6:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  4024ba:	f8cd 1668 	str.w	r1, [sp, #1640]	; 0x668

004024be <.LBE651>:
  4024be:	f50d 61cd 	add.w	r1, sp, #1640	; 0x668
  4024c2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4024c6:	4050      	eors	r0, r2
  4024c8:	4059      	eors	r1, r3
  4024ca:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  4024ce:	ea44 000a 	orr.w	r0, r4, sl
  4024d2:	ea45 010b 	orr.w	r1, r5, fp
  4024d6:	e9dd 232c 	ldrd	r2, r3, [sp, #176]	; 0xb0
  4024da:	4002      	ands	r2, r0
  4024dc:	400b      	ands	r3, r1
  4024de:	ea04 040a 	and.w	r4, r4, sl
  4024e2:	ea05 050b 	and.w	r5, r5, fp
  4024e6:	4314      	orrs	r4, r2
  4024e8:	431d      	orrs	r5, r3
  4024ea:	4620      	mov	r0, r4
  4024ec:	4629      	mov	r1, r5
  4024ee:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  4024f2:	1824      	adds	r4, r4, r0
  4024f4:	414d      	adcs	r5, r1
  4024f6:	4620      	mov	r0, r4
  4024f8:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  4024fc:	181b      	adds	r3, r3, r0
  4024fe:	416c      	adcs	r4, r5
  402500:	e9cd 3418 	strd	r3, r4, [sp, #96]	; 0x60

00402504 <.LBB653>:
  402504:	ea4f 3398 	mov.w	r3, r8, lsr #14
  402508:	ea43 4389 	orr.w	r3, r3, r9, lsl #18
  40250c:	f8cd 3670 	str.w	r3, [sp, #1648]	; 0x670
  402510:	ea4f 3399 	mov.w	r3, r9, lsr #14
  402514:	ea43 4388 	orr.w	r3, r3, r8, lsl #18
  402518:	f8cd 3674 	str.w	r3, [sp, #1652]	; 0x674

0040251c <.LBB655>:
  40251c:	ea4f 4398 	mov.w	r3, r8, lsr #18
  402520:	ea43 3389 	orr.w	r3, r3, r9, lsl #14
  402524:	f8cd 3678 	str.w	r3, [sp, #1656]	; 0x678
  402528:	ea4f 4399 	mov.w	r3, r9, lsr #18
  40252c:	ea43 3388 	orr.w	r3, r3, r8, lsl #14
  402530:	f8cd 367c 	str.w	r3, [sp, #1660]	; 0x67c

00402534 <.LBE655>:
  402534:	f50d 63ce 	add.w	r3, sp, #1648	; 0x670
  402538:	e9d3 2300 	ldrd	r2, r3, [r3]
  40253c:	f50d 61cf 	add.w	r1, sp, #1656	; 0x678
  402540:	e9d1 0100 	ldrd	r0, r1, [r1]
  402544:	4042      	eors	r2, r0
  402546:	404b      	eors	r3, r1

00402548 <.LBB657>:
  402548:	ea4f 51c9 	mov.w	r1, r9, lsl #23
  40254c:	ea41 2158 	orr.w	r1, r1, r8, lsr #9
  402550:	f8cd 1684 	str.w	r1, [sp, #1668]	; 0x684
  402554:	ea4f 51c8 	mov.w	r1, r8, lsl #23
  402558:	ea41 2159 	orr.w	r1, r1, r9, lsr #9
  40255c:	f8cd 1680 	str.w	r1, [sp, #1664]	; 0x680

00402560 <.LBE657>:
  402560:	f50d 61d0 	add.w	r1, sp, #1664	; 0x680
  402564:	e9d1 0100 	ldrd	r0, r1, [r1]
  402568:	4050      	eors	r0, r2
  40256a:	4059      	eors	r1, r3
  40256c:	e9cd 012e 	strd	r0, r1, [sp, #184]	; 0xb8
  402570:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  402574:	4602      	mov	r2, r0
  402576:	460b      	mov	r3, r1
  402578:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  40257c:	4062      	eors	r2, r4
  40257e:	406b      	eors	r3, r5
  402580:	ea02 0208 	and.w	r2, r2, r8
  402584:	ea03 0309 	and.w	r3, r3, r9
  402588:	4050      	eors	r0, r2
  40258a:	4059      	eors	r1, r3
  40258c:	4602      	mov	r2, r0
  40258e:	460b      	mov	r3, r1
  402590:	e9d6 011e 	ldrd	r0, r1, [r6, #120]	; 0x78
  402594:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  402598:	1824      	adds	r4, r4, r0
  40259a:	414d      	adcs	r5, r1
  40259c:	1914      	adds	r4, r2, r4
  40259e:	eb43 0505 	adc.w	r5, r3, r5
  4025a2:	e9cd 4502 	strd	r4, r5, [sp, #8]
  4025a6:	2f00      	cmp	r7, #0
  4025a8:	f000 8198 	beq.w	4028dc <.LCFI3+0xb0>

004025ac <.LBB659>:
  4025ac:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
  4025b0:	0843      	lsrs	r3, r0, #1
  4025b2:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
  4025b6:	f8cd 3688 	str.w	r3, [sp, #1672]	; 0x688
  4025ba:	084b      	lsrs	r3, r1, #1
  4025bc:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
  4025c0:	f8cd 368c 	str.w	r3, [sp, #1676]	; 0x68c

004025c4 <.LBB661>:
  4025c4:	0a03      	lsrs	r3, r0, #8
  4025c6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
  4025ca:	f8cd 3690 	str.w	r3, [sp, #1680]	; 0x690
  4025ce:	0a0b      	lsrs	r3, r1, #8
  4025d0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  4025d4:	f8cd 3694 	str.w	r3, [sp, #1684]	; 0x694

004025d8 <.LBE661>:
  4025d8:	f50d 63d1 	add.w	r3, sp, #1672	; 0x688
  4025dc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4025e0:	f50d 64d2 	add.w	r4, sp, #1680	; 0x690
  4025e4:	e9d4 4500 	ldrd	r4, r5, [r4]
  4025e8:	4062      	eors	r2, r4
  4025ea:	406b      	eors	r3, r5
  4025ec:	460d      	mov	r5, r1
  4025ee:	09c1      	lsrs	r1, r0, #7
  4025f0:	ea41 6145 	orr.w	r1, r1, r5, lsl #25
  4025f4:	916c      	str	r1, [sp, #432]	; 0x1b0
  4025f6:	09e9      	lsrs	r1, r5, #7
  4025f8:	916d      	str	r1, [sp, #436]	; 0x1b4
  4025fa:	a96c      	add	r1, sp, #432	; 0x1b0
  4025fc:	e9d1 0100 	ldrd	r0, r1, [r1]
  402600:	4050      	eors	r0, r2
  402602:	4059      	eors	r1, r3
  402604:	4602      	mov	r2, r0
  402606:	460b      	mov	r3, r1
  402608:	e9dd 0128 	ldrd	r0, r1, [sp, #160]	; 0xa0
  40260c:	1880      	adds	r0, r0, r2
  40260e:	4159      	adcs	r1, r3
  402610:	4602      	mov	r2, r0
  402612:	460b      	mov	r3, r1
  402614:	e9dd 0100 	ldrd	r0, r1, [sp]
  402618:	1880      	adds	r0, r0, r2
  40261a:	4159      	adcs	r1, r3
  40261c:	e9cd 011a 	strd	r0, r1, [sp, #104]	; 0x68

00402620 <.LBB663>:
  402620:	e9dd 5626 	ldrd	r5, r6, [sp, #152]	; 0x98
  402624:	0ce9      	lsrs	r1, r5, #19
  402626:	ea41 3146 	orr.w	r1, r1, r6, lsl #13
  40262a:	f8cd 1698 	str.w	r1, [sp, #1688]	; 0x698
  40262e:	0cf1      	lsrs	r1, r6, #19
  402630:	ea41 3145 	orr.w	r1, r1, r5, lsl #13
  402634:	f8cd 169c 	str.w	r1, [sp, #1692]	; 0x69c

00402638 <.LBB665>:
  402638:	00f1      	lsls	r1, r6, #3
  40263a:	ea41 7155 	orr.w	r1, r1, r5, lsr #29
  40263e:	f8cd 16a4 	str.w	r1, [sp, #1700]	; 0x6a4
  402642:	00e9      	lsls	r1, r5, #3
  402644:	ea41 7156 	orr.w	r1, r1, r6, lsr #29
  402648:	f8cd 16a0 	str.w	r1, [sp, #1696]	; 0x6a0

0040264c <.LBE665>:
  40264c:	f50d 63d3 	add.w	r3, sp, #1688	; 0x698
  402650:	e9d3 0100 	ldrd	r0, r1, [r3]
  402654:	f50d 63d4 	add.w	r3, sp, #1696	; 0x6a0
  402658:	e9d3 3400 	ldrd	r3, r4, [r3]
  40265c:	4058      	eors	r0, r3
  40265e:	4061      	eors	r1, r4
  402660:	462c      	mov	r4, r5
  402662:	4635      	mov	r5, r6
  402664:	09a6      	lsrs	r6, r4, #6
  402666:	4633      	mov	r3, r6
  402668:	ea43 6685 	orr.w	r6, r3, r5, lsl #26
  40266c:	966e      	str	r6, [sp, #440]	; 0x1b8
  40266e:	09ae      	lsrs	r6, r5, #6
  402670:	966f      	str	r6, [sp, #444]	; 0x1bc
  402672:	ab6e      	add	r3, sp, #440	; 0x1b8
  402674:	e9d3 3400 	ldrd	r3, r4, [r3]
  402678:	4043      	eors	r3, r0
  40267a:	404c      	eors	r4, r1
  40267c:	4618      	mov	r0, r3
  40267e:	4621      	mov	r1, r4
  402680:	e9dd 341a 	ldrd	r3, r4, [sp, #104]	; 0x68
  402684:	181b      	adds	r3, r3, r0
  402686:	414c      	adcs	r4, r1
  402688:	e9cd 3428 	strd	r3, r4, [sp, #160]	; 0xa0
  40268c:	e9dd 452e 	ldrd	r4, r5, [sp, #184]	; 0xb8
  402690:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  402694:	1912      	adds	r2, r2, r4
  402696:	416b      	adcs	r3, r5
  402698:	4614      	mov	r4, r2
  40269a:	461d      	mov	r5, r3
  40269c:	e9dd 2328 	ldrd	r2, r3, [sp, #160]	; 0xa0
  4026a0:	1912      	adds	r2, r2, r4
  4026a2:	416b      	adcs	r3, r5
  4026a4:	4611      	mov	r1, r2
  4026a6:	461a      	mov	r2, r3
  4026a8:	e9dd 342c 	ldrd	r3, r4, [sp, #176]	; 0xb0
  4026ac:	e9cd 121a 	strd	r1, r2, [sp, #104]	; 0x68
  4026b0:	18c9      	adds	r1, r1, r3
  4026b2:	4162      	adcs	r2, r4
  4026b4:	460b      	mov	r3, r1
  4026b6:	4614      	mov	r4, r2
  4026b8:	e9cd 3402 	strd	r3, r4, [sp, #8]

004026bc <.LBB667>:
  4026bc:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  4026c0:	0f23      	lsrs	r3, r4, #28
  4026c2:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  4026c6:	f8cd 36a8 	str.w	r3, [sp, #1704]	; 0x6a8
  4026ca:	0f2b      	lsrs	r3, r5, #28
  4026cc:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
  4026d0:	f8cd 36ac 	str.w	r3, [sp, #1708]	; 0x6ac

004026d4 <.LBB669>:
  4026d4:	07ab      	lsls	r3, r5, #30
  4026d6:	ea43 0394 	orr.w	r3, r3, r4, lsr #2
  4026da:	f8cd 36b4 	str.w	r3, [sp, #1716]	; 0x6b4
  4026de:	07a3      	lsls	r3, r4, #30
  4026e0:	ea43 0395 	orr.w	r3, r3, r5, lsr #2
  4026e4:	f8cd 36b0 	str.w	r3, [sp, #1712]	; 0x6b0

004026e8 <.LBE669>:
  4026e8:	f50d 63d5 	add.w	r3, sp, #1704	; 0x6a8
  4026ec:	e9d3 2300 	ldrd	r2, r3, [r3]
  4026f0:	f50d 61d6 	add.w	r1, sp, #1712	; 0x6b0
  4026f4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4026f8:	4042      	eors	r2, r0
  4026fa:	404b      	eors	r3, r1

004026fc <.LBB671>:
  4026fc:	0669      	lsls	r1, r5, #25
  4026fe:	ea41 11d4 	orr.w	r1, r1, r4, lsr #7
  402702:	f8cd 16bc 	str.w	r1, [sp, #1724]	; 0x6bc
  402706:	0661      	lsls	r1, r4, #25
  402708:	ea41 11d5 	orr.w	r1, r1, r5, lsr #7
  40270c:	f8cd 16b8 	str.w	r1, [sp, #1720]	; 0x6b8

00402710 <.LBE671>:
  402710:	f50d 61d7 	add.w	r1, sp, #1720	; 0x6b8
  402714:	e9d1 4500 	ldrd	r4, r5, [r1]
  402718:	4054      	eors	r4, r2
  40271a:	405d      	eors	r5, r3
  40271c:	e9cd 452c 	strd	r4, r5, [sp, #176]	; 0xb0
  402720:	e9dd 562a 	ldrd	r5, r6, [sp, #168]	; 0xa8
  402724:	462a      	mov	r2, r5
  402726:	4633      	mov	r3, r6
  402728:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	; 0x60
  40272c:	4302      	orrs	r2, r0
  40272e:	430b      	orrs	r3, r1
  402730:	ea02 000a 	and.w	r0, r2, sl
  402734:	ea03 010b 	and.w	r1, r3, fp
  402738:	e9dd 3418 	ldrd	r3, r4, [sp, #96]	; 0x60
  40273c:	401d      	ands	r5, r3
  40273e:	4026      	ands	r6, r4
  402740:	4305      	orrs	r5, r0
  402742:	430e      	orrs	r6, r1
  402744:	e9dd 342c 	ldrd	r3, r4, [sp, #176]	; 0xb0
  402748:	195b      	adds	r3, r3, r5
  40274a:	4174      	adcs	r4, r6
  40274c:	4621      	mov	r1, r4
  40274e:	e9dd 451a 	ldrd	r4, r5, [sp, #104]	; 0x68
  402752:	18e4      	adds	r4, r4, r3
  402754:	414d      	adcs	r5, r1
    for (j = 0; j < 80; j += 16) {
  402756:	3710      	adds	r7, #16
  402758:	f10e 0e80 	add.w	lr, lr, #128	; 0x80
  40275c:	2f50      	cmp	r7, #80	; 0x50
  40275e:	f47d adc2 	bne.w	4002e6 <.LBB353>
    }
#endif /* USE_SLOW_SHA2 */

    /* Add the working vars back into digest */

    sha512->digest[0] += a(0);
  402762:	f8dd 06cc 	ldr.w	r0, [sp, #1740]	; 0x6cc
  402766:	e9d0 2306 	ldrd	r2, r3, [r0, #24]
  40276a:	18a4      	adds	r4, r4, r2
  40276c:	415d      	adcs	r5, r3
  40276e:	4622      	mov	r2, r4
  402770:	462b      	mov	r3, r5
  402772:	e9c0 2306 	strd	r2, r3, [r0, #24]
    sha512->digest[1] += b(0);
  402776:	e9d0 2308 	ldrd	r2, r3, [r0, #32]
  40277a:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
  40277e:	18a4      	adds	r4, r4, r2
  402780:	415d      	adcs	r5, r3
  402782:	4622      	mov	r2, r4
  402784:	462b      	mov	r3, r5
  402786:	e9c0 2308 	strd	r2, r3, [r0, #32]
    sha512->digest[2] += c(0);
  40278a:	e9d0 230a 	ldrd	r2, r3, [r0, #40]	; 0x28
  40278e:	e9dd 452a 	ldrd	r4, r5, [sp, #168]	; 0xa8
  402792:	18a4      	adds	r4, r4, r2
  402794:	415d      	adcs	r5, r3
  402796:	4622      	mov	r2, r4
  402798:	462b      	mov	r3, r5
  40279a:	e9c0 230a 	strd	r2, r3, [r0, #40]	; 0x28
    sha512->digest[3] += d(0);
  40279e:	e9d0 230c 	ldrd	r2, r3, [r0, #48]	; 0x30
  4027a2:	eb12 020a 	adds.w	r2, r2, sl
  4027a6:	eb43 030b 	adc.w	r3, r3, fp
  4027aa:	e9c0 230c 	strd	r2, r3, [r0, #48]	; 0x30
    sha512->digest[4] += e(0);
  4027ae:	e9d0 230e 	ldrd	r2, r3, [r0, #56]	; 0x38
  4027b2:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  4027b6:	18a4      	adds	r4, r4, r2
  4027b8:	415d      	adcs	r5, r3
  4027ba:	4622      	mov	r2, r4
  4027bc:	462b      	mov	r3, r5
  4027be:	e9c0 230e 	strd	r2, r3, [r0, #56]	; 0x38
    sha512->digest[5] += f(0);
  4027c2:	e9d0 2310 	ldrd	r2, r3, [r0, #64]	; 0x40
  4027c6:	eb12 0208 	adds.w	r2, r2, r8
  4027ca:	eb43 0309 	adc.w	r3, r3, r9
  4027ce:	e9c0 2310 	strd	r2, r3, [r0, #64]	; 0x40
    sha512->digest[6] += g(0);
  4027d2:	e9d0 2312 	ldrd	r2, r3, [r0, #72]	; 0x48
  4027d6:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  4027da:	18a4      	adds	r4, r4, r2
  4027dc:	415d      	adcs	r5, r3
  4027de:	4622      	mov	r2, r4
  4027e0:	462b      	mov	r3, r5
  4027e2:	e9c0 2312 	strd	r2, r3, [r0, #72]	; 0x48
    sha512->digest[7] += h(0);
  4027e6:	e9d0 2314 	ldrd	r2, r3, [r0, #80]	; 0x50
  4027ea:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
  4027ee:	18a4      	adds	r4, r4, r2
  4027f0:	415d      	adcs	r5, r3
  4027f2:	4622      	mov	r2, r4
  4027f4:	462b      	mov	r3, r5
  4027f6:	e9c0 2314 	strd	r2, r3, [r0, #80]	; 0x50

004027fa <.LBB673>:


/* Make sure compiler doesn't skip */
STATIC INLINE void ForceZero(const void* mem, word32 len)
{
    volatile byte* z = (volatile byte*)mem;
  4027fa:	f50d 63da 	add.w	r3, sp, #1744	; 0x6d0

004027fe <.LVL8>:

    for (w = (volatile word64*)z; len >= sizeof(*w); len -= sizeof(*w))
        *w++ = 0;
    z = (volatile byte*)w;
#endif
    while (len--) *z++ = 0;
  4027fe:	2000      	movs	r0, #0
  402800:	f50d 61ea 	add.w	r1, sp, #1872	; 0x750

00402804 <.LVL9>:
  402804:	1c5a      	adds	r2, r3, #1

00402806 <.LVL10>:
  402806:	7018      	strb	r0, [r3, #0]

00402808 <.LVL11>:
  402808:	4613      	mov	r3, r2
  40280a:	428a      	cmp	r2, r1
  40280c:	d1fa      	bne.n	402804 <.LVL9>
  40280e:	f50d 63ea 	add.w	r3, sp, #1872	; 0x750

00402812 <.LBB675>:
  402812:	2100      	movs	r1, #0

00402814 <.LVL12>:
  402814:	1c5a      	adds	r2, r3, #1

00402816 <.LVL13>:
  402816:	7019      	strb	r1, [r3, #0]

00402818 <.LVL14>:
  402818:	4613      	mov	r3, r2
  40281a:	f50d 60f2 	add.w	r0, sp, #1936	; 0x790
  40281e:	4282      	cmp	r2, r0
  402820:	d1f8      	bne.n	402814 <.LVL12>

00402822 <.LBE675>:
#ifdef WOLFSSL_SMALL_STACK
    XFREE(W, NULL, DYNAMIC_TYPE_TMP_BUFFER);
#endif

    return 0;
}
  402822:	2000      	movs	r0, #0
  402824:	f20d 7d94 	addw	sp, sp, #1940	; 0x794

00402828 <.LCFI2>:
  402828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040282c <.LCFI3>:
        R( 0); R( 1); R( 2); R( 3);
  40282c:	e9dc 2316 	ldrd	r2, r3, [ip, #88]	; 0x58
  402830:	e9cd 231c 	strd	r2, r3, [sp, #112]	; 0x70
  402834:	f7fd be08 	b.w	400448 <.LBE365+0x52>
  402838:	e9dc 2318 	ldrd	r2, r3, [ip, #96]	; 0x60
  40283c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  402840:	f7fd bf19 	b.w	400676 <.LBE385+0x3e>
  402844:	e9dc 231a 	ldrd	r2, r3, [ip, #104]	; 0x68
  402848:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  40284c:	f7fe b831 	b.w	4008b2 <.LBE405+0x3e>
  402850:	e9dc 231c 	ldrd	r2, r3, [ip, #112]	; 0x70
  402854:	e9cd 2320 	strd	r2, r3, [sp, #128]	; 0x80
  402858:	f7fe b95c 	b.w	400b14 <.LBE425+0x3c>
        R( 4); R( 5); R( 6); R( 7);
  40285c:	e9dc 231e 	ldrd	r2, r3, [ip, #120]	; 0x78
  402860:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  402864:	f7fe ba7d 	b.w	400d62 <.LBE445+0x3e>
  402868:	e9dc 2320 	ldrd	r2, r3, [ip, #128]	; 0x80
  40286c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  402870:	f7fe bb8e 	b.w	400f90 <.LBE465+0x3a>
  402874:	e9dc 2322 	ldrd	r2, r3, [ip, #136]	; 0x88
  402878:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  40287c:	f7fe bca5 	b.w	4011ca <.LBE485+0x40>
  402880:	e9dc 2324 	ldrd	r2, r3, [ip, #144]	; 0x90
  402884:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  402888:	f7fe bdbe 	b.w	401408 <.LBE505+0x3e>
        R( 8); R( 9); R(10); R(11);
  40288c:	e9dc 3426 	ldrd	r3, r4, [ip, #152]	; 0x98
  402890:	e9cd 3400 	strd	r3, r4, [sp]
  402894:	f7fe bed9 	b.w	40164a <.LBE525+0x3a>
  402898:	e9dc 3428 	ldrd	r3, r4, [ip, #160]	; 0xa0
  40289c:	e9cd 3412 	strd	r3, r4, [sp, #72]	; 0x48
  4028a0:	f7fe bff6 	b.w	401890 <.LBE545+0x3a>
  4028a4:	e9dc 342a 	ldrd	r3, r4, [ip, #168]	; 0xa8
  4028a8:	e9cd 3424 	strd	r3, r4, [sp, #144]	; 0x90
  4028ac:	f7ff b91d 	b.w	401aea <.LBE565+0x3a>
  4028b0:	e9dc 342c 	ldrd	r3, r4, [ip, #176]	; 0xb0
  4028b4:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
  4028b8:	f7ff ba3a 	b.w	401d30 <.LBE585+0x3a>
        R(12); R(13); R(14); R(15);
  4028bc:	e9dc 232e 	ldrd	r2, r3, [ip, #184]	; 0xb8
  4028c0:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  4028c4:	f7ff bb6c 	b.w	401fa0 <.LBE605+0x3e>
  4028c8:	e9dc 3430 	ldrd	r3, r4, [ip, #192]	; 0xc0
  4028cc:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
  4028d0:	e48b      	b.n	4021ea <.LBE625+0x3a>
  4028d2:	e9dc 3432 	ldrd	r3, r4, [ip, #200]	; 0xc8
  4028d6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
  4028da:	e5b0      	b.n	40243e <.LBE645+0x3a>
  4028dc:	e9dc 3434 	ldrd	r3, r4, [ip, #208]	; 0xd0
  4028e0:	e9cd 3428 	strd	r3, r4, [sp, #160]	; 0xa0
  4028e4:	e6d2      	b.n	40268c <.LBE665+0x40>

004028e6 <.LFE16>:
  4028e6:	bf00      	nop

Disassembly of section .text._svfprintf_r%30:

004028e8 <_svfprintf_r>:
  4028e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

004028ec <.LCFI0>:
  4028ec:	ed2d 8b06 	vpush	{d8-d10}

004028f0 <.LCFI1>:
  4028f0:	b0cf      	sub	sp, #316	; 0x13c

004028f2 <.LCFI2>:
  4028f2:	460c      	mov	r4, r1
  4028f4:	9105      	str	r1, [sp, #20]
  4028f6:	4693      	mov	fp, r2
  4028f8:	930a      	str	r3, [sp, #40]	; 0x28

004028fa <.LVL1>:
  4028fa:	9011      	str	r0, [sp, #68]	; 0x44
  4028fc:	f009 f900 	bl	40bb00 <_localeconv_r>

00402900 <.LVL2>:
  402900:	6803      	ldr	r3, [r0, #0]
  402902:	9317      	str	r3, [sp, #92]	; 0x5c

00402904 <.LVL3>:
  402904:	4618      	mov	r0, r3
  402906:	f007 f9bb 	bl	409c80 <strlen>

0040290a <.LVL4>:
  40290a:	89a3      	ldrh	r3, [r4, #12]
  40290c:	9015      	str	r0, [sp, #84]	; 0x54

0040290e <.LVL5>:
  40290e:	061d      	lsls	r5, r3, #24
  402910:	d503      	bpl.n	40291a <.LVL6>
  402912:	6923      	ldr	r3, [r4, #16]
  402914:	2b00      	cmp	r3, #0
  402916:	f001 8151 	beq.w	403bbc <.LBE47>

0040291a <.LVL6>:
  40291a:	2300      	movs	r3, #0
  40291c:	ed9f 8b7a 	vldr	d8, [pc, #488]	; 402b08 <.LVL46+0x4>
  402920:	ed9f 9b7b 	vldr	d9, [pc, #492]	; 402b10 <.LVL46+0xc>
  402924:	930f      	str	r3, [sp, #60]	; 0x3c
  402926:	9324      	str	r3, [sp, #144]	; 0x90
  402928:	9323      	str	r3, [sp, #140]	; 0x8c

0040292a <.LVL7>:
  40292a:	9314      	str	r3, [sp, #80]	; 0x50
  40292c:	9319      	str	r3, [sp, #100]	; 0x64
  40292e:	9312      	str	r3, [sp, #72]	; 0x48
  402930:	9318      	str	r3, [sp, #96]	; 0x60
  402932:	9316      	str	r3, [sp, #88]	; 0x58
  402934:	9303      	str	r3, [sp, #12]
  402936:	465e      	mov	r6, fp
  402938:	ab25      	add	r3, sp, #148	; 0x94

0040293a <.LVL8>:
  40293a:	f8df a1dc 	ldr.w	sl, [pc, #476]	; 402b18 <.LVL46+0x14>
  40293e:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44

00402942 <.LVL9>:
  402942:	9322      	str	r3, [sp, #136]	; 0x88
  402944:	4699      	mov	r9, r3

00402946 <.LVL10>:
  402946:	7833      	ldrb	r3, [r6, #0]
  402948:	4634      	mov	r4, r6
  40294a:	b1e3      	cbz	r3, 402986 <.LVL18>
  40294c:	2b25      	cmp	r3, #37	; 0x25
  40294e:	d102      	bne.n	402956 <.LVL12>
  402950:	e019      	b.n	402986 <.LVL18>

00402952 <.LVL11>:
  402952:	2b25      	cmp	r3, #37	; 0x25
  402954:	d003      	beq.n	40295e <.LVL14>

00402956 <.LVL12>:
  402956:	f814 3f01 	ldrb.w	r3, [r4, #1]!

0040295a <.LVL13>:
  40295a:	2b00      	cmp	r3, #0
  40295c:	d1f9      	bne.n	402952 <.LVL11>

0040295e <.LVL14>:
  40295e:	1ba5      	subs	r5, r4, r6
  402960:	b18d      	cbz	r5, 402986 <.LVL18>
  402962:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402964:	9a24      	ldr	r2, [sp, #144]	; 0x90
  402966:	f8c9 6000 	str.w	r6, [r9]
  40296a:	3301      	adds	r3, #1
  40296c:	442a      	add	r2, r5
  40296e:	2b07      	cmp	r3, #7
  402970:	f8c9 5004 	str.w	r5, [r9, #4]
  402974:	9224      	str	r2, [sp, #144]	; 0x90

00402976 <.LVL15>:
  402976:	9323      	str	r3, [sp, #140]	; 0x8c
  402978:	f300 809d 	bgt.w	402ab6 <.LVL36>

0040297c <.LVL16>:
  40297c:	f109 0908 	add.w	r9, r9, #8

00402980 <.LVL17>:
  402980:	9b03      	ldr	r3, [sp, #12]
  402982:	442b      	add	r3, r5
  402984:	9303      	str	r3, [sp, #12]

00402986 <.LVL18>:
  402986:	7823      	ldrb	r3, [r4, #0]
  402988:	2b00      	cmp	r3, #0
  40298a:	f001 80ca 	beq.w	403b22 <.LDL1>

0040298e <.LVL19>:
  40298e:	2300      	movs	r3, #0
  402990:	f04f 32ff 	mov.w	r2, #4294967295
  402994:	4698      	mov	r8, r3
  402996:	9307      	str	r3, [sp, #28]
  402998:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  40299c:	1c67      	adds	r7, r4, #1

0040299e <.LVL20>:
  40299e:	7863      	ldrb	r3, [r4, #1]
  4029a0:	9204      	str	r2, [sp, #16]
  4029a2:	242b      	movs	r4, #43	; 0x2b

004029a4 <.LVL21>:
  4029a4:	2520      	movs	r5, #32

004029a6 <.LVL22>:
  4029a6:	3701      	adds	r7, #1
  4029a8:	f1a3 0220 	sub.w	r2, r3, #32
  4029ac:	2a5a      	cmp	r2, #90	; 0x5a
  4029ae:	f200 83e4 	bhi.w	40317a <.LVL218>
  4029b2:	e8df f012 	tbh	[pc, r2, lsl #1]
  4029b6:	02a5      	.short	0x02a5
  4029b8:	03e203e2 	.word	0x03e203e2
  4029bc:	03e202ae 	.word	0x03e202ae
  4029c0:	03e203e2 	.word	0x03e203e2
  4029c4:	03e2005f 	.word	0x03e2005f
  4029c8:	02b203e2 	.word	0x02b203e2
  4029cc:	03e202bf 	.word	0x03e202bf
  4029d0:	02cd007c 	.word	0x02cd007c
  4029d4:	02e703e2 	.word	0x02e703e2
  4029d8:	03d203d2 	.word	0x03d203d2
  4029dc:	03d203d2 	.word	0x03d203d2
  4029e0:	03d203d2 	.word	0x03d203d2
  4029e4:	03d203d2 	.word	0x03d203d2
  4029e8:	03e203d2 	.word	0x03e203d2
  4029ec:	03e203e2 	.word	0x03e203e2
  4029f0:	03e203e2 	.word	0x03e203e2
  4029f4:	03e203e2 	.word	0x03e203e2
  4029f8:	03e2034a 	.word	0x03e2034a
  4029fc:	0392037c 	.word	0x0392037c
  402a00:	034a034a 	.word	0x034a034a
  402a04:	03e2034a 	.word	0x03e2034a
  402a08:	03e203e2 	.word	0x03e203e2
  402a0c:	02eb03e2 	.word	0x02eb03e2
  402a10:	03e203e2 	.word	0x03e203e2
  402a14:	03e202ef 	.word	0x03e202ef
  402a18:	03e203e2 	.word	0x03e203e2
  402a1c:	03e20300 	.word	0x03e20300
  402a20:	03e20327 	.word	0x03e20327
  402a24:	029403e2 	.word	0x029403e2
  402a28:	03e203e2 	.word	0x03e203e2
  402a2c:	03e203e2 	.word	0x03e203e2
  402a30:	03e203e2 	.word	0x03e203e2
  402a34:	03e203e2 	.word	0x03e203e2
  402a38:	03e2034a 	.word	0x03e2034a
  402a3c:	0254037c 	.word	0x0254037c
  402a40:	034a034a 	.word	0x034a034a
  402a44:	02c3034a 	.word	0x02c3034a
  402a48:	005b0254 	.word	0x005b0254
  402a4c:	03b003e2 	.word	0x03b003e2
  402a50:	03ba03e2 	.word	0x03ba03e2
  402a54:	03380223 	.word	0x03380223
  402a58:	03e2005b 	.word	0x03e2005b
  402a5c:	00760300 	.word	0x00760300
  402a60:	03e2023e 	.word	0x03e2023e
  402a64:	00b303e2 	.word	0x00b303e2
  402a68:	007603e2 	.word	0x007603e2
  402a6c:	f048 0820 	orr.w	r8, r8, #32
  402a70:	783b      	ldrb	r3, [r7, #0]
  402a72:	e798      	b.n	4029a6 <.LVL22>
  402a74:	4658      	mov	r0, fp
  402a76:	f009 f843 	bl	40bb00 <_localeconv_r>

00402a7a <.LVL25>:
  402a7a:	6843      	ldr	r3, [r0, #4]
  402a7c:	9316      	str	r3, [sp, #88]	; 0x58

00402a7e <.LVL26>:
  402a7e:	4618      	mov	r0, r3
  402a80:	f007 f8fe 	bl	409c80 <strlen>

00402a84 <.LVL27>:
  402a84:	9018      	str	r0, [sp, #96]	; 0x60

00402a86 <.LVL28>:
  402a86:	4658      	mov	r0, fp
  402a88:	f009 f83a 	bl	40bb00 <_localeconv_r>

00402a8c <.LVL29>:
  402a8c:	6883      	ldr	r3, [r0, #8]
  402a8e:	9312      	str	r3, [sp, #72]	; 0x48

00402a90 <.LVL30>:
  402a90:	9b18      	ldr	r3, [sp, #96]	; 0x60

00402a92 <.LVL31>:
  402a92:	b133      	cbz	r3, 402aa2 <.LVL32>
  402a94:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a96:	b123      	cbz	r3, 402aa2 <.LVL32>
  402a98:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a9a:	781b      	ldrb	r3, [r3, #0]
  402a9c:	2b00      	cmp	r3, #0
  402a9e:	f041 8083 	bne.w	403ba8 <.LVL513>

00402aa2 <.LVL32>:
  402aa2:	783b      	ldrb	r3, [r7, #0]
  402aa4:	e77f      	b.n	4029a6 <.LVL22>

00402aa6 <.LVL33>:
  402aa6:	9a07      	ldr	r2, [sp, #28]
  402aa8:	930a      	str	r3, [sp, #40]	; 0x28
  402aaa:	4252      	negs	r2, r2
  402aac:	9207      	str	r2, [sp, #28]

00402aae <.LVL34>:
  402aae:	f048 0804 	orr.w	r8, r8, #4
  402ab2:	783b      	ldrb	r3, [r7, #0]
  402ab4:	e777      	b.n	4029a6 <.LVL22>

00402ab6 <.LVL36>:
  402ab6:	aa22      	add	r2, sp, #136	; 0x88
  402ab8:	9905      	ldr	r1, [sp, #20]
  402aba:	4658      	mov	r0, fp
  402abc:	f006 ff6c 	bl	409998 <__ssprint_r>

00402ac0 <.LVL37>:
  402ac0:	b980      	cbnz	r0, 402ae4 <.LVL44>

00402ac2 <.LVL38>:
  402ac2:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00402ac6 <.LVL39>:
  402ac6:	e75b      	b.n	402980 <.LVL17>

00402ac8 <.LVL40>:
  402ac8:	aa22      	add	r2, sp, #136	; 0x88

00402aca <.LVL41>:
  402aca:	9905      	ldr	r1, [sp, #20]
  402acc:	4658      	mov	r0, fp
  402ace:	f006 ff63 	bl	409998 <__ssprint_r>

00402ad2 <.LVL42>:
  402ad2:	2800      	cmp	r0, #0
  402ad4:	f000 8182 	beq.w	402ddc <.LVL119>

00402ad8 <.L189>:
  402ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402ada:	b11b      	cbz	r3, 402ae4 <.LVL44>
  402adc:	9909      	ldr	r1, [sp, #36]	; 0x24
  402ade:	9811      	ldr	r0, [sp, #68]	; 0x44
  402ae0:	f005 ff80 	bl	4089e4 <.LFE174>

00402ae4 <.LVL44>:
  402ae4:	9b05      	ldr	r3, [sp, #20]
  402ae6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
  402aea:	f013 0f40 	tst.w	r3, #64	; 0x40
  402aee:	9b03      	ldr	r3, [sp, #12]
  402af0:	bf18      	it	ne
  402af2:	f04f 33ff 	movne.w	r3, #4294967295
  402af6:	9303      	str	r3, [sp, #12]

00402af8 <.LVL45>:
  402af8:	9803      	ldr	r0, [sp, #12]
  402afa:	b04f      	add	sp, #316	; 0x13c

00402afc <.LCFI3>:
  402afc:	ecbd 8b06 	vpop	{d8-d10}

00402b00 <.LCFI4>:
  402b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00402b04 <.LVL46>:
  402b04:	f3af 8000 	nop.w
	...
  402b10:	ffffffff 	.word	0xffffffff
  402b14:	7fefffff 	.word	0x7fefffff
  402b18:	0040bdd8 	.word	0x0040bdd8

00402b1c <.L45>:
  402b1c:	930d      	str	r3, [sp, #52]	; 0x34
  402b1e:	f018 0f20 	tst.w	r8, #32
  402b22:	4bb4      	ldr	r3, [pc, #720]	; (402df4 <.LVL122+0x4>)
  402b24:	9314      	str	r3, [sp, #80]	; 0x50

00402b26 <.LVL48>:
  402b26:	f040 81e1 	bne.w	402eec <.LVL150>
  402b2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402b2c:	f018 0f10 	tst.w	r8, #16
  402b30:	4613      	mov	r3, r2
  402b32:	f040 859d 	bne.w	403670 <.LVL365>
  402b36:	f018 0f40 	tst.w	r8, #64	; 0x40
  402b3a:	f041 801d 	bne.w	403b78 <.LVL506>
  402b3e:	f418 7f00 	tst.w	r8, #512	; 0x200
  402b42:	f000 8595 	beq.w	403670 <.LVL365>

00402b46 <.LVL49>:
  402b46:	3304      	adds	r3, #4

00402b48 <.LVL50>:
  402b48:	7814      	ldrb	r4, [r2, #0]
  402b4a:	930a      	str	r3, [sp, #40]	; 0x28
  402b4c:	2500      	movs	r5, #0

00402b4e <.LVL51>:
  402b4e:	f018 0f01 	tst.w	r8, #1
  402b52:	d00b      	beq.n	402b6c <.LVL51+0x1e>
  402b54:	ea54 0305 	orrs.w	r3, r4, r5
  402b58:	d008      	beq.n	402b6c <.LVL51+0x1e>
  402b5a:	2330      	movs	r3, #48	; 0x30
  402b5c:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
  402b60:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
  402b64:	f048 0802 	orr.w	r8, r8, #2
  402b68:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  402b6c:	f428 6180 	bic.w	r1, r8, #1024	; 0x400

00402b70 <.LVL53>:
  402b70:	2302      	movs	r3, #2

00402b72 <.L150>:
  402b72:	2200      	movs	r2, #0
  402b74:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b

00402b78 <.L65>:
  402b78:	9804      	ldr	r0, [sp, #16]
  402b7a:	1c42      	adds	r2, r0, #1
  402b7c:	f000 8190 	beq.w	402ea0 <.LVL139>

00402b80 <.LVL56>:
  402b80:	ea54 0205 	orrs.w	r2, r4, r5
  402b84:	f021 0880 	bic.w	r8, r1, #128	; 0x80

00402b88 <.LVL57>:
  402b88:	f040 818f 	bne.w	402eaa <.LVL140>
  402b8c:	2800      	cmp	r0, #0
  402b8e:	f040 8409 	bne.w	4033a4 <.LVL271>
  402b92:	2b00      	cmp	r3, #0
  402b94:	f040 84a2 	bne.w	4034dc <.LBE13>
  402b98:	f011 0301 	ands.w	r3, r1, #1

00402b9c <.LVL58>:
  402b9c:	ae4e      	add	r6, sp, #312	; 0x138

00402b9e <.LVL59>:
  402b9e:	9308      	str	r3, [sp, #32]
  402ba0:	d002      	beq.n	402ba8 <.LVL61>

00402ba2 <.LVL60>:
  402ba2:	2330      	movs	r3, #48	; 0x30
  402ba4:	f806 3d01 	strb.w	r3, [r6, #-1]!

00402ba8 <.LVL61>:
  402ba8:	2300      	movs	r3, #0
  402baa:	9a08      	ldr	r2, [sp, #32]
  402bac:	9309      	str	r3, [sp, #36]	; 0x24
  402bae:	9313      	str	r3, [sp, #76]	; 0x4c
  402bb0:	9310      	str	r3, [sp, #64]	; 0x40
  402bb2:	930e      	str	r3, [sp, #56]	; 0x38
  402bb4:	9b04      	ldr	r3, [sp, #16]
  402bb6:	4293      	cmp	r3, r2
  402bb8:	bfb8      	it	lt
  402bba:	4613      	movlt	r3, r2
  402bbc:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  402bc0:	9302      	str	r3, [sp, #8]

00402bc2 <.L59>:
  402bc2:	b112      	cbz	r2, 402bca <.LVL64>

00402bc4 <.LVL63>:
  402bc4:	9b02      	ldr	r3, [sp, #8]
  402bc6:	3301      	adds	r3, #1
  402bc8:	9302      	str	r3, [sp, #8]

00402bca <.LVL64>:
  402bca:	f018 0302 	ands.w	r3, r8, #2
  402bce:	930b      	str	r3, [sp, #44]	; 0x2c
  402bd0:	d002      	beq.n	402bd8 <.LVL64+0xe>
  402bd2:	9b02      	ldr	r3, [sp, #8]
  402bd4:	3302      	adds	r3, #2
  402bd6:	9302      	str	r3, [sp, #8]
  402bd8:	f018 0384 	ands.w	r3, r8, #132	; 0x84
  402bdc:	930c      	str	r3, [sp, #48]	; 0x30
  402bde:	f040 82ea 	bne.w	4031b6 <.LVL227>
  402be2:	9b07      	ldr	r3, [sp, #28]
  402be4:	9902      	ldr	r1, [sp, #8]
  402be6:	1a5c      	subs	r4, r3, r1

00402be8 <.LVL66>:
  402be8:	2c00      	cmp	r4, #0
  402bea:	f340 82e4 	ble.w	4031b6 <.LVL227>
  402bee:	2c10      	cmp	r4, #16
  402bf0:	9924      	ldr	r1, [sp, #144]	; 0x90
  402bf2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402bf4:	4d80      	ldr	r5, [pc, #512]	; (402df8 <.LVL122+0x8>)
  402bf6:	dd25      	ble.n	402c44 <.LVL80>
  402bf8:	4648      	mov	r0, r9
  402bfa:	2310      	movs	r3, #16
  402bfc:	46c1      	mov	r9, r8
  402bfe:	46b0      	mov	r8, r6

00402c00 <.LVL67>:
  402c00:	9e05      	ldr	r6, [sp, #20]
  402c02:	e004      	b.n	402c0e <.LVL71>

00402c04 <.LVL68>:
  402c04:	3c10      	subs	r4, #16

00402c06 <.LVL69>:
  402c06:	2c10      	cmp	r4, #16
  402c08:	f100 0008 	add.w	r0, r0, #8

00402c0c <.LVL70>:
  402c0c:	dd17      	ble.n	402c3e <.LVL79>

00402c0e <.LVL71>:
  402c0e:	3201      	adds	r2, #1
  402c10:	3110      	adds	r1, #16
  402c12:	2a07      	cmp	r2, #7
  402c14:	9124      	str	r1, [sp, #144]	; 0x90

00402c16 <.LVL72>:
  402c16:	9223      	str	r2, [sp, #140]	; 0x8c
  402c18:	6005      	str	r5, [r0, #0]
  402c1a:	6043      	str	r3, [r0, #4]
  402c1c:	ddf2      	ble.n	402c04 <.LVL68>
  402c1e:	aa22      	add	r2, sp, #136	; 0x88
  402c20:	4631      	mov	r1, r6
  402c22:	4658      	mov	r0, fp

00402c24 <.LVL73>:
  402c24:	9306      	str	r3, [sp, #24]
  402c26:	f006 feb7 	bl	409998 <__ssprint_r>

00402c2a <.LVL74>:
  402c2a:	2800      	cmp	r0, #0
  402c2c:	f47f af54 	bne.w	402ad8 <.L189>
  402c30:	3c10      	subs	r4, #16

00402c32 <.LVL75>:
  402c32:	2c10      	cmp	r4, #16
  402c34:	9924      	ldr	r1, [sp, #144]	; 0x90
  402c36:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00402c38 <.LVL76>:
  402c38:	9b06      	ldr	r3, [sp, #24]

00402c3a <.LVL77>:
  402c3a:	a825      	add	r0, sp, #148	; 0x94

00402c3c <.LVL78>:
  402c3c:	dce7      	bgt.n	402c0e <.LVL71>

00402c3e <.LVL79>:
  402c3e:	4646      	mov	r6, r8
  402c40:	46c8      	mov	r8, r9
  402c42:	4681      	mov	r9, r0

00402c44 <.LVL80>:
  402c44:	3201      	adds	r2, #1
  402c46:	1863      	adds	r3, r4, r1
  402c48:	2a07      	cmp	r2, #7
  402c4a:	9324      	str	r3, [sp, #144]	; 0x90
  402c4c:	9223      	str	r2, [sp, #140]	; 0x8c
  402c4e:	f8c9 5000 	str.w	r5, [r9]
  402c52:	f8c9 4004 	str.w	r4, [r9, #4]
  402c56:	f300 848f 	bgt.w	403578 <.LVL333>

00402c5a <.LVL81>:
  402c5a:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  402c5e:	f109 0908 	add.w	r9, r9, #8

00402c62 <.LVL82>:
  402c62:	b172      	cbz	r2, 402c82 <.LVL84>
  402c64:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402c66:	3201      	adds	r2, #1
  402c68:	3301      	adds	r3, #1
  402c6a:	f10d 006b 	add.w	r0, sp, #107	; 0x6b
  402c6e:	2101      	movs	r1, #1
  402c70:	2a07      	cmp	r2, #7
  402c72:	9324      	str	r3, [sp, #144]	; 0x90
  402c74:	9223      	str	r2, [sp, #140]	; 0x8c
  402c76:	e889 0003 	stmia.w	r9, {r0, r1}
  402c7a:	f300 83a9 	bgt.w	4033d0 <.LVL278>

00402c7e <.LVL83>:
  402c7e:	f109 0908 	add.w	r9, r9, #8

00402c82 <.LVL84>:
  402c82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402c84:	b16a      	cbz	r2, 402ca2 <.LVL86>
  402c86:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402c88:	3201      	adds	r2, #1
  402c8a:	3302      	adds	r3, #2
  402c8c:	a81b      	add	r0, sp, #108	; 0x6c
  402c8e:	2102      	movs	r1, #2
  402c90:	2a07      	cmp	r2, #7
  402c92:	9324      	str	r3, [sp, #144]	; 0x90
  402c94:	9223      	str	r2, [sp, #140]	; 0x8c
  402c96:	e889 0003 	stmia.w	r9, {r0, r1}
  402c9a:	f300 83a5 	bgt.w	4033e8 <.LVL282>

00402c9e <.LVL85>:
  402c9e:	f109 0908 	add.w	r9, r9, #8

00402ca2 <.LVL86>:
  402ca2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402ca4:	2a80      	cmp	r2, #128	; 0x80
  402ca6:	f000 82eb 	beq.w	403280 <.LVL243>
  402caa:	9a04      	ldr	r2, [sp, #16]
  402cac:	9908      	ldr	r1, [sp, #32]
  402cae:	1a54      	subs	r4, r2, r1

00402cb0 <.LVL87>:
  402cb0:	2c00      	cmp	r4, #0
  402cb2:	dd36      	ble.n	402d22 <.LVL102>
  402cb4:	2c10      	cmp	r4, #16
  402cb6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402cb8:	dd26      	ble.n	402d08 <.LVL100>
  402cba:	4649      	mov	r1, r9
  402cbc:	2510      	movs	r5, #16
  402cbe:	46a1      	mov	r9, r4
  402cc0:	9c05      	ldr	r4, [sp, #20]

00402cc2 <.LVL88>:
  402cc2:	e006      	b.n	402cd2 <.LVL92>

00402cc4 <.LVL89>:
  402cc4:	f1a9 0910 	sub.w	r9, r9, #16

00402cc8 <.LVL90>:
  402cc8:	f1b9 0f10 	cmp.w	r9, #16
  402ccc:	f101 0108 	add.w	r1, r1, #8

00402cd0 <.LVL91>:
  402cd0:	dd18      	ble.n	402d04 <.LVL99>

00402cd2 <.LVL92>:
  402cd2:	3201      	adds	r2, #1
  402cd4:	3310      	adds	r3, #16
  402cd6:	2a07      	cmp	r2, #7
  402cd8:	9324      	str	r3, [sp, #144]	; 0x90

00402cda <.LVL93>:
  402cda:	9223      	str	r2, [sp, #140]	; 0x8c
  402cdc:	f8c1 a000 	str.w	sl, [r1]
  402ce0:	604d      	str	r5, [r1, #4]
  402ce2:	ddef      	ble.n	402cc4 <.LVL89>
  402ce4:	aa22      	add	r2, sp, #136	; 0x88
  402ce6:	4621      	mov	r1, r4

00402ce8 <.LVL94>:
  402ce8:	4658      	mov	r0, fp
  402cea:	f006 fe55 	bl	409998 <__ssprint_r>

00402cee <.LVL95>:
  402cee:	2800      	cmp	r0, #0
  402cf0:	f47f aef2 	bne.w	402ad8 <.L189>
  402cf4:	f1a9 0910 	sub.w	r9, r9, #16

00402cf8 <.LVL96>:
  402cf8:	f1b9 0f10 	cmp.w	r9, #16
  402cfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402cfe:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00402d00 <.LVL97>:
  402d00:	a925      	add	r1, sp, #148	; 0x94

00402d02 <.LVL98>:
  402d02:	dce6      	bgt.n	402cd2 <.LVL92>

00402d04 <.LVL99>:
  402d04:	464c      	mov	r4, r9
  402d06:	4689      	mov	r9, r1

00402d08 <.LVL100>:
  402d08:	3201      	adds	r2, #1
  402d0a:	4423      	add	r3, r4
  402d0c:	2a07      	cmp	r2, #7
  402d0e:	9324      	str	r3, [sp, #144]	; 0x90
  402d10:	9223      	str	r2, [sp, #140]	; 0x8c
  402d12:	f8c9 a000 	str.w	sl, [r9]
  402d16:	f8c9 4004 	str.w	r4, [r9, #4]
  402d1a:	f300 834d 	bgt.w	4033b8 <.LVL274>

00402d1e <.LVL101>:
  402d1e:	f109 0908 	add.w	r9, r9, #8

00402d22 <.LVL102>:
  402d22:	f418 7f80 	tst.w	r8, #256	; 0x100
  402d26:	f040 824f 	bne.w	4031c8 <.LVL228>
  402d2a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402d2c:	9808      	ldr	r0, [sp, #32]
  402d2e:	f8c9 6000 	str.w	r6, [r9]
  402d32:	3201      	adds	r2, #1
  402d34:	4403      	add	r3, r0
  402d36:	2a07      	cmp	r2, #7
  402d38:	9324      	str	r3, [sp, #144]	; 0x90
  402d3a:	f8c9 0004 	str.w	r0, [r9, #4]
  402d3e:	9223      	str	r2, [sp, #140]	; 0x8c
  402d40:	f300 8324 	bgt.w	40338c <.LVL269>

00402d44 <.LVL103>:
  402d44:	f109 0908 	add.w	r9, r9, #8

00402d48 <.LVL104>:
  402d48:	f018 0f04 	tst.w	r8, #4
  402d4c:	d03b      	beq.n	402dc6 <.LVL117>
  402d4e:	9a07      	ldr	r2, [sp, #28]
  402d50:	9902      	ldr	r1, [sp, #8]
  402d52:	1a54      	subs	r4, r2, r1

00402d54 <.LVL105>:
  402d54:	2c00      	cmp	r4, #0
  402d56:	dd36      	ble.n	402dc6 <.LVL117>
  402d58:	2c10      	cmp	r4, #16
  402d5a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  402d5c:	4d26      	ldr	r5, [pc, #152]	; (402df8 <.LVL122+0x8>)
  402d5e:	dd1f      	ble.n	402da0 <.LVL115>
  402d60:	2610      	movs	r6, #16
  402d62:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402d66:	e004      	b.n	402d72 <.LVL109>

00402d68 <.LVL106>:
  402d68:	3c10      	subs	r4, #16

00402d6a <.LVL107>:
  402d6a:	2c10      	cmp	r4, #16
  402d6c:	f109 0908 	add.w	r9, r9, #8

00402d70 <.LVL108>:
  402d70:	dd16      	ble.n	402da0 <.LVL115>

00402d72 <.LVL109>:
  402d72:	3201      	adds	r2, #1
  402d74:	3310      	adds	r3, #16
  402d76:	2a07      	cmp	r2, #7
  402d78:	9324      	str	r3, [sp, #144]	; 0x90

00402d7a <.LVL110>:
  402d7a:	9223      	str	r2, [sp, #140]	; 0x8c
  402d7c:	e889 0060 	stmia.w	r9, {r5, r6}
  402d80:	ddf2      	ble.n	402d68 <.LVL106>
  402d82:	aa22      	add	r2, sp, #136	; 0x88
  402d84:	4641      	mov	r1, r8
  402d86:	4658      	mov	r0, fp
  402d88:	f006 fe06 	bl	409998 <__ssprint_r>

00402d8c <.LVL111>:
  402d8c:	2800      	cmp	r0, #0
  402d8e:	f47f aea3 	bne.w	402ad8 <.L189>
  402d92:	3c10      	subs	r4, #16

00402d94 <.LVL112>:
  402d94:	2c10      	cmp	r4, #16
  402d96:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d98:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00402d9a <.LVL113>:
  402d9a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00402d9e <.LVL114>:
  402d9e:	dce8      	bgt.n	402d72 <.LVL109>

00402da0 <.LVL115>:
  402da0:	3201      	adds	r2, #1
  402da2:	4423      	add	r3, r4
  402da4:	2a07      	cmp	r2, #7
  402da6:	9324      	str	r3, [sp, #144]	; 0x90
  402da8:	9223      	str	r2, [sp, #140]	; 0x8c
  402daa:	f8c9 5000 	str.w	r5, [r9]
  402dae:	f8c9 4004 	str.w	r4, [r9, #4]
  402db2:	dd08      	ble.n	402dc6 <.LVL117>
  402db4:	aa22      	add	r2, sp, #136	; 0x88
  402db6:	9905      	ldr	r1, [sp, #20]
  402db8:	4658      	mov	r0, fp
  402dba:	f006 fded 	bl	409998 <__ssprint_r>

00402dbe <.LVL116>:
  402dbe:	2800      	cmp	r0, #0
  402dc0:	f47f ae8a 	bne.w	402ad8 <.L189>
  402dc4:	9b24      	ldr	r3, [sp, #144]	; 0x90

00402dc6 <.LVL117>:
  402dc6:	9a03      	ldr	r2, [sp, #12]
  402dc8:	9907      	ldr	r1, [sp, #28]
  402dca:	9802      	ldr	r0, [sp, #8]
  402dcc:	4281      	cmp	r1, r0
  402dce:	bfac      	ite	ge
  402dd0:	1852      	addge	r2, r2, r1
  402dd2:	1812      	addlt	r2, r2, r0
  402dd4:	9203      	str	r2, [sp, #12]

00402dd6 <.LVL118>:
  402dd6:	2b00      	cmp	r3, #0
  402dd8:	f47f ae76 	bne.w	402ac8 <.LVL40>

00402ddc <.LVL119>:
  402ddc:	2300      	movs	r3, #0
  402dde:	9323      	str	r3, [sp, #140]	; 0x8c

00402de0 <.LVL120>:
  402de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402de2:	b11b      	cbz	r3, 402dec <.LVL121>
  402de4:	9909      	ldr	r1, [sp, #36]	; 0x24
  402de6:	4658      	mov	r0, fp
  402de8:	f005 fdfc 	bl	4089e4 <.LFE174>

00402dec <.LVL121>:
  402dec:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00402df0 <.LVL122>:
  402df0:	463e      	mov	r6, r7
  402df2:	e5a8      	b.n	402946 <.LVL10>
  402df4:	0040b4c8 	.word	0x0040b4c8
  402df8:	0040bdc8 	.word	0x0040bdc8

00402dfc <.LVL123>:
  402dfc:	f018 0f20 	tst.w	r8, #32
  402e00:	930d      	str	r3, [sp, #52]	; 0x34
  402e02:	f040 80ce 	bne.w	402fa2 <.LVL168+0x1e>
  402e06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402e08:	f018 0f10 	tst.w	r8, #16
  402e0c:	4613      	mov	r3, r2
  402e0e:	f040 8419 	bne.w	403644 <.LVL358>
  402e12:	f018 0f40 	tst.w	r8, #64	; 0x40
  402e16:	f040 86a2 	bne.w	403b5e <.LVL502>
  402e1a:	f418 7f00 	tst.w	r8, #512	; 0x200
  402e1e:	f000 8411 	beq.w	403644 <.LVL358>

00402e22 <.LVL124>:
  402e22:	3304      	adds	r3, #4

00402e24 <.LVL125>:
  402e24:	7814      	ldrb	r4, [r2, #0]
  402e26:	930a      	str	r3, [sp, #40]	; 0x28
  402e28:	2500      	movs	r5, #0

00402e2a <.LVL126>:
  402e2a:	f428 6180 	bic.w	r1, r8, #1024	; 0x400

00402e2e <.LVL127>:
  402e2e:	2300      	movs	r3, #0
  402e30:	e69f      	b.n	402b72 <.L150>

00402e32 <.LVL128>:
  402e32:	4641      	mov	r1, r8

00402e34 <.LVL129>:
  402e34:	068e      	lsls	r6, r1, #26

00402e36 <.LVL130>:
  402e36:	930d      	str	r3, [sp, #52]	; 0x34
  402e38:	f100 80ea 	bmi.w	403010 <.LVL180+0x6>
  402e3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402e3e:	06cd      	lsls	r5, r1, #27
  402e40:	4613      	mov	r3, r2
  402e42:	f100 8405 	bmi.w	403650 <.LVL360>
  402e46:	064c      	lsls	r4, r1, #25
  402e48:	f100 868f 	bmi.w	403b6a <.LVL504>
  402e4c:	0588      	lsls	r0, r1, #22
  402e4e:	f140 83ff 	bpl.w	403650 <.LVL360>

00402e52 <.LVL131>:
  402e52:	7814      	ldrb	r4, [r2, #0]
  402e54:	3204      	adds	r2, #4

00402e56 <.LVL132>:
  402e56:	2500      	movs	r5, #0
  402e58:	2301      	movs	r3, #1
  402e5a:	920a      	str	r2, [sp, #40]	; 0x28
  402e5c:	e689      	b.n	402b72 <.L150>

00402e5e <.LVL133>:
  402e5e:	4641      	mov	r1, r8

00402e60 <.LVL134>:
  402e60:	068c      	lsls	r4, r1, #26
  402e62:	930d      	str	r3, [sp, #52]	; 0x34
  402e64:	f100 813f 	bmi.w	4030e6 <.LVL198+0x8>
  402e68:	06c8      	lsls	r0, r1, #27
  402e6a:	f100 83f8 	bmi.w	40365e <.LVL362>
  402e6e:	064a      	lsls	r2, r1, #25
  402e70:	f100 8688 	bmi.w	403b84 <.LVL508>
  402e74:	058b      	lsls	r3, r1, #22
  402e76:	f140 83f2 	bpl.w	40365e <.LVL362>

00402e7a <.LVL135>:
  402e7a:	980a      	ldr	r0, [sp, #40]	; 0x28
  402e7c:	f990 4000 	ldrsb.w	r4, [r0]

00402e80 <.LVL136>:
  402e80:	17e5      	asrs	r5, r4, #31
  402e82:	3004      	adds	r0, #4
  402e84:	4622      	mov	r2, r4
  402e86:	462b      	mov	r3, r5
  402e88:	900a      	str	r0, [sp, #40]	; 0x28

00402e8a <.LVL137>:
  402e8a:	2a00      	cmp	r2, #0
  402e8c:	f173 0300 	sbcs.w	r3, r3, #0
  402e90:	f2c0 8139 	blt.w	403106 <.LVL201>
  402e94:	9804      	ldr	r0, [sp, #16]
  402e96:	1c42      	adds	r2, r0, #1
  402e98:	f04f 0301 	mov.w	r3, #1

00402e9c <.LVL138>:
  402e9c:	f47f ae70 	bne.w	402b80 <.LVL56>

00402ea0 <.LVL139>:
  402ea0:	ea54 0205 	orrs.w	r2, r4, r5
  402ea4:	f000 827f 	beq.w	4033a6 <.LVL272>
  402ea8:	4688      	mov	r8, r1

00402eaa <.LVL140>:
  402eaa:	2b01      	cmp	r3, #1
  402eac:	f000 831e 	beq.w	4034ec <.LVL316>
  402eb0:	2b02      	cmp	r3, #2
  402eb2:	f040 82a8 	bne.w	403406 <.LVL288>

00402eb6 <.LVL141>:
  402eb6:	9814      	ldr	r0, [sp, #80]	; 0x50

00402eb8 <.LVL142>:
  402eb8:	ae4e      	add	r6, sp, #312	; 0x138

00402eba <.LVL143>:
  402eba:	0923      	lsrs	r3, r4, #4
  402ebc:	f004 010f 	and.w	r1, r4, #15
  402ec0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402ec4:	092a      	lsrs	r2, r5, #4
  402ec6:	461c      	mov	r4, r3

00402ec8 <.LVL144>:
  402ec8:	4615      	mov	r5, r2

00402eca <.LVL145>:
  402eca:	5c43      	ldrb	r3, [r0, r1]
  402ecc:	f806 3d01 	strb.w	r3, [r6, #-1]!

00402ed0 <.LVL146>:
  402ed0:	ea54 0305 	orrs.w	r3, r4, r5
  402ed4:	d1f1      	bne.n	402eba <.LVL143>

00402ed6 <.LVL147>:
  402ed6:	ab4e      	add	r3, sp, #312	; 0x138
  402ed8:	1b9b      	subs	r3, r3, r6
  402eda:	9308      	str	r3, [sp, #32]
  402edc:	e664      	b.n	402ba8 <.LVL61>

00402ede <.LVL148>:
  402ede:	930d      	str	r3, [sp, #52]	; 0x34
  402ee0:	f018 0f20 	tst.w	r8, #32
  402ee4:	4bb5      	ldr	r3, [pc, #724]	; (4031bc <.LVL227+0x6>)
  402ee6:	9314      	str	r3, [sp, #80]	; 0x50

00402ee8 <.LVL149>:
  402ee8:	f43f ae1f 	beq.w	402b2a <.LVL48+0x4>

00402eec <.LVL150>:
  402eec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402eee:	3507      	adds	r5, #7
  402ef0:	f025 0307 	bic.w	r3, r5, #7
  402ef4:	f103 0208 	add.w	r2, r3, #8
  402ef8:	920a      	str	r2, [sp, #40]	; 0x28

00402efa <.LVL151>:
  402efa:	e9d3 4500 	ldrd	r4, r5, [r3]
  402efe:	e626      	b.n	402b4e <.LVL51>

00402f00 <.LVL152>:
  402f00:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
  402f04:	2b00      	cmp	r3, #0
  402f06:	f47f adcc 	bne.w	402aa2 <.LVL32>
  402f0a:	f88d 506b 	strb.w	r5, [sp, #107]	; 0x6b
  402f0e:	783b      	ldrb	r3, [r7, #0]
  402f10:	e549      	b.n	4029a6 <.LVL22>
  402f12:	f048 0801 	orr.w	r8, r8, #1
  402f16:	783b      	ldrb	r3, [r7, #0]
  402f18:	e545      	b.n	4029a6 <.LVL22>
  402f1a:	990a      	ldr	r1, [sp, #40]	; 0x28
  402f1c:	680b      	ldr	r3, [r1, #0]
  402f1e:	9307      	str	r3, [sp, #28]
  402f20:	461a      	mov	r2, r3
  402f22:	2a00      	cmp	r2, #0
  402f24:	460b      	mov	r3, r1
  402f26:	f103 0304 	add.w	r3, r3, #4

00402f2a <.LVL154>:
  402f2a:	f6ff adbc 	blt.w	402aa6 <.LVL33>
  402f2e:	930a      	str	r3, [sp, #40]	; 0x28
  402f30:	783b      	ldrb	r3, [r7, #0]

00402f32 <.LVL155>:
  402f32:	e538      	b.n	4029a6 <.LVL22>
  402f34:	f88d 406b 	strb.w	r4, [sp, #107]	; 0x6b
  402f38:	783b      	ldrb	r3, [r7, #0]
  402f3a:	e534      	b.n	4029a6 <.LVL22>

00402f3c <.LVL156>:
  402f3c:	783b      	ldrb	r3, [r7, #0]
  402f3e:	2b68      	cmp	r3, #104	; 0x68
  402f40:	bf03      	ittte	eq
  402f42:	787b      	ldrbeq	r3, [r7, #1]
  402f44:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
  402f48:	3701      	addeq	r7, #1

00402f4a <.LVL158>:
  402f4a:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
  402f4e:	e52a      	b.n	4029a6 <.LVL22>

00402f50 <.LVL160>:
  402f50:	783b      	ldrb	r3, [r7, #0]
  402f52:	2b2a      	cmp	r3, #42	; 0x2a
  402f54:	f107 0101 	add.w	r1, r7, #1

00402f58 <.LVL161>:
  402f58:	f001 811c 	beq.w	404194 <.LVL687>

00402f5c <.LVL162>:
  402f5c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  402f60:	2a09      	cmp	r2, #9
  402f62:	460f      	mov	r7, r1
  402f64:	f201 804a 	bhi.w	403ffc <.LVL637>
  402f68:	2300      	movs	r3, #0

00402f6a <.LVL163>:
  402f6a:	4619      	mov	r1, r3

00402f6c <.LVL164>:
  402f6c:	f817 3b01 	ldrb.w	r3, [r7], #1

00402f70 <.LVL165>:
  402f70:	eb01 0181 	add.w	r1, r1, r1, lsl #2

00402f74 <.LVL166>:
  402f74:	eb02 0141 	add.w	r1, r2, r1, lsl #1

00402f78 <.LVL167>:
  402f78:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  402f7c:	2a09      	cmp	r2, #9
  402f7e:	d9f5      	bls.n	402f6c <.LVL164>
  402f80:	9104      	str	r1, [sp, #16]
  402f82:	e511      	b.n	4029a8 <.LVL22+0x2>

00402f84 <.LVL168>:
  402f84:	f048 0880 	orr.w	r8, r8, #128	; 0x80
  402f88:	783b      	ldrb	r3, [r7, #0]
  402f8a:	e50c      	b.n	4029a6 <.LVL22>
  402f8c:	f048 0808 	orr.w	r8, r8, #8
  402f90:	783b      	ldrb	r3, [r7, #0]
  402f92:	e508      	b.n	4029a6 <.LVL22>
  402f94:	f048 0810 	orr.w	r8, r8, #16
  402f98:	f018 0f20 	tst.w	r8, #32
  402f9c:	930d      	str	r3, [sp, #52]	; 0x34
  402f9e:	f43f af32 	beq.w	402e06 <.LVL123+0xa>
  402fa2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402fa4:	3507      	adds	r5, #7
  402fa6:	f025 0307 	bic.w	r3, r5, #7
  402faa:	f103 0208 	add.w	r2, r3, #8
  402fae:	920a      	str	r2, [sp, #40]	; 0x28

00402fb0 <.LVL172>:
  402fb0:	e9d3 4500 	ldrd	r4, r5, [r3]
  402fb4:	e739      	b.n	402e2a <.LVL126>

00402fb6 <.LVL173>:
  402fb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402fb8:	930d      	str	r3, [sp, #52]	; 0x34
  402fba:	6816      	ldr	r6, [r2, #0]

00402fbc <.LVL174>:
  402fbc:	2400      	movs	r4, #0
  402fbe:	f88d 406b 	strb.w	r4, [sp, #107]	; 0x6b
  402fc2:	1d15      	adds	r5, r2, #4

00402fc4 <.LVL175>:
  402fc4:	2e00      	cmp	r6, #0
  402fc6:	f000 873d 	beq.w	403e44 <.LVL593>
  402fca:	9a04      	ldr	r2, [sp, #16]
  402fcc:	1c53      	adds	r3, r2, #1
  402fce:	f000 869b 	beq.w	403d08 <.LVL549>

00402fd2 <.LBB11>:
  402fd2:	4621      	mov	r1, r4
  402fd4:	4630      	mov	r0, r6
  402fd6:	f007 fb13 	bl	40a600 <memchr>

00402fda <.LVL176>:
  402fda:	9009      	str	r0, [sp, #36]	; 0x24
  402fdc:	2800      	cmp	r0, #0
  402fde:	f000 8782 	beq.w	403ee6 <.LBB63>
  402fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402fe4:	9404      	str	r4, [sp, #16]
  402fe6:	1b9b      	subs	r3, r3, r6
  402fe8:	461a      	mov	r2, r3
  402fea:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
  402fee:	9308      	str	r3, [sp, #32]

00402ff0 <.LBE11>:
  402ff0:	950a      	str	r5, [sp, #40]	; 0x28

00402ff2 <.LBB12>:
  402ff2:	4623      	mov	r3, r4
  402ff4:	9202      	str	r2, [sp, #8]

00402ff6 <.LBE12>:
  402ff6:	9309      	str	r3, [sp, #36]	; 0x24
  402ff8:	9313      	str	r3, [sp, #76]	; 0x4c
  402ffa:	9310      	str	r3, [sp, #64]	; 0x40
  402ffc:	930e      	str	r3, [sp, #56]	; 0x38
  402ffe:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403002:	e5de      	b.n	402bc2 <.L59>

00403004 <.LVL178>:
  403004:	f048 0110 	orr.w	r1, r8, #16

00403008 <.LVL179>:
  403008:	068e      	lsls	r6, r1, #26

0040300a <.LVL180>:
  40300a:	930d      	str	r3, [sp, #52]	; 0x34
  40300c:	f57f af16 	bpl.w	402e3c <.LVL130+0x6>
  403010:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403012:	3507      	adds	r5, #7
  403014:	f025 0307 	bic.w	r3, r5, #7
  403018:	f103 0208 	add.w	r2, r3, #8
  40301c:	e9d3 4500 	ldrd	r4, r5, [r3]
  403020:	920a      	str	r2, [sp, #40]	; 0x28

00403022 <.LVL181>:
  403022:	2301      	movs	r3, #1
  403024:	e5a5      	b.n	402b72 <.L150>

00403026 <.LVL182>:
  403026:	980a      	ldr	r0, [sp, #40]	; 0x28
  403028:	4b65      	ldr	r3, [pc, #404]	; (4031c0 <.LVL227+0xa>)
  40302a:	6804      	ldr	r4, [r0, #0]
  40302c:	9314      	str	r3, [sp, #80]	; 0x50

0040302e <.LVL183>:
  40302e:	2230      	movs	r2, #48	; 0x30
  403030:	2378      	movs	r3, #120	; 0x78
  403032:	3004      	adds	r0, #4

00403034 <.LVL184>:
  403034:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
  403038:	930d      	str	r3, [sp, #52]	; 0x34
  40303a:	f048 0102 	orr.w	r1, r8, #2
  40303e:	900a      	str	r0, [sp, #40]	; 0x28
  403040:	2500      	movs	r5, #0

00403042 <.LVL185>:
  403042:	f88d 206c 	strb.w	r2, [sp, #108]	; 0x6c

00403046 <.LVL186>:
  403046:	2302      	movs	r3, #2
  403048:	e593      	b.n	402b72 <.L150>

0040304a <.LVL187>:
  40304a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40304c:	930d      	str	r3, [sp, #52]	; 0x34
  40304e:	f018 0f08 	tst.w	r8, #8
  403052:	f105 0507 	add.w	r5, r5, #7
  403056:	f000 84ed 	beq.w	403a34 <.LVL468>
  40305a:	f025 0307 	bic.w	r3, r5, #7
  40305e:	ed93 8b00 	vldr	d8, [r3]

00403062 <.LVL188>:
  403062:	f103 0208 	add.w	r2, r3, #8
  403066:	920a      	str	r2, [sp, #40]	; 0x28

00403068 <.LVL189>:
  403068:	eeb0 7bc8 	vabs.f64	d7, d8
  40306c:	eeb4 7b49 	vcmp.f64	d7, d9
  403070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403074:	f340 8439 	ble.w	4038ea <.LBE27>
  403078:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
  40307c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403080:	f100 86f0 	bmi.w	403e64 <.LVL595>
  403084:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403088:	4e4e      	ldr	r6, [pc, #312]	; (4031c4 <.LVL227+0xe>)

0040308a <.LVL190>:
  40308a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  40308c:	2303      	movs	r3, #3
  40308e:	2100      	movs	r1, #0
  403090:	4618      	mov	r0, r3
  403092:	9302      	str	r3, [sp, #8]
  403094:	1f33      	subs	r3, r6, #4
  403096:	9109      	str	r1, [sp, #36]	; 0x24
  403098:	f028 0880 	bic.w	r8, r8, #128	; 0x80

0040309c <.LVL191>:
  40309c:	2c47      	cmp	r4, #71	; 0x47
  40309e:	bfd8      	it	le
  4030a0:	461e      	movle	r6, r3

004030a2 <.LVL192>:
  4030a2:	9008      	str	r0, [sp, #32]
  4030a4:	9104      	str	r1, [sp, #16]
  4030a6:	9113      	str	r1, [sp, #76]	; 0x4c
  4030a8:	9110      	str	r1, [sp, #64]	; 0x40
  4030aa:	910e      	str	r1, [sp, #56]	; 0x38
  4030ac:	e589      	b.n	402bc2 <.L59>

004030ae <.LVL193>:
  4030ae:	980a      	ldr	r0, [sp, #40]	; 0x28
  4030b0:	930d      	str	r3, [sp, #52]	; 0x34
  4030b2:	6801      	ldr	r1, [r0, #0]
  4030b4:	f88d 10d4 	strb.w	r1, [sp, #212]	; 0xd4

004030b8 <.LVL194>:
  4030b8:	2300      	movs	r3, #0
  4030ba:	4601      	mov	r1, r0
  4030bc:	461a      	mov	r2, r3
  4030be:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  4030c2:	3104      	adds	r1, #4

004030c4 <.LVL195>:
  4030c4:	2301      	movs	r3, #1
  4030c6:	9302      	str	r3, [sp, #8]
  4030c8:	9209      	str	r2, [sp, #36]	; 0x24
  4030ca:	9204      	str	r2, [sp, #16]
  4030cc:	9213      	str	r2, [sp, #76]	; 0x4c
  4030ce:	9210      	str	r2, [sp, #64]	; 0x40
  4030d0:	920e      	str	r2, [sp, #56]	; 0x38
  4030d2:	910a      	str	r1, [sp, #40]	; 0x28
  4030d4:	9308      	str	r3, [sp, #32]
  4030d6:	ae35      	add	r6, sp, #212	; 0xd4

004030d8 <.LVL196>:
  4030d8:	e577      	b.n	402bca <.LVL64>

004030da <.LVL197>:
  4030da:	f048 0110 	orr.w	r1, r8, #16

004030de <.LVL198>:
  4030de:	068c      	lsls	r4, r1, #26
  4030e0:	930d      	str	r3, [sp, #52]	; 0x34
  4030e2:	f57f aec1 	bpl.w	402e68 <.LVL134+0x8>
  4030e6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4030e8:	3507      	adds	r5, #7
  4030ea:	f025 0507 	bic.w	r5, r5, #7
  4030ee:	e9d5 2300 	ldrd	r2, r3, [r5]
  4030f2:	2a00      	cmp	r2, #0
  4030f4:	f105 0008 	add.w	r0, r5, #8
  4030f8:	461d      	mov	r5, r3
  4030fa:	f173 0300 	sbcs.w	r3, r3, #0
  4030fe:	900a      	str	r0, [sp, #40]	; 0x28

00403100 <.LVL199>:
  403100:	4614      	mov	r4, r2

00403102 <.LVL200>:
  403102:	f6bf aec7 	bge.w	402e94 <.LVL137+0xa>

00403106 <.LVL201>:
  403106:	232d      	movs	r3, #45	; 0x2d
  403108:	4264      	negs	r4, r4

0040310a <.LVL202>:
  40310a:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  40310e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1

00403112 <.LVL203>:
  403112:	2301      	movs	r3, #1
  403114:	e530      	b.n	402b78 <.L65>

00403116 <.LVL204>:
  403116:	783b      	ldrb	r3, [r7, #0]
  403118:	2b6c      	cmp	r3, #108	; 0x6c
  40311a:	bf03      	ittte	eq
  40311c:	787b      	ldrbeq	r3, [r7, #1]
  40311e:	f048 0820 	orreq.w	r8, r8, #32
  403122:	3701      	addeq	r7, #1

00403124 <.LVL206>:
  403124:	f048 0810 	orrne.w	r8, r8, #16
  403128:	e43d      	b.n	4029a6 <.LVL22>

0040312a <.LVL208>:
  40312a:	f018 0f20 	tst.w	r8, #32
  40312e:	f040 8509 	bne.w	403b44 <.LVL499>
  403132:	f018 0f10 	tst.w	r8, #16
  403136:	d135      	bne.n	4031a4 <.LVL222>
  403138:	f018 0f40 	tst.w	r8, #64	; 0x40
  40313c:	f040 8678 	bne.w	403e30 <.LBE23>
  403140:	f418 7f00 	tst.w	r8, #512	; 0x200
  403144:	d02e      	beq.n	4031a4 <.LVL222>

00403146 <.LVL209>:
  403146:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403148:	6813      	ldr	r3, [r2, #0]
  40314a:	3204      	adds	r2, #4

0040314c <.LVL210>:
  40314c:	920a      	str	r2, [sp, #40]	; 0x28
  40314e:	f89d 200c 	ldrb.w	r2, [sp, #12]

00403152 <.LVL211>:
  403152:	701a      	strb	r2, [r3, #0]
  403154:	463e      	mov	r6, r7

00403156 <.LVL212>:
  403156:	f7ff bbf6 	b.w	402946 <.LVL10>

0040315a <.LVL213>:
  40315a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40315e:	2300      	movs	r3, #0
  403160:	4619      	mov	r1, r3

00403162 <.LVL214>:
  403162:	f817 3b01 	ldrb.w	r3, [r7], #1

00403166 <.LVL215>:
  403166:	eb01 0181 	add.w	r1, r1, r1, lsl #2

0040316a <.LVL216>:
  40316a:	eb02 0141 	add.w	r1, r2, r1, lsl #1

0040316e <.LVL217>:
  40316e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  403172:	2a09      	cmp	r2, #9
  403174:	d9f5      	bls.n	403162 <.LVL214>
  403176:	9107      	str	r1, [sp, #28]
  403178:	e416      	b.n	4029a8 <.LVL22+0x2>

0040317a <.LVL218>:
  40317a:	4619      	mov	r1, r3
  40317c:	930d      	str	r3, [sp, #52]	; 0x34
  40317e:	2b00      	cmp	r3, #0
  403180:	f000 84cf 	beq.w	403b22 <.LDL1>

00403184 <.LVL219>:
  403184:	2300      	movs	r3, #0
  403186:	2001      	movs	r0, #1
  403188:	461a      	mov	r2, r3
  40318a:	9002      	str	r0, [sp, #8]
  40318c:	f88d 10d4 	strb.w	r1, [sp, #212]	; 0xd4

00403190 <.LVL220>:
  403190:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  403194:	9309      	str	r3, [sp, #36]	; 0x24
  403196:	9304      	str	r3, [sp, #16]
  403198:	9313      	str	r3, [sp, #76]	; 0x4c
  40319a:	9310      	str	r3, [sp, #64]	; 0x40
  40319c:	930e      	str	r3, [sp, #56]	; 0x38
  40319e:	9008      	str	r0, [sp, #32]
  4031a0:	ae35      	add	r6, sp, #212	; 0xd4

004031a2 <.LVL221>:
  4031a2:	e512      	b.n	402bca <.LVL64>

004031a4 <.LVL222>:
  4031a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4031a6:	6813      	ldr	r3, [r2, #0]
  4031a8:	3204      	adds	r2, #4

004031aa <.LVL223>:
  4031aa:	920a      	str	r2, [sp, #40]	; 0x28
  4031ac:	9a03      	ldr	r2, [sp, #12]

004031ae <.LVL224>:
  4031ae:	601a      	str	r2, [r3, #0]

004031b0 <.LVL225>:
  4031b0:	463e      	mov	r6, r7

004031b2 <.LVL226>:
  4031b2:	f7ff bbc8 	b.w	402946 <.LVL10>

004031b6 <.LVL227>:
  4031b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4031b8:	e553      	b.n	402c62 <.LVL82>
  4031ba:	bf00      	nop
  4031bc:	0040b4b4 	.word	0x0040b4b4
  4031c0:	0040b4c8 	.word	0x0040b4c8
  4031c4:	0040b4a8 	.word	0x0040b4a8

004031c8 <.LVL228>:
  4031c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4031ca:	2a65      	cmp	r2, #101	; 0x65
  4031cc:	f340 8096 	ble.w	4032fc <.LVL260>
  4031d0:	eeb5 8b40 	vcmp.f64	d8, #0.0
  4031d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4031d8:	f040 8139 	bne.w	40344e <.LVL295>
  4031dc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4031de:	49c2      	ldr	r1, [pc, #776]	; (4034e8 <.LVL315+0x6>)
  4031e0:	f8c9 1000 	str.w	r1, [r9]
  4031e4:	3201      	adds	r2, #1
  4031e6:	3301      	adds	r3, #1
  4031e8:	2101      	movs	r1, #1
  4031ea:	2a07      	cmp	r2, #7
  4031ec:	9324      	str	r3, [sp, #144]	; 0x90
  4031ee:	9223      	str	r2, [sp, #140]	; 0x8c
  4031f0:	f8c9 1004 	str.w	r1, [r9, #4]
  4031f4:	f300 8444 	bgt.w	403a80 <.LBE21>

004031f8 <.LVL229>:
  4031f8:	f109 0908 	add.w	r9, r9, #8

004031fc <.LVL230>:
  4031fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4031fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403200:	4293      	cmp	r3, r2
  403202:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403204:	db03      	blt.n	40320e <.LVL230+0x12>
  403206:	f018 0f01 	tst.w	r8, #1
  40320a:	f43f ad9d 	beq.w	402d48 <.LVL104>
  40320e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403210:	9815      	ldr	r0, [sp, #84]	; 0x54
  403212:	9917      	ldr	r1, [sp, #92]	; 0x5c
  403214:	f8c9 1000 	str.w	r1, [r9]
  403218:	3201      	adds	r2, #1
  40321a:	4403      	add	r3, r0
  40321c:	2a07      	cmp	r2, #7
  40321e:	f8c9 0004 	str.w	r0, [r9, #4]
  403222:	9324      	str	r3, [sp, #144]	; 0x90

00403224 <.LVL231>:
  403224:	9223      	str	r2, [sp, #140]	; 0x8c
  403226:	f300 84b2 	bgt.w	403b8e <.LVL509>

0040322a <.LVL232>:
  40322a:	f109 0908 	add.w	r9, r9, #8

0040322e <.LVL233>:
  40322e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403230:	1e54      	subs	r4, r2, #1
  403232:	2c00      	cmp	r4, #0
  403234:	f77f ad88 	ble.w	402d48 <.LVL104>
  403238:	2c10      	cmp	r4, #16
  40323a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  40323c:	f340 8308 	ble.w	403850 <.LVL421>
  403240:	2510      	movs	r5, #16
  403242:	9e05      	ldr	r6, [sp, #20]
  403244:	e005      	b.n	403252 <.LVL238>

00403246 <.LVL235>:
  403246:	f109 0908 	add.w	r9, r9, #8

0040324a <.LVL236>:
  40324a:	3c10      	subs	r4, #16
  40324c:	2c10      	cmp	r4, #16
  40324e:	f340 82ff 	ble.w	403850 <.LVL421>

00403252 <.LVL238>:
  403252:	3201      	adds	r2, #1
  403254:	3310      	adds	r3, #16
  403256:	2a07      	cmp	r2, #7
  403258:	9324      	str	r3, [sp, #144]	; 0x90

0040325a <.LVL239>:
  40325a:	9223      	str	r2, [sp, #140]	; 0x8c
  40325c:	f8c9 a000 	str.w	sl, [r9]
  403260:	f8c9 5004 	str.w	r5, [r9, #4]
  403264:	ddef      	ble.n	403246 <.LVL235>
  403266:	aa22      	add	r2, sp, #136	; 0x88
  403268:	4631      	mov	r1, r6
  40326a:	4658      	mov	r0, fp
  40326c:	f006 fb94 	bl	409998 <__ssprint_r>

00403270 <.LVL240>:
  403270:	2800      	cmp	r0, #0
  403272:	f47f ac31 	bne.w	402ad8 <.L189>
  403276:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403278:	9a23      	ldr	r2, [sp, #140]	; 0x8c

0040327a <.LVL241>:
  40327a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

0040327e <.LVL242>:
  40327e:	e7e4      	b.n	40324a <.LVL236>

00403280 <.LVL243>:
  403280:	9a07      	ldr	r2, [sp, #28]
  403282:	9902      	ldr	r1, [sp, #8]
  403284:	1a54      	subs	r4, r2, r1

00403286 <.LVL244>:
  403286:	2c00      	cmp	r4, #0
  403288:	f77f ad0f 	ble.w	402caa <.LVL86+0x8>
  40328c:	2c10      	cmp	r4, #16
  40328e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403290:	dd26      	ble.n	4032e0 <.LVL257>
  403292:	4649      	mov	r1, r9
  403294:	2510      	movs	r5, #16
  403296:	46a1      	mov	r9, r4
  403298:	9c05      	ldr	r4, [sp, #20]

0040329a <.LVL245>:
  40329a:	e006      	b.n	4032aa <.LVL249>

0040329c <.LVL246>:
  40329c:	f1a9 0910 	sub.w	r9, r9, #16

004032a0 <.LVL247>:
  4032a0:	f1b9 0f10 	cmp.w	r9, #16
  4032a4:	f101 0108 	add.w	r1, r1, #8

004032a8 <.LVL248>:
  4032a8:	dd18      	ble.n	4032dc <.LVL256>

004032aa <.LVL249>:
  4032aa:	3201      	adds	r2, #1
  4032ac:	3310      	adds	r3, #16
  4032ae:	2a07      	cmp	r2, #7
  4032b0:	9324      	str	r3, [sp, #144]	; 0x90

004032b2 <.LVL250>:
  4032b2:	9223      	str	r2, [sp, #140]	; 0x8c
  4032b4:	f8c1 a000 	str.w	sl, [r1]
  4032b8:	604d      	str	r5, [r1, #4]
  4032ba:	ddef      	ble.n	40329c <.LVL246>
  4032bc:	aa22      	add	r2, sp, #136	; 0x88
  4032be:	4621      	mov	r1, r4

004032c0 <.LVL251>:
  4032c0:	4658      	mov	r0, fp
  4032c2:	f006 fb69 	bl	409998 <__ssprint_r>

004032c6 <.LVL252>:
  4032c6:	2800      	cmp	r0, #0
  4032c8:	f47f ac06 	bne.w	402ad8 <.L189>
  4032cc:	f1a9 0910 	sub.w	r9, r9, #16

004032d0 <.LVL253>:
  4032d0:	f1b9 0f10 	cmp.w	r9, #16
  4032d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4032d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c

004032d8 <.LVL254>:
  4032d8:	a925      	add	r1, sp, #148	; 0x94

004032da <.LVL255>:
  4032da:	dce6      	bgt.n	4032aa <.LVL249>

004032dc <.LVL256>:
  4032dc:	464c      	mov	r4, r9
  4032de:	4689      	mov	r9, r1

004032e0 <.LVL257>:
  4032e0:	3201      	adds	r2, #1
  4032e2:	4423      	add	r3, r4
  4032e4:	2a07      	cmp	r2, #7
  4032e6:	9324      	str	r3, [sp, #144]	; 0x90
  4032e8:	9223      	str	r2, [sp, #140]	; 0x8c
  4032ea:	f8c9 a000 	str.w	sl, [r9]
  4032ee:	f8c9 4004 	str.w	r4, [r9, #4]
  4032f2:	f300 82e6 	bgt.w	4038c2 <.LVL432>

004032f6 <.LVL258>:
  4032f6:	f109 0908 	add.w	r9, r9, #8

004032fa <.LVL259>:
  4032fa:	e4d6      	b.n	402caa <.LVL86+0x8>

004032fc <.LVL260>:
  4032fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4032fe:	f8c9 6000 	str.w	r6, [r9]
  403302:	2a01      	cmp	r2, #1
  403304:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403306:	f103 0301 	add.w	r3, r3, #1
  40330a:	f102 0201 	add.w	r2, r2, #1
  40330e:	f04f 0101 	mov.w	r1, #1
  403312:	9324      	str	r3, [sp, #144]	; 0x90
  403314:	9223      	str	r2, [sp, #140]	; 0x8c
  403316:	f8c9 1004 	str.w	r1, [r9, #4]
  40331a:	f340 82a5 	ble.w	403868 <.LBE19>
  40331e:	2a07      	cmp	r2, #7
  403320:	f300 82b5 	bgt.w	40388e <.LBE26>
  403324:	f109 0908 	add.w	r9, r9, #8

00403328 <.LVL261>:
  403328:	9815      	ldr	r0, [sp, #84]	; 0x54
  40332a:	9917      	ldr	r1, [sp, #92]	; 0x5c
  40332c:	f8c9 1000 	str.w	r1, [r9]
  403330:	3201      	adds	r2, #1
  403332:	4403      	add	r3, r0
  403334:	2a07      	cmp	r2, #7
  403336:	9324      	str	r3, [sp, #144]	; 0x90

00403338 <.LVL262>:
  403338:	9223      	str	r2, [sp, #140]	; 0x8c
  40333a:	f8c9 0004 	str.w	r0, [r9, #4]
  40333e:	f300 82b3 	bgt.w	4038a8 <.LVL429>
  403342:	f109 0908 	add.w	r9, r9, #8

00403346 <.LVL263>:
  403346:	eeb5 8b40 	vcmp.f64	d8, #0.0
  40334a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40334e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403350:	f000 8121 	beq.w	403596 <.LVL337>
  403354:	3901      	subs	r1, #1
  403356:	3201      	adds	r2, #1
  403358:	3601      	adds	r6, #1

0040335a <.LVL264>:
  40335a:	440b      	add	r3, r1
  40335c:	2a07      	cmp	r2, #7
  40335e:	f8c9 6000 	str.w	r6, [r9]
  403362:	9223      	str	r2, [sp, #140]	; 0x8c
  403364:	9324      	str	r3, [sp, #144]	; 0x90

00403366 <.LVL265>:
  403366:	f8c9 1004 	str.w	r1, [r9, #4]
  40336a:	f300 8146 	bgt.w	4035fa <.LVL348>

0040336e <.LVL266>:
  40336e:	f109 0908 	add.w	r9, r9, #8

00403372 <.LVL267>:
  403372:	9819      	ldr	r0, [sp, #100]	; 0x64
  403374:	f8c9 0004 	str.w	r0, [r9, #4]
  403378:	3201      	adds	r2, #1
  40337a:	4403      	add	r3, r0
  40337c:	a91e      	add	r1, sp, #120	; 0x78
  40337e:	2a07      	cmp	r2, #7
  403380:	9324      	str	r3, [sp, #144]	; 0x90

00403382 <.LVL268>:
  403382:	9223      	str	r2, [sp, #140]	; 0x8c
  403384:	f8c9 1000 	str.w	r1, [r9]
  403388:	f77f acdc 	ble.w	402d44 <.LVL103>

0040338c <.LVL269>:
  40338c:	aa22      	add	r2, sp, #136	; 0x88
  40338e:	9905      	ldr	r1, [sp, #20]
  403390:	4658      	mov	r0, fp
  403392:	f006 fb01 	bl	409998 <__ssprint_r>

00403396 <.LVL270>:
  403396:	2800      	cmp	r0, #0
  403398:	f47f ab9e 	bne.w	402ad8 <.L189>
  40339c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40339e:	f10d 0994 	add.w	r9, sp, #148	; 0x94
  4033a2:	e4d1      	b.n	402d48 <.LVL104>

004033a4 <.LVL271>:
  4033a4:	4641      	mov	r1, r8

004033a6 <.LVL272>:
  4033a6:	2b01      	cmp	r3, #1
  4033a8:	f000 8135 	beq.w	403616 <.LVL351>
  4033ac:	2b02      	cmp	r3, #2
  4033ae:	d127      	bne.n	403400 <.LVL286>
  4033b0:	4688      	mov	r8, r1
  4033b2:	2400      	movs	r4, #0

004033b4 <.LVL273>:
  4033b4:	2500      	movs	r5, #0
  4033b6:	e57e      	b.n	402eb6 <.LVL141>

004033b8 <.LVL274>:
  4033b8:	aa22      	add	r2, sp, #136	; 0x88
  4033ba:	9905      	ldr	r1, [sp, #20]
  4033bc:	4658      	mov	r0, fp
  4033be:	f006 faeb 	bl	409998 <__ssprint_r>

004033c2 <.LVL275>:
  4033c2:	2800      	cmp	r0, #0
  4033c4:	f47f ab88 	bne.w	402ad8 <.L189>
  4033c8:	9b24      	ldr	r3, [sp, #144]	; 0x90

004033ca <.LVL276>:
  4033ca:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004033ce <.LVL277>:
  4033ce:	e4a8      	b.n	402d22 <.LVL102>

004033d0 <.LVL278>:
  4033d0:	aa22      	add	r2, sp, #136	; 0x88
  4033d2:	9905      	ldr	r1, [sp, #20]
  4033d4:	4658      	mov	r0, fp
  4033d6:	f006 fadf 	bl	409998 <__ssprint_r>

004033da <.LVL279>:
  4033da:	2800      	cmp	r0, #0
  4033dc:	f47f ab7c 	bne.w	402ad8 <.L189>
  4033e0:	9b24      	ldr	r3, [sp, #144]	; 0x90

004033e2 <.LVL280>:
  4033e2:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004033e6 <.LVL281>:
  4033e6:	e44c      	b.n	402c82 <.LVL84>

004033e8 <.LVL282>:
  4033e8:	aa22      	add	r2, sp, #136	; 0x88
  4033ea:	9905      	ldr	r1, [sp, #20]
  4033ec:	4658      	mov	r0, fp
  4033ee:	f006 fad3 	bl	409998 <__ssprint_r>

004033f2 <.LVL283>:
  4033f2:	2800      	cmp	r0, #0
  4033f4:	f47f ab70 	bne.w	402ad8 <.L189>
  4033f8:	9b24      	ldr	r3, [sp, #144]	; 0x90

004033fa <.LVL284>:
  4033fa:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004033fe <.LVL285>:
  4033fe:	e450      	b.n	402ca2 <.LVL86>

00403400 <.LVL286>:
  403400:	4688      	mov	r8, r1
  403402:	2400      	movs	r4, #0

00403404 <.LVL287>:
  403404:	2500      	movs	r5, #0

00403406 <.LVL288>:
  403406:	a94e      	add	r1, sp, #312	; 0x138

00403408 <.LVL289>:
  403408:	e000      	b.n	40340c <.LVL291>

0040340a <.LVL290>:
  40340a:	4631      	mov	r1, r6

0040340c <.LVL291>:
  40340c:	08e2      	lsrs	r2, r4, #3
  40340e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  403412:	08e8      	lsrs	r0, r5, #3
  403414:	f004 0307 	and.w	r3, r4, #7
  403418:	4605      	mov	r5, r0
  40341a:	4614      	mov	r4, r2

0040341c <.LVL292>:
  40341c:	3330      	adds	r3, #48	; 0x30
  40341e:	ea54 0205 	orrs.w	r2, r4, r5
  403422:	f801 3c01 	strb.w	r3, [r1, #-1]
  403426:	f101 36ff 	add.w	r6, r1, #4294967295

0040342a <.LVL293>:
  40342a:	d1ee      	bne.n	40340a <.LVL290>
  40342c:	f018 0f01 	tst.w	r8, #1
  403430:	f43f ad51 	beq.w	402ed6 <.LVL147>
  403434:	2b30      	cmp	r3, #48	; 0x30
  403436:	f43f ad4e 	beq.w	402ed6 <.LVL147>
  40343a:	2330      	movs	r3, #48	; 0x30
  40343c:	3902      	subs	r1, #2

0040343e <.LVL294>:
  40343e:	f806 3c01 	strb.w	r3, [r6, #-1]
  403442:	ab4e      	add	r3, sp, #312	; 0x138
  403444:	1a5b      	subs	r3, r3, r1
  403446:	9308      	str	r3, [sp, #32]
  403448:	460e      	mov	r6, r1
  40344a:	f7ff bbad 	b.w	402ba8 <.LVL61>

0040344e <.LVL295>:
  40344e:	991c      	ldr	r1, [sp, #112]	; 0x70
  403450:	2900      	cmp	r1, #0
  403452:	f340 832f 	ble.w	403ab4 <.LBE46>

00403456 <.LVL296>:
  403456:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403458:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40345a:	428a      	cmp	r2, r1
  40345c:	bfa8      	it	ge
  40345e:	460a      	movge	r2, r1

00403460 <.LBB13>:
  403460:	2a00      	cmp	r2, #0
  403462:	4614      	mov	r4, r2

00403464 <.LVL297>:
  403464:	dd0d      	ble.n	403482 <.LVL300>
  403466:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00403468 <.LVL298>:
  403468:	f8c9 6000 	str.w	r6, [r9]
  40346c:	3201      	adds	r2, #1
  40346e:	4423      	add	r3, r4
  403470:	2a07      	cmp	r2, #7
  403472:	9324      	str	r3, [sp, #144]	; 0x90
  403474:	f8c9 4004 	str.w	r4, [r9, #4]
  403478:	9223      	str	r2, [sp, #140]	; 0x8c
  40347a:	f300 84cc 	bgt.w	403e16 <.LBB23>

0040347e <.LVL299>:
  40347e:	f109 0908 	add.w	r9, r9, #8

00403482 <.LVL300>:
  403482:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403484:	2c00      	cmp	r4, #0
  403486:	bfa8      	it	ge
  403488:	1b12      	subge	r2, r2, r4
  40348a:	2a00      	cmp	r2, #0
  40348c:	4614      	mov	r4, r2

0040348e <.LVL301>:
  40348e:	f340 8100 	ble.w	403692 <.LBE15>
  403492:	2c10      	cmp	r4, #16
  403494:	9a23      	ldr	r2, [sp, #140]	; 0x8c

00403496 <.LVL302>:
  403496:	f340 82d8 	ble.w	403a4a <.LBB20>
  40349a:	4649      	mov	r1, r9
  40349c:	2510      	movs	r5, #16
  40349e:	46a1      	mov	r9, r4
  4034a0:	9c05      	ldr	r4, [sp, #20]

004034a2 <.LVL303>:
  4034a2:	e006      	b.n	4034b2 <.LVL307>

004034a4 <.LVL304>:
  4034a4:	3108      	adds	r1, #8

004034a6 <.LVL305>:
  4034a6:	f1a9 0910 	sub.w	r9, r9, #16
  4034aa:	f1b9 0f10 	cmp.w	r9, #16
  4034ae:	f340 82ca 	ble.w	403a46 <.LVL471>

004034b2 <.LVL307>:
  4034b2:	3201      	adds	r2, #1
  4034b4:	3310      	adds	r3, #16
  4034b6:	2a07      	cmp	r2, #7
  4034b8:	9324      	str	r3, [sp, #144]	; 0x90

004034ba <.LVL308>:
  4034ba:	9223      	str	r2, [sp, #140]	; 0x8c
  4034bc:	f8c1 a000 	str.w	sl, [r1]
  4034c0:	604d      	str	r5, [r1, #4]
  4034c2:	ddef      	ble.n	4034a4 <.LVL304>
  4034c4:	aa22      	add	r2, sp, #136	; 0x88
  4034c6:	4621      	mov	r1, r4

004034c8 <.LVL309>:
  4034c8:	4658      	mov	r0, fp
  4034ca:	f006 fa65 	bl	409998 <__ssprint_r>

004034ce <.LVL310>:
  4034ce:	2800      	cmp	r0, #0
  4034d0:	f47f ab02 	bne.w	402ad8 <.L189>
  4034d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c

004034d8 <.LVL311>:
  4034d8:	a925      	add	r1, sp, #148	; 0x94

004034da <.LVL312>:
  4034da:	e7e4      	b.n	4034a6 <.LVL305>

004034dc <.LBE13>:
  4034dc:	9b04      	ldr	r3, [sp, #16]

004034de <.LVL314>:
  4034de:	9308      	str	r3, [sp, #32]
  4034e0:	ae4e      	add	r6, sp, #312	; 0x138

004034e2 <.LVL315>:
  4034e2:	f7ff bb61 	b.w	402ba8 <.LVL61>
  4034e6:	bf00      	nop
  4034e8:	0040b4e4 	.word	0x0040b4e4

004034ec <.LVL316>:
  4034ec:	2d00      	cmp	r5, #0
  4034ee:	bf08      	it	eq
  4034f0:	2c0a      	cmpeq	r4, #10
  4034f2:	f0c0 808f 	bcc.w	403614 <.LVL350>
  4034f6:	f408 6380 	and.w	r3, r8, #1024	; 0x400

004034fa <.LVL317>:
  4034fa:	2200      	movs	r2, #0
  4034fc:	9702      	str	r7, [sp, #8]
  4034fe:	f8cd 9018 	str.w	r9, [sp, #24]
  403502:	f8cd b020 	str.w	fp, [sp, #32]
  403506:	ae4e      	add	r6, sp, #312	; 0x138

00403508 <.LVL318>:
  403508:	46c3      	mov	fp, r8
  40350a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48

0040350e <.LVL319>:
  40350e:	4617      	mov	r7, r2

00403510 <.LVL320>:
  403510:	4698      	mov	r8, r3

00403512 <.LVL321>:
  403512:	e00a      	b.n	40352a <.LVL325+0x6>

00403514 <.LVL322>:
  403514:	2300      	movs	r3, #0
  403516:	4620      	mov	r0, r4
  403518:	4629      	mov	r1, r5
  40351a:	220a      	movs	r2, #10
  40351c:	f008 f9ca 	bl	40b8b4 <.LBE14>
  403520:	4604      	mov	r4, r0

00403522 <.LVL324>:
  403522:	460d      	mov	r5, r1

00403524 <.LVL325>:
  403524:	ea54 0305 	orrs.w	r3, r4, r5
  403528:	d07e      	beq.n	403628 <.LVL354>
  40352a:	220a      	movs	r2, #10
  40352c:	2300      	movs	r3, #0
  40352e:	4620      	mov	r0, r4
  403530:	4629      	mov	r1, r5
  403532:	f008 f9bf 	bl	40b8b4 <.LBE14>
  403536:	3230      	adds	r2, #48	; 0x30
  403538:	f806 2c01 	strb.w	r2, [r6, #-1]
  40353c:	3701      	adds	r7, #1

0040353e <.LVL328>:
  40353e:	3e01      	subs	r6, #1

00403540 <.LVL329>:
  403540:	f1b8 0f00 	cmp.w	r8, #0
  403544:	d0e6      	beq.n	403514 <.LVL322>
  403546:	f899 3000 	ldrb.w	r3, [r9]
  40354a:	429f      	cmp	r7, r3
  40354c:	d1e2      	bne.n	403514 <.LVL322>
  40354e:	2fff      	cmp	r7, #255	; 0xff
  403550:	d0e0      	beq.n	403514 <.LVL322>
  403552:	2d00      	cmp	r5, #0
  403554:	bf08      	it	eq
  403556:	2c0a      	cmpeq	r4, #10
  403558:	d3dc      	bcc.n	403514 <.LVL322>
  40355a:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40355c:	9916      	ldr	r1, [sp, #88]	; 0x58
  40355e:	1af6      	subs	r6, r6, r3
  403560:	4630      	mov	r0, r6
  403562:	461a      	mov	r2, r3
  403564:	f007 fcae 	bl	40aec4 <.LFE15>

00403568 <.LVL331>:
  403568:	f899 7001 	ldrb.w	r7, [r9, #1]
  40356c:	2f00      	cmp	r7, #0
  40356e:	d0d1      	beq.n	403514 <.LVL322>
  403570:	f109 0901 	add.w	r9, r9, #1
  403574:	2700      	movs	r7, #0
  403576:	e7cd      	b.n	403514 <.LVL322>

00403578 <.LVL333>:
  403578:	aa22      	add	r2, sp, #136	; 0x88
  40357a:	9905      	ldr	r1, [sp, #20]
  40357c:	4658      	mov	r0, fp
  40357e:	f006 fa0b 	bl	409998 <__ssprint_r>

00403582 <.LVL334>:
  403582:	2800      	cmp	r0, #0
  403584:	f47f aaa8 	bne.w	402ad8 <.L189>
  403588:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  40358c:	9b24      	ldr	r3, [sp, #144]	; 0x90

0040358e <.LVL335>:
  40358e:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403592 <.LVL336>:
  403592:	f7ff bb66 	b.w	402c62 <.LVL82>

00403596 <.LVL337>:
  403596:	1e4c      	subs	r4, r1, #1
  403598:	2c00      	cmp	r4, #0
  40359a:	f77f aeea 	ble.w	403372 <.LVL267>
  40359e:	2c10      	cmp	r4, #16
  4035a0:	dd20      	ble.n	4035e4 <.LVL346+0x2>
  4035a2:	2510      	movs	r5, #16
  4035a4:	9e05      	ldr	r6, [sp, #20]

004035a6 <.LVL339>:
  4035a6:	e004      	b.n	4035b2 <.LVL342+0x2>

004035a8 <.LVL340>:
  4035a8:	3c10      	subs	r4, #16

004035aa <.LVL341>:
  4035aa:	2c10      	cmp	r4, #16
  4035ac:	f109 0908 	add.w	r9, r9, #8

004035b0 <.LVL342>:
  4035b0:	dd18      	ble.n	4035e4 <.LVL346+0x2>
  4035b2:	3201      	adds	r2, #1
  4035b4:	3310      	adds	r3, #16
  4035b6:	2a07      	cmp	r2, #7
  4035b8:	9324      	str	r3, [sp, #144]	; 0x90

004035ba <.LVL343>:
  4035ba:	9223      	str	r2, [sp, #140]	; 0x8c
  4035bc:	f8c9 a000 	str.w	sl, [r9]
  4035c0:	f8c9 5004 	str.w	r5, [r9, #4]
  4035c4:	ddf0      	ble.n	4035a8 <.LVL340>
  4035c6:	aa22      	add	r2, sp, #136	; 0x88
  4035c8:	4631      	mov	r1, r6
  4035ca:	4658      	mov	r0, fp
  4035cc:	f006 f9e4 	bl	409998 <__ssprint_r>

004035d0 <.LVL344>:
  4035d0:	2800      	cmp	r0, #0
  4035d2:	f47f aa81 	bne.w	402ad8 <.L189>
  4035d6:	3c10      	subs	r4, #16

004035d8 <.LVL345>:
  4035d8:	2c10      	cmp	r4, #16
  4035da:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035dc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4035de:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004035e2 <.LVL346>:
  4035e2:	dce6      	bgt.n	4035b2 <.LVL342+0x2>
  4035e4:	3201      	adds	r2, #1
  4035e6:	4423      	add	r3, r4
  4035e8:	2a07      	cmp	r2, #7
  4035ea:	9324      	str	r3, [sp, #144]	; 0x90

004035ec <.LVL347>:
  4035ec:	9223      	str	r2, [sp, #140]	; 0x8c
  4035ee:	f8c9 a000 	str.w	sl, [r9]
  4035f2:	f8c9 4004 	str.w	r4, [r9, #4]
  4035f6:	f77f aeba 	ble.w	40336e <.LVL266>

004035fa <.LVL348>:
  4035fa:	aa22      	add	r2, sp, #136	; 0x88
  4035fc:	9905      	ldr	r1, [sp, #20]
  4035fe:	4658      	mov	r0, fp
  403600:	f006 f9ca 	bl	409998 <__ssprint_r>

00403604 <.LVL349>:
  403604:	2800      	cmp	r0, #0
  403606:	f47f aa67 	bne.w	402ad8 <.L189>
  40360a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40360c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  40360e:	f10d 0994 	add.w	r9, sp, #148	; 0x94
  403612:	e6ae      	b.n	403372 <.LVL267>

00403614 <.LVL350>:
  403614:	4641      	mov	r1, r8

00403616 <.LVL351>:
  403616:	ae4e      	add	r6, sp, #312	; 0x138
  403618:	3430      	adds	r4, #48	; 0x30

0040361a <.LVL352>:
  40361a:	2301      	movs	r3, #1

0040361c <.LVL353>:
  40361c:	4688      	mov	r8, r1
  40361e:	f806 4d01 	strb.w	r4, [r6, #-1]!
  403622:	9308      	str	r3, [sp, #32]
  403624:	f7ff bac0 	b.w	402ba8 <.LVL61>

00403628 <.LVL354>:
  403628:	ab4e      	add	r3, sp, #312	; 0x138
  40362a:	1b9b      	subs	r3, r3, r6
  40362c:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403630:	46d8      	mov	r8, fp
  403632:	970f      	str	r7, [sp, #60]	; 0x3c
  403634:	f8dd b020 	ldr.w	fp, [sp, #32]

00403638 <.LVL355>:
  403638:	f8dd 9018 	ldr.w	r9, [sp, #24]

0040363c <.LVL356>:
  40363c:	9f02      	ldr	r7, [sp, #8]

0040363e <.LVL357>:
  40363e:	9308      	str	r3, [sp, #32]
  403640:	f7ff bab2 	b.w	402ba8 <.LVL61>

00403644 <.LVL358>:
  403644:	681c      	ldr	r4, [r3, #0]
  403646:	3304      	adds	r3, #4
  403648:	930a      	str	r3, [sp, #40]	; 0x28

0040364a <.LVL359>:
  40364a:	2500      	movs	r5, #0
  40364c:	f7ff bbed 	b.w	402e2a <.LVL126>

00403650 <.LVL360>:
  403650:	3204      	adds	r2, #4
  403652:	681c      	ldr	r4, [r3, #0]
  403654:	920a      	str	r2, [sp, #40]	; 0x28

00403656 <.LVL361>:
  403656:	2301      	movs	r3, #1
  403658:	2500      	movs	r5, #0
  40365a:	f7ff ba8a 	b.w	402b72 <.L150>

0040365e <.LVL362>:
  40365e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403660:	6814      	ldr	r4, [r2, #0]
  403662:	4613      	mov	r3, r2
  403664:	3304      	adds	r3, #4

00403666 <.LVL363>:
  403666:	17e5      	asrs	r5, r4, #31
  403668:	930a      	str	r3, [sp, #40]	; 0x28
  40366a:	4622      	mov	r2, r4
  40366c:	462b      	mov	r3, r5

0040366e <.LVL364>:
  40366e:	e40c      	b.n	402e8a <.LVL137>

00403670 <.LVL365>:
  403670:	681c      	ldr	r4, [r3, #0]
  403672:	3304      	adds	r3, #4
  403674:	930a      	str	r3, [sp, #40]	; 0x28

00403676 <.LVL366>:
  403676:	2500      	movs	r5, #0
  403678:	f7ff ba69 	b.w	402b4e <.LVL51>

0040367c <.LBB15>:
  40367c:	aa22      	add	r2, sp, #136	; 0x88
  40367e:	9905      	ldr	r1, [sp, #20]
  403680:	4658      	mov	r0, fp
  403682:	f006 f989 	bl	409998 <__ssprint_r>

00403686 <.LVL368>:
  403686:	2800      	cmp	r0, #0
  403688:	f47f aa26 	bne.w	402ad8 <.L189>
  40368c:	9b24      	ldr	r3, [sp, #144]	; 0x90

0040368e <.LVL369>:
  40368e:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403692 <.LBE15>:
  403692:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403694:	f418 6f80 	tst.w	r8, #1024	; 0x400
  403698:	4432      	add	r2, r6
  40369a:	4615      	mov	r5, r2

0040369c <.LVL371>:
  40369c:	f000 8083 	beq.w	4037a6 <.LVL403>

004036a0 <.LBB16>:
  4036a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4036a2:	9608      	str	r6, [sp, #32]
  4036a4:	4618      	mov	r0, r3

004036a6 <.LBE16>:
  4036a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4036a8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c

004036ac <.LBB17>:
  4036ac:	1871      	adds	r1, r6, r1
  4036ae:	9104      	str	r1, [sp, #16]
  4036b0:	9706      	str	r7, [sp, #24]
  4036b2:	4649      	mov	r1, r9
  4036b4:	4616      	mov	r6, r2

004036b6 <.LVL372>:
  4036b6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
  4036ba:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c

004036be <.LVL373>:
  4036be:	9d05      	ldr	r5, [sp, #20]

004036c0 <.LBE17>:
  4036c0:	2b00      	cmp	r3, #0
  4036c2:	d05f      	beq.n	403784 <.LVL399>

004036c4 <.LVL374>:
  4036c4:	f1b8 0f00 	cmp.w	r8, #0
  4036c8:	f000 8108 	beq.w	4038dc <.LBB27>
  4036cc:	f108 38ff 	add.w	r8, r8, #4294967295

004036d0 <.LVL375>:
  4036d0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4036d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4036d4:	600a      	str	r2, [r1, #0]
  4036d6:	3301      	adds	r3, #1
  4036d8:	4448      	add	r0, r9
  4036da:	2b07      	cmp	r3, #7
  4036dc:	9024      	str	r0, [sp, #144]	; 0x90
  4036de:	f8c1 9004 	str.w	r9, [r1, #4]
  4036e2:	9323      	str	r3, [sp, #140]	; 0x8c
  4036e4:	f300 80c8 	bgt.w	403878 <.LBB26>

004036e8 <.LVL376>:
  4036e8:	3108      	adds	r1, #8

004036ea <.LBB18>:
  4036ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4036ec:	9c04      	ldr	r4, [sp, #16]
  4036ee:	7813      	ldrb	r3, [r2, #0]
  4036f0:	1ba4      	subs	r4, r4, r6

004036f2 <.LVL378>:
  4036f2:	429c      	cmp	r4, r3
  4036f4:	bfa8      	it	ge
  4036f6:	461c      	movge	r4, r3
  4036f8:	2c00      	cmp	r4, #0
  4036fa:	dd0b      	ble.n	403714 <.LVL382>
  4036fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4036fe:	600e      	str	r6, [r1, #0]
  403700:	3301      	adds	r3, #1
  403702:	4420      	add	r0, r4
  403704:	2b07      	cmp	r3, #7
  403706:	9024      	str	r0, [sp, #144]	; 0x90

00403708 <.LVL380>:
  403708:	604c      	str	r4, [r1, #4]
  40370a:	9323      	str	r3, [sp, #140]	; 0x8c
  40370c:	f300 81ab 	bgt.w	403a66 <.LBB21>

00403710 <.LVL381>:
  403710:	7813      	ldrb	r3, [r2, #0]
  403712:	3108      	adds	r1, #8

00403714 <.LVL382>:
  403714:	2c00      	cmp	r4, #0
  403716:	bfac      	ite	ge
  403718:	1b1c      	subge	r4, r3, r4

0040371a <.LVL383>:
  40371a:	461c      	movlt	r4, r3

0040371c <.LVL384>:
  40371c:	2c00      	cmp	r4, #0
  40371e:	dd2d      	ble.n	40377c <.LBE18>
  403720:	2c10      	cmp	r4, #16
  403722:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403724:	dd1d      	ble.n	403762 <.LVL395>
  403726:	2710      	movs	r7, #16
  403728:	e004      	b.n	403734 <.LVL388>

0040372a <.LVL385>:
  40372a:	3c10      	subs	r4, #16

0040372c <.LVL386>:
  40372c:	2c10      	cmp	r4, #16
  40372e:	f101 0108 	add.w	r1, r1, #8

00403732 <.LVL387>:
  403732:	dd16      	ble.n	403762 <.LVL395>

00403734 <.LVL388>:
  403734:	3201      	adds	r2, #1
  403736:	3010      	adds	r0, #16
  403738:	2a07      	cmp	r2, #7
  40373a:	9024      	str	r0, [sp, #144]	; 0x90

0040373c <.LVL389>:
  40373c:	9223      	str	r2, [sp, #140]	; 0x8c
  40373e:	f8c1 a000 	str.w	sl, [r1]
  403742:	604f      	str	r7, [r1, #4]
  403744:	ddf1      	ble.n	40372a <.LVL385>
  403746:	aa22      	add	r2, sp, #136	; 0x88
  403748:	4629      	mov	r1, r5

0040374a <.LVL390>:
  40374a:	4658      	mov	r0, fp
  40374c:	f006 f924 	bl	409998 <__ssprint_r>

00403750 <.LVL391>:
  403750:	2800      	cmp	r0, #0
  403752:	f47f a9c1 	bne.w	402ad8 <.L189>
  403756:	3c10      	subs	r4, #16

00403758 <.LVL392>:
  403758:	2c10      	cmp	r4, #16
  40375a:	9824      	ldr	r0, [sp, #144]	; 0x90
  40375c:	9a23      	ldr	r2, [sp, #140]	; 0x8c

0040375e <.LVL393>:
  40375e:	a925      	add	r1, sp, #148	; 0x94

00403760 <.LVL394>:
  403760:	dce8      	bgt.n	403734 <.LVL388>

00403762 <.LVL395>:
  403762:	3201      	adds	r2, #1
  403764:	4420      	add	r0, r4
  403766:	2a07      	cmp	r2, #7
  403768:	9024      	str	r0, [sp, #144]	; 0x90
  40376a:	9223      	str	r2, [sp, #140]	; 0x8c
  40376c:	f8c1 a000 	str.w	sl, [r1]
  403770:	604c      	str	r4, [r1, #4]
  403772:	f300 8191 	bgt.w	403a98 <.LBB22>

00403776 <.LVL396>:
  403776:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403778:	781b      	ldrb	r3, [r3, #0]
  40377a:	3108      	adds	r1, #8

0040377c <.LBE18>:
  40377c:	441e      	add	r6, r3
  40377e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403780:	2b00      	cmp	r3, #0
  403782:	d19f      	bne.n	4036c4 <.LVL374>

00403784 <.LVL399>:
  403784:	f1b8 0f00 	cmp.w	r8, #0
  403788:	d1a0      	bne.n	4036cc <.LVL374+0x8>
  40378a:	4634      	mov	r4, r6
  40378c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40378e:	9e08      	ldr	r6, [sp, #32]

00403790 <.LVL400>:
  403790:	9f06      	ldr	r7, [sp, #24]
  403792:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c

00403796 <.LVL401>:
  403796:	18b2      	adds	r2, r6, r2
  403798:	4294      	cmp	r4, r2
  40379a:	4689      	mov	r9, r1
  40379c:	4621      	mov	r1, r4
  40379e:	bf28      	it	cs
  4037a0:	4611      	movcs	r1, r2
  4037a2:	4603      	mov	r3, r0

004037a4 <.LVL402>:
  4037a4:	460d      	mov	r5, r1

004037a6 <.LVL403>:
  4037a6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  4037a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4037aa:	428a      	cmp	r2, r1
  4037ac:	f280 8201 	bge.w	403bb2 <.LBB47>
  4037b0:	9923      	ldr	r1, [sp, #140]	; 0x8c
  4037b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4037b4:	9817      	ldr	r0, [sp, #92]	; 0x5c
  4037b6:	f8c9 0000 	str.w	r0, [r9]
  4037ba:	3101      	adds	r1, #1
  4037bc:	4423      	add	r3, r4
  4037be:	2907      	cmp	r1, #7
  4037c0:	9324      	str	r3, [sp, #144]	; 0x90
  4037c2:	f8c9 4004 	str.w	r4, [r9, #4]
  4037c6:	9123      	str	r1, [sp, #140]	; 0x8c
  4037c8:	f300 828d 	bgt.w	403ce6 <.LBB50>

004037cc <.LVL404>:
  4037cc:	f109 0908 	add.w	r9, r9, #8

004037d0 <.LBB19>:
  4037d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4037d2:	1874      	adds	r4, r6, r1
  4037d4:	1b64      	subs	r4, r4, r5

004037d6 <.LVL406>:
  4037d6:	1a8a      	subs	r2, r1, r2
  4037d8:	4294      	cmp	r4, r2
  4037da:	bfa8      	it	ge
  4037dc:	4614      	movge	r4, r2
  4037de:	2c00      	cmp	r4, #0
  4037e0:	dd0d      	ble.n	4037fe <.LVL409>
  4037e2:	9923      	ldr	r1, [sp, #140]	; 0x8c
  4037e4:	f8c9 5000 	str.w	r5, [r9]
  4037e8:	3101      	adds	r1, #1
  4037ea:	4423      	add	r3, r4
  4037ec:	2907      	cmp	r1, #7
  4037ee:	9324      	str	r3, [sp, #144]	; 0x90
  4037f0:	f8c9 4004 	str.w	r4, [r9, #4]
  4037f4:	9123      	str	r1, [sp, #140]	; 0x8c
  4037f6:	f300 83bc 	bgt.w	403f72 <.LBB24>

004037fa <.LVL408>:
  4037fa:	f109 0908 	add.w	r9, r9, #8

004037fe <.LVL409>:
  4037fe:	2c00      	cmp	r4, #0
  403800:	bfac      	ite	ge
  403802:	1b14      	subge	r4, r2, r4

00403804 <.LVL410>:
  403804:	4614      	movlt	r4, r2

00403806 <.LVL411>:
  403806:	2c00      	cmp	r4, #0
  403808:	f77f aa9e 	ble.w	402d48 <.LVL104>
  40380c:	2c10      	cmp	r4, #16
  40380e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403810:	dd1e      	ble.n	403850 <.LVL421>
  403812:	2510      	movs	r5, #16

00403814 <.LVL412>:
  403814:	9e05      	ldr	r6, [sp, #20]
  403816:	e004      	b.n	403822 <.LVL416>

00403818 <.LVL413>:
  403818:	f109 0908 	add.w	r9, r9, #8

0040381c <.LVL414>:
  40381c:	3c10      	subs	r4, #16
  40381e:	2c10      	cmp	r4, #16
  403820:	dd16      	ble.n	403850 <.LVL421>

00403822 <.LVL416>:
  403822:	3201      	adds	r2, #1
  403824:	3310      	adds	r3, #16
  403826:	2a07      	cmp	r2, #7
  403828:	9324      	str	r3, [sp, #144]	; 0x90

0040382a <.LVL417>:
  40382a:	9223      	str	r2, [sp, #140]	; 0x8c
  40382c:	f8c9 a000 	str.w	sl, [r9]
  403830:	f8c9 5004 	str.w	r5, [r9, #4]
  403834:	ddf0      	ble.n	403818 <.LVL413>
  403836:	aa22      	add	r2, sp, #136	; 0x88
  403838:	4631      	mov	r1, r6
  40383a:	4658      	mov	r0, fp
  40383c:	f006 f8ac 	bl	409998 <__ssprint_r>

00403840 <.LVL418>:
  403840:	2800      	cmp	r0, #0
  403842:	f47f a949 	bne.w	402ad8 <.L189>
  403846:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403848:	9a23      	ldr	r2, [sp, #140]	; 0x8c

0040384a <.LVL419>:
  40384a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

0040384e <.LVL420>:
  40384e:	e7e5      	b.n	40381c <.LVL414>

00403850 <.LVL421>:
  403850:	3201      	adds	r2, #1
  403852:	4423      	add	r3, r4
  403854:	2a07      	cmp	r2, #7
  403856:	9324      	str	r3, [sp, #144]	; 0x90
  403858:	9223      	str	r2, [sp, #140]	; 0x8c
  40385a:	f8c9 a000 	str.w	sl, [r9]
  40385e:	f8c9 4004 	str.w	r4, [r9, #4]
  403862:	f77f aa6f 	ble.w	402d44 <.LVL103>
  403866:	e591      	b.n	40338c <.LVL269>

00403868 <.LBE19>:
  403868:	f018 0f01 	tst.w	r8, #1
  40386c:	f47f ad57 	bne.w	40331e <.LVL260+0x22>
  403870:	2a07      	cmp	r2, #7
  403872:	f77f ad7c 	ble.w	40336e <.LVL266>
  403876:	e6c0      	b.n	4035fa <.LVL348>

00403878 <.LBB26>:
  403878:	aa22      	add	r2, sp, #136	; 0x88
  40387a:	4629      	mov	r1, r5
  40387c:	4658      	mov	r0, fp
  40387e:	f006 f88b 	bl	409998 <__ssprint_r>

00403882 <.LVL424>:
  403882:	2800      	cmp	r0, #0
  403884:	f47f a928 	bne.w	402ad8 <.L189>
  403888:	9824      	ldr	r0, [sp, #144]	; 0x90

0040388a <.LVL425>:
  40388a:	a925      	add	r1, sp, #148	; 0x94

0040388c <.LVL426>:
  40388c:	e72d      	b.n	4036ea <.LBB18>

0040388e <.LBE26>:
  40388e:	aa22      	add	r2, sp, #136	; 0x88
  403890:	9905      	ldr	r1, [sp, #20]
  403892:	4658      	mov	r0, fp
  403894:	f006 f880 	bl	409998 <__ssprint_r>

00403898 <.LVL428>:
  403898:	2800      	cmp	r0, #0
  40389a:	f47f a91d 	bne.w	402ad8 <.L189>
  40389e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038a0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4038a2:	f10d 0994 	add.w	r9, sp, #148	; 0x94
  4038a6:	e53f      	b.n	403328 <.LVL261>

004038a8 <.LVL429>:
  4038a8:	aa22      	add	r2, sp, #136	; 0x88
  4038aa:	9905      	ldr	r1, [sp, #20]
  4038ac:	4658      	mov	r0, fp
  4038ae:	f006 f873 	bl	409998 <__ssprint_r>

004038b2 <.LVL430>:
  4038b2:	2800      	cmp	r0, #0
  4038b4:	f47f a910 	bne.w	402ad8 <.L189>
  4038b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  4038bc:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004038c0 <.LVL431>:
  4038c0:	e541      	b.n	403346 <.LVL263>

004038c2 <.LVL432>:
  4038c2:	aa22      	add	r2, sp, #136	; 0x88
  4038c4:	9905      	ldr	r1, [sp, #20]
  4038c6:	4658      	mov	r0, fp
  4038c8:	f006 f866 	bl	409998 <__ssprint_r>

004038cc <.LVL433>:
  4038cc:	2800      	cmp	r0, #0
  4038ce:	f47f a903 	bne.w	402ad8 <.L189>
  4038d2:	9b24      	ldr	r3, [sp, #144]	; 0x90

004038d4 <.LVL434>:
  4038d4:	f10d 0994 	add.w	r9, sp, #148	; 0x94

004038d8 <.LVL435>:
  4038d8:	f7ff b9e7 	b.w	402caa <.LVL86+0x8>

004038dc <.LBB27>:
  4038dc:	9b12      	ldr	r3, [sp, #72]	; 0x48

004038de <.LVL437>:
  4038de:	3b01      	subs	r3, #1
  4038e0:	9312      	str	r3, [sp, #72]	; 0x48

004038e2 <.LVL438>:
  4038e2:	9b10      	ldr	r3, [sp, #64]	; 0x40

004038e4 <.LVL439>:
  4038e4:	3b01      	subs	r3, #1
  4038e6:	9310      	str	r3, [sp, #64]	; 0x40

004038e8 <.LVL440>:
  4038e8:	e6f2      	b.n	4036d0 <.LVL375>

004038ea <.LBE27>:
  4038ea:	eeb4 8b48 	vcmp.f64	d8, d8
  4038ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4038f2:	f180 83e3 	bvs.w	4040bc <.LBE70>
  4038f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4038f8:	2b61      	cmp	r3, #97	; 0x61
  4038fa:	f000 82b8 	beq.w	403e6e <.LVL595+0xa>
  4038fe:	2b41      	cmp	r3, #65	; 0x41
  403900:	f000 8178 	beq.w	403bf4 <.LVL523>
  403904:	9b04      	ldr	r3, [sp, #16]
  403906:	3301      	adds	r3, #1
  403908:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40390a:	f023 0520 	bic.w	r5, r3, #32
  40390e:	f000 839d 	beq.w	40404c <.LBE69>
  403912:	2d47      	cmp	r5, #71	; 0x47
  403914:	d104      	bne.n	403920 <.LBB28>
  403916:	9b04      	ldr	r3, [sp, #16]
  403918:	2b00      	cmp	r3, #0
  40391a:	bf08      	it	eq
  40391c:	2301      	moveq	r3, #1
  40391e:	9304      	str	r3, [sp, #16]

00403920 <.LBB28>:
  403920:	ee18 3a90 	vmov	r3, s17

00403924 <.LBE28>:
  403924:	f448 7280 	orr.w	r2, r8, #256	; 0x100

00403928 <.LBB43>:
  403928:	2b00      	cmp	r3, #0

0040392a <.LBE43>:
  40392a:	9202      	str	r2, [sp, #8]

0040392c <.LBB44>:
  40392c:	f04f 0300 	mov.w	r3, #0
  403930:	f2c0 82b8 	blt.w	403ea4 <.LBB62>
  403934:	eeb0 ab48 	vmov.f64	d10, d8
  403938:	9306      	str	r3, [sp, #24]
  40393a:	9309      	str	r3, [sp, #36]	; 0x24

0040393c <.LVL445>:
  40393c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40393e:	2b66      	cmp	r3, #102	; 0x66
  403940:	f000 82ef 	beq.w	403f22 <.LBB64>
  403944:	2b46      	cmp	r3, #70	; 0x46
  403946:	f000 83d8 	beq.w	4040fa <.LBB71>
  40394a:	eeb0 0b4a 	vmov.f64	d0, d10
  40394e:	2d45      	cmp	r5, #69	; 0x45
  403950:	bf0a      	itet	eq
  403952:	9b04      	ldreq	r3, [sp, #16]
  403954:	9c04      	ldrne	r4, [sp, #16]
  403956:	1c5c      	addeq	r4, r3, #1

00403958 <.LVL446>:
  403958:	aa20      	add	r2, sp, #128	; 0x80

0040395a <.LVL447>:
  40395a:	ab1d      	add	r3, sp, #116	; 0x74
  40395c:	9201      	str	r2, [sp, #4]
  40395e:	9300      	str	r3, [sp, #0]
  403960:	4622      	mov	r2, r4
  403962:	ab1c      	add	r3, sp, #112	; 0x70

00403964 <.LVL448>:
  403964:	2102      	movs	r1, #2
  403966:	4658      	mov	r0, fp
  403968:	f002 fa72 	bl	405e50 <_dtoa_r>

0040396c <.LVL449>:
  40396c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40396e:	2b67      	cmp	r3, #103	; 0x67
  403970:	4606      	mov	r6, r0

00403972 <.LVL450>:
  403972:	f040 8395 	bne.w	4040a0 <.LBB70>
  403976:	f018 0f01 	tst.w	r8, #1
  40397a:	f040 8343 	bne.w	404004 <.LBB66>

0040397e <.LVL451>:
  40397e:	9b20      	ldr	r3, [sp, #128]	; 0x80

00403980 <.LVL452>:
  403980:	46c6      	mov	lr, r8
  403982:	1b9b      	subs	r3, r3, r6
  403984:	f8dd 8008 	ldr.w	r8, [sp, #8]
  403988:	930f      	str	r3, [sp, #60]	; 0x3c

0040398a <.LBE44>:
  40398a:	2d47      	cmp	r5, #71	; 0x47
  40398c:	f000 81cf 	beq.w	403d2e <.LVL554>
  403990:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403992:	2b46      	cmp	r3, #70	; 0x46
  403994:	f000 82b3 	beq.w	403efe <.LVL607>
  403998:	2b65      	cmp	r3, #101	; 0x65
  40399a:	f340 8412 	ble.w	4041c2 <.LVL694>
  40399e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4039a0:	2b66      	cmp	r3, #102	; 0x66
  4039a2:	f000 82ac 	beq.w	403efe <.LVL607>
  4039a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4039a8:	930e      	str	r3, [sp, #56]	; 0x38

004039aa <.LVL454>:
  4039aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4039ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4039ae:	4619      	mov	r1, r3
  4039b0:	4291      	cmp	r1, r2
  4039b2:	4613      	mov	r3, r2
  4039b4:	f300 8260 	bgt.w	403e78 <.LVL596>

004039b8 <.LVL455>:
  4039b8:	f01e 0f01 	tst.w	lr, #1
  4039bc:	f000 8363 	beq.w	404086 <.LVL655>
  4039c0:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4039c2:	4413      	add	r3, r2
  4039c4:	9308      	str	r3, [sp, #32]

004039c6 <.LVL456>:
  4039c6:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  4039ca:	f000 8310 	beq.w	403fee <.LVL635>
  4039ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4039d0:	2b00      	cmp	r3, #0
  4039d2:	f340 830c 	ble.w	403fee <.LVL635>
  4039d6:	2367      	movs	r3, #103	; 0x67
  4039d8:	930d      	str	r3, [sp, #52]	; 0x34

004039da <.LVL457>:
  4039da:	9812      	ldr	r0, [sp, #72]	; 0x48
  4039dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4039de:	2300      	movs	r3, #0
  4039e0:	9313      	str	r3, [sp, #76]	; 0x4c
  4039e2:	9310      	str	r3, [sp, #64]	; 0x40
  4039e4:	7803      	ldrb	r3, [r0, #0]

004039e6 <.LVL458>:
  4039e6:	2bff      	cmp	r3, #255	; 0xff
  4039e8:	d00e      	beq.n	403a08 <.LVL461+0x8>
  4039ea:	429a      	cmp	r2, r3
  4039ec:	dd0c      	ble.n	403a08 <.LVL461+0x8>
  4039ee:	7841      	ldrb	r1, [r0, #1]
  4039f0:	1ad2      	subs	r2, r2, r3
  4039f2:	2900      	cmp	r1, #0
  4039f4:	f000 8184 	beq.w	403d00 <.LBE50>
  4039f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4039fa:	3301      	adds	r3, #1
  4039fc:	9310      	str	r3, [sp, #64]	; 0x40

004039fe <.LVL460>:
  4039fe:	460b      	mov	r3, r1

00403a00 <.LVL461>:
  403a00:	2bff      	cmp	r3, #255	; 0xff
  403a02:	f100 0001 	add.w	r0, r0, #1
  403a06:	d1f0      	bne.n	4039ea <.LVL458+0x4>
  403a08:	920e      	str	r2, [sp, #56]	; 0x38
  403a0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403a0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c

00403a0e <.LVL463>:
  403a0e:	9908      	ldr	r1, [sp, #32]
  403a10:	9012      	str	r0, [sp, #72]	; 0x48
  403a12:	4413      	add	r3, r2
  403a14:	9a18      	ldr	r2, [sp, #96]	; 0x60
  403a16:	fb02 1303 	mla	r3, r2, r3, r1
  403a1a:	9308      	str	r3, [sp, #32]

00403a1c <.LVL464>:
  403a1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31

00403a20 <.LVL465>:
  403a20:	9302      	str	r3, [sp, #8]

00403a22 <.LVL466>:
  403a22:	9b06      	ldr	r3, [sp, #24]
  403a24:	2b00      	cmp	r3, #0
  403a26:	f040 817b 	bne.w	403d20 <.LVL552>
  403a2a:	9304      	str	r3, [sp, #16]

00403a2c <.LVL467>:
  403a2c:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403a30:	f7ff b8c7 	b.w	402bc2 <.L59>

00403a34 <.LVL468>:
  403a34:	f025 0507 	bic.w	r5, r5, #7
  403a38:	f105 0308 	add.w	r3, r5, #8
  403a3c:	ed95 8b00 	vldr	d8, [r5]

00403a40 <.LVL469>:
  403a40:	930a      	str	r3, [sp, #40]	; 0x28

00403a42 <.LVL470>:
  403a42:	f7ff bb11 	b.w	403068 <.LVL189>

00403a46 <.LVL471>:
  403a46:	464c      	mov	r4, r9
  403a48:	4689      	mov	r9, r1

00403a4a <.LBB20>:
  403a4a:	3201      	adds	r2, #1
  403a4c:	4423      	add	r3, r4
  403a4e:	2a07      	cmp	r2, #7
  403a50:	9324      	str	r3, [sp, #144]	; 0x90
  403a52:	9223      	str	r2, [sp, #140]	; 0x8c
  403a54:	f8c9 a000 	str.w	sl, [r9]
  403a58:	f8c9 4004 	str.w	r4, [r9, #4]
  403a5c:	f73f ae0e 	bgt.w	40367c <.LBB15>

00403a60 <.LVL473>:
  403a60:	f109 0908 	add.w	r9, r9, #8

00403a64 <.LVL474>:
  403a64:	e615      	b.n	403692 <.LBE15>

00403a66 <.LBB21>:
  403a66:	aa22      	add	r2, sp, #136	; 0x88
  403a68:	4629      	mov	r1, r5

00403a6a <.LVL476>:
  403a6a:	4658      	mov	r0, fp
  403a6c:	f005 ff94 	bl	409998 <__ssprint_r>

00403a70 <.LVL477>:
  403a70:	2800      	cmp	r0, #0
  403a72:	f47f a831 	bne.w	402ad8 <.L189>
  403a76:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403a78:	9824      	ldr	r0, [sp, #144]	; 0x90

00403a7a <.LVL478>:
  403a7a:	781b      	ldrb	r3, [r3, #0]
  403a7c:	a925      	add	r1, sp, #148	; 0x94

00403a7e <.LVL479>:
  403a7e:	e649      	b.n	403714 <.LVL382>

00403a80 <.LBE21>:
  403a80:	aa22      	add	r2, sp, #136	; 0x88
  403a82:	9905      	ldr	r1, [sp, #20]
  403a84:	4658      	mov	r0, fp
  403a86:	f005 ff87 	bl	409998 <__ssprint_r>

00403a8a <.LVL481>:
  403a8a:	2800      	cmp	r0, #0
  403a8c:	f47f a824 	bne.w	402ad8 <.L189>

00403a90 <.LVL482>:
  403a90:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403a94 <.LVL483>:
  403a94:	f7ff bbb2 	b.w	4031fc <.LVL230>

00403a98 <.LBB22>:
  403a98:	aa22      	add	r2, sp, #136	; 0x88
  403a9a:	4629      	mov	r1, r5
  403a9c:	4658      	mov	r0, fp
  403a9e:	f005 ff7b 	bl	409998 <__ssprint_r>

00403aa2 <.LVL485>:
  403aa2:	2800      	cmp	r0, #0
  403aa4:	f47f a818 	bne.w	402ad8 <.L189>
  403aa8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403aaa:	9824      	ldr	r0, [sp, #144]	; 0x90

00403aac <.LVL486>:
  403aac:	781b      	ldrb	r3, [r3, #0]
  403aae:	a925      	add	r1, sp, #148	; 0x94

00403ab0 <.LBE22>:
  403ab0:	441e      	add	r6, r3
  403ab2:	e664      	b.n	40377e <.LBE18+0x2>

00403ab4 <.LBE46>:
  403ab4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403ab6:	48c2      	ldr	r0, [pc, #776]	; (403dc0 <.LVL571+0x2>)
  403ab8:	f8c9 0000 	str.w	r0, [r9]
  403abc:	3201      	adds	r2, #1
  403abe:	3301      	adds	r3, #1
  403ac0:	2001      	movs	r0, #1
  403ac2:	2a07      	cmp	r2, #7
  403ac4:	9324      	str	r3, [sp, #144]	; 0x90
  403ac6:	9223      	str	r2, [sp, #140]	; 0x8c
  403ac8:	f8c9 0004 	str.w	r0, [r9, #4]
  403acc:	f300 8085 	bgt.w	403bda <.LVL519>

00403ad0 <.LVL490>:
  403ad0:	f109 0908 	add.w	r9, r9, #8

00403ad4 <.LVL491>:
  403ad4:	b929      	cbnz	r1, 403ae2 <.LVL491+0xe>
  403ad6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403ad8:	b91a      	cbnz	r2, 403ae2 <.LVL491+0xe>
  403ada:	f018 0f01 	tst.w	r8, #1
  403ade:	f43f a933 	beq.w	402d48 <.LVL104>
  403ae2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403ae4:	9c15      	ldr	r4, [sp, #84]	; 0x54

00403ae6 <.LVL492>:
  403ae6:	9817      	ldr	r0, [sp, #92]	; 0x5c
  403ae8:	f8c9 0000 	str.w	r0, [r9]
  403aec:	3201      	adds	r2, #1
  403aee:	4423      	add	r3, r4
  403af0:	2a07      	cmp	r2, #7
  403af2:	9324      	str	r3, [sp, #144]	; 0x90

00403af4 <.LVL493>:
  403af4:	f8c9 4004 	str.w	r4, [r9, #4]
  403af8:	9223      	str	r2, [sp, #140]	; 0x8c
  403afa:	f300 826a 	bgt.w	403fd2 <.LVL632>
  403afe:	f109 0908 	add.w	r9, r9, #8

00403b02 <.LVL494>:
  403b02:	2900      	cmp	r1, #0
  403b04:	f2c0 8244 	blt.w	403f90 <.LBE24>

00403b08 <.LVL495>:
  403b08:	980f      	ldr	r0, [sp, #60]	; 0x3c
  403b0a:	f8c9 6000 	str.w	r6, [r9]
  403b0e:	3201      	adds	r2, #1
  403b10:	4403      	add	r3, r0
  403b12:	2a07      	cmp	r2, #7
  403b14:	9324      	str	r3, [sp, #144]	; 0x90

00403b16 <.LVL496>:
  403b16:	9223      	str	r2, [sp, #140]	; 0x8c
  403b18:	f8c9 0004 	str.w	r0, [r9, #4]
  403b1c:	f77f a912 	ble.w	402d44 <.LVL103>
  403b20:	e434      	b.n	40338c <.LVL269>

00403b22 <.LDL1>:
  403b22:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b24:	2b00      	cmp	r3, #0
  403b26:	f43e afdd 	beq.w	402ae4 <.LVL44>
  403b2a:	9c05      	ldr	r4, [sp, #20]
  403b2c:	9811      	ldr	r0, [sp, #68]	; 0x44
  403b2e:	aa22      	add	r2, sp, #136	; 0x88
  403b30:	4621      	mov	r1, r4
  403b32:	f005 ff31 	bl	409998 <__ssprint_r>

00403b36 <.LVL498>:
  403b36:	2800      	cmp	r0, #0
  403b38:	f43e afd4 	beq.w	402ae4 <.LVL44>
  403b3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b40:	f7fe bfd3 	b.w	402aea <.LVL44+0x6>

00403b44 <.LVL499>:
  403b44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403b46:	9903      	ldr	r1, [sp, #12]
  403b48:	6813      	ldr	r3, [r2, #0]
  403b4a:	17cd      	asrs	r5, r1, #31
  403b4c:	4608      	mov	r0, r1
  403b4e:	3204      	adds	r2, #4

00403b50 <.LVL500>:
  403b50:	4629      	mov	r1, r5
  403b52:	920a      	str	r2, [sp, #40]	; 0x28
  403b54:	e9c3 0100 	strd	r0, r1, [r3]
  403b58:	463e      	mov	r6, r7

00403b5a <.LVL501>:
  403b5a:	f7fe bef4 	b.w	402946 <.LVL10>

00403b5e <.LVL502>:
  403b5e:	3304      	adds	r3, #4
  403b60:	8814      	ldrh	r4, [r2, #0]
  403b62:	930a      	str	r3, [sp, #40]	; 0x28

00403b64 <.LVL503>:
  403b64:	2500      	movs	r5, #0
  403b66:	f7ff b960 	b.w	402e2a <.LVL126>

00403b6a <.LVL504>:
  403b6a:	8814      	ldrh	r4, [r2, #0]
  403b6c:	3204      	adds	r2, #4
  403b6e:	2500      	movs	r5, #0
  403b70:	2301      	movs	r3, #1
  403b72:	920a      	str	r2, [sp, #40]	; 0x28

00403b74 <.LVL505>:
  403b74:	f7fe bffd 	b.w	402b72 <.L150>

00403b78 <.LVL506>:
  403b78:	3304      	adds	r3, #4
  403b7a:	8814      	ldrh	r4, [r2, #0]
  403b7c:	930a      	str	r3, [sp, #40]	; 0x28

00403b7e <.LVL507>:
  403b7e:	2500      	movs	r5, #0
  403b80:	f7fe bfe5 	b.w	402b4e <.LVL51>

00403b84 <.LVL508>:
  403b84:	980a      	ldr	r0, [sp, #40]	; 0x28
  403b86:	f9b0 4000 	ldrsh.w	r4, [r0]
  403b8a:	f7ff b979 	b.w	402e80 <.LVL136>

00403b8e <.LVL509>:
  403b8e:	aa22      	add	r2, sp, #136	; 0x88
  403b90:	9905      	ldr	r1, [sp, #20]
  403b92:	4658      	mov	r0, fp
  403b94:	f005 ff00 	bl	409998 <__ssprint_r>

00403b98 <.LVL510>:
  403b98:	2800      	cmp	r0, #0
  403b9a:	f47e af9d 	bne.w	402ad8 <.L189>
  403b9e:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403ba0 <.LVL511>:
  403ba0:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403ba4 <.LVL512>:
  403ba4:	f7ff bb43 	b.w	40322e <.LVL233>

00403ba8 <.LVL513>:
  403ba8:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
  403bac:	783b      	ldrb	r3, [r7, #0]
  403bae:	f7fe befa 	b.w	4029a6 <.LVL22>

00403bb2 <.LBB47>:
  403bb2:	f018 0f01 	tst.w	r8, #1
  403bb6:	f43f ae0b 	beq.w	4037d0 <.LBB19>
  403bba:	e5f9      	b.n	4037b0 <.LVL403+0xa>

00403bbc <.LBE47>:
  403bbc:	2140      	movs	r1, #64	; 0x40
  403bbe:	9811      	ldr	r0, [sp, #68]	; 0x44

00403bc0 <.LVL517>:
  403bc0:	f003 fadc 	bl	40717c <.LFE14>

00403bc4 <.LVL518>:
  403bc4:	9a05      	ldr	r2, [sp, #20]
  403bc6:	6010      	str	r0, [r2, #0]
  403bc8:	6110      	str	r0, [r2, #16]
  403bca:	2800      	cmp	r0, #0
  403bcc:	f000 82f1 	beq.w	4041b2 <.LBE76>
  403bd0:	9a05      	ldr	r2, [sp, #20]
  403bd2:	2340      	movs	r3, #64	; 0x40
  403bd4:	6153      	str	r3, [r2, #20]
  403bd6:	f7fe bea0 	b.w	40291a <.LVL6>

00403bda <.LVL519>:
  403bda:	aa22      	add	r2, sp, #136	; 0x88
  403bdc:	9905      	ldr	r1, [sp, #20]
  403bde:	4658      	mov	r0, fp
  403be0:	f005 feda 	bl	409998 <__ssprint_r>

00403be4 <.LVL520>:
  403be4:	2800      	cmp	r0, #0
  403be6:	f47e af77 	bne.w	402ad8 <.L189>
  403bea:	991c      	ldr	r1, [sp, #112]	; 0x70
  403bec:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403bee <.LVL521>:
  403bee:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403bf2 <.LVL522>:
  403bf2:	e76f      	b.n	403ad4 <.LVL491>

00403bf4 <.LVL523>:
  403bf4:	2330      	movs	r3, #48	; 0x30
  403bf6:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  403bfa:	2358      	movs	r3, #88	; 0x58
  403bfc:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
  403c00:	9b04      	ldr	r3, [sp, #16]
  403c02:	2b63      	cmp	r3, #99	; 0x63
  403c04:	f048 0402 	orr.w	r4, r8, #2

00403c08 <.LVL524>:
  403c08:	f300 8240 	bgt.w	40408c <.LVL656>
  403c0c:	2300      	movs	r3, #0
  403c0e:	9309      	str	r3, [sp, #36]	; 0x24
  403c10:	ae35      	add	r6, sp, #212	; 0xd4

00403c12 <.LBB48>:
  403c12:	ee18 3a90 	vmov	r3, s17
  403c16:	2b00      	cmp	r3, #0
  403c18:	9b0d      	ldr	r3, [sp, #52]	; 0x34

00403c1a <.LBE48>:
  403c1a:	f448 7281 	orr.w	r2, r8, #258	; 0x102
  403c1e:	9202      	str	r2, [sp, #8]

00403c20 <.LBB49>:
  403c20:	46a0      	mov	r8, r4
  403c22:	f023 0520 	bic.w	r5, r3, #32
  403c26:	f2c0 813e 	blt.w	403ea6 <.LVL602>
  403c2a:	eeb0 ab48 	vmov.f64	d10, d8
  403c2e:	2300      	movs	r3, #0
  403c30:	9306      	str	r3, [sp, #24]

00403c32 <.LVL527>:
  403c32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403c34:	2b61      	cmp	r3, #97	; 0x61
  403c36:	f000 81ec 	beq.w	404012 <.LBB68>
  403c3a:	2b41      	cmp	r3, #65	; 0x41
  403c3c:	f47f ae7e 	bne.w	40393c <.LVL445>
  403c40:	eeb0 0b4a 	vmov.f64	d0, d10
  403c44:	a81c      	add	r0, sp, #112	; 0x70

00403c46 <.LVL528>:
  403c46:	f006 ffb3 	bl	40abb0 <frexp>

00403c4a <.LVL529>:
  403c4a:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
  403c4e:	ee20 0b07 	vmul.f64	d0, d0, d7

00403c52 <.LVL530>:
  403c52:	eeb5 0b40 	vcmp.f64	d0, #0.0
  403c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403c5a:	d101      	bne.n	403c60 <.LVL530+0xe>
  403c5c:	2301      	movs	r3, #1
  403c5e:	931c      	str	r3, [sp, #112]	; 0x70
  403c60:	4c58      	ldr	r4, [pc, #352]	; (403dc4 <.LVL571+0x6>)

00403c62 <.LVL531>:
  403c62:	9b04      	ldr	r3, [sp, #16]
  403c64:	eeb3 5b00 	vmov.f64	d5, #48	; 0x41800000  16.0
  403c68:	3b01      	subs	r3, #1
  403c6a:	4631      	mov	r1, r6
  403c6c:	e005      	b.n	403c7a <.LVL533>

00403c6e <.LVL532>:
  403c6e:	eeb5 0b40 	vcmp.f64	d0, #0.0
  403c72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403c76:	d014      	beq.n	403ca2 <.LVL536+0x6>
  403c78:	4611      	mov	r1, r2

00403c7a <.LVL533>:
  403c7a:	ee20 0b05 	vmul.f64	d0, d0, d5
  403c7e:	eefd 6bc0 	vcvt.s32.f64	s13, d0

00403c82 <.LVL535>:
  403c82:	460a      	mov	r2, r1
  403c84:	ee16 0a90 	vmov	r0, s13
  403c88:	f1b3 3fff 	cmp.w	r3, #4294967295
  403c8c:	5c20      	ldrb	r0, [r4, r0]
  403c8e:	f802 0b01 	strb.w	r0, [r2], #1
  403c92:	eeb8 7be6 	vcvt.f64.s32	d7, s13
  403c96:	4618      	mov	r0, r3
  403c98:	ee30 0b47 	vsub.f64	d0, d0, d7

00403c9c <.LVL536>:
  403c9c:	f103 33ff 	add.w	r3, r3, #4294967295
  403ca0:	d1e5      	bne.n	403c6e <.LVL532>
  403ca2:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
  403ca6:	eeb4 0bc7 	vcmpe.f64	d0, d7
  403caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403cae:	f300 80ff 	bgt.w	403eb0 <.LVL604>
  403cb2:	eeb4 0b47 	vcmp.f64	d0, d7
  403cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403cba:	d104      	bne.n	403cc6 <.LVL537>
  403cbc:	ee16 3a90 	vmov	r3, s13
  403cc0:	07db      	lsls	r3, r3, #31
  403cc2:	f100 80f5 	bmi.w	403eb0 <.LVL604>

00403cc6 <.LVL537>:
  403cc6:	2800      	cmp	r0, #0
  403cc8:	db07      	blt.n	403cda <.LVL541>
  403cca:	1814      	adds	r4, r2, r0

00403ccc <.LVL538>:
  403ccc:	2330      	movs	r3, #48	; 0x30

00403cce <.LVL539>:
  403cce:	f801 3f01 	strb.w	r3, [r1, #1]!

00403cd2 <.LVL540>:
  403cd2:	42a1      	cmp	r1, r4
  403cd4:	d1fb      	bne.n	403cce <.LVL539>
  403cd6:	3001      	adds	r0, #1
  403cd8:	4402      	add	r2, r0

00403cda <.LVL541>:
  403cda:	1b93      	subs	r3, r2, r6
  403cdc:	46c6      	mov	lr, r8
  403cde:	930f      	str	r3, [sp, #60]	; 0x3c

00403ce0 <.LVL542>:
  403ce0:	f8dd 8008 	ldr.w	r8, [sp, #8]
  403ce4:	e651      	b.n	40398a <.LBE44>

00403ce6 <.LBB50>:
  403ce6:	aa22      	add	r2, sp, #136	; 0x88
  403ce8:	9905      	ldr	r1, [sp, #20]
  403cea:	4658      	mov	r0, fp
  403cec:	f005 fe54 	bl	409998 <__ssprint_r>

00403cf0 <.LVL544>:
  403cf0:	2800      	cmp	r0, #0
  403cf2:	f47e aef1 	bne.w	402ad8 <.L189>
  403cf6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  403cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403cfa <.LVL545>:
  403cfa:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403cfe <.LVL546>:
  403cfe:	e567      	b.n	4037d0 <.LBB19>

00403d00 <.LBE50>:
  403d00:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403d02:	3101      	adds	r1, #1
  403d04:	9113      	str	r1, [sp, #76]	; 0x4c

00403d06 <.LVL548>:
  403d06:	e66e      	b.n	4039e6 <.LVL458>

00403d08 <.LVL549>:
  403d08:	4630      	mov	r0, r6
  403d0a:	9404      	str	r4, [sp, #16]
  403d0c:	f005 ffb8 	bl	409c80 <strlen>

00403d10 <.LVL550>:
  403d10:	ea20 72e0 	bic.w	r2, r0, r0, asr #31
  403d14:	9008      	str	r0, [sp, #32]

00403d16 <.LVL551>:
  403d16:	950a      	str	r5, [sp, #40]	; 0x28
  403d18:	9202      	str	r2, [sp, #8]
  403d1a:	4623      	mov	r3, r4
  403d1c:	f7ff b96b 	b.w	402ff6 <.LBE12>

00403d20 <.LVL552>:
  403d20:	222d      	movs	r2, #45	; 0x2d
  403d22:	2300      	movs	r3, #0
  403d24:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
  403d28:	9304      	str	r3, [sp, #16]

00403d2a <.LVL553>:
  403d2a:	f7fe bf4b 	b.w	402bc4 <.LVL63>

00403d2e <.LVL554>:
  403d2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  403d30:	930e      	str	r3, [sp, #56]	; 0x38
  403d32:	1cda      	adds	r2, r3, #3
  403d34:	db03      	blt.n	403d3e <.LVL555>
  403d36:	9a04      	ldr	r2, [sp, #16]
  403d38:	4293      	cmp	r3, r2
  403d3a:	f77f ae36 	ble.w	4039aa <.LVL454>

00403d3e <.LVL555>:
  403d3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403d40:	3b02      	subs	r3, #2

00403d42 <.LVL556>:
  403d42:	930d      	str	r3, [sp, #52]	; 0x34
  403d44:	f023 0520 	bic.w	r5, r3, #32

00403d48 <.LVL557>:
  403d48:	9b0e      	ldr	r3, [sp, #56]	; 0x38

00403d4a <.LBB51>:
  403d4a:	2d41      	cmp	r5, #65	; 0x41

00403d4c <.LBE51>:
  403d4c:	f103 33ff 	add.w	r3, r3, #4294967295
  403d50:	931c      	str	r3, [sp, #112]	; 0x70

00403d52 <.LBB59>:
  403d52:	f000 8159 	beq.w	404008 <.LBB67>

00403d56 <.LVL559>:
  403d56:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
  403d5a:	2100      	movs	r1, #0

00403d5c <.LVL560>:
  403d5c:	2b00      	cmp	r3, #0
  403d5e:	bfb8      	it	lt
  403d60:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38

00403d62 <.LVL561>:
  403d62:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  403d66:	bfba      	itte	lt
  403d68:	f1c3 0301 	rsblt	r3, r3, #1

00403d6c <.LVL562>:
  403d6c:	222d      	movlt	r2, #45	; 0x2d
  403d6e:	222b      	movge	r2, #43	; 0x2b
  403d70:	2b09      	cmp	r3, #9
  403d72:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79

00403d76 <.LVL563>:
  403d76:	f340 815d 	ble.w	404034 <.LBB69>
  403d7a:	f10d 0487 	add.w	r4, sp, #135	; 0x87

00403d7e <.LVL564>:
  403d7e:	4620      	mov	r0, r4
  403d80:	4d11      	ldr	r5, [pc, #68]	; (403dc8 <.LVL571+0xa>)
  403d82:	e000      	b.n	403d86 <.LVL566>

00403d84 <.LVL565>:
  403d84:	4610      	mov	r0, r2

00403d86 <.LVL566>:
  403d86:	fb85 1203 	smull	r1, r2, r5, r3
  403d8a:	17d9      	asrs	r1, r3, #31
  403d8c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403d90:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403d94:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403d98:	3230      	adds	r2, #48	; 0x30
  403d9a:	2909      	cmp	r1, #9
  403d9c:	f800 2c01 	strb.w	r2, [r0, #-1]
  403da0:	460b      	mov	r3, r1

00403da2 <.LVL567>:
  403da2:	f100 32ff 	add.w	r2, r0, #4294967295

00403da6 <.LVL568>:
  403da6:	dced      	bgt.n	403d84 <.LVL565>

00403da8 <.LVL569>:
  403da8:	3330      	adds	r3, #48	; 0x30
  403daa:	3802      	subs	r0, #2
  403dac:	b2db      	uxtb	r3, r3
  403dae:	4284      	cmp	r4, r0
  403db0:	f802 3c01 	strb.w	r3, [r2, #-1]
  403db4:	f240 81fa 	bls.w	4041ac <.LBB76>
  403db8:	f10d 007a 	add.w	r0, sp, #122	; 0x7a

00403dbc <.LVL570>:
  403dbc:	4611      	mov	r1, r2

00403dbe <.LVL571>:
  403dbe:	e007      	b.n	403dd0 <.LVL573>
  403dc0:	0040b4e4 	.word	0x0040b4e4
  403dc4:	0040b4b4 	.word	0x0040b4b4
  403dc8:	66666667 	.word	0x66666667

00403dcc <.LVL572>:
  403dcc:	f811 3b01 	ldrb.w	r3, [r1], #1

00403dd0 <.LVL573>:
  403dd0:	f800 3b01 	strb.w	r3, [r0], #1

00403dd4 <.LVL574>:
  403dd4:	428c      	cmp	r4, r1
  403dd6:	d1f9      	bne.n	403dcc <.LVL572>
  403dd8:	3401      	adds	r4, #1
  403dda:	1aa2      	subs	r2, r4, r2

00403ddc <.LVL575>:
  403ddc:	f10d 037a 	add.w	r3, sp, #122	; 0x7a
  403de0:	441a      	add	r2, r3

00403de2 <.LVL576>:
  403de2:	ab1e      	add	r3, sp, #120	; 0x78

00403de4 <.LVL577>:
  403de4:	1ad3      	subs	r3, r2, r3

00403de6 <.LBE59>:
  403de6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c

00403de8 <.LBB60>:
  403de8:	9319      	str	r3, [sp, #100]	; 0x64

00403dea <.LBE60>:
  403dea:	2a01      	cmp	r2, #1
  403dec:	4413      	add	r3, r2
  403dee:	9308      	str	r3, [sp, #32]

00403df0 <.LVL581>:
  403df0:	f340 81ad 	ble.w	40414e <.LBE72>
  403df4:	9b08      	ldr	r3, [sp, #32]

00403df6 <.LVL582>:
  403df6:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403df8:	4413      	add	r3, r2
  403dfa:	9308      	str	r3, [sp, #32]
  403dfc:	2300      	movs	r3, #0
  403dfe:	9313      	str	r3, [sp, #76]	; 0x4c
  403e00:	9310      	str	r3, [sp, #64]	; 0x40
  403e02:	930e      	str	r3, [sp, #56]	; 0x38
  403e04:	9b08      	ldr	r3, [sp, #32]
  403e06:	f42e 6e80 	bic.w	lr, lr, #1024	; 0x400
  403e0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403e0e:	f44e 7880 	orr.w	r8, lr, #256	; 0x100

00403e12 <.LVL584>:
  403e12:	9302      	str	r3, [sp, #8]
  403e14:	e605      	b.n	403a22 <.LVL466>

00403e16 <.LBB23>:
  403e16:	aa22      	add	r2, sp, #136	; 0x88
  403e18:	9905      	ldr	r1, [sp, #20]
  403e1a:	4658      	mov	r0, fp
  403e1c:	f005 fdbc 	bl	409998 <__ssprint_r>

00403e20 <.LVL586>:
  403e20:	2800      	cmp	r0, #0
  403e22:	f47e ae59 	bne.w	402ad8 <.L189>
  403e26:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403e28 <.LVL587>:
  403e28:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403e2c <.LVL588>:
  403e2c:	f7ff bb29 	b.w	403482 <.LVL300>

00403e30 <.LBE23>:
  403e30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403e32:	6813      	ldr	r3, [r2, #0]
  403e34:	3204      	adds	r2, #4

00403e36 <.LVL590>:
  403e36:	920a      	str	r2, [sp, #40]	; 0x28
  403e38:	f8bd 200c 	ldrh.w	r2, [sp, #12]

00403e3c <.LVL591>:
  403e3c:	801a      	strh	r2, [r3, #0]
  403e3e:	463e      	mov	r6, r7

00403e40 <.LVL592>:
  403e40:	f7fe bd81 	b.w	402946 <.LVL10>

00403e44 <.LVL593>:
  403e44:	9b04      	ldr	r3, [sp, #16]
  403e46:	9613      	str	r6, [sp, #76]	; 0x4c
  403e48:	2b06      	cmp	r3, #6
  403e4a:	bf28      	it	cs
  403e4c:	2306      	movcs	r3, #6
  403e4e:	4632      	mov	r2, r6
  403e50:	9604      	str	r6, [sp, #16]
  403e52:	9610      	str	r6, [sp, #64]	; 0x40
  403e54:	960e      	str	r6, [sp, #56]	; 0x38
  403e56:	9609      	str	r6, [sp, #36]	; 0x24
  403e58:	9302      	str	r3, [sp, #8]

00403e5a <.LVL594>:
  403e5a:	950a      	str	r5, [sp, #40]	; 0x28
  403e5c:	9308      	str	r3, [sp, #32]
  403e5e:	4eae      	ldr	r6, [pc, #696]	; (404118 <.LVL671+0x2>)
  403e60:	f7fe beaf 	b.w	402bc2 <.L59>

00403e64 <.LVL595>:
  403e64:	222d      	movs	r2, #45	; 0x2d
  403e66:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
  403e6a:	f7ff b90d 	b.w	403088 <.LVL189+0x20>
  403e6e:	2330      	movs	r3, #48	; 0x30
  403e70:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  403e74:	2378      	movs	r3, #120	; 0x78
  403e76:	e6c1      	b.n	403bfc <.LVL523+0x8>

00403e78 <.LVL596>:
  403e78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e7a:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403e7c:	4413      	add	r3, r2
  403e7e:	9308      	str	r3, [sp, #32]

00403e80 <.LVL597>:
  403e80:	9b0e      	ldr	r3, [sp, #56]	; 0x38

00403e82 <.LVL598>:
  403e82:	2b00      	cmp	r3, #0
  403e84:	f340 814e 	ble.w	404124 <.LBE71>
  403e88:	2367      	movs	r3, #103	; 0x67
  403e8a:	930d      	str	r3, [sp, #52]	; 0x34

00403e8c <.LVL599>:
  403e8c:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  403e90:	f47f ada3 	bne.w	4039da <.LVL457>
  403e94:	9b08      	ldr	r3, [sp, #32]
  403e96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403e9a:	9302      	str	r3, [sp, #8]

00403e9c <.LVL600>:
  403e9c:	2300      	movs	r3, #0
  403e9e:	9313      	str	r3, [sp, #76]	; 0x4c
  403ea0:	9310      	str	r3, [sp, #64]	; 0x40
  403ea2:	e5be      	b.n	403a22 <.LVL466>

00403ea4 <.LBB62>:
  403ea4:	9309      	str	r3, [sp, #36]	; 0x24

00403ea6 <.LVL602>:
  403ea6:	232d      	movs	r3, #45	; 0x2d
  403ea8:	9306      	str	r3, [sp, #24]
  403eaa:	eeb1 ab48 	vneg.f64	d10, d8

00403eae <.LVL603>:
  403eae:	e6c0      	b.n	403c32 <.LVL527>

00403eb0 <.LVL604>:
  403eb0:	9120      	str	r1, [sp, #128]	; 0x80
  403eb2:	f812 0c01 	ldrb.w	r0, [r2, #-1]

00403eb6 <.LVL605>:
  403eb6:	7be3      	ldrb	r3, [r4, #15]
  403eb8:	4283      	cmp	r3, r0
  403eba:	f040 8150 	bne.w	40415e <.LBB74>
  403ebe:	4613      	mov	r3, r2
  403ec0:	f04f 0e30 	mov.w	lr, #48	; 0x30
  403ec4:	f803 ec01 	strb.w	lr, [r3, #-1]
  403ec8:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403eca:	1e59      	subs	r1, r3, #1
  403ecc:	9120      	str	r1, [sp, #128]	; 0x80
  403ece:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  403ed2:	4281      	cmp	r1, r0
  403ed4:	d0f6      	beq.n	403ec4 <.LVL605+0xe>
  403ed6:	2939      	cmp	r1, #57	; 0x39
  403ed8:	bf16      	itet	ne
  403eda:	3101      	addne	r1, #1
  403edc:	7aa1      	ldrbeq	r1, [r4, #10]
  403ede:	b2c9      	uxtbne	r1, r1
  403ee0:	f803 1c01 	strb.w	r1, [r3, #-1]
  403ee4:	e6f9      	b.n	403cda <.LVL541>

00403ee6 <.LBB63>:
  403ee6:	9b04      	ldr	r3, [sp, #16]
  403ee8:	9302      	str	r3, [sp, #8]
  403eea:	9308      	str	r3, [sp, #32]

00403eec <.LBE63>:
  403eec:	9004      	str	r0, [sp, #16]
  403eee:	950a      	str	r5, [sp, #40]	; 0x28
  403ef0:	9013      	str	r0, [sp, #76]	; 0x4c
  403ef2:	9010      	str	r0, [sp, #64]	; 0x40
  403ef4:	900e      	str	r0, [sp, #56]	; 0x38
  403ef6:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  403efa:	f7fe be62 	b.w	402bc2 <.L59>

00403efe <.LVL607>:
  403efe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  403f00:	930e      	str	r3, [sp, #56]	; 0x38
  403f02:	2b00      	cmp	r3, #0
  403f04:	9b04      	ldr	r3, [sp, #16]
  403f06:	f340 812d 	ble.w	404164 <.LBE74>

00403f0a <.LVL608>:
  403f0a:	2b00      	cmp	r3, #0
  403f0c:	f040 80ec 	bne.w	4040e8 <.LVL665>
  403f10:	f01e 0f01 	tst.w	lr, #1
  403f14:	f040 80e8 	bne.w	4040e8 <.LVL665>
  403f18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403f1a:	9308      	str	r3, [sp, #32]
  403f1c:	2366      	movs	r3, #102	; 0x66
  403f1e:	930d      	str	r3, [sp, #52]	; 0x34
  403f20:	e7b4      	b.n	403e8c <.LVL599>

00403f22 <.LBB64>:
  403f22:	9c04      	ldr	r4, [sp, #16]
  403f24:	eeb0 0b4a 	vmov.f64	d0, d10
  403f28:	aa20      	add	r2, sp, #128	; 0x80

00403f2a <.LVL610>:
  403f2a:	ab1d      	add	r3, sp, #116	; 0x74
  403f2c:	9201      	str	r2, [sp, #4]
  403f2e:	9300      	str	r3, [sp, #0]
  403f30:	2103      	movs	r1, #3
  403f32:	ab1c      	add	r3, sp, #112	; 0x70

00403f34 <.LVL611>:
  403f34:	4622      	mov	r2, r4
  403f36:	4658      	mov	r0, fp
  403f38:	f001 ff8a 	bl	405e50 <_dtoa_r>

00403f3c <.LVL612>:
  403f3c:	4606      	mov	r6, r0

00403f3e <.LVL613>:
  403f3e:	1901      	adds	r1, r0, r4

00403f40 <.LVL614>:
  403f40:	7833      	ldrb	r3, [r6, #0]
  403f42:	2b30      	cmp	r3, #48	; 0x30
  403f44:	f000 80f9 	beq.w	40413a <.LBB72>
  403f48:	9c1c      	ldr	r4, [sp, #112]	; 0x70

00403f4a <.LVL615>:
  403f4a:	4421      	add	r1, r4
  403f4c:	eeb5 ab40 	vcmp.f64	d10, #0.0
  403f50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  403f54:	d00b      	beq.n	403f6e <.LVL618>
  403f56:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403f58:	4299      	cmp	r1, r3
  403f5a:	f67f ad11 	bls.w	403980 <.LVL452>
  403f5e:	2030      	movs	r0, #48	; 0x30

00403f60 <.LVL617>:
  403f60:	1c5a      	adds	r2, r3, #1
  403f62:	9220      	str	r2, [sp, #128]	; 0x80
  403f64:	7018      	strb	r0, [r3, #0]
  403f66:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403f68:	4299      	cmp	r1, r3
  403f6a:	d8f9      	bhi.n	403f60 <.LVL617>
  403f6c:	e508      	b.n	403980 <.LVL452>

00403f6e <.LVL618>:
  403f6e:	460b      	mov	r3, r1
  403f70:	e506      	b.n	403980 <.LVL452>

00403f72 <.LBB24>:
  403f72:	aa22      	add	r2, sp, #136	; 0x88
  403f74:	9905      	ldr	r1, [sp, #20]
  403f76:	4658      	mov	r0, fp
  403f78:	f005 fd0e 	bl	409998 <__ssprint_r>

00403f7c <.LVL620>:
  403f7c:	2800      	cmp	r0, #0
  403f7e:	f47e adab 	bne.w	402ad8 <.L189>
  403f82:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  403f84:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403f86:	9b24      	ldr	r3, [sp, #144]	; 0x90

00403f88 <.LVL621>:
  403f88:	1a8a      	subs	r2, r1, r2
  403f8a:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403f8e <.LVL622>:
  403f8e:	e436      	b.n	4037fe <.LVL409>

00403f90 <.LBE24>:
  403f90:	424c      	negs	r4, r1
  403f92:	3110      	adds	r1, #16

00403f94 <.LVL624>:
  403f94:	da5d      	bge.n	404052 <.LVL651>
  403f96:	2510      	movs	r5, #16
  403f98:	e004      	b.n	403fa4 <.LVL626+0x6>

00403f9a <.LVL625>:
  403f9a:	f109 0908 	add.w	r9, r9, #8

00403f9e <.LVL626>:
  403f9e:	3c10      	subs	r4, #16
  403fa0:	2c10      	cmp	r4, #16
  403fa2:	dd56      	ble.n	404052 <.LVL651>
  403fa4:	3201      	adds	r2, #1
  403fa6:	3310      	adds	r3, #16
  403fa8:	2a07      	cmp	r2, #7
  403faa:	9324      	str	r3, [sp, #144]	; 0x90

00403fac <.LVL629>:
  403fac:	9223      	str	r2, [sp, #140]	; 0x8c
  403fae:	f8c9 a000 	str.w	sl, [r9]
  403fb2:	f8c9 5004 	str.w	r5, [r9, #4]
  403fb6:	ddf0      	ble.n	403f9a <.LVL625>
  403fb8:	aa22      	add	r2, sp, #136	; 0x88
  403fba:	9905      	ldr	r1, [sp, #20]
  403fbc:	4658      	mov	r0, fp
  403fbe:	f005 fceb 	bl	409998 <__ssprint_r>

00403fc2 <.LVL630>:
  403fc2:	2800      	cmp	r0, #0
  403fc4:	f47e ad88 	bne.w	402ad8 <.L189>
  403fc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403fcc:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403fd0 <.LVL631>:
  403fd0:	e7e5      	b.n	403f9e <.LVL626>

00403fd2 <.LVL632>:
  403fd2:	aa22      	add	r2, sp, #136	; 0x88
  403fd4:	9905      	ldr	r1, [sp, #20]
  403fd6:	4658      	mov	r0, fp
  403fd8:	f005 fcde 	bl	409998 <__ssprint_r>

00403fdc <.LVL633>:
  403fdc:	2800      	cmp	r0, #0
  403fde:	f47e ad7b 	bne.w	402ad8 <.L189>
  403fe2:	991c      	ldr	r1, [sp, #112]	; 0x70
  403fe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fe6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  403fe8:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00403fec <.LVL634>:
  403fec:	e589      	b.n	403b02 <.LVL494>

00403fee <.LVL635>:
  403fee:	9b08      	ldr	r3, [sp, #32]
  403ff0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403ff4:	9302      	str	r3, [sp, #8]

00403ff6 <.LVL636>:
  403ff6:	2367      	movs	r3, #103	; 0x67
  403ff8:	930d      	str	r3, [sp, #52]	; 0x34
  403ffa:	e74f      	b.n	403e9c <.LVL600>

00403ffc <.LVL637>:
  403ffc:	2200      	movs	r2, #0
  403ffe:	9204      	str	r2, [sp, #16]
  404000:	f7fe bcd2 	b.w	4029a8 <.LVL22+0x2>

00404004 <.LBB66>:
  404004:	1931      	adds	r1, r6, r4

00404006 <.LVL639>:
  404006:	e7a1      	b.n	403f4c <.LVL615+0x2>

00404008 <.LBB67>:
  404008:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40400a:	320f      	adds	r2, #15
  40400c:	b2d2      	uxtb	r2, r2
  40400e:	2101      	movs	r1, #1
  404010:	e6a4      	b.n	403d5c <.LVL560>

00404012 <.LBB68>:
  404012:	eeb0 0b4a 	vmov.f64	d0, d10
  404016:	a81c      	add	r0, sp, #112	; 0x70

00404018 <.LVL642>:
  404018:	f006 fdca 	bl	40abb0 <frexp>

0040401c <.LVL643>:
  40401c:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
  404020:	ee20 0b07 	vmul.f64	d0, d0, d7

00404024 <.LVL644>:
  404024:	eeb5 0b40 	vcmp.f64	d0, #0.0
  404028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40402c:	f000 80af 	beq.w	40418e <.LBB75>
  404030:	4c3a      	ldr	r4, [pc, #232]	; (40411c <.LVL671+0x6>)
  404032:	e616      	b.n	403c62 <.LVL531>

00404034 <.LBB69>:
  404034:	2900      	cmp	r1, #0
  404036:	f040 808f 	bne.w	404158 <.LBB73>

0040403a <.LVL646>:
  40403a:	2230      	movs	r2, #48	; 0x30
  40403c:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
  404040:	f10d 027b 	add.w	r2, sp, #123	; 0x7b

00404044 <.LVL647>:
  404044:	3330      	adds	r3, #48	; 0x30

00404046 <.LVL648>:
  404046:	7013      	strb	r3, [r2, #0]
  404048:	3201      	adds	r2, #1
  40404a:	e6ca      	b.n	403de2 <.LVL576>

0040404c <.LBE69>:
  40404c:	2306      	movs	r3, #6
  40404e:	9304      	str	r3, [sp, #16]
  404050:	e466      	b.n	403920 <.LBB28>

00404052 <.LVL651>:
  404052:	3201      	adds	r2, #1
  404054:	4423      	add	r3, r4
  404056:	2a07      	cmp	r2, #7
  404058:	f8c9 a000 	str.w	sl, [r9]
  40405c:	f8c9 4004 	str.w	r4, [r9, #4]
  404060:	9324      	str	r3, [sp, #144]	; 0x90
  404062:	9223      	str	r2, [sp, #140]	; 0x8c
  404064:	f109 0908 	add.w	r9, r9, #8
  404068:	f77f ad4e 	ble.w	403b08 <.LVL495>
  40406c:	aa22      	add	r2, sp, #136	; 0x88
  40406e:	9905      	ldr	r1, [sp, #20]
  404070:	4658      	mov	r0, fp
  404072:	f005 fc91 	bl	409998 <__ssprint_r>

00404076 <.LVL653>:
  404076:	2800      	cmp	r0, #0
  404078:	f47e ad2e 	bne.w	402ad8 <.L189>
  40407c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40407e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  404080:	f10d 0994 	add.w	r9, sp, #148	; 0x94

00404084 <.LVL654>:
  404084:	e540      	b.n	403b08 <.LVL495>

00404086 <.LVL655>:
  404086:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404088:	9308      	str	r3, [sp, #32]
  40408a:	e49c      	b.n	4039c6 <.LVL456>

0040408c <.LVL656>:
  40408c:	1c59      	adds	r1, r3, #1
  40408e:	4658      	mov	r0, fp
  404090:	f003 f874 	bl	40717c <.LFE14>

00404094 <.LVL657>:
  404094:	4606      	mov	r6, r0

00404096 <.LVL658>:
  404096:	2800      	cmp	r0, #0
  404098:	f000 8096 	beq.w	4041c8 <.LVL695>
  40409c:	9009      	str	r0, [sp, #36]	; 0x24
  40409e:	e5b8      	b.n	403c12 <.LBB48>

004040a0 <.LBB70>:
  4040a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4040a2:	2b47      	cmp	r3, #71	; 0x47
  4040a4:	d1ae      	bne.n	404004 <.LBB66>
  4040a6:	f018 0f01 	tst.w	r8, #1
  4040aa:	f43f ac68 	beq.w	40397e <.LVL451>
  4040ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4040b0:	2b46      	cmp	r3, #70	; 0x46
  4040b2:	eb06 0104 	add.w	r1, r6, r4

004040b6 <.LVL660>:
  4040b6:	f43f af43 	beq.w	403f40 <.LVL614>
  4040ba:	e747      	b.n	403f4c <.LVL615+0x2>

004040bc <.LBE70>:
  4040bc:	4e18      	ldr	r6, [pc, #96]	; (404120 <.LVL671+0xa>)

004040be <.LVL662>:
  4040be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  4040c0:	f89d 206b 	ldrb.w	r2, [sp, #107]	; 0x6b
  4040c4:	2300      	movs	r3, #0
  4040c6:	4619      	mov	r1, r3
  4040c8:	2003      	movs	r0, #3
  4040ca:	9309      	str	r3, [sp, #36]	; 0x24
  4040cc:	1f33      	subs	r3, r6, #4
  4040ce:	9104      	str	r1, [sp, #16]
  4040d0:	9002      	str	r0, [sp, #8]
  4040d2:	f028 0880 	bic.w	r8, r8, #128	; 0x80

004040d6 <.LVL663>:
  4040d6:	2c47      	cmp	r4, #71	; 0x47
  4040d8:	bfd8      	it	le
  4040da:	461e      	movle	r6, r3

004040dc <.LVL664>:
  4040dc:	9113      	str	r1, [sp, #76]	; 0x4c
  4040de:	9110      	str	r1, [sp, #64]	; 0x40
  4040e0:	910e      	str	r1, [sp, #56]	; 0x38
  4040e2:	9008      	str	r0, [sp, #32]
  4040e4:	f7fe bd6d 	b.w	402bc2 <.L59>

004040e8 <.LVL665>:
  4040e8:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4040ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4040ec:	4413      	add	r3, r2
  4040ee:	9a04      	ldr	r2, [sp, #16]
  4040f0:	441a      	add	r2, r3
  4040f2:	2366      	movs	r3, #102	; 0x66
  4040f4:	9208      	str	r2, [sp, #32]

004040f6 <.LVL666>:
  4040f6:	930d      	str	r3, [sp, #52]	; 0x34
  4040f8:	e6c8      	b.n	403e8c <.LVL599>

004040fa <.LBB71>:
  4040fa:	9c04      	ldr	r4, [sp, #16]
  4040fc:	eeb0 0b4a 	vmov.f64	d0, d10
  404100:	aa20      	add	r2, sp, #128	; 0x80

00404102 <.LVL668>:
  404102:	ab1d      	add	r3, sp, #116	; 0x74
  404104:	9201      	str	r2, [sp, #4]
  404106:	9300      	str	r3, [sp, #0]
  404108:	4622      	mov	r2, r4
  40410a:	ab1c      	add	r3, sp, #112	; 0x70

0040410c <.LVL669>:
  40410c:	2103      	movs	r1, #3
  40410e:	4658      	mov	r0, fp
  404110:	f001 fe9e 	bl	405e50 <_dtoa_r>

00404114 <.LVL670>:
  404114:	4606      	mov	r6, r0

00404116 <.LVL671>:
  404116:	e7ca      	b.n	4040ae <.LBB70+0xe>
  404118:	0040b4dc 	.word	0x0040b4dc
  40411c:	0040b4c8 	.word	0x0040b4c8
  404120:	0040b4b0 	.word	0x0040b4b0

00404124 <.LBE71>:
  404124:	9a08      	ldr	r2, [sp, #32]
  404126:	f1c3 0301 	rsb	r3, r3, #1
  40412a:	441a      	add	r2, r3
  40412c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404130:	9302      	str	r3, [sp, #8]

00404132 <.LVL673>:
  404132:	2367      	movs	r3, #103	; 0x67
  404134:	9208      	str	r2, [sp, #32]

00404136 <.LVL674>:
  404136:	930d      	str	r3, [sp, #52]	; 0x34
  404138:	e6b0      	b.n	403e9c <.LVL600>

0040413a <.LBB72>:
  40413a:	eeb5 ab40 	vcmp.f64	d10, #0.0
  40413e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  404142:	f43f af01 	beq.w	403f48 <.LVL614+0x8>
  404146:	f1c4 0401 	rsb	r4, r4, #1

0040414a <.LVL676>:
  40414a:	941c      	str	r4, [sp, #112]	; 0x70
  40414c:	e6fd      	b.n	403f4a <.LVL615>

0040414e <.LBE72>:
  40414e:	f01e 0f01 	tst.w	lr, #1
  404152:	f43f ae53 	beq.w	403dfc <.LVL582+0x6>
  404156:	e64d      	b.n	403df4 <.LVL581+0x4>

00404158 <.LBB73>:
  404158:	f10d 027a 	add.w	r2, sp, #122	; 0x7a

0040415c <.LVL679>:
  40415c:	e772      	b.n	404044 <.LVL647>

0040415e <.LBB74>:
  40415e:	4601      	mov	r1, r0
  404160:	4613      	mov	r3, r2
  404162:	e6b8      	b.n	403ed6 <.LVL605+0x20>

00404164 <.LBE74>:
  404164:	b913      	cbnz	r3, 40416c <.LBE74+0x8>
  404166:	f01e 0f01 	tst.w	lr, #1
  40416a:	d00a      	beq.n	404182 <.LVL683>
  40416c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40416e:	9a04      	ldr	r2, [sp, #16]
  404170:	3301      	adds	r3, #1
  404172:	441a      	add	r2, r3
  404174:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404178:	9302      	str	r3, [sp, #8]

0040417a <.LVL682>:
  40417a:	2366      	movs	r3, #102	; 0x66
  40417c:	9208      	str	r2, [sp, #32]
  40417e:	930d      	str	r3, [sp, #52]	; 0x34
  404180:	e68c      	b.n	403e9c <.LVL600>

00404182 <.LVL683>:
  404182:	2301      	movs	r3, #1
  404184:	9302      	str	r3, [sp, #8]

00404186 <.LVL684>:
  404186:	9308      	str	r3, [sp, #32]

00404188 <.LVL685>:
  404188:	2366      	movs	r3, #102	; 0x66
  40418a:	930d      	str	r3, [sp, #52]	; 0x34
  40418c:	e686      	b.n	403e9c <.LVL600>

0040418e <.LBB75>:
  40418e:	2301      	movs	r3, #1
  404190:	931c      	str	r3, [sp, #112]	; 0x70
  404192:	e74d      	b.n	404030 <.LVL644+0xc>

00404194 <.LVL687>:
  404194:	980a      	ldr	r0, [sp, #40]	; 0x28
  404196:	787b      	ldrb	r3, [r7, #1]

00404198 <.LVL688>:
  404198:	6802      	ldr	r2, [r0, #0]
  40419a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
  40419e:	9204      	str	r2, [sp, #16]

004041a0 <.LBE75>:
  4041a0:	4602      	mov	r2, r0
  4041a2:	3204      	adds	r2, #4

004041a4 <.LVL689>:
  4041a4:	460f      	mov	r7, r1

004041a6 <.LVL690>:
  4041a6:	920a      	str	r2, [sp, #40]	; 0x28
  4041a8:	f7fe bbfd 	b.w	4029a6 <.LVL22>

004041ac <.LBB76>:
  4041ac:	f10d 027a 	add.w	r2, sp, #122	; 0x7a

004041b0 <.LVL692>:
  4041b0:	e617      	b.n	403de2 <.LVL576>

004041b2 <.LBE76>:
  4041b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4041b4:	230c      	movs	r3, #12
  4041b6:	6013      	str	r3, [r2, #0]
  4041b8:	f04f 33ff 	mov.w	r3, #4294967295
  4041bc:	9303      	str	r3, [sp, #12]
  4041be:	f7fe bc9b 	b.w	402af8 <.LVL45>

004041c2 <.LVL694>:
  4041c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
  4041c4:	930e      	str	r3, [sp, #56]	; 0x38
  4041c6:	e5bf      	b.n	403d48 <.LVL557>

004041c8 <.LVL695>:
  4041c8:	9a05      	ldr	r2, [sp, #20]
  4041ca:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4041ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4041d2:	8193      	strh	r3, [r2, #12]
  4041d4:	f7fe bc89 	b.w	402aea <.LVL44+0x6>

Disassembly of section .text.Transform%31:

004041d8 <Transform>:
        rotlFixed((v),5); (w) = rotlFixed((w),30);
    #define R4(v,w,x,y,z,i) (z)+= f4((w),(x),(y)) + blk1((i)) + 0xCA62C1D6+ \
        rotlFixed((v),5); (w) = rotlFixed((w),30);

    static void Transform(Sha* sha, byte* data)
    {
  4041d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

004041dc <.LCFI0>:
  4041dc:	b097      	sub	sp, #92	; 0x5c

004041de <.LCFI1>:
  4041de:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  4041e0:	68c2      	ldr	r2, [r0, #12]
  4041e2:	eb03 0e02 	add.w	lr, r3, r2
  4041e6:	4bde      	ldr	r3, [pc, #888]	; (404560 <.LBE551+0xc>)
  4041e8:	449e      	add	lr, r3
  4041ea:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
  4041ec:	eb0e 62f2 	add.w	r2, lr, r2, ror #27
            t = e; e = d; d = c; c = b; b = a; a = t;
        }
    #else
        /* nearly 1 K bigger in code size but 25% faster  */
        /* 4 rounds of 20 operations each. Loop unrolled. */
        R0(a,b,c,d,e, 0); R0(e,a,b,c,d, 1); R0(d,e,a,b,c, 2); R0(c,d,e,a,b, 3);
  4041f0:	6d41      	ldr	r1, [r0, #84]	; 0x54

004041f2 <.LVL2>:
  4041f2:	6d84      	ldr	r4, [r0, #88]	; 0x58
  4041f4:	ea81 0e04 	eor.w	lr, r1, r4
  4041f8:	6d01      	ldr	r1, [r0, #80]	; 0x50
  4041fa:	ea0e 0e01 	and.w	lr, lr, r1
  4041fe:	ea8e 0e04 	eor.w	lr, lr, r4
  404202:	4496      	add	lr, r2

00404204 <.LBB487>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  404204:	6d02      	ldr	r2, [r0, #80]	; 0x50
  404206:	ea4f 02b2 	mov.w	r2, r2, ror #2

0040420a <.LBE487>:
  40420a:	6d41      	ldr	r1, [r0, #84]	; 0x54
  40420c:	ea81 0c02 	eor.w	ip, r1, r2
  404210:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
  404212:	ea0c 0c01 	and.w	ip, ip, r1
  404216:	6d41      	ldr	r1, [r0, #84]	; 0x54
  404218:	ea8c 0c01 	eor.w	ip, ip, r1
  40421c:	4621      	mov	r1, r4
  40421e:	6904      	ldr	r4, [r0, #16]
  404220:	4421      	add	r1, r4
  404222:	4419      	add	r1, r3
  404224:	448c      	add	ip, r1
  404226:	eb0c 6cfe 	add.w	ip, ip, lr, ror #27

0040422a <.LBB489>:
  40422a:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
  40422c:	ea4f 07b1 	mov.w	r7, r1, ror #2

00404230 <.LBE489>:
  404230:	f8d0 8014 	ldr.w	r8, [r0, #20]

00404234 <.LVL7>:
  404234:	ea82 0a07 	eor.w	sl, r2, r7
  404238:	ea0a 0a0e 	and.w	sl, sl, lr
  40423c:	ea8a 0a02 	eor.w	sl, sl, r2
  404240:	6d41      	ldr	r1, [r0, #84]	; 0x54
  404242:	4441      	add	r1, r8
  404244:	4419      	add	r1, r3
  404246:	448a      	add	sl, r1
  404248:	eb0a 6afc 	add.w	sl, sl, ip, ror #27

0040424c <.LBB491>:
  40424c:	ea4f 0ebe 	mov.w	lr, lr, ror #2

00404250 <.LBE491>:
  404250:	f8d0 b018 	ldr.w	fp, [r0, #24]

00404254 <.LVL10>:
  404254:	ea87 090e 	eor.w	r9, r7, lr
  404258:	ea09 090c 	and.w	r9, r9, ip
  40425c:	ea89 0907 	eor.w	r9, r9, r7
  404260:	eb0b 0103 	add.w	r1, fp, r3
  404264:	440a      	add	r2, r1
  404266:	4491      	add	r9, r2
  404268:	eb09 69fa 	add.w	r9, r9, sl, ror #27

0040426c <.LBB493>:
  40426c:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404270 <.LBE493>:
        R0(b,c,d,e,a, 4); R0(a,b,c,d,e, 5); R0(e,a,b,c,d, 6); R0(d,e,a,b,c, 7);
  404270:	ea8e 060c 	eor.w	r6, lr, ip
  404274:	ea06 060a 	and.w	r6, r6, sl
  404278:	ea86 060e 	eor.w	r6, r6, lr
  40427c:	69c2      	ldr	r2, [r0, #28]
  40427e:	441a      	add	r2, r3
  404280:	4417      	add	r7, r2
  404282:	443e      	add	r6, r7
  404284:	eb06 66f9 	add.w	r6, r6, r9, ror #27

00404288 <.LBB495>:
  404288:	ea4f 0aba 	mov.w	sl, sl, ror #2

0040428c <.LBE495>:
  40428c:	ea8c 050a 	eor.w	r5, ip, sl
  404290:	ea05 0509 	and.w	r5, r5, r9
  404294:	ea85 050c 	eor.w	r5, r5, ip
  404298:	6a02      	ldr	r2, [r0, #32]
  40429a:	441a      	add	r2, r3
  40429c:	4496      	add	lr, r2
  40429e:	4475      	add	r5, lr
  4042a0:	eb05 65f6 	add.w	r5, r5, r6, ror #27

004042a4 <.LBB497>:
  4042a4:	ea4f 09b9 	mov.w	r9, r9, ror #2

004042a8 <.LBE497>:
  4042a8:	ea8a 0409 	eor.w	r4, sl, r9
  4042ac:	4034      	ands	r4, r6
  4042ae:	ea84 040a 	eor.w	r4, r4, sl
  4042b2:	6a42      	ldr	r2, [r0, #36]	; 0x24
  4042b4:	441a      	add	r2, r3
  4042b6:	4494      	add	ip, r2
  4042b8:	4464      	add	r4, ip
  4042ba:	eb04 64f5 	add.w	r4, r4, r5, ror #27

004042be <.LBB499>:
  4042be:	ea4f 06b6 	mov.w	r6, r6, ror #2

004042c2 <.LBE499>:
  4042c2:	ea89 0106 	eor.w	r1, r9, r6
  4042c6:	4029      	ands	r1, r5
  4042c8:	ea81 0109 	eor.w	r1, r1, r9
  4042cc:	6a82      	ldr	r2, [r0, #40]	; 0x28
  4042ce:	441a      	add	r2, r3
  4042d0:	4492      	add	sl, r2
  4042d2:	4451      	add	r1, sl
  4042d4:	eb01 61f4 	add.w	r1, r1, r4, ror #27

004042d8 <.LBB501>:
  4042d8:	ea4f 05b5 	mov.w	r5, r5, ror #2

004042dc <.LBE501>:
        R0(c,d,e,a,b, 8); R0(b,c,d,e,a, 9); R0(a,b,c,d,e,10); R0(e,a,b,c,d,11);
  4042dc:	ea86 0205 	eor.w	r2, r6, r5
  4042e0:	4022      	ands	r2, r4
  4042e2:	4072      	eors	r2, r6
  4042e4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
  4042e6:	441f      	add	r7, r3
  4042e8:	44b9      	add	r9, r7
  4042ea:	444a      	add	r2, r9
  4042ec:	eb02 62f1 	add.w	r2, r2, r1, ror #27

004042f0 <.LBB503>:
  4042f0:	ea4f 04b4 	mov.w	r4, r4, ror #2

004042f4 <.LBE503>:
  4042f4:	ea85 0704 	eor.w	r7, r5, r4
  4042f8:	400f      	ands	r7, r1
  4042fa:	ea87 0c05 	eor.w	ip, r7, r5
  4042fe:	6b07      	ldr	r7, [r0, #48]	; 0x30
  404300:	eb07 0e03 	add.w	lr, r7, r3
  404304:	4476      	add	r6, lr
  404306:	eb0c 0706 	add.w	r7, ip, r6
  40430a:	eb07 67f2 	add.w	r7, r7, r2, ror #27

0040430e <.LBB505>:
  40430e:	ea4f 01b1 	mov.w	r1, r1, ror #2

00404312 <.LBE505>:
  404312:	ea84 0e01 	eor.w	lr, r4, r1
  404316:	ea0e 0e02 	and.w	lr, lr, r2
  40431a:	ea8e 0e04 	eor.w	lr, lr, r4
  40431e:	6b46      	ldr	r6, [r0, #52]	; 0x34
  404320:	441e      	add	r6, r3
  404322:	4435      	add	r5, r6
  404324:	44ae      	add	lr, r5
  404326:	eb0e 6ef7 	add.w	lr, lr, r7, ror #27

0040432a <.LBB507>:
  40432a:	ea4f 02b2 	mov.w	r2, r2, ror #2

0040432e <.LBE507>:
  40432e:	ea81 0c02 	eor.w	ip, r1, r2
  404332:	ea0c 0c07 	and.w	ip, ip, r7
  404336:	ea8c 0c01 	eor.w	ip, ip, r1
  40433a:	6b85      	ldr	r5, [r0, #56]	; 0x38
  40433c:	441d      	add	r5, r3
  40433e:	442c      	add	r4, r5
  404340:	44a4      	add	ip, r4
  404342:	eb0c 6cfe 	add.w	ip, ip, lr, ror #27

00404346 <.LBB509>:
  404346:	ea4f 07b7 	mov.w	r7, r7, ror #2

0040434a <.LBE509>:
        R0(d,e,a,b,c,12); R0(c,d,e,a,b,13); R0(b,c,d,e,a,14); R0(a,b,c,d,e,15);
  40434a:	ea82 0a07 	eor.w	sl, r2, r7
  40434e:	ea0a 0a0e 	and.w	sl, sl, lr
  404352:	ea8a 0a02 	eor.w	sl, sl, r2
  404356:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
  404358:	441c      	add	r4, r3
  40435a:	4421      	add	r1, r4
  40435c:	448a      	add	sl, r1
  40435e:	eb0a 6afc 	add.w	sl, sl, ip, ror #27

00404362 <.LBB511>:
  404362:	ea4f 0ebe 	mov.w	lr, lr, ror #2

00404366 <.LBE511>:
  404366:	ea87 090e 	eor.w	r9, r7, lr
  40436a:	ea09 090c 	and.w	r9, r9, ip
  40436e:	ea89 0907 	eor.w	r9, r9, r7
  404372:	6c01      	ldr	r1, [r0, #64]	; 0x40
  404374:	4419      	add	r1, r3
  404376:	440a      	add	r2, r1
  404378:	4491      	add	r9, r2
  40437a:	eb09 69fa 	add.w	r9, r9, sl, ror #27

0040437e <.LBB513>:
  40437e:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404382 <.LBE513>:
  404382:	ea8e 060c 	eor.w	r6, lr, ip
  404386:	ea06 060a 	and.w	r6, r6, sl
  40438a:	ea86 060e 	eor.w	r6, r6, lr
  40438e:	6c42      	ldr	r2, [r0, #68]	; 0x44
  404390:	441a      	add	r2, r3
  404392:	4417      	add	r7, r2
  404394:	443e      	add	r6, r7
  404396:	eb06 66f9 	add.w	r6, r6, r9, ror #27

0040439a <.LBB515>:
  40439a:	ea4f 0aba 	mov.w	sl, sl, ror #2

0040439e <.LBE515>:
  40439e:	ea8c 050a 	eor.w	r5, ip, sl
  4043a2:	ea05 0509 	and.w	r5, r5, r9
  4043a6:	ea85 050c 	eor.w	r5, r5, ip
  4043aa:	6c82      	ldr	r2, [r0, #72]	; 0x48
  4043ac:	441a      	add	r2, r3
  4043ae:	4496      	add	lr, r2
  4043b0:	4475      	add	r5, lr
  4043b2:	eb05 65f6 	add.w	r5, r5, r6, ror #27

004043b6 <.LBB517>:
  4043b6:	ea4f 09b9 	mov.w	r9, r9, ror #2

004043ba <.LBE517>:

        R1(e,a,b,c,d,16); R1(d,e,a,b,c,17); R1(c,d,e,a,b,18); R1(b,c,d,e,a,19);
  4043ba:	68c2      	ldr	r2, [r0, #12]
  4043bc:	ea82 0e08 	eor.w	lr, r2, r8
  4043c0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  4043c2:	ea8e 0e02 	eor.w	lr, lr, r2
  4043c6:	6c02      	ldr	r2, [r0, #64]	; 0x40
  4043c8:	ea8e 0e02 	eor.w	lr, lr, r2

004043cc <.LBB519>:
  4043cc:	ea4f 72fe 	mov.w	r2, lr, ror #31

004043d0 <.LBE519>:
  4043d0:	ea8a 0409 	eor.w	r4, sl, r9
  4043d4:	4034      	ands	r4, r6
  4043d6:	ea84 040a 	eor.w	r4, r4, sl
  4043da:	9201      	str	r2, [sp, #4]
  4043dc:	441a      	add	r2, r3

004043de <.LVL39>:
  4043de:	4494      	add	ip, r2
  4043e0:	4464      	add	r4, ip
  4043e2:	eb04 64f5 	add.w	r4, r4, r5, ror #27

004043e6 <.LBB521>:
  4043e6:	ea4f 06b6 	mov.w	r6, r6, ror #2

004043ea <.LBE521>:
  4043ea:	6901      	ldr	r1, [r0, #16]
  4043ec:	ea81 020b 	eor.w	r2, r1, fp
  4043f0:	6b01      	ldr	r1, [r0, #48]	; 0x30
  4043f2:	404a      	eors	r2, r1
  4043f4:	6c41      	ldr	r1, [r0, #68]	; 0x44
  4043f6:	404a      	eors	r2, r1

004043f8 <.LBB523>:
  4043f8:	ea4f 71f2 	mov.w	r1, r2, ror #31
  4043fc:	460f      	mov	r7, r1

004043fe <.LBE523>:
  4043fe:	ea89 0106 	eor.w	r1, r9, r6

00404402 <.LVL44>:
  404402:	4029      	ands	r1, r5
  404404:	ea81 0109 	eor.w	r1, r1, r9
  404408:	9707      	str	r7, [sp, #28]
  40440a:	18fa      	adds	r2, r7, r3
  40440c:	4492      	add	sl, r2
  40440e:	4451      	add	r1, sl
  404410:	eb01 61f4 	add.w	r1, r1, r4, ror #27

00404414 <.LBB525>:
  404414:	ea4f 05b5 	mov.w	r5, r5, ror #2

00404418 <.LBE525>:
  404418:	69c7      	ldr	r7, [r0, #28]

0040441a <.LVL47>:
  40441a:	46be      	mov	lr, r7
  40441c:	ea88 0207 	eor.w	r2, r8, r7
  404420:	6b47      	ldr	r7, [r0, #52]	; 0x34
  404422:	407a      	eors	r2, r7
  404424:	6c87      	ldr	r7, [r0, #72]	; 0x48
  404426:	407a      	eors	r2, r7

00404428 <.LBB527>:
  404428:	ea4f 77f2 	mov.w	r7, r2, ror #31

0040442c <.LBE527>:
  40442c:	ea86 0205 	eor.w	r2, r6, r5
  404430:	4022      	ands	r2, r4
  404432:	4072      	eors	r2, r6
  404434:	9703      	str	r7, [sp, #12]
  404436:	441f      	add	r7, r3

00404438 <.LVL50>:
  404438:	44b9      	add	r9, r7
  40443a:	444a      	add	r2, r9
  40443c:	eb02 62f1 	add.w	r2, r2, r1, ror #27

00404440 <.LBB529>:
  404440:	ea4f 09b4 	mov.w	r9, r4, ror #2

00404444 <.LBE529>:
  404444:	6a04      	ldr	r4, [r0, #32]
  404446:	ea8b 0704 	eor.w	r7, fp, r4
  40444a:	6b84      	ldr	r4, [r0, #56]	; 0x38
  40444c:	4067      	eors	r7, r4
  40444e:	9c01      	ldr	r4, [sp, #4]
  404450:	4067      	eors	r7, r4

00404452 <.LBB531>:
  404452:	ea4f 74f7 	mov.w	r4, r7, ror #31

00404456 <.LBE531>:
  404456:	ea85 0709 	eor.w	r7, r5, r9
  40445a:	400f      	ands	r7, r1
  40445c:	406f      	eors	r7, r5
  40445e:	9404      	str	r4, [sp, #16]
  404460:	4423      	add	r3, r4
  404462:	4433      	add	r3, r6
  404464:	441f      	add	r7, r3
  404466:	eb07 67f2 	add.w	r7, r7, r2, ror #27

0040446a <.LBB533>:
  40446a:	ea4f 01b1 	mov.w	r1, r1, ror #2

0040446e <.LBE533>:

        R2(a,b,c,d,e,20); R2(e,a,b,c,d,21); R2(d,e,a,b,c,22); R2(c,d,e,a,b,23);
  40446e:	6a46      	ldr	r6, [r0, #36]	; 0x24
  404470:	ea8e 0606 	eor.w	r6, lr, r6
  404474:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  404476:	405e      	eors	r6, r3
  404478:	9b07      	ldr	r3, [sp, #28]
  40447a:	405e      	eors	r6, r3

0040447c <.LBB535>:
  40447c:	ea4f 73f6 	mov.w	r3, r6, ror #31

00404480 <.LBE535>:
  404480:	ea89 0801 	eor.w	r8, r9, r1
  404484:	ea88 0802 	eor.w	r8, r8, r2
  404488:	9302      	str	r3, [sp, #8]
  40448a:	f8df e0d8 	ldr.w	lr, [pc, #216]	; 404564 <.LBE551+0x10>
  40448e:	449e      	add	lr, r3
  404490:	4475      	add	r5, lr
  404492:	44a8      	add	r8, r5
  404494:	eb08 68f7 	add.w	r8, r8, r7, ror #27

00404498 <.LBB537>:
  404498:	ea4f 02b2 	mov.w	r2, r2, ror #2

0040449c <.LBE537>:
  40449c:	6a05      	ldr	r5, [r0, #32]
  40449e:	6a86      	ldr	r6, [r0, #40]	; 0x28
  4044a0:	4075      	eors	r5, r6
  4044a2:	6c06      	ldr	r6, [r0, #64]	; 0x40
  4044a4:	4075      	eors	r5, r6
  4044a6:	9e03      	ldr	r6, [sp, #12]
  4044a8:	4075      	eors	r5, r6

004044aa <.LBB539>:
  4044aa:	ea4f 73f5 	mov.w	r3, r5, ror #31

004044ae <.LBE539>:
  4044ae:	ea81 0c02 	eor.w	ip, r1, r2
  4044b2:	ea8c 0c07 	eor.w	ip, ip, r7
  4044b6:	9303      	str	r3, [sp, #12]

004044b8 <.LVL63>:
  4044b8:	f8df e0a8 	ldr.w	lr, [pc, #168]	; 404564 <.LBE551+0x10>
  4044bc:	449e      	add	lr, r3
  4044be:	eb09 040e 	add.w	r4, r9, lr

004044c2 <.LVL64>:
  4044c2:	44a4      	add	ip, r4
  4044c4:	eb0c 6cf8 	add.w	ip, ip, r8, ror #27

004044c8 <.LBB541>:
  4044c8:	ea4f 07b7 	mov.w	r7, r7, ror #2

004044cc <.LBE541>:
  4044cc:	6a45      	ldr	r5, [r0, #36]	; 0x24
  4044ce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c

004044d0 <.LVL67>:
  4044d0:	ea85 0403 	eor.w	r4, r5, r3
  4044d4:	6c45      	ldr	r5, [r0, #68]	; 0x44
  4044d6:	406c      	eors	r4, r5
  4044d8:	9d04      	ldr	r5, [sp, #16]
  4044da:	406c      	eors	r4, r5

004044dc <.LBB543>:
  4044dc:	ea4f 73f4 	mov.w	r3, r4, ror #31

004044e0 <.LBE543>:
  4044e0:	ea82 0e07 	eor.w	lr, r2, r7
  4044e4:	ea8e 0e08 	eor.w	lr, lr, r8
  4044e8:	9304      	str	r3, [sp, #16]

004044ea <.LVL70>:
  4044ea:	f103 49dd 	add.w	r9, r3, #1853882368	; 0x6e800000
  4044ee:	f509 09b3 	add.w	r9, r9, #5865472	; 0x598000
  4044f2:	f509 49d7 	add.w	r9, r9, #27520	; 0x6b80
  4044f6:	f109 0921 	add.w	r9, r9, #33	; 0x21
  4044fa:	4449      	add	r1, r9
  4044fc:	448e      	add	lr, r1
  4044fe:	eb0e 6efc 	add.w	lr, lr, ip, ror #27

00404502 <.LBB545>:
  404502:	ea4f 08b8 	mov.w	r8, r8, ror #2

00404506 <.LBE545>:
  404506:	6a81      	ldr	r1, [r0, #40]	; 0x28
  404508:	4689      	mov	r9, r1
  40450a:	6b01      	ldr	r1, [r0, #48]	; 0x30
  40450c:	ea89 0101 	eor.w	r1, r9, r1
  404510:	6c84      	ldr	r4, [r0, #72]	; 0x48
  404512:	4061      	eors	r1, r4
  404514:	9c02      	ldr	r4, [sp, #8]
  404516:	4061      	eors	r1, r4

00404518 <.LBB547>:
  404518:	ea4f 73f1 	mov.w	r3, r1, ror #31

0040451c <.LBE547>:
  40451c:	ea87 0b08 	eor.w	fp, r7, r8
  404520:	ea8b 0b0c 	eor.w	fp, fp, ip
  404524:	9305      	str	r3, [sp, #20]
  404526:	f103 49dd 	add.w	r9, r3, #1853882368	; 0x6e800000
  40452a:	f509 09b3 	add.w	r9, r9, #5865472	; 0x598000
  40452e:	f509 49d7 	add.w	r9, r9, #27520	; 0x6b80
  404532:	f109 0921 	add.w	r9, r9, #33	; 0x21
  404536:	444a      	add	r2, r9
  404538:	4493      	add	fp, r2
  40453a:	eb0b 6bfe 	add.w	fp, fp, lr, ror #27

0040453e <.LBB549>:
  40453e:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404542 <.LBE549>:
        R2(b,c,d,e,a,24); R2(a,b,c,d,e,25); R2(e,a,b,c,d,26); R2(d,e,a,b,c,27);
  404542:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
  404544:	6b42      	ldr	r2, [r0, #52]	; 0x34
  404546:	404a      	eors	r2, r1
  404548:	9b01      	ldr	r3, [sp, #4]

0040454a <.LVL77>:
  40454a:	405a      	eors	r2, r3
  40454c:	9903      	ldr	r1, [sp, #12]
  40454e:	404a      	eors	r2, r1

00404550 <.LBB551>:
  404550:	ea4f 72f2 	mov.w	r2, r2, ror #31

00404554 <.LBE551>:
  404554:	ea88 0a0c 	eor.w	sl, r8, ip
  404558:	ea8a 0a0e 	eor.w	sl, sl, lr
  40455c:	e004      	b.n	404568 <.LBE551+0x14>
  40455e:	bf00      	nop
  404560:	5a827999 	.word	0x5a827999
  404564:	6ed9eba1 	.word	0x6ed9eba1
  404568:	9206      	str	r2, [sp, #24]
  40456a:	f8df 96b8 	ldr.w	r9, [pc, #1720]	; 404c24 <.LBE673+0x14>
  40456e:	4491      	add	r9, r2
  404570:	444f      	add	r7, r9
  404572:	44ba      	add	sl, r7
  404574:	eb0a 6afb 	add.w	sl, sl, fp, ror #27

00404578 <.LBB553>:
  404578:	ea4f 0ebe 	mov.w	lr, lr, ror #2

0040457c <.LBE553>:
  40457c:	6b01      	ldr	r1, [r0, #48]	; 0x30
  40457e:	6b84      	ldr	r4, [r0, #56]	; 0x38
  404580:	ea81 0704 	eor.w	r7, r1, r4
  404584:	9a07      	ldr	r2, [sp, #28]
  404586:	4057      	eors	r7, r2
  404588:	9c04      	ldr	r4, [sp, #16]
  40458a:	4067      	eors	r7, r4

0040458c <.LBB555>:
  40458c:	ea4f 77f7 	mov.w	r7, r7, ror #31

00404590 <.LVL83>:
  404590:	463c      	mov	r4, r7

00404592 <.LBE555>:
  404592:	ea8c 090e 	eor.w	r9, ip, lr
  404596:	ea89 090b 	eor.w	r9, r9, fp
  40459a:	f107 47dd 	add.w	r7, r7, #1853882368	; 0x6e800000
  40459e:	f507 07b3 	add.w	r7, r7, #5865472	; 0x598000
  4045a2:	f507 47d7 	add.w	r7, r7, #27520	; 0x6b80
  4045a6:	3721      	adds	r7, #33	; 0x21
  4045a8:	44b8      	add	r8, r7
  4045aa:	44c1      	add	r9, r8
  4045ac:	eb09 69fa 	add.w	r9, r9, sl, ror #27

004045b0 <.LBB557>:
  4045b0:	ea4f 0bbb 	mov.w	fp, fp, ror #2

004045b4 <.LBE557>:
  4045b4:	6b41      	ldr	r1, [r0, #52]	; 0x34
  4045b6:	6bc7      	ldr	r7, [r0, #60]	; 0x3c
  4045b8:	404f      	eors	r7, r1
  4045ba:	4077      	eors	r7, r6
  4045bc:	9905      	ldr	r1, [sp, #20]
  4045be:	404f      	eors	r7, r1

004045c0 <.LBB559>:
  4045c0:	ea4f 77f7 	mov.w	r7, r7, ror #31

004045c4 <.LBE559>:
  4045c4:	ea8e 080b 	eor.w	r8, lr, fp
  4045c8:	ea88 080a 	eor.w	r8, r8, sl
  4045cc:	9707      	str	r7, [sp, #28]

004045ce <.LVL89>:
  4045ce:	f107 47dd 	add.w	r7, r7, #1853882368	; 0x6e800000
  4045d2:	f507 07b3 	add.w	r7, r7, #5865472	; 0x598000
  4045d6:	f507 47d7 	add.w	r7, r7, #27520	; 0x6b80
  4045da:	3721      	adds	r7, #33	; 0x21
  4045dc:	44bc      	add	ip, r7
  4045de:	44e0      	add	r8, ip
  4045e0:	eb08 68f9 	add.w	r8, r8, r9, ror #27

004045e4 <.LBB561>:
  4045e4:	ea4f 0aba 	mov.w	sl, sl, ror #2

004045e8 <.LBE561>:
  4045e8:	6b81      	ldr	r1, [r0, #56]	; 0x38
  4045ea:	468c      	mov	ip, r1
  4045ec:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4045ee:	ea8c 0701 	eor.w	r7, ip, r1
  4045f2:	406f      	eors	r7, r5
  4045f4:	9906      	ldr	r1, [sp, #24]
  4045f6:	404f      	eors	r7, r1

004045f8 <.LBB563>:
  4045f8:	ea4f 77f7 	mov.w	r7, r7, ror #31

004045fc <.LVL93>:
  4045fc:	4639      	mov	r1, r7

004045fe <.LBE563>:
  4045fe:	ea8b 070a 	eor.w	r7, fp, sl
  404602:	ea87 0709 	eor.w	r7, r7, r9
  404606:	9108      	str	r1, [sp, #32]
  404608:	f8df c618 	ldr.w	ip, [pc, #1560]	; 404c24 <.LBE673+0x14>
  40460c:	448c      	add	ip, r1
  40460e:	44e6      	add	lr, ip
  404610:	4477      	add	r7, lr
  404612:	eb07 67f8 	add.w	r7, r7, r8, ror #27

00404616 <.LBB565>:
  404616:	ea4f 09b9 	mov.w	r9, r9, ror #2

0040461a <.LBE565>:
        R2(c,d,e,a,b,28); R2(b,c,d,e,a,29); R2(a,b,c,d,e,30); R2(e,a,b,c,d,31);
  40461a:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
  40461c:	468e      	mov	lr, r1
  40461e:	6c41      	ldr	r1, [r0, #68]	; 0x44
  404620:	ea8e 0e01 	eor.w	lr, lr, r1
  404624:	9902      	ldr	r1, [sp, #8]
  404626:	ea8e 0e01 	eor.w	lr, lr, r1
  40462a:	940d      	str	r4, [sp, #52]	; 0x34
  40462c:	ea8e 0e04 	eor.w	lr, lr, r4

00404630 <.LBB567>:
  404630:	ea4f 7efe 	mov.w	lr, lr, ror #31

00404634 <.LVL98>:
  404634:	4671      	mov	r1, lr

00404636 <.LBE567>:
  404636:	ea8a 0e09 	eor.w	lr, sl, r9
  40463a:	ea8e 0e08 	eor.w	lr, lr, r8
  40463e:	9109      	str	r1, [sp, #36]	; 0x24
  404640:	f101 4cdd 	add.w	ip, r1, #1853882368	; 0x6e800000
  404644:	f50c 0cb3 	add.w	ip, ip, #5865472	; 0x598000
  404648:	f50c 4cd7 	add.w	ip, ip, #27520	; 0x6b80
  40464c:	f10c 0c21 	add.w	ip, ip, #33	; 0x21
  404650:	44e3      	add	fp, ip
  404652:	44f3      	add	fp, lr
  404654:	eb0b 6bf7 	add.w	fp, fp, r7, ror #27

00404658 <.LBB569>:
  404658:	ea4f 08b8 	mov.w	r8, r8, ror #2

0040465c <.LBE569>:
  40465c:	6c04      	ldr	r4, [r0, #64]	; 0x40
  40465e:	46a6      	mov	lr, r4
  404660:	6c84      	ldr	r4, [r0, #72]	; 0x48
  404662:	ea8e 0e04 	eor.w	lr, lr, r4
  404666:	9c03      	ldr	r4, [sp, #12]
  404668:	ea8e 0e04 	eor.w	lr, lr, r4
  40466c:	9c07      	ldr	r4, [sp, #28]
  40466e:	ea8e 0e04 	eor.w	lr, lr, r4

00404672 <.LBB571>:
  404672:	ea4f 7efe 	mov.w	lr, lr, ror #31

00404676 <.LVL103>:
  404676:	4674      	mov	r4, lr

00404678 <.LBE571>:
  404678:	ea89 0e08 	eor.w	lr, r9, r8
  40467c:	ea8e 0e07 	eor.w	lr, lr, r7
  404680:	940a      	str	r4, [sp, #40]	; 0x28
  404682:	f104 4cdd 	add.w	ip, r4, #1853882368	; 0x6e800000
  404686:	f50c 0cb3 	add.w	ip, ip, #5865472	; 0x598000
  40468a:	f50c 4cd7 	add.w	ip, ip, #27520	; 0x6b80
  40468e:	f10c 0c21 	add.w	ip, ip, #33	; 0x21
  404692:	44e2      	add	sl, ip
  404694:	44f2      	add	sl, lr
  404696:	eb0a 6afb 	add.w	sl, sl, fp, ror #27

0040469a <.LBB573>:
  40469a:	ea4f 07b7 	mov.w	r7, r7, ror #2

0040469e <.LBE573>:
  40469e:	6c41      	ldr	r1, [r0, #68]	; 0x44
  4046a0:	ea81 0e03 	eor.w	lr, r1, r3
  4046a4:	9c04      	ldr	r4, [sp, #16]
  4046a6:	ea8e 0e04 	eor.w	lr, lr, r4
  4046aa:	9908      	ldr	r1, [sp, #32]
  4046ac:	ea8e 0e01 	eor.w	lr, lr, r1

004046b0 <.LBB575>:
  4046b0:	ea4f 7efe 	mov.w	lr, lr, ror #31

004046b4 <.LVL108>:
  4046b4:	4673      	mov	r3, lr

004046b6 <.LBE575>:
  4046b6:	ea88 0e07 	eor.w	lr, r8, r7
  4046ba:	ea8e 0e0b 	eor.w	lr, lr, fp
  4046be:	930e      	str	r3, [sp, #56]	; 0x38
  4046c0:	f103 4cdd 	add.w	ip, r3, #1853882368	; 0x6e800000
  4046c4:	f50c 0cb3 	add.w	ip, ip, #5865472	; 0x598000
  4046c8:	f50c 4cd7 	add.w	ip, ip, #27520	; 0x6b80
  4046cc:	f10c 0c21 	add.w	ip, ip, #33	; 0x21
  4046d0:	44e1      	add	r9, ip
  4046d2:	44f1      	add	r9, lr
  4046d4:	eb09 69fa 	add.w	r9, r9, sl, ror #27

004046d8 <.LBB577>:
  4046d8:	ea4f 0bbb 	mov.w	fp, fp, ror #2

004046dc <.LBE577>:
  4046dc:	6c81      	ldr	r1, [r0, #72]	; 0x48
  4046de:	4614      	mov	r4, r2
  4046e0:	ea81 0e02 	eor.w	lr, r1, r2
  4046e4:	9a05      	ldr	r2, [sp, #20]

004046e6 <.LVL112>:
  4046e6:	ea8e 0e02 	eor.w	lr, lr, r2
  4046ea:	9909      	ldr	r1, [sp, #36]	; 0x24
  4046ec:	ea8e 0e01 	eor.w	lr, lr, r1

004046f0 <.LBB579>:
  4046f0:	ea4f 7efe 	mov.w	lr, lr, ror #31

004046f4 <.LBE579>:
  4046f4:	ea87 0c0b 	eor.w	ip, r7, fp
  4046f8:	ea8c 0c0a 	eor.w	ip, ip, sl
  4046fc:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
  404700:	f10e 4edd 	add.w	lr, lr, #1853882368	; 0x6e800000
  404704:	f50e 0eb3 	add.w	lr, lr, #5865472	; 0x598000
  404708:	f50e 4ed7 	add.w	lr, lr, #27520	; 0x6b80
  40470c:	f10e 0e21 	add.w	lr, lr, #33	; 0x21
  404710:	44f0      	add	r8, lr
  404712:	44c4      	add	ip, r8
  404714:	eb0c 6cf9 	add.w	ip, ip, r9, ror #27

00404718 <.LBB581>:
  404718:	ea4f 0aba 	mov.w	sl, sl, ror #2

0040471c <.LBE581>:
        R2(d,e,a,b,c,32); R2(c,d,e,a,b,33); R2(b,c,d,e,a,34); R2(a,b,c,d,e,35);
  40471c:	9b01      	ldr	r3, [sp, #4]
  40471e:	469e      	mov	lr, r3
  404720:	4633      	mov	r3, r6
  404722:	ea8e 0e06 	eor.w	lr, lr, r6
  404726:	9a06      	ldr	r2, [sp, #24]
  404728:	ea8e 0e02 	eor.w	lr, lr, r2
  40472c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40472e:	ea8e 0e01 	eor.w	lr, lr, r1

00404732 <.LBB583>:
  404732:	ea4f 76fe 	mov.w	r6, lr, ror #31

00404736 <.LBE583>:
  404736:	ea8b 080a 	eor.w	r8, fp, sl
  40473a:	ea88 0809 	eor.w	r8, r8, r9
  40473e:	960b      	str	r6, [sp, #44]	; 0x2c
  404740:	f8df e4e0 	ldr.w	lr, [pc, #1248]	; 404c24 <.LBE673+0x14>
  404744:	44b6      	add	lr, r6
  404746:	4477      	add	r7, lr
  404748:	44b8      	add	r8, r7
  40474a:	eb08 68fc 	add.w	r8, r8, ip, ror #27

0040474e <.LBB585>:
  40474e:	ea4f 09b9 	mov.w	r9, r9, ror #2

00404752 <.LBE585>:
  404752:	ea84 0705 	eor.w	r7, r4, r5
  404756:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404758:	4057      	eors	r7, r2
  40475a:	9e0e      	ldr	r6, [sp, #56]	; 0x38

0040475c <.LVL121>:
  40475c:	4077      	eors	r7, r6

0040475e <.LBB587>:
  40475e:	ea4f 77f7 	mov.w	r7, r7, ror #31

00404762 <.LBE587>:
  404762:	ea8a 0e09 	eor.w	lr, sl, r9
  404766:	ea8e 0e0c 	eor.w	lr, lr, ip
  40476a:	970c      	str	r7, [sp, #48]	; 0x30
  40476c:	f107 47dd 	add.w	r7, r7, #1853882368	; 0x6e800000

00404770 <.LVL124>:
  404770:	f507 07b3 	add.w	r7, r7, #5865472	; 0x598000
  404774:	f507 47d7 	add.w	r7, r7, #27520	; 0x6b80
  404778:	3721      	adds	r7, #33	; 0x21
  40477a:	44bb      	add	fp, r7
  40477c:	44de      	add	lr, fp
  40477e:	eb0e 6ef8 	add.w	lr, lr, r8, ror #27

00404782 <.LBB589>:
  404782:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404786 <.LBE589>:
  404786:	9f02      	ldr	r7, [sp, #8]
  404788:	405f      	eors	r7, r3
  40478a:	9c07      	ldr	r4, [sp, #28]
  40478c:	4067      	eors	r7, r4
  40478e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  404790:	4067      	eors	r7, r4

00404792 <.LBB591>:
  404792:	ea4f 73f7 	mov.w	r3, r7, ror #31

00404796 <.LVL128>:
  404796:	461c      	mov	r4, r3

00404798 <.LBE591>:
  404798:	ea89 070c 	eor.w	r7, r9, ip
  40479c:	ea87 0708 	eor.w	r7, r7, r8
  4047a0:	f103 4bdd 	add.w	fp, r3, #1853882368	; 0x6e800000
  4047a4:	f50b 0bb3 	add.w	fp, fp, #5865472	; 0x598000
  4047a8:	f50b 4bd7 	add.w	fp, fp, #27520	; 0x6b80
  4047ac:	f10b 0b21 	add.w	fp, fp, #33	; 0x21
  4047b0:	44da      	add	sl, fp
  4047b2:	4457      	add	r7, sl
  4047b4:	eb07 67fe 	add.w	r7, r7, lr, ror #27

004047b8 <.LBB593>:
  4047b8:	ea4f 08b8 	mov.w	r8, r8, ror #2

004047bc <.LBE593>:
  4047bc:	9e03      	ldr	r6, [sp, #12]
  4047be:	ea85 0a06 	eor.w	sl, r5, r6
  4047c2:	9b08      	ldr	r3, [sp, #32]

004047c4 <.LVL132>:
  4047c4:	ea8a 0a03 	eor.w	sl, sl, r3
  4047c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c

004047ca <.LVL133>:
  4047ca:	ea8a 0a05 	eor.w	sl, sl, r5

004047ce <.LBB595>:
  4047ce:	ea4f 7afa 	mov.w	sl, sl, ror #31

004047d2 <.LBE595>:
  4047d2:	ea8c 0b08 	eor.w	fp, ip, r8
  4047d6:	ea8b 0b0e 	eor.w	fp, fp, lr
  4047da:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  4047de:	f10a 4add 	add.w	sl, sl, #1853882368	; 0x6e800000

004047e2 <.LVL136>:
  4047e2:	f50a 0ab3 	add.w	sl, sl, #5865472	; 0x598000
  4047e6:	f50a 4ad7 	add.w	sl, sl, #27520	; 0x6b80
  4047ea:	f10a 0a21 	add.w	sl, sl, #33	; 0x21
  4047ee:	44d1      	add	r9, sl
  4047f0:	44cb      	add	fp, r9
  4047f2:	eb0b 6bf7 	add.w	fp, fp, r7, ror #27

004047f6 <.LBB597>:
  4047f6:	ea4f 0ebe 	mov.w	lr, lr, ror #2

004047fa <.LBE597>:
        R2(e,a,b,c,d,36); R2(d,e,a,b,c,37); R2(c,d,e,a,b,38); R2(b,c,d,e,a,39);
  4047fa:	9e02      	ldr	r6, [sp, #8]
  4047fc:	9d04      	ldr	r5, [sp, #16]
  4047fe:	406e      	eors	r6, r5
  404800:	9d09      	ldr	r5, [sp, #36]	; 0x24
  404802:	406e      	eors	r6, r5
  404804:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  404806:	406e      	eors	r6, r5

00404808 <.LBB599>:
  404808:	ea4f 73f6 	mov.w	r3, r6, ror #31

0040480c <.LBE599>:
  40480c:	ea88 060e 	eor.w	r6, r8, lr
  404810:	407e      	eors	r6, r7
  404812:	9302      	str	r3, [sp, #8]
  404814:	f103 49dd 	add.w	r9, r3, #1853882368	; 0x6e800000
  404818:	f509 09b3 	add.w	r9, r9, #5865472	; 0x598000
  40481c:	f509 49d7 	add.w	r9, r9, #27520	; 0x6b80
  404820:	f109 0921 	add.w	r9, r9, #33	; 0x21
  404824:	44cc      	add	ip, r9
  404826:	4466      	add	r6, ip
  404828:	eb06 66fb 	add.w	r6, r6, fp, ror #27

0040482c <.LBB601>:
  40482c:	ea4f 07b7 	mov.w	r7, r7, ror #2

00404830 <.LBE601>:
  404830:	9d03      	ldr	r5, [sp, #12]
  404832:	9b05      	ldr	r3, [sp, #20]

00404834 <.LVL143>:
  404834:	405d      	eors	r5, r3
  404836:	404d      	eors	r5, r1
  404838:	9410      	str	r4, [sp, #64]	; 0x40
  40483a:	4065      	eors	r5, r4

0040483c <.LBB603>:
  40483c:	ea4f 71f5 	mov.w	r1, r5, ror #31

00404840 <.LBE603>:
  404840:	ea8e 0507 	eor.w	r5, lr, r7
  404844:	ea85 050b 	eor.w	r5, r5, fp
  404848:	9103      	str	r1, [sp, #12]
  40484a:	f101 4cdd 	add.w	ip, r1, #1853882368	; 0x6e800000
  40484e:	f50c 0cb3 	add.w	ip, ip, #5865472	; 0x598000
  404852:	f50c 4cd7 	add.w	ip, ip, #27520	; 0x6b80
  404856:	f10c 0c21 	add.w	ip, ip, #33	; 0x21
  40485a:	44e0      	add	r8, ip
  40485c:	44a8      	add	r8, r5
  40485e:	eb08 65f6 	add.w	r5, r8, r6, ror #27

00404862 <.LBB605>:
  404862:	ea4f 0bbb 	mov.w	fp, fp, ror #2

00404866 <.LBE605>:
  404866:	9c04      	ldr	r4, [sp, #16]

00404868 <.LVL148>:
  404868:	9b06      	ldr	r3, [sp, #24]
  40486a:	405c      	eors	r4, r3
  40486c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40486e:	405c      	eors	r4, r3
  404870:	9911      	ldr	r1, [sp, #68]	; 0x44

00404872 <.LVL149>:
  404872:	404c      	eors	r4, r1

00404874 <.LBB607>:
  404874:	ea4f 74f4 	mov.w	r4, r4, ror #31

00404878 <.LVL151>:
  404878:	4621      	mov	r1, r4

0040487a <.LBE607>:
  40487a:	ea87 040b 	eor.w	r4, r7, fp
  40487e:	4074      	eors	r4, r6
  404880:	9112      	str	r1, [sp, #72]	; 0x48
  404882:	f101 4cdd 	add.w	ip, r1, #1853882368	; 0x6e800000
  404886:	f50c 0cb3 	add.w	ip, ip, #5865472	; 0x598000
  40488a:	f50c 4cd7 	add.w	ip, ip, #27520	; 0x6b80
  40488e:	f10c 0c21 	add.w	ip, ip, #33	; 0x21
  404892:	44e6      	add	lr, ip
  404894:	44a6      	add	lr, r4
  404896:	eb0e 64f5 	add.w	r4, lr, r5, ror #27

0040489a <.LBB609>:
  40489a:	ea4f 06b6 	mov.w	r6, r6, ror #2

0040489e <.LBE609>:
  40489e:	9905      	ldr	r1, [sp, #20]

004048a0 <.LVL155>:
  4048a0:	4051      	eors	r1, r2
  4048a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4048a4:	4051      	eors	r1, r2
  4048a6:	9a02      	ldr	r2, [sp, #8]
  4048a8:	4051      	eors	r1, r2

004048aa <.LBB611>:
  4048aa:	ea4f 72f1 	mov.w	r2, r1, ror #31

004048ae <.LBE611>:
  4048ae:	ea8b 0106 	eor.w	r1, fp, r6
  4048b2:	4069      	eors	r1, r5
  4048b4:	9204      	str	r2, [sp, #16]
  4048b6:	4bdb      	ldr	r3, [pc, #876]	; (404c24 <.LBE673+0x14>)
  4048b8:	18d3      	adds	r3, r2, r3
  4048ba:	441f      	add	r7, r3
  4048bc:	440f      	add	r7, r1
  4048be:	eb07 61f4 	add.w	r1, r7, r4, ror #27

004048c2 <.LBB613>:
  4048c2:	ea4f 05b5 	mov.w	r5, r5, ror #2

004048c6 <.LBE613>:

        R3(a,b,c,d,e,40); R3(e,a,b,c,d,41); R3(d,e,a,b,c,42); R3(c,d,e,a,b,43);
  4048c6:	9a07      	ldr	r2, [sp, #28]

004048c8 <.LVL160>:
  4048c8:	9b06      	ldr	r3, [sp, #24]
  4048ca:	4053      	eors	r3, r2
  4048cc:	461a      	mov	r2, r3
  4048ce:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  4048d0:	407a      	eors	r2, r7
  4048d2:	9f03      	ldr	r7, [sp, #12]
  4048d4:	407a      	eors	r2, r7

004048d6 <.LBB615>:
  4048d6:	ea4f 77f2 	mov.w	r7, r2, ror #31

004048da <.LBE615>:
  4048da:	ea44 0205 	orr.w	r2, r4, r5
  4048de:	4032      	ands	r2, r6
  4048e0:	ea04 0305 	and.w	r3, r4, r5
  4048e4:	431a      	orrs	r2, r3
  4048e6:	4bd0      	ldr	r3, [pc, #832]	; (404c28 <.LBE673+0x18>)
  4048e8:	9713      	str	r7, [sp, #76]	; 0x4c
  4048ea:	441f      	add	r7, r3
  4048ec:	44bb      	add	fp, r7
  4048ee:	4493      	add	fp, r2
  4048f0:	eb0b 62f1 	add.w	r2, fp, r1, ror #27

004048f4 <.LBB617>:
  4048f4:	ea4f 09b4 	mov.w	r9, r4, ror #2

004048f8 <.LBE617>:
  4048f8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
  4048fa:	46be      	mov	lr, r7
  4048fc:	9f08      	ldr	r7, [sp, #32]
  4048fe:	ea8e 0707 	eor.w	r7, lr, r7
  404902:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404904:	4067      	eors	r7, r4
  404906:	9c12      	ldr	r4, [sp, #72]	; 0x48
  404908:	4067      	eors	r7, r4

0040490a <.LBB619>:
  40490a:	ea4f 74f7 	mov.w	r4, r7, ror #31

0040490e <.LBE619>:
  40490e:	ea41 0809 	orr.w	r8, r1, r9
  404912:	ea08 0705 	and.w	r7, r8, r5
  404916:	ea01 0809 	and.w	r8, r1, r9
  40491a:	ea47 0808 	orr.w	r8, r7, r8
  40491e:	940d      	str	r4, [sp, #52]	; 0x34
  404920:	18e7      	adds	r7, r4, r3
  404922:	443e      	add	r6, r7
  404924:	4446      	add	r6, r8
  404926:	eb06 68f2 	add.w	r8, r6, r2, ror #27

0040492a <.LBB621>:
  40492a:	ea4f 01b1 	mov.w	r1, r1, ror #2

0040492e <.LBE621>:
  40492e:	9e07      	ldr	r6, [sp, #28]
  404930:	46b6      	mov	lr, r6
  404932:	9e09      	ldr	r6, [sp, #36]	; 0x24
  404934:	ea8e 0706 	eor.w	r7, lr, r6
  404938:	9c10      	ldr	r4, [sp, #64]	; 0x40
  40493a:	4067      	eors	r7, r4
  40493c:	9e04      	ldr	r6, [sp, #16]
  40493e:	4077      	eors	r7, r6

00404940 <.LBB623>:
  404940:	ea4f 76f7 	mov.w	r6, r7, ror #31
  404944:	4637      	mov	r7, r6

00404946 <.LBE623>:
  404946:	ea42 0e01 	orr.w	lr, r2, r1
  40494a:	ea0e 0609 	and.w	r6, lr, r9
  40494e:	ea02 0e01 	and.w	lr, r2, r1
  404952:	ea46 0e0e 	orr.w	lr, r6, lr
  404956:	9714      	str	r7, [sp, #80]	; 0x50
  404958:	463e      	mov	r6, r7
  40495a:	441e      	add	r6, r3
  40495c:	4435      	add	r5, r6
  40495e:	4475      	add	r5, lr
  404960:	eb05 65f8 	add.w	r5, r5, r8, ror #27

00404964 <.LBB625>:
  404964:	ea4f 02b2 	mov.w	r2, r2, ror #2

00404968 <.LBE625>:
  404968:	9f08      	ldr	r7, [sp, #32]
  40496a:	46be      	mov	lr, r7
  40496c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  40496e:	ea8e 0b07 	eor.w	fp, lr, r7
  404972:	9f11      	ldr	r7, [sp, #68]	; 0x44
  404974:	ea8b 0b07 	eor.w	fp, fp, r7
  404978:	9e13      	ldr	r6, [sp, #76]	; 0x4c
  40497a:	ea8b 0b06 	eor.w	fp, fp, r6

0040497e <.LBB627>:
  40497e:	ea4f 7efb 	mov.w	lr, fp, ror #31

00404982 <.LBE627>:
  404982:	ea48 0c02 	orr.w	ip, r8, r2
  404986:	ea0c 0601 	and.w	r6, ip, r1
  40498a:	ea08 0c02 	and.w	ip, r8, r2
  40498e:	ea46 0c0c 	orr.w	ip, r6, ip
  404992:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
  404996:	4676      	mov	r6, lr
  404998:	441e      	add	r6, r3
  40499a:	eb09 0406 	add.w	r4, r9, r6
  40499e:	4464      	add	r4, ip
  4049a0:	eb04 6cf5 	add.w	ip, r4, r5, ror #27

004049a4 <.LBB629>:
  4049a4:	ea4f 08b8 	mov.w	r8, r8, ror #2

004049a8 <.LBE629>:
        R3(b,c,d,e,a,44); R3(a,b,c,d,e,45); R3(e,a,b,c,d,46); R3(d,e,a,b,c,47);
  4049a8:	9e09      	ldr	r6, [sp, #36]	; 0x24
  4049aa:	46b6      	mov	lr, r6
  4049ac:	9e0e      	ldr	r6, [sp, #56]	; 0x38
  4049ae:	ea8e 0e06 	eor.w	lr, lr, r6
  4049b2:	9f02      	ldr	r7, [sp, #8]
  4049b4:	ea8e 0e07 	eor.w	lr, lr, r7
  4049b8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  4049ba:	ea8e 0e04 	eor.w	lr, lr, r4

004049be <.LBB631>:
  4049be:	ea4f 7efe 	mov.w	lr, lr, ror #31

004049c2 <.LVL178>:
  4049c2:	4677      	mov	r7, lr

004049c4 <.LBE631>:
  4049c4:	ea45 0e08 	orr.w	lr, r5, r8
  4049c8:	ea0e 0402 	and.w	r4, lr, r2
  4049cc:	ea05 0e08 	and.w	lr, r5, r8
  4049d0:	ea44 0e0e 	orr.w	lr, r4, lr
  4049d4:	9705      	str	r7, [sp, #20]
  4049d6:	463c      	mov	r4, r7
  4049d8:	441c      	add	r4, r3
  4049da:	4421      	add	r1, r4
  4049dc:	4471      	add	r1, lr
  4049de:	eb01 61fc 	add.w	r1, r1, ip, ror #27

004049e2 <.LBB633>:
  4049e2:	ea4f 05b5 	mov.w	r5, r5, ror #2

004049e6 <.LBE633>:
  4049e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4049e8:	46be      	mov	lr, r7
  4049ea:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
  4049ec:	ea8e 0907 	eor.w	r9, lr, r7
  4049f0:	9c03      	ldr	r4, [sp, #12]
  4049f2:	ea89 0904 	eor.w	r9, r9, r4
  4049f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4049f8:	ea89 0904 	eor.w	r9, r9, r4

004049fc <.LBB635>:
  4049fc:	ea4f 7ef9 	mov.w	lr, r9, ror #31
  404a00:	f8cd e004 	str.w	lr, [sp, #4]

00404a04 <.LBE635>:
  404a04:	ea4c 0a05 	orr.w	sl, ip, r5
  404a08:	ea0a 0408 	and.w	r4, sl, r8
  404a0c:	ea0c 0a05 	and.w	sl, ip, r5
  404a10:	ea44 0a0a 	orr.w	sl, r4, sl
  404a14:	4674      	mov	r4, lr
  404a16:	441c      	add	r4, r3
  404a18:	4422      	add	r2, r4
  404a1a:	4492      	add	sl, r2
  404a1c:	eb0a 6af1 	add.w	sl, sl, r1, ror #27

00404a20 <.LBB637>:
  404a20:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404a24 <.LBE637>:
  404a24:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404a26:	4691      	mov	r9, r2
  404a28:	4056      	eors	r6, r2
  404a2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404a2c:	4056      	eors	r6, r2
  404a2e:	9a15      	ldr	r2, [sp, #84]	; 0x54
  404a30:	4056      	eors	r6, r2

00404a32 <.LBB639>:
  404a32:	ea4f 76f6 	mov.w	r6, r6, ror #31

00404a36 <.LVL187>:
  404a36:	4634      	mov	r4, r6

00404a38 <.LBE639>:
  404a38:	ea41 060c 	orr.w	r6, r1, ip
  404a3c:	ea06 0205 	and.w	r2, r6, r5
  404a40:	ea01 060c 	and.w	r6, r1, ip
  404a44:	4316      	orrs	r6, r2
  404a46:	940e      	str	r4, [sp, #56]	; 0x38
  404a48:	4622      	mov	r2, r4
  404a4a:	441a      	add	r2, r3
  404a4c:	4490      	add	r8, r2
  404a4e:	4446      	add	r6, r8
  404a50:	eb06 66fa 	add.w	r6, r6, sl, ror #27

00404a54 <.LBB641>:
  404a54:	ea4f 01b1 	mov.w	r1, r1, ror #2

00404a58 <.LBE641>:
  404a58:	463c      	mov	r4, r7
  404a5a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404a5c:	ea84 0207 	eor.w	r2, r4, r7
  404a60:	9c04      	ldr	r4, [sp, #16]
  404a62:	4062      	eors	r2, r4
  404a64:	9c05      	ldr	r4, [sp, #20]
  404a66:	4062      	eors	r2, r4

00404a68 <.LBB643>:
  404a68:	ea4f 72f2 	mov.w	r2, r2, ror #31

00404a6c <.LVL192>:
  404a6c:	4617      	mov	r7, r2

00404a6e <.LBE643>:
  404a6e:	ea4a 0201 	orr.w	r2, sl, r1
  404a72:	ea02 040c 	and.w	r4, r2, ip
  404a76:	ea0a 0201 	and.w	r2, sl, r1
  404a7a:	4322      	orrs	r2, r4
  404a7c:	9706      	str	r7, [sp, #24]
  404a7e:	18fc      	adds	r4, r7, r3
  404a80:	4425      	add	r5, r4
  404a82:	4415      	add	r5, r2
  404a84:	eb05 65f6 	add.w	r5, r5, r6, ror #27

00404a88 <.LBB645>:
  404a88:	ea4f 0aba 	mov.w	sl, sl, ror #2

00404a8c <.LBE645>:
        R3(c,d,e,a,b,48); R3(b,c,d,e,a,49); R3(a,b,c,d,e,50); R3(e,a,b,c,d,51);
  404a8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
  404a8e:	46a0      	mov	r8, r4
  404a90:	ea89 0204 	eor.w	r2, r9, r4
  404a94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  404a96:	4062      	eors	r2, r4
  404a98:	9f01      	ldr	r7, [sp, #4]
  404a9a:	407a      	eors	r2, r7

00404a9c <.LBB647>:
  404a9c:	ea4f 72f2 	mov.w	r2, r2, ror #31

00404aa0 <.LBE647>:
  404aa0:	ea46 040a 	orr.w	r4, r6, sl
  404aa4:	ea04 0901 	and.w	r9, r4, r1
  404aa8:	ea06 040a 	and.w	r4, r6, sl
  404aac:	ea49 0404 	orr.w	r4, r9, r4
  404ab0:	9207      	str	r2, [sp, #28]
  404ab2:	eb02 0903 	add.w	r9, r2, r3
  404ab6:	44cc      	add	ip, r9
  404ab8:	eb04 090c 	add.w	r9, r4, ip
  404abc:	eb09 69f5 	add.w	r9, r9, r5, ror #27

00404ac0 <.LBB649>:
  404ac0:	ea4f 06b6 	mov.w	r6, r6, ror #2

00404ac4 <.LBE649>:
  404ac4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404ac6:	46be      	mov	lr, r7
  404ac8:	9f11      	ldr	r7, [sp, #68]	; 0x44
  404aca:	ea8e 0207 	eor.w	r2, lr, r7

00404ace <.LVL200>:
  404ace:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  404ad0:	4062      	eors	r2, r4
  404ad2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  404ad4:	4062      	eors	r2, r4

00404ad6 <.LBB651>:
  404ad6:	ea4f 72f2 	mov.w	r2, r2, ror #31

00404ada <.LVL202>:
  404ada:	4614      	mov	r4, r2

00404adc <.LBE651>:
  404adc:	ea45 0e06 	orr.w	lr, r5, r6
  404ae0:	ea0e 020a 	and.w	r2, lr, sl

00404ae4 <.LVL204>:
  404ae4:	ea05 0e06 	and.w	lr, r5, r6
  404ae8:	ea42 0e0e 	orr.w	lr, r2, lr
  404aec:	940f      	str	r4, [sp, #60]	; 0x3c
  404aee:	4622      	mov	r2, r4
  404af0:	441a      	add	r2, r3
  404af2:	4411      	add	r1, r2
  404af4:	4471      	add	r1, lr
  404af6:	eb01 6ef9 	add.w	lr, r1, r9, ror #27

00404afa <.LBB653>:
  404afa:	ea4f 05b5 	mov.w	r5, r5, ror #2

00404afe <.LBE653>:
  404afe:	9902      	ldr	r1, [sp, #8]
  404b00:	ea88 0401 	eor.w	r4, r8, r1

00404b04 <.LVL207>:
  404b04:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404b06:	4054      	eors	r4, r2
  404b08:	9906      	ldr	r1, [sp, #24]
  404b0a:	404c      	eors	r4, r1

00404b0c <.LBB655>:
  404b0c:	ea4f 71f4 	mov.w	r1, r4, ror #31

00404b10 <.LBE655>:
  404b10:	ea49 0805 	orr.w	r8, r9, r5
  404b14:	ea08 0206 	and.w	r2, r8, r6
  404b18:	ea09 0805 	and.w	r8, r9, r5
  404b1c:	ea42 0808 	orr.w	r8, r2, r8
  404b20:	9108      	str	r1, [sp, #32]
  404b22:	18ca      	adds	r2, r1, r3
  404b24:	4492      	add	sl, r2
  404b26:	44d0      	add	r8, sl
  404b28:	eb08 68fe 	add.w	r8, r8, lr, ror #27

00404b2c <.LBB657>:
  404b2c:	ea4f 04b9 	mov.w	r4, r9, ror #2

00404b30 <.LBE657>:
  404b30:	9903      	ldr	r1, [sp, #12]

00404b32 <.LVL212>:
  404b32:	4689      	mov	r9, r1
  404b34:	4079      	eors	r1, r7
  404b36:	9a15      	ldr	r2, [sp, #84]	; 0x54
  404b38:	4051      	eors	r1, r2
  404b3a:	9a07      	ldr	r2, [sp, #28]
  404b3c:	4051      	eors	r1, r2

00404b3e <.LBB659>:
  404b3e:	ea4f 77f1 	mov.w	r7, r1, ror #31

00404b42 <.LBE659>:
  404b42:	ea4e 0b04 	orr.w	fp, lr, r4
  404b46:	ea0b 0205 	and.w	r2, fp, r5
  404b4a:	ea0e 0b04 	and.w	fp, lr, r4
  404b4e:	ea42 0b0b 	orr.w	fp, r2, fp
  404b52:	9709      	str	r7, [sp, #36]	; 0x24
  404b54:	18fa      	adds	r2, r7, r3
  404b56:	4416      	add	r6, r2
  404b58:	44b3      	add	fp, r6
  404b5a:	eb0b 6bf8 	add.w	fp, fp, r8, ror #27

00404b5e <.LBB661>:
  404b5e:	ea4f 01be 	mov.w	r1, lr, ror #2

00404b62 <.LBE661>:
        R3(d,e,a,b,c,52); R3(c,d,e,a,b,53); R3(b,c,d,e,a,54); R3(a,b,c,d,e,55);
  404b62:	9f02      	ldr	r7, [sp, #8]

00404b64 <.LVL217>:
  404b64:	46be      	mov	lr, r7
  404b66:	9f12      	ldr	r7, [sp, #72]	; 0x48
  404b68:	ea8e 0c07 	eor.w	ip, lr, r7
  404b6c:	9e05      	ldr	r6, [sp, #20]
  404b6e:	ea8c 0c06 	eor.w	ip, ip, r6
  404b72:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
  404b74:	ea8c 0c06 	eor.w	ip, ip, r6

00404b78 <.LBB663>:
  404b78:	ea4f 7efc 	mov.w	lr, ip, ror #31
  404b7c:	4676      	mov	r6, lr

00404b7e <.LBE663>:
  404b7e:	ea48 0c01 	orr.w	ip, r8, r1
  404b82:	ea0c 0204 	and.w	r2, ip, r4
  404b86:	ea08 0c01 	and.w	ip, r8, r1
  404b8a:	ea42 0c0c 	orr.w	ip, r2, ip
  404b8e:	f8cd e008 	str.w	lr, [sp, #8]
  404b92:	18f2      	adds	r2, r6, r3
  404b94:	4415      	add	r5, r2
  404b96:	44ac      	add	ip, r5
  404b98:	eb0c 6cfb 	add.w	ip, ip, fp, ror #27

00404b9c <.LBB665>:
  404b9c:	ea4f 08b8 	mov.w	r8, r8, ror #2

00404ba0 <.LBE665>:
  404ba0:	464a      	mov	r2, r9
  404ba2:	9d04      	ldr	r5, [sp, #16]
  404ba4:	ea82 0e05 	eor.w	lr, r2, r5
  404ba8:	9e01      	ldr	r6, [sp, #4]

00404baa <.LVL222>:
  404baa:	ea8e 0e06 	eor.w	lr, lr, r6
  404bae:	9d08      	ldr	r5, [sp, #32]
  404bb0:	ea8e 0e05 	eor.w	lr, lr, r5

00404bb4 <.LBB667>:
  404bb4:	ea4f 7efe 	mov.w	lr, lr, ror #31

00404bb8 <.LVL224>:
  404bb8:	4675      	mov	r5, lr

00404bba <.LBE667>:
  404bba:	ea4b 0908 	orr.w	r9, fp, r8
  404bbe:	ea09 0201 	and.w	r2, r9, r1
  404bc2:	ea0b 0908 	and.w	r9, fp, r8
  404bc6:	ea42 0909 	orr.w	r9, r2, r9
  404bca:	f8cd e00c 	str.w	lr, [sp, #12]
  404bce:	18ea      	adds	r2, r5, r3
  404bd0:	4414      	add	r4, r2
  404bd2:	44a1      	add	r9, r4
  404bd4:	eb09 69fc 	add.w	r9, r9, ip, ror #27

00404bd8 <.LBB669>:
  404bd8:	ea4f 0bbb 	mov.w	fp, fp, ror #2

00404bdc <.LBE669>:
  404bdc:	463e      	mov	r6, r7
  404bde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  404be0:	ea86 0704 	eor.w	r7, r6, r4
  404be4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
  404be6:	4077      	eors	r7, r6
  404be8:	9d09      	ldr	r5, [sp, #36]	; 0x24

00404bea <.LVL228>:
  404bea:	406f      	eors	r7, r5

00404bec <.LBB671>:
  404bec:	ea4f 77f7 	mov.w	r7, r7, ror #31

00404bf0 <.LBE671>:
  404bf0:	ea4c 0e0b 	orr.w	lr, ip, fp

00404bf4 <.LVL231>:
  404bf4:	ea0e 0208 	and.w	r2, lr, r8
  404bf8:	ea0c 0e0b 	and.w	lr, ip, fp
  404bfc:	ea42 0e0e 	orr.w	lr, r2, lr
  404c00:	970a      	str	r7, [sp, #40]	; 0x28
  404c02:	18fa      	adds	r2, r7, r3
  404c04:	4411      	add	r1, r2
  404c06:	448e      	add	lr, r1
  404c08:	eb0e 6ef9 	add.w	lr, lr, r9, ror #27

00404c0c <.LBB673>:
  404c0c:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404c10 <.LBE673>:
  404c10:	9d04      	ldr	r5, [sp, #16]
  404c12:	46aa      	mov	sl, r5
  404c14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  404c16:	ea8a 0205 	eor.w	r2, sl, r5
  404c1a:	9906      	ldr	r1, [sp, #24]
  404c1c:	404a      	eors	r2, r1
  404c1e:	9e02      	ldr	r6, [sp, #8]
  404c20:	4072      	eors	r2, r6
  404c22:	e003      	b.n	404c2c <.LBB675>
  404c24:	6ed9eba1 	.word	0x6ed9eba1
  404c28:	8f1bbcdc 	.word	0x8f1bbcdc

00404c2c <.LBB675>:
  404c2c:	ea4f 71f2 	mov.w	r1, r2, ror #31
  404c30:	460e      	mov	r6, r1

00404c32 <.LBE675>:
  404c32:	ea49 020c 	orr.w	r2, r9, ip
  404c36:	ea02 010b 	and.w	r1, r2, fp

00404c3a <.LVL236>:
  404c3a:	ea09 020c 	and.w	r2, r9, ip
  404c3e:	430a      	orrs	r2, r1
  404c40:	9604      	str	r6, [sp, #16]
  404c42:	4631      	mov	r1, r6
  404c44:	4419      	add	r1, r3
  404c46:	4488      	add	r8, r1
  404c48:	4442      	add	r2, r8
  404c4a:	eb02 62fe 	add.w	r2, r2, lr, ror #27

00404c4e <.LBB677>:
  404c4e:	ea4f 09b9 	mov.w	r9, r9, ror #2

00404c52 <.LBE677>:
        R3(e,a,b,c,d,56); R3(d,e,a,b,c,57); R3(c,d,e,a,b,58); R3(b,c,d,e,a,59);
  404c52:	9f14      	ldr	r7, [sp, #80]	; 0x50

00404c54 <.LVL239>:
  404c54:	ea84 0607 	eor.w	r6, r4, r7

00404c58 <.LVL240>:
  404c58:	9c07      	ldr	r4, [sp, #28]
  404c5a:	4066      	eors	r6, r4
  404c5c:	9c03      	ldr	r4, [sp, #12]
  404c5e:	4066      	eors	r6, r4

00404c60 <.LBB679>:
  404c60:	ea4f 74f6 	mov.w	r4, r6, ror #31

00404c64 <.LBE679>:
  404c64:	ea4e 0609 	orr.w	r6, lr, r9
  404c68:	ea06 010c 	and.w	r1, r6, ip
  404c6c:	ea0e 0609 	and.w	r6, lr, r9
  404c70:	430e      	orrs	r6, r1
  404c72:	940b      	str	r4, [sp, #44]	; 0x2c
  404c74:	18e1      	adds	r1, r4, r3
  404c76:	448b      	add	fp, r1
  404c78:	445e      	add	r6, fp
  404c7a:	eb06 66f2 	add.w	r6, r6, r2, ror #27

00404c7e <.LBB681>:
  404c7e:	ea4f 0ebe 	mov.w	lr, lr, ror #2

00404c82 <.LBE681>:
  404c82:	9c15      	ldr	r4, [sp, #84]	; 0x54
  404c84:	4065      	eors	r5, r4
  404c86:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404c88:	404d      	eors	r5, r1
  404c8a:	990a      	ldr	r1, [sp, #40]	; 0x28
  404c8c:	404d      	eors	r5, r1

00404c8e <.LBB683>:
  404c8e:	ea4f 75f5 	mov.w	r5, r5, ror #31

00404c92 <.LVL246>:
  404c92:	950c      	str	r5, [sp, #48]	; 0x30

00404c94 <.LBE683>:
  404c94:	ea42 050e 	orr.w	r5, r2, lr
  404c98:	ea05 0109 	and.w	r1, r5, r9
  404c9c:	ea02 050e 	and.w	r5, r2, lr
  404ca0:	430d      	orrs	r5, r1
  404ca2:	990c      	ldr	r1, [sp, #48]	; 0x30
  404ca4:	4419      	add	r1, r3
  404ca6:	448c      	add	ip, r1
  404ca8:	4465      	add	r5, ip
  404caa:	eb05 65f6 	add.w	r5, r5, r6, ror #27

00404cae <.LBB685>:
  404cae:	ea4f 02b2 	mov.w	r2, r2, ror #2

00404cb2 <.LBE685>:
  404cb2:	4639      	mov	r1, r7
  404cb4:	9f05      	ldr	r7, [sp, #20]
  404cb6:	404f      	eors	r7, r1
  404cb8:	9908      	ldr	r1, [sp, #32]
  404cba:	404f      	eors	r7, r1
  404cbc:	9904      	ldr	r1, [sp, #16]
  404cbe:	404f      	eors	r7, r1

00404cc0 <.LBB687>:
  404cc0:	ea4f 77f7 	mov.w	r7, r7, ror #31

00404cc4 <.LBE687>:
  404cc4:	ea46 0a02 	orr.w	sl, r6, r2
  404cc8:	ea0a 010e 	and.w	r1, sl, lr
  404ccc:	ea06 0a02 	and.w	sl, r6, r2
  404cd0:	ea41 0a0a 	orr.w	sl, r1, sl
  404cd4:	970d      	str	r7, [sp, #52]	; 0x34
  404cd6:	18f9      	adds	r1, r7, r3
  404cd8:	4489      	add	r9, r1
  404cda:	44ca      	add	sl, r9
  404cdc:	eb0a 6af5 	add.w	sl, sl, r5, ror #27

00404ce0 <.LBB689>:
  404ce0:	ea4f 06b6 	mov.w	r6, r6, ror #2

00404ce4 <.LBE689>:
  404ce4:	4621      	mov	r1, r4
  404ce6:	9c01      	ldr	r4, [sp, #4]
  404ce8:	ea81 0b04 	eor.w	fp, r1, r4
  404cec:	9c09      	ldr	r4, [sp, #36]	; 0x24
  404cee:	ea8b 0b04 	eor.w	fp, fp, r4
  404cf2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  404cf4:	ea8b 0b04 	eor.w	fp, fp, r4

00404cf8 <.LBB691>:
  404cf8:	ea4f 7cfb 	mov.w	ip, fp, ror #31

00404cfc <.LBE691>:
  404cfc:	ea45 0106 	orr.w	r1, r5, r6
  404d00:	4011      	ands	r1, r2
  404d02:	ea05 0806 	and.w	r8, r5, r6
  404d06:	ea41 0808 	orr.w	r8, r1, r8
  404d0a:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  404d0e:	4463      	add	r3, ip
  404d10:	4473      	add	r3, lr
  404d12:	4498      	add	r8, r3
  404d14:	eb08 68fa 	add.w	r8, r8, sl, ror #27

00404d18 <.LBB693>:
  404d18:	ea4f 05b5 	mov.w	r5, r5, ror #2

00404d1c <.LBE693>:

        R4(a,b,c,d,e,60); R4(e,a,b,c,d,61); R4(d,e,a,b,c,62); R4(c,d,e,a,b,63);
  404d1c:	9f05      	ldr	r7, [sp, #20]
  404d1e:	46be      	mov	lr, r7
  404d20:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  404d22:	ea8e 0307 	eor.w	r3, lr, r7
  404d26:	9c02      	ldr	r4, [sp, #8]
  404d28:	4063      	eors	r3, r4
  404d2a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404d2c:	4063      	eors	r3, r4

00404d2e <.LBB695>:
  404d2e:	ea4f 73f3 	mov.w	r3, r3, ror #31

00404d32 <.LVL259>:
  404d32:	4619      	mov	r1, r3

00404d34 <.LBE695>:
  404d34:	ea86 0405 	eor.w	r4, r6, r5
  404d38:	ea84 040a 	eor.w	r4, r4, sl
  404d3c:	4bd5      	ldr	r3, [pc, #852]	; (405094 <.LVL342+0x30>)
  404d3e:	9105      	str	r1, [sp, #20]
  404d40:	4419      	add	r1, r3
  404d42:	440a      	add	r2, r1
  404d44:	4414      	add	r4, r2
  404d46:	eb04 64f8 	add.w	r4, r4, r8, ror #27

00404d4a <.LBB697>:
  404d4a:	ea4f 0aba 	mov.w	sl, sl, ror #2

00404d4e <.LBE697>:
  404d4e:	9a01      	ldr	r2, [sp, #4]
  404d50:	9906      	ldr	r1, [sp, #24]
  404d52:	ea82 0901 	eor.w	r9, r2, r1
  404d56:	9a03      	ldr	r2, [sp, #12]
  404d58:	ea89 0902 	eor.w	r9, r9, r2
  404d5c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404d5e:	ea89 0902 	eor.w	r9, r9, r2

00404d62 <.LBB699>:
  404d62:	ea4f 7ef9 	mov.w	lr, r9, ror #31
  404d66:	4672      	mov	r2, lr

00404d68 <.LBE699>:
  404d68:	ea85 010a 	eor.w	r1, r5, sl
  404d6c:	ea81 0108 	eor.w	r1, r1, r8
  404d70:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  404d74:	441a      	add	r2, r3
  404d76:	4416      	add	r6, r2
  404d78:	4431      	add	r1, r6
  404d7a:	eb01 61f4 	add.w	r1, r1, r4, ror #27

00404d7e <.LBB701>:
  404d7e:	ea4f 08b8 	mov.w	r8, r8, ror #2

00404d82 <.LBE701>:
  404d82:	9a07      	ldr	r2, [sp, #28]
  404d84:	ea87 0602 	eor.w	r6, r7, r2
  404d88:	9f0a      	ldr	r7, [sp, #40]	; 0x28

00404d8a <.LVL267>:
  404d8a:	407e      	eors	r6, r7
  404d8c:	9f10      	ldr	r7, [sp, #64]	; 0x40
  404d8e:	407e      	eors	r6, r7

00404d90 <.LBB703>:
  404d90:	ea4f 76f6 	mov.w	r6, r6, ror #31

00404d94 <.LBE703>:
  404d94:	ea8a 0c08 	eor.w	ip, sl, r8
  404d98:	ea8c 0c04 	eor.w	ip, ip, r4
  404d9c:	9601      	str	r6, [sp, #4]
  404d9e:	18f2      	adds	r2, r6, r3
  404da0:	4415      	add	r5, r2
  404da2:	44ac      	add	ip, r5
  404da4:	eb0c 6cf1 	add.w	ip, ip, r1, ror #27

00404da8 <.LBB705>:
  404da8:	ea4f 04b4 	mov.w	r4, r4, ror #2

00404dac <.LBE705>:
  404dac:	9f06      	ldr	r7, [sp, #24]
  404dae:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
  404db0:	ea87 0206 	eor.w	r2, r7, r6
  404db4:	9d04      	ldr	r5, [sp, #16]
  404db6:	406a      	eors	r2, r5
  404db8:	9d05      	ldr	r5, [sp, #20]
  404dba:	406a      	eors	r2, r5

00404dbc <.LBB707>:
  404dbc:	ea4f 75f2 	mov.w	r5, r2, ror #31

00404dc0 <.LBE707>:
  404dc0:	ea88 0e04 	eor.w	lr, r8, r4
  404dc4:	ea8e 0e01 	eor.w	lr, lr, r1
  404dc8:	9506      	str	r5, [sp, #24]
  404dca:	18ea      	adds	r2, r5, r3
  404dcc:	4492      	add	sl, r2
  404dce:	44d6      	add	lr, sl
  404dd0:	eb0e 6efc 	add.w	lr, lr, ip, ror #27

00404dd4 <.LBB709>:
  404dd4:	ea4f 01b1 	mov.w	r1, r1, ror #2

00404dd8 <.LBE709>:
        R4(b,c,d,e,a,64); R4(a,b,c,d,e,65); R4(e,a,b,c,d,66); R4(d,e,a,b,c,67);
  404dd8:	9a07      	ldr	r2, [sp, #28]
  404dda:	9f08      	ldr	r7, [sp, #32]
  404ddc:	46ba      	mov	sl, r7
  404dde:	407a      	eors	r2, r7
  404de0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404de2:	406a      	eors	r2, r5
  404de4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  404de6:	406a      	eors	r2, r5

00404de8 <.LBB711>:
  404de8:	ea4f 72f2 	mov.w	r2, r2, ror #31

00404dec <.LBE711>:
  404dec:	ea84 0701 	eor.w	r7, r4, r1
  404df0:	ea87 070c 	eor.w	r7, r7, ip
  404df4:	9207      	str	r2, [sp, #28]
  404df6:	441a      	add	r2, r3

00404df8 <.LVL278>:
  404df8:	4490      	add	r8, r2
  404dfa:	4447      	add	r7, r8
  404dfc:	eb07 67fe 	add.w	r7, r7, lr, ror #27

00404e00 <.LBB713>:
  404e00:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404e04 <.LBE713>:
  404e04:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404e06:	4072      	eors	r2, r6
  404e08:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  404e0a:	4072      	eors	r2, r6
  404e0c:	9e01      	ldr	r6, [sp, #4]
  404e0e:	4072      	eors	r2, r6

00404e10 <.LBB715>:
  404e10:	ea4f 76f2 	mov.w	r6, r2, ror #31

00404e14 <.LBE715>:
  404e14:	ea81 020c 	eor.w	r2, r1, ip
  404e18:	ea82 020e 	eor.w	r2, r2, lr
  404e1c:	960f      	str	r6, [sp, #60]	; 0x3c
  404e1e:	18f5      	adds	r5, r6, r3
  404e20:	442c      	add	r4, r5
  404e22:	4422      	add	r2, r4
  404e24:	eb02 62f7 	add.w	r2, r2, r7, ror #27

00404e28 <.LBB717>:
  404e28:	ea4f 0ebe 	mov.w	lr, lr, ror #2

00404e2c <.LBE717>:
  404e2c:	9d02      	ldr	r5, [sp, #8]
  404e2e:	ea8a 0405 	eor.w	r4, sl, r5
  404e32:	9e0d      	ldr	r6, [sp, #52]	; 0x34

00404e34 <.LVL285>:
  404e34:	4074      	eors	r4, r6
  404e36:	9d06      	ldr	r5, [sp, #24]
  404e38:	406c      	eors	r4, r5

00404e3a <.LBB719>:
  404e3a:	ea4f 74f4 	mov.w	r4, r4, ror #31

00404e3e <.LBE719>:
  404e3e:	ea8c 060e 	eor.w	r6, ip, lr
  404e42:	407e      	eors	r6, r7
  404e44:	18e5      	adds	r5, r4, r3
  404e46:	4429      	add	r1, r5
  404e48:	440e      	add	r6, r1
  404e4a:	eb06 66f2 	add.w	r6, r6, r2, ror #27

00404e4e <.LBB721>:
  404e4e:	ea4f 07b7 	mov.w	r7, r7, ror #2

00404e52 <.LBE721>:
  404e52:	9909      	ldr	r1, [sp, #36]	; 0x24
  404e54:	9d03      	ldr	r5, [sp, #12]
  404e56:	46a9      	mov	r9, r5
  404e58:	4069      	eors	r1, r5
  404e5a:	9d10      	ldr	r5, [sp, #64]	; 0x40
  404e5c:	4069      	eors	r1, r5
  404e5e:	9d07      	ldr	r5, [sp, #28]
  404e60:	4069      	eors	r1, r5

00404e62 <.LBB723>:
  404e62:	ea4f 71f1 	mov.w	r1, r1, ror #31

00404e66 <.LBE723>:
  404e66:	ea8e 0507 	eor.w	r5, lr, r7
  404e6a:	4055      	eors	r5, r2
  404e6c:	9108      	str	r1, [sp, #32]
  404e6e:	eb01 0803 	add.w	r8, r1, r3
  404e72:	44c4      	add	ip, r8
  404e74:	4465      	add	r5, ip
  404e76:	eb05 65f6 	add.w	r5, r5, r6, ror #27

00404e7a <.LBB725>:
  404e7a:	ea4f 02b2 	mov.w	r2, r2, ror #2

00404e7e <.LBE725>:
        R4(c,d,e,a,b,68); R4(b,c,d,e,a,69); R4(a,b,c,d,e,70); R4(e,a,b,c,d,71);
  404e7e:	9902      	ldr	r1, [sp, #8]

00404e80 <.LVL294>:
  404e80:	468c      	mov	ip, r1
  404e82:	990a      	ldr	r1, [sp, #40]	; 0x28
  404e84:	ea8c 0c01 	eor.w	ip, ip, r1
  404e88:	9905      	ldr	r1, [sp, #20]
  404e8a:	ea8c 0c01 	eor.w	ip, ip, r1
  404e8e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404e90:	ea8c 0c01 	eor.w	ip, ip, r1

00404e94 <.LBB727>:
  404e94:	ea4f 7cfc 	mov.w	ip, ip, ror #31

00404e98 <.LBE727>:
  404e98:	ea87 0b02 	eor.w	fp, r7, r2
  404e9c:	ea8b 0b06 	eor.w	fp, fp, r6
  404ea0:	f8cd c008 	str.w	ip, [sp, #8]
  404ea4:	449c      	add	ip, r3

00404ea6 <.LVL297>:
  404ea6:	44e6      	add	lr, ip
  404ea8:	44f3      	add	fp, lr
  404eaa:	eb0b 6bf5 	add.w	fp, fp, r5, ror #27

00404eae <.LBB729>:
  404eae:	ea4f 06b6 	mov.w	r6, r6, ror #2

00404eb2 <.LBE729>:
  404eb2:	9904      	ldr	r1, [sp, #16]
  404eb4:	ea89 0e01 	eor.w	lr, r9, r1
  404eb8:	990e      	ldr	r1, [sp, #56]	; 0x38
  404eba:	ea8e 0e01 	eor.w	lr, lr, r1
  404ebe:	ea8e 0e04 	eor.w	lr, lr, r4

00404ec2 <.LBB731>:
  404ec2:	ea4f 7efe 	mov.w	lr, lr, ror #31

00404ec6 <.LBE731>:
  404ec6:	ea82 0a06 	eor.w	sl, r2, r6
  404eca:	ea8a 0a05 	eor.w	sl, sl, r5
  404ece:	f8cd e00c 	str.w	lr, [sp, #12]
  404ed2:	449e      	add	lr, r3

00404ed4 <.LVL302>:
  404ed4:	4477      	add	r7, lr
  404ed6:	44ba      	add	sl, r7
  404ed8:	eb0a 6afb 	add.w	sl, sl, fp, ror #27

00404edc <.LBB733>:
  404edc:	ea4f 05b5 	mov.w	r5, r5, ror #2

00404ee0 <.LBE733>:
  404ee0:	990a      	ldr	r1, [sp, #40]	; 0x28
  404ee2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  404ee4:	404f      	eors	r7, r1
  404ee6:	9901      	ldr	r1, [sp, #4]
  404ee8:	404f      	eors	r7, r1
  404eea:	9908      	ldr	r1, [sp, #32]
  404eec:	404f      	eors	r7, r1

00404eee <.LBB735>:
  404eee:	ea4f 77f7 	mov.w	r7, r7, ror #31

00404ef2 <.LBE735>:
  404ef2:	ea86 0905 	eor.w	r9, r6, r5
  404ef6:	ea89 090b 	eor.w	r9, r9, fp
  404efa:	9709      	str	r7, [sp, #36]	; 0x24
  404efc:	441f      	add	r7, r3

00404efe <.LVL307>:
  404efe:	443a      	add	r2, r7
  404f00:	4491      	add	r9, r2
  404f02:	eb09 69fa 	add.w	r9, r9, sl, ror #27

00404f06 <.LBB737>:
  404f06:	ea4f 0bbb 	mov.w	fp, fp, ror #2

00404f0a <.LBE737>:
  404f0a:	9904      	ldr	r1, [sp, #16]
  404f0c:	468e      	mov	lr, r1
  404f0e:	990c      	ldr	r1, [sp, #48]	; 0x30
  404f10:	ea8e 0201 	eor.w	r2, lr, r1
  404f14:	9f06      	ldr	r7, [sp, #24]
  404f16:	407a      	eors	r2, r7
  404f18:	9f02      	ldr	r7, [sp, #8]
  404f1a:	407a      	eors	r2, r7

00404f1c <.LBB739>:
  404f1c:	ea4f 72f2 	mov.w	r2, r2, ror #31

00404f20 <.LBE739>:
  404f20:	ea85 080b 	eor.w	r8, r5, fp
  404f24:	ea88 080a 	eor.w	r8, r8, sl
  404f28:	9204      	str	r2, [sp, #16]
  404f2a:	18d7      	adds	r7, r2, r3
  404f2c:	443e      	add	r6, r7
  404f2e:	44b0      	add	r8, r6
  404f30:	eb08 68f9 	add.w	r8, r8, r9, ror #27

00404f34 <.LBB741>:
  404f34:	ea4f 0aba 	mov.w	sl, sl, ror #2

00404f38 <.LBE741>:
        R4(d,e,a,b,c,72); R4(c,d,e,a,b,73); R4(b,c,d,e,a,74); R4(a,b,c,d,e,75);
  404f38:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  404f3a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
  404f3c:	407e      	eors	r6, r7
  404f3e:	9a07      	ldr	r2, [sp, #28]

00404f40 <.LVL314>:
  404f40:	4056      	eors	r6, r2
  404f42:	9a03      	ldr	r2, [sp, #12]
  404f44:	4056      	eors	r6, r2

00404f46 <.LBB743>:
  404f46:	ea4f 76f6 	mov.w	r6, r6, ror #31

00404f4a <.LBE743>:
  404f4a:	ea8b 0c0a 	eor.w	ip, fp, sl
  404f4e:	ea8c 0c09 	eor.w	ip, ip, r9
  404f52:	18f7      	adds	r7, r6, r3
  404f54:	443d      	add	r5, r7
  404f56:	44ac      	add	ip, r5
  404f58:	eb0c 6cf8 	add.w	ip, ip, r8, ror #27

00404f5c <.LBB745>:
  404f5c:	ea4f 09b9 	mov.w	r9, r9, ror #2

00404f60 <.LBE745>:
  404f60:	9a10      	ldr	r2, [sp, #64]	; 0x40
  404f62:	ea81 0502 	eor.w	r5, r1, r2
  404f66:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
  404f68:	407d      	eors	r5, r7
  404f6a:	9f09      	ldr	r7, [sp, #36]	; 0x24
  404f6c:	407d      	eors	r5, r7

00404f6e <.LBB747>:
  404f6e:	ea4f 75f5 	mov.w	r5, r5, ror #31

00404f72 <.LBE747>:
  404f72:	ea8a 0e09 	eor.w	lr, sl, r9
  404f76:	ea8e 0e08 	eor.w	lr, lr, r8
  404f7a:	18ef      	adds	r7, r5, r3
  404f7c:	44bb      	add	fp, r7
  404f7e:	44de      	add	lr, fp
  404f80:	eb0e 6efc 	add.w	lr, lr, ip, ror #27

00404f84 <.LBB749>:
  404f84:	ea4f 08b8 	mov.w	r8, r8, ror #2

00404f88 <.LBE749>:
  404f88:	990d      	ldr	r1, [sp, #52]	; 0x34
  404f8a:	9f05      	ldr	r7, [sp, #20]
  404f8c:	404f      	eors	r7, r1
  404f8e:	407c      	eors	r4, r7

00404f90 <.LVL323>:
  404f90:	9904      	ldr	r1, [sp, #16]
  404f92:	404c      	eors	r4, r1

00404f94 <.LBB751>:
  404f94:	ea4f 74f4 	mov.w	r4, r4, ror #31

00404f98 <.LBE751>:
  404f98:	ea89 0708 	eor.w	r7, r9, r8
  404f9c:	ea87 070c 	eor.w	r7, r7, ip
  404fa0:	eb04 0b03 	add.w	fp, r4, r3
  404fa4:	44da      	add	sl, fp
  404fa6:	4457      	add	r7, sl
  404fa8:	eb07 67fe 	add.w	r7, r7, lr, ror #27

00404fac <.LBB753>:
  404fac:	ea4f 0cbc 	mov.w	ip, ip, ror #2

00404fb0 <.LBE753>:
  404fb0:	4692      	mov	sl, r2
  404fb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404fb4:	ea8a 0b02 	eor.w	fp, sl, r2
  404fb8:	9908      	ldr	r1, [sp, #32]
  404fba:	ea8b 0101 	eor.w	r1, fp, r1
  404fbe:	404e      	eors	r6, r1

00404fc0 <.LBB755>:
  404fc0:	ea4f 76f6 	mov.w	r6, r6, ror #31

00404fc4 <.LBE755>:
  404fc4:	ea88 0a0c 	eor.w	sl, r8, ip
  404fc8:	ea8a 0a0e 	eor.w	sl, sl, lr
  404fcc:	4433      	add	r3, r6
  404fce:	444b      	add	r3, r9
  404fd0:	449a      	add	sl, r3
  404fd2:	eb0a 6af7 	add.w	sl, sl, r7, ror #27

00404fd6 <.LBB757>:
  404fd6:	ea4f 0ebe 	mov.w	lr, lr, ror #2

00404fda <.LBE757>:
        R4(e,a,b,c,d,76); R4(d,e,a,b,c,77); R4(c,d,e,a,b,78); R4(b,c,d,e,a,79);
  404fda:	9905      	ldr	r1, [sp, #20]
  404fdc:	9b01      	ldr	r3, [sp, #4]
  404fde:	404b      	eors	r3, r1
  404fe0:	9902      	ldr	r1, [sp, #8]
  404fe2:	404b      	eors	r3, r1
  404fe4:	405d      	eors	r5, r3

00404fe6 <.LBB759>:
  404fe6:	ea4f 75f5 	mov.w	r5, r5, ror #31

00404fea <.LBE759>:
  404fea:	ea8c 010e 	eor.w	r1, ip, lr
  404fee:	4079      	eors	r1, r7
  404ff0:	4b28      	ldr	r3, [pc, #160]	; (405094 <.LVL342+0x30>)
  404ff2:	eb05 0903 	add.w	r9, r5, r3
  404ff6:	44c8      	add	r8, r9
  404ff8:	4441      	add	r1, r8
  404ffa:	eb01 61fa 	add.w	r1, r1, sl, ror #27

00404ffe <.LBB761>:
  404ffe:	ea4f 07b7 	mov.w	r7, r7, ror #2

00405002 <.LBE761>:
  405002:	4690      	mov	r8, r2
  405004:	9a06      	ldr	r2, [sp, #24]
  405006:	ea88 0902 	eor.w	r9, r8, r2
  40500a:	9a03      	ldr	r2, [sp, #12]
  40500c:	ea89 0902 	eor.w	r9, r9, r2
  405010:	ea89 0904 	eor.w	r9, r9, r4
  405014:	eb03 79f9 	add.w	r9, r3, r9, ror #31
  405018:	44cc      	add	ip, r9
  40501a:	ea8e 0907 	eor.w	r9, lr, r7
  40501e:	ea89 090a 	eor.w	r9, r9, sl
  405022:	44cc      	add	ip, r9
  405024:	eb0c 6cf1 	add.w	ip, ip, r1, ror #27

00405028 <.LBB763>:
  405028:	ea4f 0aba 	mov.w	sl, sl, ror #2

0040502c <.LBE763>:
  40502c:	9a01      	ldr	r2, [sp, #4]
  40502e:	9c07      	ldr	r4, [sp, #28]
  405030:	4054      	eors	r4, r2
  405032:	9a09      	ldr	r2, [sp, #36]	; 0x24
  405034:	4054      	eors	r4, r2
  405036:	4074      	eors	r4, r6
  405038:	eb03 74f4 	add.w	r4, r3, r4, ror #31
  40503c:	44a6      	add	lr, r4
  40503e:	ea87 040a 	eor.w	r4, r7, sl
  405042:	404c      	eors	r4, r1
  405044:	44a6      	add	lr, r4
  405046:	eb0e 6efc 	add.w	lr, lr, ip, ror #27

0040504a <.LBB765>:
  40504a:	ea4f 01b1 	mov.w	r1, r1, ror #2

0040504e <.LBE765>:
  40504e:	9a06      	ldr	r2, [sp, #24]
  405050:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  405052:	4054      	eors	r4, r2

00405054 <.LVL340>:
  405054:	9a04      	ldr	r2, [sp, #16]
  405056:	4062      	eors	r2, r4
  405058:	4055      	eors	r5, r2

0040505a <.LVL341>:
    #endif

        /* Add the working vars back into digest state[] */
        sha->digest[0] += a;
  40505a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
  40505c:	4413      	add	r3, r2
  40505e:	eb03 75f5 	add.w	r5, r3, r5, ror #31
  405062:	442f      	add	r7, r5

00405064 <.LVL342>:
        R4(e,a,b,c,d,76); R4(d,e,a,b,c,77); R4(c,d,e,a,b,78); R4(b,c,d,e,a,79);
  405064:	ea8a 0301 	eor.w	r3, sl, r1
  405068:	ea83 030c 	eor.w	r3, r3, ip
        sha->digest[0] += a;
  40506c:	441f      	add	r7, r3
  40506e:	eb07 67fe 	add.w	r7, r7, lr, ror #27
  405072:	64c7      	str	r7, [r0, #76]	; 0x4c
        sha->digest[1] += b;
  405074:	6d03      	ldr	r3, [r0, #80]	; 0x50
  405076:	eb03 040e 	add.w	r4, r3, lr
  40507a:	6504      	str	r4, [r0, #80]	; 0x50
        sha->digest[2] += c;
  40507c:	6d43      	ldr	r3, [r0, #84]	; 0x54
  40507e:	eb03 03bc 	add.w	r3, r3, ip, ror #2
  405082:	6543      	str	r3, [r0, #84]	; 0x54
        sha->digest[3] += d;
  405084:	6d83      	ldr	r3, [r0, #88]	; 0x58
  405086:	4419      	add	r1, r3
  405088:	6581      	str	r1, [r0, #88]	; 0x58
        sha->digest[4] += e;
  40508a:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  40508c:	4453      	add	r3, sl
  40508e:	65c3      	str	r3, [r0, #92]	; 0x5c

        (void)data; /* Not used */
    }
  405090:	e002      	b.n	405098 <.LVL342+0x34>
  405092:	bf00      	nop
  405094:	ca62c1d6 	.word	0xca62c1d6
  405098:	b017      	add	sp, #92	; 0x5c

0040509a <.LCFI2>:
  40509a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040509e <.LFE15>:
  40509e:	bf00      	nop

Disassembly of section .dinit%32:

004050a0 <.dinit>:
  4050a0:	2040dc1c 	.word	0x2040dc1c
  4050a4:	0000001c 	.word	0x0000001c
  4050a8:	00000000 	.word	0x00000000
  4050ac:	2040dc88 	.word	0x2040dc88
  4050b0:	00000008 	.word	0x00000008
  4050b4:	00000001 	.word	0x00000001
  4050b8:	00000000 	.word	0x00000000
  4050bc:	2040dbfc 	.word	0x2040dbfc
  4050c0:	2040dc98 	.word	0x2040dc98
  4050c4:	00000004 	.word	0x00000004
  4050c8:	00000001 	.word	0x00000001
  4050cc:	00000400 	.word	0x00000400
  4050d0:	2040dc90 	.word	0x2040dc90
  4050d4:	00000008 	.word	0x00000008
  4050d8:	00000001 	.word	0x00000001
  4050dc:	2040dc38 	.word	0x2040dc38
  4050e0:	00000017 	.word	0x00000017
  4050e4:	2040dc38 	.word	0x2040dc38
  4050e8:	0000001c 	.word	0x0000001c
  4050ec:	00000001 	.word	0x00000001
  4050f0:	0040be9d 	.word	0x0040be9d
  4050f4:	0040be79 	.word	0x0040be79
  4050f8:	0040bed5 	.word	0x0040bed5
  4050fc:	0040be85 	.word	0x0040be85
  405100:	0040be61 	.word	0x0040be61
  405104:	0040be6d 	.word	0x0040be6d
  405108:	0040be91 	.word	0x0040be91
  40510c:	20400000 	.word	0x20400000
  405110:	0000000c 	.word	0x0000000c
  405114:	00000000 	.word	0x00000000
  405118:	2040dc9c 	.word	0x2040dc9c
  40511c:	00000004 	.word	0x00000004
  405120:	00000000 	.word	0x00000000
  405124:	20400488 	.word	0x20400488
  405128:	0000c800 	.word	0x0000c800
  40512c:	00000000 	.word	0x00000000
  405130:	2040d6b8 	.word	0x2040d6b8
  405134:	00000198 	.word	0x00000198
  405138:	00000001 	.word	0x00000001
  40513c:	00010100 	.word	0x00010100
	...
  4052d4:	20400040 	.word	0x20400040
  4052d8:	00000400 	.word	0x00000400
  4052dc:	00000000 	.word	0x00000000
  4052e0:	2040dc7c 	.word	0x2040dc7c
  4052e4:	0000000c 	.word	0x0000000c
  4052e8:	00000000 	.word	0x00000000
  4052ec:	2040dafc 	.word	0x2040dafc
  4052f0:	00000050 	.word	0x00000050
  4052f4:	00000000 	.word	0x00000000
  4052f8:	2040d4b8 	.word	0x2040d4b8
  4052fc:	00000200 	.word	0x00000200
  405300:	00000000 	.word	0x00000000
  405304:	2040db4c 	.word	0x2040db4c
  405308:	00000050 	.word	0x00000050
  40530c:	00000001 	.word	0x00000001
	...
  405354:	00000101 	.word	0x00000101
	...
  405360:	2040dbfc 	.word	0x2040dbfc
  405364:	00000020 	.word	0x00000020
  405368:	00000001 	.word	0x00000001
  40536c:	00000300 	.word	0x00000300
  405370:	0040ba31 	.word	0x0040ba31
  405374:	0040b161 	.word	0x0040b161
  405378:	0040b261 	.word	0x0040b261
  40537c:	0040bc25 	.word	0x0040bc25
  405380:	00408d35 	.word	0x00408d35
  405384:	0040b38d 	.word	0x0040b38d
  405388:	0040b5a9 	.word	0x0040b5a9
  40538c:	2040dc54 	.word	0x2040dc54
  405390:	00000014 	.word	0x00000014
  405394:	00000001 	.word	0x00000001
	...
  4053a4:	2040dafc 	.word	0x2040dafc
  4053a8:	0000000a 	.word	0x0000000a
  4053ac:	2040dc68 	.word	0x2040dc68
  4053b0:	00000014 	.word	0x00000014
  4053b4:	00000001 	.word	0x00000001
	...
  4053c4:	2040d4b8 	.word	0x2040d4b8
  4053c8:	00000040 	.word	0x00000040
  4053cc:	20400440 	.word	0x20400440
  4053d0:	00000009 	.word	0x00000009
  4053d4:	00000000 	.word	0x00000000
  4053d8:	2040db9c 	.word	0x2040db9c
  4053dc:	00000038 	.word	0x00000038
  4053e0:	00000000 	.word	0x00000000
  4053e4:	2040d9bc 	.word	0x2040d9bc
  4053e8:	00000140 	.word	0x00000140
  4053ec:	00000000 	.word	0x00000000
  4053f0:	2040044c 	.word	0x2040044c
  4053f4:	00000008 	.word	0x00000008
  4053f8:	00000000 	.word	0x00000000
  4053fc:	20400454 	.word	0x20400454
  405400:	00000030 	.word	0x00000030
  405404:	00000000 	.word	0x00000000
  405408:	2040dca0 	.word	0x2040dca0
  40540c:	00000004 	.word	0x00000004
  405410:	00000001 	.word	0x00000001
  405414:	2040cc88 	.word	0x2040cc88
  405418:	2040cc88 	.word	0x2040cc88
  40541c:	00000428 	.word	0x00000428
  405420:	00000001 	.word	0x00000001
  405424:	00000000 	.word	0x00000000
  405428:	2040cf74 	.word	0x2040cf74
  40542c:	2040cfdc 	.word	0x2040cfdc
  405430:	2040d044 	.word	0x2040d044
	...
  4054cc:	00000001 	.word	0x00000001
  4054d0:	00000000 	.word	0x00000000
  4054d4:	abcd330e 	.word	0xabcd330e
  4054d8:	e66d1234 	.word	0xe66d1234
  4054dc:	0005deec 	.word	0x0005deec
  4054e0:	0000000b 	.word	0x0000000b
	...
  40584c:	2040d850 	.word	0x2040d850
  405850:	0000016c 	.word	0x0000016c
  405854:	00000001 	.word	0x00000001
  405858:	00000043 	.word	0x00000043
	...
  405878:	00000043 	.word	0x00000043
	...
  405898:	00000043 	.word	0x00000043
	...
  4058b8:	00000043 	.word	0x00000043
	...
  4058d8:	00000043 	.word	0x00000043
	...
  4058f8:	00000043 	.word	0x00000043
	...
  405918:	00000043 	.word	0x00000043
	...
  405938:	0040bae5 	.word	0x0040bae5
  40593c:	0040b93d 	.word	0x0040b93d
  405940:	00000000 	.word	0x00000000
  405944:	00409794 	.word	0x00409794
  405948:	0040bcbc 	.word	0x0040bcbc
  40594c:	0040bcb8 	.word	0x0040bcb8
  405950:	0040bcb8 	.word	0x0040bcb8
  405954:	0040bcb8 	.word	0x0040bcb8
  405958:	0040bcb8 	.word	0x0040bcb8
  40595c:	0040bcb8 	.word	0x0040bcb8
  405960:	0040bcb8 	.word	0x0040bcb8
  405964:	0040bcb8 	.word	0x0040bcb8
  405968:	0040bcb8 	.word	0x0040bcb8
  40596c:	0040bcb8 	.word	0x0040bcb8
  405970:	ffffffff 	.word	0xffffffff
  405974:	ffffffff 	.word	0xffffffff
  405978:	ffffffff 	.word	0xffffffff
  40597c:	0000ffff 	.word	0x0000ffff
  405980:	53410001 	.word	0x53410001
  405984:	00494943 	.word	0x00494943
	...
  4059a0:	53410000 	.word	0x53410000
  4059a4:	00494943 	.word	0x00494943
	...
  4059c4:	2040dbd4 	.word	0x2040dbd4
  4059c8:	00000028 	.word	0x00000028
  4059cc:	00000000 	.word	0x00000000
  4059d0:	2040dca4 	.word	0x2040dca4
  4059d4:	00000004 	.word	0x00000004
  4059d8:	00000000 	.word	0x00000000
  4059dc:	2040dca8 	.word	0x2040dca8
  4059e0:	00000004 	.word	0x00000004
  4059e4:	00000000 	.word	0x00000000
  4059e8:	2040dcac 	.word	0x2040dcac
  4059ec:	00000004 	.word	0x00000004
  4059f0:	00000000 	.word	0x00000000
  4059f4:	2040d0b0 	.word	0x2040d0b0
  4059f8:	00000408 	.word	0x00000408
  4059fc:	00000001 	.word	0x00000001
	...
  405a08:	2040d0b0 	.word	0x2040d0b0
  405a0c:	2040d0b0 	.word	0x2040d0b0
  405a10:	2040d0b8 	.word	0x2040d0b8
  405a14:	2040d0b8 	.word	0x2040d0b8
  405a18:	2040d0c0 	.word	0x2040d0c0
  405a1c:	2040d0c0 	.word	0x2040d0c0
  405a20:	2040d0c8 	.word	0x2040d0c8
  405a24:	2040d0c8 	.word	0x2040d0c8
  405a28:	2040d0d0 	.word	0x2040d0d0
  405a2c:	2040d0d0 	.word	0x2040d0d0
  405a30:	2040d0d8 	.word	0x2040d0d8
  405a34:	2040d0d8 	.word	0x2040d0d8
  405a38:	2040d0e0 	.word	0x2040d0e0
  405a3c:	2040d0e0 	.word	0x2040d0e0
  405a40:	2040d0e8 	.word	0x2040d0e8
  405a44:	2040d0e8 	.word	0x2040d0e8
  405a48:	2040d0f0 	.word	0x2040d0f0
  405a4c:	2040d0f0 	.word	0x2040d0f0
  405a50:	2040d0f8 	.word	0x2040d0f8
  405a54:	2040d0f8 	.word	0x2040d0f8
  405a58:	2040d100 	.word	0x2040d100
  405a5c:	2040d100 	.word	0x2040d100
  405a60:	2040d108 	.word	0x2040d108
  405a64:	2040d108 	.word	0x2040d108
  405a68:	2040d110 	.word	0x2040d110
  405a6c:	2040d110 	.word	0x2040d110
  405a70:	2040d118 	.word	0x2040d118
  405a74:	2040d118 	.word	0x2040d118
  405a78:	2040d120 	.word	0x2040d120
  405a7c:	2040d120 	.word	0x2040d120
  405a80:	2040d128 	.word	0x2040d128
  405a84:	2040d128 	.word	0x2040d128
  405a88:	2040d130 	.word	0x2040d130
  405a8c:	2040d130 	.word	0x2040d130
  405a90:	2040d138 	.word	0x2040d138
  405a94:	2040d138 	.word	0x2040d138
  405a98:	2040d140 	.word	0x2040d140
  405a9c:	2040d140 	.word	0x2040d140
  405aa0:	2040d148 	.word	0x2040d148
  405aa4:	2040d148 	.word	0x2040d148
  405aa8:	2040d150 	.word	0x2040d150
  405aac:	2040d150 	.word	0x2040d150
  405ab0:	2040d158 	.word	0x2040d158
  405ab4:	2040d158 	.word	0x2040d158
  405ab8:	2040d160 	.word	0x2040d160
  405abc:	2040d160 	.word	0x2040d160
  405ac0:	2040d168 	.word	0x2040d168
  405ac4:	2040d168 	.word	0x2040d168
  405ac8:	2040d170 	.word	0x2040d170
  405acc:	2040d170 	.word	0x2040d170
  405ad0:	2040d178 	.word	0x2040d178
  405ad4:	2040d178 	.word	0x2040d178
  405ad8:	2040d180 	.word	0x2040d180
  405adc:	2040d180 	.word	0x2040d180
  405ae0:	2040d188 	.word	0x2040d188
  405ae4:	2040d188 	.word	0x2040d188
  405ae8:	2040d190 	.word	0x2040d190
  405aec:	2040d190 	.word	0x2040d190
  405af0:	2040d198 	.word	0x2040d198
  405af4:	2040d198 	.word	0x2040d198
  405af8:	2040d1a0 	.word	0x2040d1a0
  405afc:	2040d1a0 	.word	0x2040d1a0
  405b00:	2040d1a8 	.word	0x2040d1a8
  405b04:	2040d1a8 	.word	0x2040d1a8
  405b08:	2040d1b0 	.word	0x2040d1b0
  405b0c:	2040d1b0 	.word	0x2040d1b0
  405b10:	2040d1b8 	.word	0x2040d1b8
  405b14:	2040d1b8 	.word	0x2040d1b8
  405b18:	2040d1c0 	.word	0x2040d1c0
  405b1c:	2040d1c0 	.word	0x2040d1c0
  405b20:	2040d1c8 	.word	0x2040d1c8
  405b24:	2040d1c8 	.word	0x2040d1c8
  405b28:	2040d1d0 	.word	0x2040d1d0
  405b2c:	2040d1d0 	.word	0x2040d1d0
  405b30:	2040d1d8 	.word	0x2040d1d8
  405b34:	2040d1d8 	.word	0x2040d1d8
  405b38:	2040d1e0 	.word	0x2040d1e0
  405b3c:	2040d1e0 	.word	0x2040d1e0
  405b40:	2040d1e8 	.word	0x2040d1e8
  405b44:	2040d1e8 	.word	0x2040d1e8
  405b48:	2040d1f0 	.word	0x2040d1f0
  405b4c:	2040d1f0 	.word	0x2040d1f0
  405b50:	2040d1f8 	.word	0x2040d1f8
  405b54:	2040d1f8 	.word	0x2040d1f8
  405b58:	2040d200 	.word	0x2040d200
  405b5c:	2040d200 	.word	0x2040d200
  405b60:	2040d208 	.word	0x2040d208
  405b64:	2040d208 	.word	0x2040d208
  405b68:	2040d210 	.word	0x2040d210
  405b6c:	2040d210 	.word	0x2040d210
  405b70:	2040d218 	.word	0x2040d218
  405b74:	2040d218 	.word	0x2040d218
  405b78:	2040d220 	.word	0x2040d220
  405b7c:	2040d220 	.word	0x2040d220
  405b80:	2040d228 	.word	0x2040d228
  405b84:	2040d228 	.word	0x2040d228
  405b88:	2040d230 	.word	0x2040d230
  405b8c:	2040d230 	.word	0x2040d230
  405b90:	2040d238 	.word	0x2040d238
  405b94:	2040d238 	.word	0x2040d238
  405b98:	2040d240 	.word	0x2040d240
  405b9c:	2040d240 	.word	0x2040d240
  405ba0:	2040d248 	.word	0x2040d248
  405ba4:	2040d248 	.word	0x2040d248
  405ba8:	2040d250 	.word	0x2040d250
  405bac:	2040d250 	.word	0x2040d250
  405bb0:	2040d258 	.word	0x2040d258
  405bb4:	2040d258 	.word	0x2040d258
  405bb8:	2040d260 	.word	0x2040d260
  405bbc:	2040d260 	.word	0x2040d260
  405bc0:	2040d268 	.word	0x2040d268
  405bc4:	2040d268 	.word	0x2040d268
  405bc8:	2040d270 	.word	0x2040d270
  405bcc:	2040d270 	.word	0x2040d270
  405bd0:	2040d278 	.word	0x2040d278
  405bd4:	2040d278 	.word	0x2040d278
  405bd8:	2040d280 	.word	0x2040d280
  405bdc:	2040d280 	.word	0x2040d280
  405be0:	2040d288 	.word	0x2040d288
  405be4:	2040d288 	.word	0x2040d288
  405be8:	2040d290 	.word	0x2040d290
  405bec:	2040d290 	.word	0x2040d290
  405bf0:	2040d298 	.word	0x2040d298
  405bf4:	2040d298 	.word	0x2040d298
  405bf8:	2040d2a0 	.word	0x2040d2a0
  405bfc:	2040d2a0 	.word	0x2040d2a0
  405c00:	2040d2a8 	.word	0x2040d2a8
  405c04:	2040d2a8 	.word	0x2040d2a8
  405c08:	2040d2b0 	.word	0x2040d2b0
  405c0c:	2040d2b0 	.word	0x2040d2b0
  405c10:	2040d2b8 	.word	0x2040d2b8
  405c14:	2040d2b8 	.word	0x2040d2b8
  405c18:	2040d2c0 	.word	0x2040d2c0
  405c1c:	2040d2c0 	.word	0x2040d2c0
  405c20:	2040d2c8 	.word	0x2040d2c8
  405c24:	2040d2c8 	.word	0x2040d2c8
  405c28:	2040d2d0 	.word	0x2040d2d0
  405c2c:	2040d2d0 	.word	0x2040d2d0
  405c30:	2040d2d8 	.word	0x2040d2d8
  405c34:	2040d2d8 	.word	0x2040d2d8
  405c38:	2040d2e0 	.word	0x2040d2e0
  405c3c:	2040d2e0 	.word	0x2040d2e0
  405c40:	2040d2e8 	.word	0x2040d2e8
  405c44:	2040d2e8 	.word	0x2040d2e8
  405c48:	2040d2f0 	.word	0x2040d2f0
  405c4c:	2040d2f0 	.word	0x2040d2f0
  405c50:	2040d2f8 	.word	0x2040d2f8
  405c54:	2040d2f8 	.word	0x2040d2f8
  405c58:	2040d300 	.word	0x2040d300
  405c5c:	2040d300 	.word	0x2040d300
  405c60:	2040d308 	.word	0x2040d308
  405c64:	2040d308 	.word	0x2040d308
  405c68:	2040d310 	.word	0x2040d310
  405c6c:	2040d310 	.word	0x2040d310
  405c70:	2040d318 	.word	0x2040d318
  405c74:	2040d318 	.word	0x2040d318
  405c78:	2040d320 	.word	0x2040d320
  405c7c:	2040d320 	.word	0x2040d320
  405c80:	2040d328 	.word	0x2040d328
  405c84:	2040d328 	.word	0x2040d328
  405c88:	2040d330 	.word	0x2040d330
  405c8c:	2040d330 	.word	0x2040d330
  405c90:	2040d338 	.word	0x2040d338
  405c94:	2040d338 	.word	0x2040d338
  405c98:	2040d340 	.word	0x2040d340
  405c9c:	2040d340 	.word	0x2040d340
  405ca0:	2040d348 	.word	0x2040d348
  405ca4:	2040d348 	.word	0x2040d348
  405ca8:	2040d350 	.word	0x2040d350
  405cac:	2040d350 	.word	0x2040d350
  405cb0:	2040d358 	.word	0x2040d358
  405cb4:	2040d358 	.word	0x2040d358
  405cb8:	2040d360 	.word	0x2040d360
  405cbc:	2040d360 	.word	0x2040d360
  405cc0:	2040d368 	.word	0x2040d368
  405cc4:	2040d368 	.word	0x2040d368
  405cc8:	2040d370 	.word	0x2040d370
  405ccc:	2040d370 	.word	0x2040d370
  405cd0:	2040d378 	.word	0x2040d378
  405cd4:	2040d378 	.word	0x2040d378
  405cd8:	2040d380 	.word	0x2040d380
  405cdc:	2040d380 	.word	0x2040d380
  405ce0:	2040d388 	.word	0x2040d388
  405ce4:	2040d388 	.word	0x2040d388
  405ce8:	2040d390 	.word	0x2040d390
  405cec:	2040d390 	.word	0x2040d390
  405cf0:	2040d398 	.word	0x2040d398
  405cf4:	2040d398 	.word	0x2040d398
  405cf8:	2040d3a0 	.word	0x2040d3a0
  405cfc:	2040d3a0 	.word	0x2040d3a0
  405d00:	2040d3a8 	.word	0x2040d3a8
  405d04:	2040d3a8 	.word	0x2040d3a8
  405d08:	2040d3b0 	.word	0x2040d3b0
  405d0c:	2040d3b0 	.word	0x2040d3b0
  405d10:	2040d3b8 	.word	0x2040d3b8
  405d14:	2040d3b8 	.word	0x2040d3b8
  405d18:	2040d3c0 	.word	0x2040d3c0
  405d1c:	2040d3c0 	.word	0x2040d3c0
  405d20:	2040d3c8 	.word	0x2040d3c8
  405d24:	2040d3c8 	.word	0x2040d3c8
  405d28:	2040d3d0 	.word	0x2040d3d0
  405d2c:	2040d3d0 	.word	0x2040d3d0
  405d30:	2040d3d8 	.word	0x2040d3d8
  405d34:	2040d3d8 	.word	0x2040d3d8
  405d38:	2040d3e0 	.word	0x2040d3e0
  405d3c:	2040d3e0 	.word	0x2040d3e0
  405d40:	2040d3e8 	.word	0x2040d3e8
  405d44:	2040d3e8 	.word	0x2040d3e8
  405d48:	2040d3f0 	.word	0x2040d3f0
  405d4c:	2040d3f0 	.word	0x2040d3f0
  405d50:	2040d3f8 	.word	0x2040d3f8
  405d54:	2040d3f8 	.word	0x2040d3f8
  405d58:	2040d400 	.word	0x2040d400
  405d5c:	2040d400 	.word	0x2040d400
  405d60:	2040d408 	.word	0x2040d408
  405d64:	2040d408 	.word	0x2040d408
  405d68:	2040d410 	.word	0x2040d410
  405d6c:	2040d410 	.word	0x2040d410
  405d70:	2040d418 	.word	0x2040d418
  405d74:	2040d418 	.word	0x2040d418
  405d78:	2040d420 	.word	0x2040d420
  405d7c:	2040d420 	.word	0x2040d420
  405d80:	2040d428 	.word	0x2040d428
  405d84:	2040d428 	.word	0x2040d428
  405d88:	2040d430 	.word	0x2040d430
  405d8c:	2040d430 	.word	0x2040d430
  405d90:	2040d438 	.word	0x2040d438
  405d94:	2040d438 	.word	0x2040d438
  405d98:	2040d440 	.word	0x2040d440
  405d9c:	2040d440 	.word	0x2040d440
  405da0:	2040d448 	.word	0x2040d448
  405da4:	2040d448 	.word	0x2040d448
  405da8:	2040d450 	.word	0x2040d450
  405dac:	2040d450 	.word	0x2040d450
  405db0:	2040d458 	.word	0x2040d458
  405db4:	2040d458 	.word	0x2040d458
  405db8:	2040d460 	.word	0x2040d460
  405dbc:	2040d460 	.word	0x2040d460
  405dc0:	2040d468 	.word	0x2040d468
  405dc4:	2040d468 	.word	0x2040d468
  405dc8:	2040d470 	.word	0x2040d470
  405dcc:	2040d470 	.word	0x2040d470
  405dd0:	2040d478 	.word	0x2040d478
  405dd4:	2040d478 	.word	0x2040d478
  405dd8:	2040d480 	.word	0x2040d480
  405ddc:	2040d480 	.word	0x2040d480
  405de0:	2040d488 	.word	0x2040d488
  405de4:	2040d488 	.word	0x2040d488
  405de8:	2040d490 	.word	0x2040d490
  405dec:	2040d490 	.word	0x2040d490
  405df0:	2040d498 	.word	0x2040d498
  405df4:	2040d498 	.word	0x2040d498
  405df8:	2040d4a0 	.word	0x2040d4a0
  405dfc:	2040d4a0 	.word	0x2040d4a0
  405e00:	2040d4a8 	.word	0x2040d4a8
  405e04:	2040d4a8 	.word	0x2040d4a8
  405e08:	2040dcb0 	.word	0x2040dcb0
  405e0c:	00000004 	.word	0x00000004
  405e10:	00000001 	.word	0x00000001
  405e14:	ffffffff 	.word	0xffffffff
  405e18:	2040dcb4 	.word	0x2040dcb4
  405e1c:	00000004 	.word	0x00000004
  405e20:	00000001 	.word	0x00000001
  405e24:	00020000 	.word	0x00020000
  405e28:	20400484 	.word	0x20400484
  405e2c:	00000004 	.word	0x00000004
  405e30:	00000000 	.word	0x00000000
  405e34:	2040dcb8 	.word	0x2040dcb8
  405e38:	00000004 	.word	0x00000004
	...
  405e48:	22222222 	.word	0x22222222
  405e4c:	22222222 	.word	0x22222222

Disassembly of section .text._dtoa_r%33:

00405e50 <_dtoa_r>:
  405e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00405e54 <.LCFI4>:
  405e54:	6c05      	ldr	r5, [r0, #64]	; 0x40
  405e56:	b093      	sub	sp, #76	; 0x4c

00405e58 <.LCFI5>:
  405e58:	4604      	mov	r4, r0
  405e5a:	ec5b ab10 	vmov	sl, fp, d0
  405e5e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
  405e60:	9101      	str	r1, [sp, #4]
  405e62:	4691      	mov	r9, r2
  405e64:	9304      	str	r3, [sp, #16]
  405e66:	b14d      	cbz	r5, 405e7c <.LVL53+0x4>
  405e68:	6c42      	ldr	r2, [r0, #68]	; 0x44

00405e6a <.LVL50>:
  405e6a:	606a      	str	r2, [r5, #4]
  405e6c:	2301      	movs	r3, #1

00405e6e <.LVL51>:
  405e6e:	4093      	lsls	r3, r2
  405e70:	60ab      	str	r3, [r5, #8]
  405e72:	4629      	mov	r1, r5

00405e74 <.LVL52>:
  405e74:	f005 ff38 	bl	40bce8 <_Bfree>

00405e78 <.LVL53>:
  405e78:	2300      	movs	r3, #0
  405e7a:	6423      	str	r3, [r4, #64]	; 0x40
  405e7c:	f1bb 0f00 	cmp.w	fp, #0
  405e80:	465e      	mov	r6, fp
  405e82:	db35      	blt.n	405ef0 <.LVL63>
  405e84:	2300      	movs	r3, #0
  405e86:	603b      	str	r3, [r7, #0]
  405e88:	4bc1      	ldr	r3, [pc, #772]	; (406190 <.LVL134+0x20>)
  405e8a:	43b3      	bics	r3, r6
  405e8c:	d015      	beq.n	405eba <.LCFI7>
  405e8e:	ec4b ab17 	vmov	d7, sl, fp
  405e92:	eeb5 7b40 	vcmp.f64	d7, #0.0
  405e96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr

00405e9a <.LVL55>:
  405e9a:	e9cd ab02 	strd	sl, fp, [sp, #8]
  405e9e:	d12d      	bne.n	405efc <.LVL64>
  405ea0:	9a04      	ldr	r2, [sp, #16]
  405ea2:	2301      	movs	r3, #1
  405ea4:	6013      	str	r3, [r2, #0]

00405ea6 <.LVL56>:
  405ea6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  405ea8:	2b00      	cmp	r3, #0
  405eaa:	f000 80b3 	beq.w	406014 <.LVL99>
  405eae:	48b9      	ldr	r0, [pc, #740]	; (406194 <.LVL134+0x24>)
  405eb0:	6018      	str	r0, [r3, #0]
  405eb2:	3801      	subs	r0, #1

00405eb4 <.LVL57>:
  405eb4:	b013      	add	sp, #76	; 0x4c

00405eb6 <.LCFI6>:
  405eb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405eba <.LCFI7>:
  405eba:	9a04      	ldr	r2, [sp, #16]
  405ebc:	f242 730f 	movw	r3, #9999	; 0x270f
  405ec0:	6013      	str	r3, [r2, #0]

00405ec2 <.LVL59>:
  405ec2:	f1ba 0f00 	cmp.w	sl, #0
  405ec6:	d10d      	bne.n	405ee4 <.LCFI9>
  405ec8:	f3c6 0613 	ubfx	r6, r6, #0, #20
  405ecc:	b956      	cbnz	r6, 405ee4 <.LCFI9>

00405ece <.LVL60>:
  405ece:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  405ed0:	48b1      	ldr	r0, [pc, #708]	; (406198 <.LVL134+0x28>)
  405ed2:	2b00      	cmp	r3, #0
  405ed4:	d0ee      	beq.n	405eb4 <.LVL57>
  405ed6:	f100 0308 	add.w	r3, r0, #8

00405eda <.LVL61>:
  405eda:	9a1d      	ldr	r2, [sp, #116]	; 0x74
  405edc:	6013      	str	r3, [r2, #0]
  405ede:	b013      	add	sp, #76	; 0x4c

00405ee0 <.LCFI8>:
  405ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405ee4 <.LCFI9>:
  405ee4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  405ee6:	48ad      	ldr	r0, [pc, #692]	; (40619c <.LVL134+0x2c>)
  405ee8:	2b00      	cmp	r3, #0
  405eea:	d0e3      	beq.n	405eb4 <.LVL57>
  405eec:	1cc3      	adds	r3, r0, #3
  405eee:	e7f4      	b.n	405eda <.LVL61>

00405ef0 <.LVL63>:
  405ef0:	2301      	movs	r3, #1
  405ef2:	f02b 4600 	bic.w	r6, fp, #2147483648	; 0x80000000
  405ef6:	603b      	str	r3, [r7, #0]
  405ef8:	46b3      	mov	fp, r6
  405efa:	e7c5      	b.n	405e88 <.LVL53+0x10>

00405efc <.LVL64>:
  405efc:	a911      	add	r1, sp, #68	; 0x44
  405efe:	aa10      	add	r2, sp, #64	; 0x40
  405f00:	ed9d 0b02 	vldr	d0, [sp, #8]
  405f04:	4620      	mov	r0, r4
  405f06:	f004 f8b9 	bl	40a07c <.LFE19>

00405f0a <.LVL65>:
  405f0a:	0d31      	lsrs	r1, r6, #20
  405f0c:	4680      	mov	r8, r0

00405f0e <.LVL66>:
  405f0e:	d065      	beq.n	405fdc <.LVL92>
  405f10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405f14:	f3c3 0013 	ubfx	r0, r3, #0, #20

00405f18 <.LVL68>:
  405f18:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
  405f1c:	2500      	movs	r5, #0
  405f1e:	9810      	ldr	r0, [sp, #64]	; 0x40
  405f20:	950d      	str	r5, [sp, #52]	; 0x34
  405f22:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff

00405f26 <.LVL69>:
  405f26:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000

00405f2a <.LVL70>:
  405f2a:	ec43 2b17 	vmov	d7, r2, r3
  405f2e:	eeb7 6b08 	vmov.f64	d6, #120	; 0x3fc00000  1.5
  405f32:	ed9f 4b91 	vldr	d4, [pc, #580]	; 406178 <.LVL134+0x8>
  405f36:	ee37 6b46 	vsub.f64	d6, d7, d6
  405f3a:	ed9f 7b91 	vldr	d7, [pc, #580]	; 406180 <.LVL134+0x10>
  405f3e:	ed9f 5b92 	vldr	d5, [pc, #584]	; 406188 <.LVL134+0x18>
  405f42:	eea6 7b04 	vfma.f64	d7, d6, d4
  405f46:	ee06 1a90 	vmov	s13, r1
  405f4a:	eeb8 6be6 	vcvt.f64.s32	d6, s13
  405f4e:	eea6 7b05 	vfma.f64	d7, d6, d5

00405f52 <.LVL71>:
  405f52:	eefd 6bc7 	vcvt.s32.f64	s13, d7
  405f56:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
  405f5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405f5e:	edcd 6a02 	vstr	s13, [sp, #8]

00405f62 <.LVL72>:
  405f62:	f100 8130 	bmi.w	4061c6 <.LVL143>

00405f66 <.LVL73>:
  405f66:	9d02      	ldr	r5, [sp, #8]
  405f68:	2d16      	cmp	r5, #22
  405f6a:	f200 8101 	bhi.w	406170 <.LVL134>
  405f6e:	4b8c      	ldr	r3, [pc, #560]	; (4061a0 <.LVL134+0x30>)
  405f70:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  405f74:	ed93 7b00 	vldr	d7, [r3]

00405f78 <.LVL74>:
  405f78:	ec4b ab16 	vmov	d6, sl, fp
  405f7c:	eeb4 7bc6 	vcmpe.f64	d7, d6
  405f80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405f84:	f340 8183 	ble.w	40628e <.LVL173>
  405f88:	1e6b      	subs	r3, r5, #1
  405f8a:	9302      	str	r3, [sp, #8]

00405f8c <.LVL75>:
  405f8c:	2300      	movs	r3, #0

00405f8e <.LVL76>:
  405f8e:	930b      	str	r3, [sp, #44]	; 0x2c

00405f90 <.LVL77>:
  405f90:	1a41      	subs	r1, r0, r1

00405f92 <.LVL78>:
  405f92:	1e4b      	subs	r3, r1, #1

00405f94 <.LVL79>:
  405f94:	9306      	str	r3, [sp, #24]
  405f96:	f100 8110 	bmi.w	4061ba <.LVL138>
  405f9a:	2300      	movs	r3, #0

00405f9c <.LVL80>:
  405f9c:	9307      	str	r3, [sp, #28]

00405f9e <.LVL81>:
  405f9e:	9b02      	ldr	r3, [sp, #8]
  405fa0:	2b00      	cmp	r3, #0
  405fa2:	f2c0 8101 	blt.w	4061a8 <.LVL135>

00405fa6 <.LVL82>:
  405fa6:	9a06      	ldr	r2, [sp, #24]

00405fa8 <.LVL83>:
  405fa8:	930a      	str	r3, [sp, #40]	; 0x28
  405faa:	4611      	mov	r1, r2

00405fac <.LVL84>:
  405fac:	4419      	add	r1, r3
  405fae:	2300      	movs	r3, #0

00405fb0 <.LVL85>:
  405fb0:	9106      	str	r1, [sp, #24]

00405fb2 <.LVL86>:
  405fb2:	9305      	str	r3, [sp, #20]

00405fb4 <.LVL87>:
  405fb4:	9b01      	ldr	r3, [sp, #4]
  405fb6:	2b09      	cmp	r3, #9
  405fb8:	d82e      	bhi.n	406018 <.LVL100>

00405fba <.LVL88>:
  405fba:	2b05      	cmp	r3, #5
  405fbc:	f340 8550 	ble.w	406a60 <.LVL445>
  405fc0:	3b04      	subs	r3, #4

00405fc2 <.LVL89>:
  405fc2:	9301      	str	r3, [sp, #4]

00405fc4 <.LVL90>:
  405fc4:	2500      	movs	r5, #0

00405fc6 <.LVL91>:
  405fc6:	9b01      	ldr	r3, [sp, #4]
  405fc8:	3b02      	subs	r3, #2
  405fca:	2b03      	cmp	r3, #3
  405fcc:	f200 8550 	bhi.w	406a70 <.LVL447>
  405fd0:	e8df f013 	tbh	[pc, r3, lsl #1]
  405fd4:	02860349 	.word	0x02860349
  405fd8:	03d80356 	.word	0x03d80356

00405fdc <.LVL92>:
  405fdc:	9810      	ldr	r0, [sp, #64]	; 0x40

00405fde <.LVL93>:
  405fde:	9911      	ldr	r1, [sp, #68]	; 0x44

00405fe0 <.LVL94>:
  405fe0:	4401      	add	r1, r0
  405fe2:	f201 4332 	addw	r3, r1, #1074	; 0x432

00405fe6 <.LVL95>:
  405fe6:	2b20      	cmp	r3, #32
  405fe8:	f340 814a 	ble.w	406280 <.LVL171>
  405fec:	f1c3 0340 	rsb	r3, r3, #64	; 0x40

00405ff0 <.LVL96>:
  405ff0:	f201 4212 	addw	r2, r1, #1042	; 0x412
  405ff4:	409e      	lsls	r6, r3
  405ff6:	fa2a f302 	lsr.w	r3, sl, r2
  405ffa:	4333      	orrs	r3, r6
  405ffc:	ee07 3a90 	vmov	s15, r3

00406000 <.LVL97>:
  406000:	eeb8 7b67 	vcvt.f64.u32	d7, s15
  406004:	2501      	movs	r5, #1
  406006:	ec53 2b17 	vmov	r2, r3, d7
  40600a:	3901      	subs	r1, #1

0040600c <.LVL98>:
  40600c:	f1a3 73f8 	sub.w	r3, r3, #32505856	; 0x1f00000
  406010:	950d      	str	r5, [sp, #52]	; 0x34
  406012:	e78a      	b.n	405f2a <.LVL70>

00406014 <.LVL99>:
  406014:	4863      	ldr	r0, [pc, #396]	; (4061a4 <.LVL134+0x34>)
  406016:	e74d      	b.n	405eb4 <.LVL57>

00406018 <.LVL100>:
  406018:	2100      	movs	r1, #0
  40601a:	6461      	str	r1, [r4, #68]	; 0x44
  40601c:	4620      	mov	r0, r4
  40601e:	4689      	mov	r9, r1
  406020:	f005 f96a 	bl	40b2f8 <.LFE2>

00406024 <.LVL101>:
  406024:	f04f 36ff 	mov.w	r6, #4294967295
  406028:	2301      	movs	r3, #1
  40602a:	9008      	str	r0, [sp, #32]
  40602c:	6420      	str	r0, [r4, #64]	; 0x40

0040602e <.LVL102>:
  40602e:	f8cd 9004 	str.w	r9, [sp, #4]

00406032 <.LVL103>:
  406032:	960c      	str	r6, [sp, #48]	; 0x30
  406034:	9309      	str	r3, [sp, #36]	; 0x24

00406036 <.LVL104>:
  406036:	9b11      	ldr	r3, [sp, #68]	; 0x44
  406038:	2b00      	cmp	r3, #0
  40603a:	db7a      	blt.n	406132 <.LCFI11>
  40603c:	9a02      	ldr	r2, [sp, #8]
  40603e:	2a0e      	cmp	r2, #14
  406040:	dc77      	bgt.n	406132 <.LCFI11>
  406042:	4b57      	ldr	r3, [pc, #348]	; (4061a0 <.LVL134+0x30>)
  406044:	f1b9 0f00 	cmp.w	r9, #0
  406048:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40604c:	ed93 4b00 	vldr	d4, [r3]

00406050 <.LVL105>:
  406050:	f2c0 8332 	blt.w	4066b8 <.LVL300>

00406054 <.LVL106>:
  406054:	ec4b ab17 	vmov	d7, sl, fp
  406058:	ee87 6b04 	vdiv.f64	d6, d7, d4
  40605c:	eebd 6bc6 	vcvt.s32.f64	s12, d6

00406060 <.LVL107>:
  406060:	9a08      	ldr	r2, [sp, #32]
  406062:	ee16 3a10 	vmov	r3, s12
  406066:	2e01      	cmp	r6, #1
  406068:	f103 0330 	add.w	r3, r3, #48	; 0x30
  40606c:	eeb8 5bc6 	vcvt.f64.s32	d5, s12
  406070:	f102 0b01 	add.w	fp, r2, #1

00406074 <.LVL108>:
  406074:	7013      	strb	r3, [r2, #0]
  406076:	eea5 7b44 	vfms.f64	d7, d5, d4
  40607a:	d024      	beq.n	4060c6 <.LVL115>
  40607c:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
  406080:	ee27 7b03 	vmul.f64	d7, d7, d3
  406084:	eeb5 7b40 	vcmp.f64	d7, #0.0
  406088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40608c:	d03c      	beq.n	406108 <.L76>
  40608e:	eeb1 2b44 	vneg.f64	d2, d4
  406092:	9a08      	ldr	r2, [sp, #32]
  406094:	e006      	b.n	4060a4 <.LVL110>

00406096 <.LVL109>:
  406096:	ee27 7b03 	vmul.f64	d7, d7, d3
  40609a:	eeb5 7b40 	vcmp.f64	d7, #0.0
  40609e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4060a2:	d031      	beq.n	406108 <.L76>

004060a4 <.LVL110>:
  4060a4:	ee87 6b04 	vdiv.f64	d6, d7, d4

004060a8 <.LVL111>:
  4060a8:	eebd 6bc6 	vcvt.s32.f64	s12, d6

004060ac <.LVL112>:
  4060ac:	ee16 3a10 	vmov	r3, s12
  4060b0:	3330      	adds	r3, #48	; 0x30
  4060b2:	f80b 3b01 	strb.w	r3, [fp], #1

004060b6 <.LVL113>:
  4060b6:	ebab 0302 	sub.w	r3, fp, r2
  4060ba:	42b3      	cmp	r3, r6
  4060bc:	eeb8 5bc6 	vcvt.f64.s32	d5, s12
  4060c0:	eea2 7b05 	vfma.f64	d7, d2, d5

004060c4 <.LVL114>:
  4060c4:	d1e7      	bne.n	406096 <.LVL109>

004060c6 <.LVL115>:
  4060c6:	ee37 7b07 	vadd.f64	d7, d7, d7
  4060ca:	eeb4 4bc7 	vcmpe.f64	d4, d7
  4060ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4060d2:	d408      	bmi.n	4060e6 <.LVL115+0x20>
  4060d4:	eeb4 4b47 	vcmp.f64	d4, d7
  4060d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4060dc:	d114      	bne.n	406108 <.L76>
  4060de:	ee16 3a10 	vmov	r3, s12
  4060e2:	07db      	lsls	r3, r3, #31
  4060e4:	d510      	bpl.n	406108 <.L76>
  4060e6:	f81b 3c01 	ldrb.w	r3, [fp, #-1]

004060ea <.L77>:
  4060ea:	9908      	ldr	r1, [sp, #32]
  4060ec:	f10b 32ff 	add.w	r2, fp, #4294967295
  4060f0:	e004      	b.n	4060fc <.LVL118>

004060f2 <.LVL117>:
  4060f2:	4291      	cmp	r1, r2
  4060f4:	f000 83da 	beq.w	4068ac <.LVL375>
  4060f8:	f812 3d01 	ldrb.w	r3, [r2, #-1]!

004060fc <.LVL118>:
  4060fc:	2b39      	cmp	r3, #57	; 0x39
  4060fe:	f102 0b01 	add.w	fp, r2, #1

00406102 <.LVL119>:
  406102:	d0f6      	beq.n	4060f2 <.LVL117>

00406104 <.LVL120>:
  406104:	3301      	adds	r3, #1
  406106:	7013      	strb	r3, [r2, #0]

00406108 <.L76>:
  406108:	4641      	mov	r1, r8
  40610a:	4620      	mov	r0, r4

0040610c <.LVL122>:
  40610c:	f005 fdec 	bl	40bce8 <_Bfree>

00406110 <.LVL123>:
  406110:	2200      	movs	r2, #0
  406112:	9b02      	ldr	r3, [sp, #8]
  406114:	f88b 2000 	strb.w	r2, [fp]
  406118:	9a04      	ldr	r2, [sp, #16]
  40611a:	3301      	adds	r3, #1
  40611c:	6013      	str	r3, [r2, #0]
  40611e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  406120:	2b00      	cmp	r3, #0
  406122:	f000 8355 	beq.w	4067d0 <.LVL340>
  406126:	9808      	ldr	r0, [sp, #32]
  406128:	f8c3 b000 	str.w	fp, [r3]
  40612c:	b013      	add	sp, #76	; 0x4c

0040612e <.LCFI10>:
  40612e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406132 <.LCFI11>:
  406132:	9a09      	ldr	r2, [sp, #36]	; 0x24
  406134:	2a00      	cmp	r2, #0
  406136:	d052      	beq.n	4061de <.LVL145>
  406138:	9a01      	ldr	r2, [sp, #4]
  40613a:	2a01      	cmp	r2, #1
  40613c:	f340 82e2 	ble.w	406704 <.LVL312>
  406140:	9905      	ldr	r1, [sp, #20]
  406142:	1e72      	subs	r2, r6, #1

00406144 <.LVL125>:
  406144:	4291      	cmp	r1, r2
  406146:	f2c0 8346 	blt.w	4067d6 <.LVL341>
  40614a:	1a8b      	subs	r3, r1, r2
  40614c:	930d      	str	r3, [sp, #52]	; 0x34

0040614e <.LVL126>:
  40614e:	2e00      	cmp	r6, #0
  406150:	f2c0 8415 	blt.w	40697e <.LVL411>
  406154:	9f07      	ldr	r7, [sp, #28]
  406156:	4633      	mov	r3, r6

00406158 <.LVL127>:
  406158:	9a07      	ldr	r2, [sp, #28]
  40615a:	441a      	add	r2, r3
  40615c:	9207      	str	r2, [sp, #28]

0040615e <.LVL128>:
  40615e:	9a06      	ldr	r2, [sp, #24]

00406160 <.LVL129>:
  406160:	2101      	movs	r1, #1
  406162:	441a      	add	r2, r3
  406164:	4620      	mov	r0, r4

00406166 <.LVL130>:
  406166:	9206      	str	r2, [sp, #24]

00406168 <.LVL131>:
  406168:	f005 fdc8 	bl	40bcfc <__i2b>

0040616c <.LVL132>:
  40616c:	4605      	mov	r5, r0

0040616e <.LVL133>:
  40616e:	e03a      	b.n	4061e6 <.LVL146>

00406170 <.LVL134>:
  406170:	2301      	movs	r3, #1
  406172:	930b      	str	r3, [sp, #44]	; 0x2c
  406174:	e70c      	b.n	405f90 <.LVL77>
  406176:	bf00      	nop
  406178:	636f4361 	.word	0x636f4361
  40617c:	3fd287a7 	.word	0x3fd287a7
  406180:	8b60c8b3 	.word	0x8b60c8b3
  406184:	3fc68a28 	.word	0x3fc68a28
  406188:	509f79fb 	.word	0x509f79fb
  40618c:	3fd34413 	.word	0x3fd34413
  406190:	7ff00000 	.word	0x7ff00000
  406194:	0040bce5 	.word	0x0040bce5
  406198:	0040bcd4 	.word	0x0040bcd4
  40619c:	0040bce0 	.word	0x0040bce0
  4061a0:	00409ef0 	.word	0x00409ef0
  4061a4:	0040bce4 	.word	0x0040bce4

004061a8 <.LVL135>:
  4061a8:	9a07      	ldr	r2, [sp, #28]

004061aa <.LVL136>:
  4061aa:	9b02      	ldr	r3, [sp, #8]
  4061ac:	1ad2      	subs	r2, r2, r3
  4061ae:	425b      	negs	r3, r3
  4061b0:	9305      	str	r3, [sp, #20]
  4061b2:	2300      	movs	r3, #0
  4061b4:	9207      	str	r2, [sp, #28]

004061b6 <.LVL137>:
  4061b6:	930a      	str	r3, [sp, #40]	; 0x28
  4061b8:	e6fc      	b.n	405fb4 <.LVL87>

004061ba <.LVL138>:
  4061ba:	f1c1 0301 	rsb	r3, r1, #1

004061be <.LVL139>:
  4061be:	9307      	str	r3, [sp, #28]

004061c0 <.LVL140>:
  4061c0:	2300      	movs	r3, #0

004061c2 <.LVL141>:
  4061c2:	9306      	str	r3, [sp, #24]

004061c4 <.LVL142>:
  4061c4:	e6eb      	b.n	405f9e <.LVL81>

004061c6 <.LVL143>:
  4061c6:	eeb8 6be6 	vcvt.f64.s32	d6, s13
  4061ca:	eeb4 7b46 	vcmp.f64	d7, d6
  4061ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4061d2:	f43f aec8 	beq.w	405f66 <.LVL73>
  4061d6:	9b02      	ldr	r3, [sp, #8]
  4061d8:	3b01      	subs	r3, #1
  4061da:	9302      	str	r3, [sp, #8]

004061dc <.LVL144>:
  4061dc:	e6c3      	b.n	405f66 <.LVL73>

004061de <.LVL145>:
  4061de:	9b05      	ldr	r3, [sp, #20]
  4061e0:	9f07      	ldr	r7, [sp, #28]
  4061e2:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4061e4:	930d      	str	r3, [sp, #52]	; 0x34

004061e6 <.LVL146>:
  4061e6:	2f00      	cmp	r7, #0
  4061e8:	dd0c      	ble.n	406204 <.LVL151>
  4061ea:	9906      	ldr	r1, [sp, #24]
  4061ec:	2900      	cmp	r1, #0
  4061ee:	460b      	mov	r3, r1
  4061f0:	dd08      	ble.n	406204 <.LVL151>
  4061f2:	42b9      	cmp	r1, r7
  4061f4:	9a07      	ldr	r2, [sp, #28]
  4061f6:	bfa8      	it	ge
  4061f8:	463b      	movge	r3, r7

004061fa <.LVL147>:
  4061fa:	1ad2      	subs	r2, r2, r3
  4061fc:	1aff      	subs	r7, r7, r3

004061fe <.LVL148>:
  4061fe:	1acb      	subs	r3, r1, r3

00406200 <.LVL149>:
  406200:	9207      	str	r2, [sp, #28]

00406202 <.LVL150>:
  406202:	9306      	str	r3, [sp, #24]

00406204 <.LVL151>:
  406204:	9b05      	ldr	r3, [sp, #20]
  406206:	b1eb      	cbz	r3, 406244 <.LVL162>
  406208:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40620a:	2b00      	cmp	r3, #0
  40620c:	f000 8273 	beq.w	4066f6 <.LVL308>
  406210:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  406212:	2b00      	cmp	r3, #0
  406214:	dd11      	ble.n	40623a <.LVL160>
  406216:	461a      	mov	r2, r3
  406218:	4629      	mov	r1, r5
  40621a:	4620      	mov	r0, r4

0040621c <.LVL152>:
  40621c:	f004 fa40 	bl	40a6a0 <__pow5mult>

00406220 <.LVL153>:
  406220:	4642      	mov	r2, r8
  406222:	4601      	mov	r1, r0
  406224:	4605      	mov	r5, r0

00406226 <.LVL154>:
  406226:	4620      	mov	r0, r4

00406228 <.LVL155>:
  406228:	f003 f890 	bl	40934c <.LBE11>

0040622c <.LVL156>:
  40622c:	4641      	mov	r1, r8
  40622e:	900e      	str	r0, [sp, #56]	; 0x38

00406230 <.LVL157>:
  406230:	4620      	mov	r0, r4

00406232 <.LVL158>:
  406232:	f005 fd59 	bl	40bce8 <_Bfree>

00406236 <.LVL159>:
  406236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  406238:	4698      	mov	r8, r3

0040623a <.LVL160>:
  40623a:	9b05      	ldr	r3, [sp, #20]
  40623c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40623e:	1a9a      	subs	r2, r3, r2

00406240 <.LVL161>:
  406240:	f040 825a 	bne.w	4066f8 <.LVL308+0x2>

00406244 <.LVL162>:
  406244:	2101      	movs	r1, #1
  406246:	4620      	mov	r0, r4

00406248 <.LVL163>:
  406248:	f005 fd58 	bl	40bcfc <__i2b>

0040624c <.LVL164>:
  40624c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40624e:	9005      	str	r0, [sp, #20]

00406250 <.LVL165>:
  406250:	2b00      	cmp	r3, #0
  406252:	dd1f      	ble.n	406294 <.LVL174>
  406254:	4601      	mov	r1, r0
  406256:	461a      	mov	r2, r3
  406258:	4620      	mov	r0, r4

0040625a <.LVL166>:
  40625a:	f004 fa21 	bl	40a6a0 <__pow5mult>

0040625e <.LVL167>:
  40625e:	9b01      	ldr	r3, [sp, #4]
  406260:	9005      	str	r0, [sp, #20]

00406262 <.LVL168>:
  406262:	2b01      	cmp	r3, #1
  406264:	f340 820f 	ble.w	406686 <.LVL293>
  406268:	2300      	movs	r3, #0
  40626a:	930d      	str	r3, [sp, #52]	; 0x34

0040626c <.LVL169>:
  40626c:	9a05      	ldr	r2, [sp, #20]
  40626e:	6913      	ldr	r3, [r2, #16]
  406270:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  406274:	6918      	ldr	r0, [r3, #16]
  406276:	f005 f977 	bl	40b568 <.LFE17>

0040627a <.LVL170>:
  40627a:	f1c0 0020 	rsb	r0, r0, #32
  40627e:	e013      	b.n	4062a8 <.LVL175+0x8>

00406280 <.LVL171>:
  406280:	f1c3 0320 	rsb	r3, r3, #32

00406284 <.LVL172>:
  406284:	fa0a f303 	lsl.w	r3, sl, r3
  406288:	ee07 3a90 	vmov	s15, r3
  40628c:	e6b8      	b.n	406000 <.LVL97>

0040628e <.LVL173>:
  40628e:	2300      	movs	r3, #0
  406290:	930b      	str	r3, [sp, #44]	; 0x2c
  406292:	e67d      	b.n	405f90 <.LVL77>

00406294 <.LVL174>:
  406294:	9b01      	ldr	r3, [sp, #4]
  406296:	2b01      	cmp	r3, #1
  406298:	f340 823e 	ble.w	406718 <.LVL314>
  40629c:	2300      	movs	r3, #0
  40629e:	930d      	str	r3, [sp, #52]	; 0x34

004062a0 <.LVL175>:
  4062a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4062a2:	2001      	movs	r0, #1
  4062a4:	2b00      	cmp	r3, #0
  4062a6:	d1e1      	bne.n	40626c <.LVL169>
  4062a8:	9a06      	ldr	r2, [sp, #24]
  4062aa:	4410      	add	r0, r2

004062ac <.LVL176>:
  4062ac:	f010 001f 	ands.w	r0, r0, #31

004062b0 <.LVL177>:
  4062b0:	f000 809e 	beq.w	4063f0 <.LVL217>
  4062b4:	f1c0 0320 	rsb	r3, r0, #32

004062b8 <.LVL178>:
  4062b8:	2b04      	cmp	r3, #4
  4062ba:	f340 83d4 	ble.w	406a66 <.LVL446>
  4062be:	9b07      	ldr	r3, [sp, #28]

004062c0 <.LVL179>:
  4062c0:	f1c0 001c 	rsb	r0, r0, #28

004062c4 <.LVL180>:
  4062c4:	4403      	add	r3, r0
  4062c6:	9307      	str	r3, [sp, #28]

004062c8 <.LVL181>:
  4062c8:	4613      	mov	r3, r2

004062ca <.LVL182>:
  4062ca:	4403      	add	r3, r0
  4062cc:	4407      	add	r7, r0
  4062ce:	9306      	str	r3, [sp, #24]

004062d0 <.LVL184>:
  4062d0:	9b07      	ldr	r3, [sp, #28]
  4062d2:	2b00      	cmp	r3, #0
  4062d4:	dd05      	ble.n	4062e2 <.LVL185+0x2>
  4062d6:	4641      	mov	r1, r8
  4062d8:	461a      	mov	r2, r3
  4062da:	4620      	mov	r0, r4
  4062dc:	f004 f89a 	bl	40a414 <.LFE19>

004062e0 <.LVL185>:
  4062e0:	4680      	mov	r8, r0
  4062e2:	9b06      	ldr	r3, [sp, #24]
  4062e4:	2b00      	cmp	r3, #0
  4062e6:	dd05      	ble.n	4062f4 <.LVL187+0x2>
  4062e8:	461a      	mov	r2, r3
  4062ea:	9905      	ldr	r1, [sp, #20]
  4062ec:	4620      	mov	r0, r4
  4062ee:	f004 f891 	bl	40a414 <.LFE19>

004062f2 <.LVL187>:
  4062f2:	9005      	str	r0, [sp, #20]
  4062f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4062f6:	2b00      	cmp	r3, #0
  4062f8:	f040 8083 	bne.w	406402 <.LVL223>
  4062fc:	2e00      	cmp	r6, #0
  4062fe:	f340 821e 	ble.w	40673e <.LVL322>
  406302:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406304:	2b00      	cmp	r3, #0
  406306:	f000 8096 	beq.w	406436 <.LVL230>

0040630a <.LVL189>:
  40630a:	2f00      	cmp	r7, #0
  40630c:	dd05      	ble.n	40631a <.LVL191>
  40630e:	4629      	mov	r1, r5
  406310:	463a      	mov	r2, r7
  406312:	4620      	mov	r0, r4
  406314:	f004 f87e 	bl	40a414 <.LFE19>

00406318 <.LVL190>:
  406318:	4605      	mov	r5, r0

0040631a <.LVL191>:
  40631a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40631c:	2b00      	cmp	r3, #0
  40631e:	f040 82ce 	bne.w	4068be <.LVL378>
  406322:	462f      	mov	r7, r5

00406324 <.LVL192>:
  406324:	9b08      	ldr	r3, [sp, #32]
  406326:	3e01      	subs	r6, #1
  406328:	199a      	adds	r2, r3, r6
  40632a:	9209      	str	r2, [sp, #36]	; 0x24
  40632c:	f00a 0201 	and.w	r2, sl, #1
  406330:	920a      	str	r2, [sp, #40]	; 0x28

00406332 <.LVL193>:
  406332:	461e      	mov	r6, r3

00406334 <.LVL194>:
  406334:	f8dd b014 	ldr.w	fp, [sp, #20]
  406338:	4640      	mov	r0, r8
  40633a:	4659      	mov	r1, fp
  40633c:	f002 fee0 	bl	409100 <L0>

00406340 <.LVL195>:
  406340:	4629      	mov	r1, r5
  406342:	4682      	mov	sl, r0

00406344 <.LVL196>:
  406344:	4640      	mov	r0, r8
  406346:	f005 fa1b 	bl	40b780 <.LBE18>

0040634a <.LVL197>:
  40634a:	463a      	mov	r2, r7
  40634c:	4659      	mov	r1, fp
  40634e:	4681      	mov	r9, r0
  406350:	4620      	mov	r0, r4
  406352:	f003 f919 	bl	409588 <.LFE169>

00406356 <.LVL198>:
  406356:	68c3      	ldr	r3, [r0, #12]
  406358:	4683      	mov	fp, r0
  40635a:	f10a 0230 	add.w	r2, sl, #48	; 0x30

0040635e <.LVL199>:
  40635e:	2b00      	cmp	r3, #0
  406360:	f040 81e5 	bne.w	40672e <.LVL318>
  406364:	4601      	mov	r1, r0
  406366:	4640      	mov	r0, r8

00406368 <.LVL200>:
  406368:	9207      	str	r2, [sp, #28]
  40636a:	f005 fa09 	bl	40b780 <.LBE18>

0040636e <.LVL201>:
  40636e:	4659      	mov	r1, fp
  406370:	9006      	str	r0, [sp, #24]

00406372 <.LVL202>:
  406372:	4620      	mov	r0, r4

00406374 <.LVL203>:
  406374:	f005 fcb8 	bl	40bce8 <_Bfree>

00406378 <.LVL204>:
  406378:	9b06      	ldr	r3, [sp, #24]
  40637a:	9a07      	ldr	r2, [sp, #28]
  40637c:	b933      	cbnz	r3, 40638c <.LVL205>
  40637e:	9901      	ldr	r1, [sp, #4]
  406380:	b921      	cbnz	r1, 40638c <.LVL205>
  406382:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406384:	2b00      	cmp	r3, #0
  406386:	f000 8343 	beq.w	406a10 <.LVL432>
  40638a:	9b01      	ldr	r3, [sp, #4]

0040638c <.LVL205>:
  40638c:	f1b9 0f00 	cmp.w	r9, #0
  406390:	f2c0 823b 	blt.w	40680a <.LVL352>
  406394:	d105      	bne.n	4063a2 <.LVL205+0x16>
  406396:	9901      	ldr	r1, [sp, #4]
  406398:	b919      	cbnz	r1, 4063a2 <.LVL205+0x16>
  40639a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40639c:	2900      	cmp	r1, #0
  40639e:	f000 8234 	beq.w	40680a <.LVL352>
  4063a2:	2b00      	cmp	r3, #0
  4063a4:	f300 829f 	bgt.w	4068e6 <.LVL385>
  4063a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4063aa:	7032      	strb	r2, [r6, #0]
  4063ac:	f106 0901 	add.w	r9, r6, #1

004063b0 <.LVL206>:
  4063b0:	429e      	cmp	r6, r3
  4063b2:	46cb      	mov	fp, r9

004063b4 <.LVL207>:
  4063b4:	f000 82a2 	beq.w	4068fc <.LVL390>
  4063b8:	4641      	mov	r1, r8
  4063ba:	2300      	movs	r3, #0
  4063bc:	220a      	movs	r2, #10
  4063be:	4620      	mov	r0, r4
  4063c0:	f004 fbb4 	bl	40ab2c <.LFE159>

004063c4 <.LVL208>:
  4063c4:	42bd      	cmp	r5, r7
  4063c6:	4680      	mov	r8, r0

004063c8 <.LVL209>:
  4063c8:	4629      	mov	r1, r5
  4063ca:	f04f 0300 	mov.w	r3, #0
  4063ce:	f04f 020a 	mov.w	r2, #10
  4063d2:	4620      	mov	r0, r4

004063d4 <.LVL210>:
  4063d4:	f000 81a5 	beq.w	406722 <.LVL315>

004063d8 <.LVL211>:
  4063d8:	f004 fba8 	bl	40ab2c <.LFE159>

004063dc <.LVL212>:
  4063dc:	4639      	mov	r1, r7
  4063de:	4605      	mov	r5, r0

004063e0 <.LVL213>:
  4063e0:	2300      	movs	r3, #0
  4063e2:	220a      	movs	r2, #10
  4063e4:	4620      	mov	r0, r4

004063e6 <.LVL214>:
  4063e6:	f004 fba1 	bl	40ab2c <.LFE159>

004063ea <.LVL215>:
  4063ea:	464e      	mov	r6, r9
  4063ec:	4607      	mov	r7, r0

004063ee <.LVL216>:
  4063ee:	e7a1      	b.n	406334 <.LVL194>

004063f0 <.LVL217>:
  4063f0:	201c      	movs	r0, #28

004063f2 <.LVL218>:
  4063f2:	9b07      	ldr	r3, [sp, #28]
  4063f4:	4403      	add	r3, r0
  4063f6:	9307      	str	r3, [sp, #28]

004063f8 <.LVL219>:
  4063f8:	9b06      	ldr	r3, [sp, #24]

004063fa <.LVL220>:
  4063fa:	4403      	add	r3, r0
  4063fc:	4407      	add	r7, r0
  4063fe:	9306      	str	r3, [sp, #24]

00406400 <.LVL222>:
  406400:	e766      	b.n	4062d0 <.LVL184>

00406402 <.LVL223>:
  406402:	9905      	ldr	r1, [sp, #20]
  406404:	4640      	mov	r0, r8
  406406:	f005 f9bb 	bl	40b780 <.LBE18>

0040640a <.LVL224>:
  40640a:	2800      	cmp	r0, #0
  40640c:	f6bf af76 	bge.w	4062fc <.LVL187+0xa>
  406410:	9e02      	ldr	r6, [sp, #8]

00406412 <.LVL225>:
  406412:	4641      	mov	r1, r8
  406414:	2300      	movs	r3, #0
  406416:	220a      	movs	r2, #10
  406418:	4620      	mov	r0, r4
  40641a:	3e01      	subs	r6, #1
  40641c:	9602      	str	r6, [sp, #8]

0040641e <.LVL226>:
  40641e:	f004 fb85 	bl	40ab2c <.LFE159>

00406422 <.LVL227>:
  406422:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406424:	4680      	mov	r8, r0

00406426 <.LVL228>:
  406426:	2b00      	cmp	r3, #0
  406428:	f040 8302 	bne.w	406a30 <.LVL436>

0040642c <.LVL229>:
  40642c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40642e:	2b00      	cmp	r3, #0
  406430:	f340 830a 	ble.w	406a48 <.LVL440>
  406434:	461e      	mov	r6, r3

00406436 <.LVL230>:
  406436:	f8dd a020 	ldr.w	sl, [sp, #32]

0040643a <.LVL231>:
  40643a:	f8dd b014 	ldr.w	fp, [sp, #20]
  40643e:	4657      	mov	r7, sl

00406440 <.LVL232>:
  406440:	e002      	b.n	406448 <.LVL235>

00406442 <.LVL233>:
  406442:	f004 fb73 	bl	40ab2c <.LFE159>

00406446 <.LVL234>:
  406446:	4680      	mov	r8, r0

00406448 <.LVL235>:
  406448:	4659      	mov	r1, fp
  40644a:	4640      	mov	r0, r8
  40644c:	f002 fe58 	bl	409100 <L0>

00406450 <.LVL236>:
  406450:	f100 0930 	add.w	r9, r0, #48	; 0x30

00406454 <.LVL237>:
  406454:	f807 9b01 	strb.w	r9, [r7], #1

00406458 <.LVL238>:
  406458:	eba7 030a 	sub.w	r3, r7, sl
  40645c:	42b3      	cmp	r3, r6
  40645e:	f04f 020a 	mov.w	r2, #10
  406462:	f04f 0300 	mov.w	r3, #0
  406466:	4641      	mov	r1, r8
  406468:	4620      	mov	r0, r4
  40646a:	dbea      	blt.n	406442 <.LVL233>

0040646c <.LVL239>:
  40646c:	9b08      	ldr	r3, [sp, #32]
  40646e:	2e01      	cmp	r6, #1
  406470:	bfac      	ite	ge
  406472:	199b      	addge	r3, r3, r6
  406474:	3301      	addlt	r3, #1
  406476:	469b      	mov	fp, r3
  406478:	f04f 0a00 	mov.w	sl, #0

0040647c <.LVL240>:
  40647c:	4641      	mov	r1, r8
  40647e:	2201      	movs	r2, #1
  406480:	4620      	mov	r0, r4
  406482:	f003 ffc7 	bl	40a414 <.LFE19>

00406486 <.LVL241>:
  406486:	9905      	ldr	r1, [sp, #20]
  406488:	4680      	mov	r8, r0

0040648a <.LVL242>:
  40648a:	f005 f979 	bl	40b780 <.LBE18>

0040648e <.LVL243>:
  40648e:	2800      	cmp	r0, #0
  406490:	f340 81d7 	ble.w	406842 <.LVL362>
  406494:	f81b 2c01 	ldrb.w	r2, [fp, #-1]

00406498 <.L142>:
  406498:	9908      	ldr	r1, [sp, #32]
  40649a:	f10b 33ff 	add.w	r3, fp, #4294967295
  40649e:	e004      	b.n	4064aa <.LVL246>

004064a0 <.LVL245>:
  4064a0:	428b      	cmp	r3, r1
  4064a2:	f000 8168 	beq.w	406776 <.LVL331>
  4064a6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!

004064aa <.LVL246>:
  4064aa:	2a39      	cmp	r2, #57	; 0x39
  4064ac:	f103 0b01 	add.w	fp, r3, #1

004064b0 <.LVL247>:
  4064b0:	d0f6      	beq.n	4064a0 <.LVL245>

004064b2 <.LVL248>:
  4064b2:	3201      	adds	r2, #1
  4064b4:	701a      	strb	r2, [r3, #0]

004064b6 <.L135>:
  4064b6:	9905      	ldr	r1, [sp, #20]
  4064b8:	4620      	mov	r0, r4
  4064ba:	f005 fc15 	bl	40bce8 <_Bfree>

004064be <.LVL250>:
  4064be:	2d00      	cmp	r5, #0
  4064c0:	f43f ae22 	beq.w	406108 <.L76>
  4064c4:	f1ba 0f00 	cmp.w	sl, #0
  4064c8:	d005      	beq.n	4064d6 <.LVL251>
  4064ca:	45aa      	cmp	sl, r5
  4064cc:	d003      	beq.n	4064d6 <.LVL251>
  4064ce:	4651      	mov	r1, sl
  4064d0:	4620      	mov	r0, r4
  4064d2:	f005 fc09 	bl	40bce8 <_Bfree>

004064d6 <.LVL251>:
  4064d6:	4629      	mov	r1, r5
  4064d8:	4620      	mov	r0, r4
  4064da:	f005 fc05 	bl	40bce8 <_Bfree>

004064de <.LVL252>:
  4064de:	e613      	b.n	406108 <.L76>

004064e0 <.LVL253>:
  4064e0:	2300      	movs	r3, #0
  4064e2:	9309      	str	r3, [sp, #36]	; 0x24

004064e4 <.LVL254>:
  4064e4:	9b02      	ldr	r3, [sp, #8]
  4064e6:	444b      	add	r3, r9
  4064e8:	1c5e      	adds	r6, r3, #1

004064ea <.LVL255>:
  4064ea:	2e01      	cmp	r6, #1
  4064ec:	4637      	mov	r7, r6
  4064ee:	930c      	str	r3, [sp, #48]	; 0x30

004064f0 <.LVL256>:
  4064f0:	bfb8      	it	lt
  4064f2:	2701      	movlt	r7, #1
  4064f4:	960e      	str	r6, [sp, #56]	; 0x38

004064f6 <.LVL257>:
  4064f6:	2100      	movs	r1, #0
  4064f8:	2f17      	cmp	r7, #23
  4064fa:	6461      	str	r1, [r4, #68]	; 0x44
  4064fc:	d90a      	bls.n	406514 <.LVL260>
  4064fe:	2201      	movs	r2, #1
  406500:	2304      	movs	r3, #4

00406502 <.LVL258>:
  406502:	005b      	lsls	r3, r3, #1
  406504:	f103 0014 	add.w	r0, r3, #20
  406508:	4287      	cmp	r7, r0
  40650a:	4611      	mov	r1, r2
  40650c:	f102 0201 	add.w	r2, r2, #1
  406510:	d2f7      	bcs.n	406502 <.LVL258>
  406512:	6461      	str	r1, [r4, #68]	; 0x44

00406514 <.LVL260>:
  406514:	4620      	mov	r0, r4
  406516:	f004 feef 	bl	40b2f8 <.LFE2>

0040651a <.LVL261>:
  40651a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40651c:	9008      	str	r0, [sp, #32]
  40651e:	2b0e      	cmp	r3, #14
  406520:	6420      	str	r0, [r4, #64]	; 0x40

00406522 <.LVL262>:
  406522:	f63f ad88 	bhi.w	406036 <.LVL104>

00406526 <.LVL263>:
  406526:	2d00      	cmp	r5, #0
  406528:	f43f ad85 	beq.w	406036 <.LVL104>

0040652c <.LVL264>:
  40652c:	9802      	ldr	r0, [sp, #8]
  40652e:	2800      	cmp	r0, #0
  406530:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38

00406534 <.LVL265>:
  406534:	f340 819a 	ble.w	40686c <.LVL368>
  406538:	4ac8      	ldr	r2, [pc, #800]	; (40685c <.LVL365+0x4>)
  40653a:	f000 030f 	and.w	r3, r0, #15
  40653e:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
  406542:	1103      	asrs	r3, r0, #4
  406544:	06df      	lsls	r7, r3, #27
  406546:	ed92 7b00 	vldr	d7, [r2]

0040654a <.LVL266>:
  40654a:	f140 814d 	bpl.w	4067e8 <.LVL348>
  40654e:	4ac4      	ldr	r2, [pc, #784]	; (406860 <.LVL365+0x8>)
  406550:	ed92 6b08 	vldr	d6, [r2, #32]
  406554:	ec4b ab14 	vmov	d4, sl, fp

00406558 <.LVL267>:
  406558:	f003 030f 	and.w	r3, r3, #15
  40655c:	2103      	movs	r1, #3
  40655e:	ee84 5b06 	vdiv.f64	d5, d4, d6

00406562 <.LVL269>:
  406562:	b15b      	cbz	r3, 40657c <.LVL273+0x6>
  406564:	4abe      	ldr	r2, [pc, #760]	; (406860 <.LVL365+0x8>)

00406566 <.LVL270>:
  406566:	07dd      	lsls	r5, r3, #31
  406568:	d504      	bpl.n	406574 <.LVL272>
  40656a:	ed92 6b00 	vldr	d6, [r2]
  40656e:	3101      	adds	r1, #1
  406570:	ee27 7b06 	vmul.f64	d7, d7, d6

00406574 <.LVL272>:
  406574:	105b      	asrs	r3, r3, #1

00406576 <.LVL273>:
  406576:	f102 0208 	add.w	r2, r2, #8
  40657a:	d1f4      	bne.n	406566 <.LVL270>
  40657c:	ee85 6b07 	vdiv.f64	d6, d5, d7

00406580 <.LVL274>:
  406580:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  406582:	b13b      	cbz	r3, 406594 <.LVL275>
  406584:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
  406588:	eeb4 6bc7 	vcmpe.f64	d6, d7
  40658c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406590:	f100 8206 	bmi.w	4069a0 <.LVL416>

00406594 <.LVL275>:
  406594:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
  406598:	ee07 1a90 	vmov	s15, r1
  40659c:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  4065a0:	eea7 5b06 	vfma.f64	d5, d7, d6
  4065a4:	ec51 0b15 	vmov	r0, r1, d5
  4065a8:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000

004065ac <.LVL276>:
  4065ac:	2e00      	cmp	r6, #0
  4065ae:	f000 80f8 	beq.w	4067a2 <.LVL336>
  4065b2:	9a02      	ldr	r2, [sp, #8]
  4065b4:	4635      	mov	r5, r6

004065b6 <.LVL277>:
  4065b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4065b8:	2b00      	cmp	r3, #0
  4065ba:	f000 81a7 	beq.w	40690c <.LVL396>
  4065be:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
  4065c2:	4ba6      	ldr	r3, [pc, #664]	; (40685c <.LVL365+0x4>)
  4065c4:	9f08      	ldr	r7, [sp, #32]
  4065c6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4065ca:	ed13 4b02 	vldr	d4, [r3, #-8]
  4065ce:	eebd 7bc6 	vcvt.s32.f64	s14, d6
  4065d2:	ee83 5b04 	vdiv.f64	d5, d3, d4
  4065d6:	ee17 3a10 	vmov	r3, s14

004065da <.LVL278>:
  4065da:	ec41 0b14 	vmov	d4, r0, r1
  4065de:	3330      	adds	r3, #48	; 0x30
  4065e0:	b2db      	uxtb	r3, r3
  4065e2:	ee35 5b44 	vsub.f64	d5, d5, d4

004065e6 <.LVL279>:
  4065e6:	eeb8 7bc7 	vcvt.f64.s32	d7, s14

004065ea <.LVL280>:
  4065ea:	ee36 7b47 	vsub.f64	d7, d6, d7
  4065ee:	eeb4 5bc7 	vcmpe.f64	d5, d7
  4065f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4065f6:	703b      	strb	r3, [r7, #0]
  4065f8:	f107 0b01 	add.w	fp, r7, #1

004065fc <.LVL281>:
  4065fc:	dc31      	bgt.n	406662 <.LVL288+0xe>
  4065fe:	eeb7 3b00 	vmov.f64	d3, #112	; 0x3f800000  1.0
  406602:	ee33 6b47 	vsub.f64	d6, d3, d7

00406606 <.LVL282>:
  406606:	eeb4 5bc6 	vcmpe.f64	d5, d6
  40660a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40660e:	f300 81fa 	bgt.w	406a06 <.LVL428>

00406612 <.LVL283>:
  406612:	2d01      	cmp	r5, #1
  406614:	f000 8126 	beq.w	406864 <.LDL1>
  406618:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
  40661c:	9b08      	ldr	r3, [sp, #32]
  40661e:	1959      	adds	r1, r3, r5
  406620:	e00a      	b.n	406638 <.LVL285>

00406622 <.LVL284>:
  406622:	ee33 6b47 	vsub.f64	d6, d3, d7
  406626:	eeb4 6bc5 	vcmpe.f64	d6, d5
  40662a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40662e:	f100 81ea 	bmi.w	406a06 <.LVL428>
  406632:	458b      	cmp	fp, r1
  406634:	f000 8116 	beq.w	406864 <.LDL1>

00406638 <.LVL285>:
  406638:	ee27 7b04 	vmul.f64	d7, d7, d4
  40663c:	ee25 5b04 	vmul.f64	d5, d5, d4
  406640:	eebd 6bc7 	vcvt.s32.f64	s12, d7

00406644 <.LVL286>:
  406644:	ee16 3a10 	vmov	r3, s12
  406648:	3330      	adds	r3, #48	; 0x30
  40664a:	b2db      	uxtb	r3, r3
  40664c:	eeb8 6bc6 	vcvt.f64.s32	d6, s12

00406650 <.LVL287>:
  406650:	ee37 7b46 	vsub.f64	d7, d7, d6

00406654 <.LVL288>:
  406654:	eeb4 7bc5 	vcmpe.f64	d7, d5
  406658:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40665c:	f80b 3b01 	strb.w	r3, [fp], #1
  406660:	d5df      	bpl.n	406622 <.LVL284>
  406662:	9202      	str	r2, [sp, #8]

00406664 <.LVL289>:
  406664:	e550      	b.n	406108 <.L76>

00406666 <.LVL290>:
  406666:	2300      	movs	r3, #0
  406668:	9309      	str	r3, [sp, #36]	; 0x24

0040666a <.LVL291>:
  40666a:	f1b9 0f00 	cmp.w	r9, #0
  40666e:	f340 80bf 	ble.w	4067f0 <.LVL349>
  406672:	464f      	mov	r7, r9
  406674:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  406678:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
  40667c:	464e      	mov	r6, r9
  40667e:	e73a      	b.n	4064f6 <.LVL257>

00406680 <.LVL292>:
  406680:	2301      	movs	r3, #1
  406682:	9309      	str	r3, [sp, #36]	; 0x24
  406684:	e7f1      	b.n	40666a <.LVL291>

00406686 <.LVL293>:
  406686:	f1ba 0f00 	cmp.w	sl, #0
  40668a:	f47f aded 	bne.w	406268 <.LVL168+0x6>

0040668e <.LVL294>:
  40668e:	f3cb 0313 	ubfx	r3, fp, #0, #20
  406692:	2b00      	cmp	r3, #0
  406694:	f47f ae02 	bne.w	40629c <.LVL174+0x8>
  406698:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
  40669c:	0d1b      	lsrs	r3, r3, #20
  40669e:	051b      	lsls	r3, r3, #20
  4066a0:	2b00      	cmp	r3, #0
  4066a2:	f000 81b3 	beq.w	406a0c <.LVL430>
  4066a6:	9b07      	ldr	r3, [sp, #28]
  4066a8:	3301      	adds	r3, #1
  4066aa:	9307      	str	r3, [sp, #28]

004066ac <.LVL295>:
  4066ac:	9b06      	ldr	r3, [sp, #24]

004066ae <.LVL296>:
  4066ae:	3301      	adds	r3, #1
  4066b0:	9306      	str	r3, [sp, #24]

004066b2 <.LVL297>:
  4066b2:	2301      	movs	r3, #1

004066b4 <.LVL298>:
  4066b4:	930d      	str	r3, [sp, #52]	; 0x34

004066b6 <.LVL299>:
  4066b6:	e5f3      	b.n	4062a0 <.LVL175>

004066b8 <.LVL300>:
  4066b8:	2e00      	cmp	r6, #0
  4066ba:	f73f accb 	bgt.w	406054 <.LVL106>

004066be <.LVL301>:
  4066be:	f040 8083 	bne.w	4067c8 <.LVL338>
  4066c2:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
  4066c6:	ee24 4b07 	vmul.f64	d4, d4, d7

004066ca <.LVL302>:
  4066ca:	ec4b ab17 	vmov	d7, sl, fp
  4066ce:	eeb4 4bc7 	vcmpe.f64	d4, d7
  4066d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4066d6:	4635      	mov	r5, r6
  4066d8:	9605      	str	r6, [sp, #20]

004066da <.LVL303>:
  4066da:	db43      	blt.n	406764 <.L73>

004066dc <.L74>:
  4066dc:	ea6f 0309 	mvn.w	r3, r9
  4066e0:	f8dd b020 	ldr.w	fp, [sp, #32]
  4066e4:	9302      	str	r3, [sp, #8]

004066e6 <.LVL305>:
  4066e6:	9905      	ldr	r1, [sp, #20]
  4066e8:	4620      	mov	r0, r4

004066ea <.LVL306>:
  4066ea:	f005 fafd 	bl	40bce8 <_Bfree>

004066ee <.LVL307>:
  4066ee:	2d00      	cmp	r5, #0
  4066f0:	f43f ad0a 	beq.w	406108 <.L76>
  4066f4:	e6ef      	b.n	4064d6 <.LVL251>

004066f6 <.LVL308>:
  4066f6:	9a05      	ldr	r2, [sp, #20]
  4066f8:	4641      	mov	r1, r8
  4066fa:	4620      	mov	r0, r4

004066fc <.LVL309>:
  4066fc:	f003 ffd0 	bl	40a6a0 <__pow5mult>

00406700 <.LVL310>:
  406700:	4680      	mov	r8, r0

00406702 <.LVL311>:
  406702:	e59f      	b.n	406244 <.LVL162>

00406704 <.LVL312>:
  406704:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  406706:	2a00      	cmp	r2, #0
  406708:	f000 813e 	beq.w	406988 <.LVL413>
  40670c:	9a05      	ldr	r2, [sp, #20]
  40670e:	920d      	str	r2, [sp, #52]	; 0x34

00406710 <.LVL313>:
  406710:	f203 4333 	addw	r3, r3, #1075	; 0x433
  406714:	9f07      	ldr	r7, [sp, #28]
  406716:	e51f      	b.n	406158 <.LVL127>

00406718 <.LVL314>:
  406718:	f1ba 0f00 	cmp.w	sl, #0
  40671c:	f47f adbe 	bne.w	40629c <.LVL174+0x8>
  406720:	e7b5      	b.n	40668e <.LVL294>

00406722 <.LVL315>:
  406722:	f004 fa03 	bl	40ab2c <.LFE159>

00406726 <.LVL316>:
  406726:	464e      	mov	r6, r9
  406728:	4605      	mov	r5, r0

0040672a <.LVL317>:
  40672a:	4607      	mov	r7, r0
  40672c:	e602      	b.n	406334 <.LVL194>

0040672e <.LVL318>:
  40672e:	4601      	mov	r1, r0
  406730:	4620      	mov	r0, r4

00406732 <.LVL319>:
  406732:	9206      	str	r2, [sp, #24]

00406734 <.LVL320>:
  406734:	f005 fad8 	bl	40bce8 <_Bfree>

00406738 <.LVL321>:
  406738:	2301      	movs	r3, #1
  40673a:	9a06      	ldr	r2, [sp, #24]
  40673c:	e626      	b.n	40638c <.LVL205>

0040673e <.LVL322>:
  40673e:	9b01      	ldr	r3, [sp, #4]
  406740:	2b02      	cmp	r3, #2
  406742:	f77f adde 	ble.w	406302 <.LVL187+0x10>

00406746 <.LVL323>:
  406746:	2e00      	cmp	r6, #0
  406748:	d1c8      	bne.n	4066dc <.L74>
  40674a:	4633      	mov	r3, r6
  40674c:	9905      	ldr	r1, [sp, #20]
  40674e:	2205      	movs	r2, #5
  406750:	4620      	mov	r0, r4
  406752:	f004 f9eb 	bl	40ab2c <.LFE159>

00406756 <.LVL324>:
  406756:	4601      	mov	r1, r0
  406758:	9005      	str	r0, [sp, #20]

0040675a <.LVL325>:
  40675a:	4640      	mov	r0, r8

0040675c <.LVL326>:
  40675c:	f005 f810 	bl	40b780 <.LBE18>

00406760 <.LVL327>:
  406760:	2800      	cmp	r0, #0
  406762:	ddbb      	ble.n	4066dc <.L74>

00406764 <.L73>:
  406764:	9a02      	ldr	r2, [sp, #8]
  406766:	9908      	ldr	r1, [sp, #32]
  406768:	2331      	movs	r3, #49	; 0x31
  40676a:	3201      	adds	r2, #1
  40676c:	9202      	str	r2, [sp, #8]

0040676e <.LVL329>:
  40676e:	700b      	strb	r3, [r1, #0]
  406770:	f101 0b01 	add.w	fp, r1, #1

00406774 <.LVL330>:
  406774:	e7b7      	b.n	4066e6 <.LVL305>

00406776 <.LVL331>:
  406776:	9a02      	ldr	r2, [sp, #8]
  406778:	3201      	adds	r2, #1
  40677a:	9202      	str	r2, [sp, #8]

0040677c <.LVL332>:
  40677c:	9a08      	ldr	r2, [sp, #32]

0040677e <.LVL333>:
  40677e:	2331      	movs	r3, #49	; 0x31
  406780:	7013      	strb	r3, [r2, #0]
  406782:	e698      	b.n	4064b6 <.L135>

00406784 <.LVL334>:
  406784:	2301      	movs	r3, #1
  406786:	9309      	str	r3, [sp, #36]	; 0x24
  406788:	e6ac      	b.n	4064e4 <.LVL254>

0040678a <.LVL335>:
  40678a:	ee07 1a90 	vmov	s15, r1
  40678e:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
  406792:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  406796:	eea6 5b07 	vfma.f64	d5, d6, d7
  40679a:	ec51 0b15 	vmov	r0, r1, d5
  40679e:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000

004067a2 <.LVL336>:
  4067a2:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
  4067a6:	ee36 7b47 	vsub.f64	d7, d6, d7

004067aa <.LVL337>:
  4067aa:	ec41 0b16 	vmov	d6, r0, r1
  4067ae:	eeb4 7bc6 	vcmpe.f64	d7, d6
  4067b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4067b6:	f300 80a5 	bgt.w	406904 <.LVL394>
  4067ba:	eeb1 6b46 	vneg.f64	d6, d6
  4067be:	eeb4 7bc6 	vcmpe.f64	d7, d6
  4067c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4067c6:	d54d      	bpl.n	406864 <.LDL1>

004067c8 <.LVL338>:
  4067c8:	2300      	movs	r3, #0
  4067ca:	9305      	str	r3, [sp, #20]

004067cc <.LVL339>:
  4067cc:	461d      	mov	r5, r3
  4067ce:	e785      	b.n	4066dc <.L74>

004067d0 <.LVL340>:
  4067d0:	9808      	ldr	r0, [sp, #32]
  4067d2:	f7ff bb6f 	b.w	405eb4 <.LVL57>

004067d6 <.LVL341>:
  4067d6:	9b05      	ldr	r3, [sp, #20]
  4067d8:	990a      	ldr	r1, [sp, #40]	; 0x28

004067da <.LVL342>:
  4067da:	9205      	str	r2, [sp, #20]

004067dc <.LVL343>:
  4067dc:	1ad3      	subs	r3, r2, r3

004067de <.LVL344>:
  4067de:	4419      	add	r1, r3
  4067e0:	2300      	movs	r3, #0

004067e2 <.LVL345>:
  4067e2:	910a      	str	r1, [sp, #40]	; 0x28

004067e4 <.LVL346>:
  4067e4:	930d      	str	r3, [sp, #52]	; 0x34

004067e6 <.LVL347>:
  4067e6:	e4b2      	b.n	40614e <.LVL126>

004067e8 <.LVL348>:
  4067e8:	ed9d 5b0e 	vldr	d5, [sp, #56]	; 0x38
  4067ec:	2102      	movs	r1, #2
  4067ee:	e6b8      	b.n	406562 <.LVL269>

004067f0 <.LVL349>:
  4067f0:	2100      	movs	r1, #0
  4067f2:	6461      	str	r1, [r4, #68]	; 0x44
  4067f4:	4620      	mov	r0, r4
  4067f6:	f004 fd7f 	bl	40b2f8 <.LFE2>

004067fa <.LVL350>:
  4067fa:	f04f 0901 	mov.w	r9, #1
  4067fe:	9008      	str	r0, [sp, #32]
  406800:	6420      	str	r0, [r4, #64]	; 0x40

00406802 <.LVL351>:
  406802:	464e      	mov	r6, r9
  406804:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
  406808:	e68d      	b.n	406526 <.LVL263>

0040680a <.LVL352>:
  40680a:	2b00      	cmp	r3, #0
  40680c:	4691      	mov	r9, r2

0040680e <.LVL353>:
  40680e:	dd11      	ble.n	406834 <.LVL359>
  406810:	4641      	mov	r1, r8
  406812:	2201      	movs	r2, #1
  406814:	4620      	mov	r0, r4
  406816:	f003 fdfd 	bl	40a414 <.LFE19>

0040681a <.LVL354>:
  40681a:	9905      	ldr	r1, [sp, #20]
  40681c:	4680      	mov	r8, r0

0040681e <.LVL355>:
  40681e:	f004 ffaf 	bl	40b780 <.LBE18>

00406822 <.LVL356>:
  406822:	2800      	cmp	r0, #0
  406824:	f340 80fd 	ble.w	406a22 <.LVL435>

00406828 <.LVL357>:
  406828:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
  40682c:	f000 80d4 	beq.w	4069d8 <.L133>

00406830 <.LVL358>:
  406830:	f10a 0931 	add.w	r9, sl, #49	; 0x31

00406834 <.LVL359>:
  406834:	46aa      	mov	sl, r5
  406836:	f886 9000 	strb.w	r9, [r6]
  40683a:	f106 0b01 	add.w	fp, r6, #1

0040683e <.LVL360>:
  40683e:	463d      	mov	r5, r7

00406840 <.LVL361>:
  406840:	e639      	b.n	4064b6 <.L135>

00406842 <.LVL362>:
  406842:	d104      	bne.n	40684e <.LVL364>
  406844:	f019 0f01 	tst.w	r9, #1
  406848:	d001      	beq.n	40684e <.LVL364>
  40684a:	e623      	b.n	406494 <.LVL243+0x6>

0040684c <.LVL363>:
  40684c:	4693      	mov	fp, r2

0040684e <.LVL364>:
  40684e:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
  406852:	2b30      	cmp	r3, #48	; 0x30
  406854:	f10b 32ff 	add.w	r2, fp, #4294967295

00406858 <.LVL365>:
  406858:	d0f8      	beq.n	40684c <.LVL363>
  40685a:	e62c      	b.n	4064b6 <.L135>
  40685c:	00409ef0 	.word	0x00409ef0
  406860:	0040b9c0 	.word	0x0040b9c0

00406864 <.LDL1>:
  406864:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38

00406868 <.LVL367>:
  406868:	f7ff bbe5 	b.w	406036 <.LVL104>

0040686c <.LVL368>:
  40686c:	f000 8094 	beq.w	406998 <.LVL415>
  406870:	9b02      	ldr	r3, [sp, #8]
  406872:	4a88      	ldr	r2, [pc, #544]	; (406a94 <.LVL451+0x4>)
  406874:	425b      	negs	r3, r3

00406876 <.LVL369>:
  406876:	f003 010f 	and.w	r1, r3, #15
  40687a:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
  40687e:	ed92 6b00 	vldr	d6, [r2]
  406882:	ed9d 7b0e 	vldr	d7, [sp, #56]	; 0x38
  406886:	111b      	asrs	r3, r3, #4

00406888 <.LVL370>:
  406888:	ee27 6b06 	vmul.f64	d6, d7, d6
  40688c:	f000 80e1 	beq.w	406a52 <.LVL442>
  406890:	4a81      	ldr	r2, [pc, #516]	; (406a98 <.LVL451+0x8>)
  406892:	2102      	movs	r1, #2

00406894 <.LVL371>:
  406894:	07d8      	lsls	r0, r3, #31
  406896:	d504      	bpl.n	4068a2 <.LVL373>
  406898:	ed92 7b00 	vldr	d7, [r2]
  40689c:	3101      	adds	r1, #1
  40689e:	ee26 6b07 	vmul.f64	d6, d6, d7

004068a2 <.LVL373>:
  4068a2:	105b      	asrs	r3, r3, #1

004068a4 <.LVL374>:
  4068a4:	f102 0208 	add.w	r2, r2, #8
  4068a8:	d1f4      	bne.n	406894 <.LVL371>
  4068aa:	e669      	b.n	406580 <.LVL274>

004068ac <.LVL375>:
  4068ac:	9908      	ldr	r1, [sp, #32]
  4068ae:	2330      	movs	r3, #48	; 0x30
  4068b0:	700b      	strb	r3, [r1, #0]
  4068b2:	9b02      	ldr	r3, [sp, #8]
  4068b4:	3301      	adds	r3, #1
  4068b6:	9302      	str	r3, [sp, #8]

004068b8 <.LVL376>:
  4068b8:	f81b 3c01 	ldrb.w	r3, [fp, #-1]

004068bc <.LVL377>:
  4068bc:	e422      	b.n	406104 <.LVL120>

004068be <.LVL378>:
  4068be:	6869      	ldr	r1, [r5, #4]
  4068c0:	4620      	mov	r0, r4
  4068c2:	f004 fd19 	bl	40b2f8 <.LFE2>

004068c6 <.LVL379>:
  4068c6:	692b      	ldr	r3, [r5, #16]
  4068c8:	3302      	adds	r3, #2
  4068ca:	4607      	mov	r7, r0

004068cc <.LVL380>:
  4068cc:	009a      	lsls	r2, r3, #2
  4068ce:	f105 010c 	add.w	r1, r5, #12
  4068d2:	300c      	adds	r0, #12

004068d4 <.LVL381>:
  4068d4:	f002 fb7a 	bl	408fcc <.LFE19>

004068d8 <.LVL382>:
  4068d8:	4639      	mov	r1, r7
  4068da:	2201      	movs	r2, #1
  4068dc:	4620      	mov	r0, r4
  4068de:	f003 fd99 	bl	40a414 <.LFE19>

004068e2 <.LVL383>:
  4068e2:	4607      	mov	r7, r0

004068e4 <.LVL384>:
  4068e4:	e51e      	b.n	406324 <.LVL192>

004068e6 <.LVL385>:
  4068e6:	2a39      	cmp	r2, #57	; 0x39
  4068e8:	d076      	beq.n	4069d8 <.L133>
  4068ea:	f102 0901 	add.w	r9, r2, #1

004068ee <.LVL386>:
  4068ee:	46aa      	mov	sl, r5

004068f0 <.LVL387>:
  4068f0:	f886 9000 	strb.w	r9, [r6]
  4068f4:	f106 0b01 	add.w	fp, r6, #1

004068f8 <.LVL388>:
  4068f8:	463d      	mov	r5, r7

004068fa <.LVL389>:
  4068fa:	e5dc      	b.n	4064b6 <.L135>

004068fc <.LVL390>:
  4068fc:	46aa      	mov	sl, r5

004068fe <.LVL391>:
  4068fe:	4691      	mov	r9, r2

00406900 <.LVL392>:
  406900:	463d      	mov	r5, r7

00406902 <.LVL393>:
  406902:	e5bb      	b.n	40647c <.LVL240>

00406904 <.LVL394>:
  406904:	2300      	movs	r3, #0
  406906:	9305      	str	r3, [sp, #20]

00406908 <.LVL395>:
  406908:	461d      	mov	r5, r3
  40690a:	e72b      	b.n	406764 <.L73>

0040690c <.LVL396>:
  40690c:	4b61      	ldr	r3, [pc, #388]	; (406a94 <.LVL451+0x4>)
  40690e:	eebd 7bc6 	vcvt.s32.f64	s14, d6
  406912:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  406916:	ed13 4b02 	vldr	d4, [r3, #-8]
  40691a:	ee17 3a10 	vmov	r3, s14

0040691e <.LVL397>:
  40691e:	ec41 0b15 	vmov	d5, r0, r1
  406922:	9808      	ldr	r0, [sp, #32]

00406924 <.LVL398>:
  406924:	ee24 4b05 	vmul.f64	d4, d4, d5

00406928 <.LVL399>:
  406928:	3330      	adds	r3, #48	; 0x30

0040692a <.LVL400>:
  40692a:	2d01      	cmp	r5, #1
  40692c:	eeb8 7bc7 	vcvt.f64.s32	d7, s14

00406930 <.LVL401>:
  406930:	7003      	strb	r3, [r0, #0]
  406932:	f100 0b01 	add.w	fp, r0, #1

00406936 <.LVL402>:
  406936:	ee36 7b47 	vsub.f64	d7, d6, d7
  40693a:	d012      	beq.n	406962 <.LVL409>
  40693c:	eeb2 5b04 	vmov.f64	d5, #36	; 0x41200000  10.0
  406940:	9b08      	ldr	r3, [sp, #32]

00406942 <.LVL403>:
  406942:	1959      	adds	r1, r3, r5

00406944 <.LVL404>:
  406944:	ee27 7b05 	vmul.f64	d7, d7, d5
  406948:	eebd 6bc7 	vcvt.s32.f64	s12, d7

0040694c <.LVL405>:
  40694c:	ee16 3a10 	vmov	r3, s12
  406950:	3330      	adds	r3, #48	; 0x30
  406952:	f80b 3b01 	strb.w	r3, [fp], #1

00406956 <.LVL406>:
  406956:	458b      	cmp	fp, r1
  406958:	eeb8 6bc6 	vcvt.f64.s32	d6, s12

0040695c <.LVL407>:
  40695c:	ee37 7b46 	vsub.f64	d7, d7, d6

00406960 <.LVL408>:
  406960:	d1f0      	bne.n	406944 <.LVL404>

00406962 <.LVL409>:
  406962:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
  406966:	ee34 5b06 	vadd.f64	d5, d4, d6
  40696a:	eeb4 5bc7 	vcmpe.f64	d5, d7
  40696e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406972:	d538      	bpl.n	4069e6 <.LVL424>
  406974:	9202      	str	r2, [sp, #8]

00406976 <.LVL410>:
  406976:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
  40697a:	f7ff bbb6 	b.w	4060ea <.L77>

0040697e <.LVL411>:
  40697e:	9b07      	ldr	r3, [sp, #28]
  406980:	1b9f      	subs	r7, r3, r6

00406982 <.LVL412>:
  406982:	2300      	movs	r3, #0
  406984:	f7ff bbe8 	b.w	406158 <.LVL127>

00406988 <.LVL413>:
  406988:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40698a:	9a05      	ldr	r2, [sp, #20]
  40698c:	920d      	str	r2, [sp, #52]	; 0x34

0040698e <.LVL414>:
  40698e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  406992:	9f07      	ldr	r7, [sp, #28]
  406994:	f7ff bbe0 	b.w	406158 <.LVL127>

00406998 <.LVL415>:
  406998:	ed9d 6b0e 	vldr	d6, [sp, #56]	; 0x38
  40699c:	2102      	movs	r1, #2
  40699e:	e5ef      	b.n	406580 <.LVL274>

004069a0 <.LVL416>:
  4069a0:	2e00      	cmp	r6, #0
  4069a2:	f43f aef2 	beq.w	40678a <.LVL335>
  4069a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4069a8:	2b00      	cmp	r3, #0
  4069aa:	f77f af5b 	ble.w	406864 <.LDL1>

004069ae <.LVL417>:
  4069ae:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
  4069b2:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
  4069b6:	3101      	adds	r1, #1

004069b8 <.LVL418>:
  4069b8:	ee07 1a90 	vmov	s15, r1
  4069bc:	ee26 6b04 	vmul.f64	d6, d6, d4
  4069c0:	eeb8 7be7 	vcvt.f64.s32	d7, s15
  4069c4:	9a02      	ldr	r2, [sp, #8]
  4069c6:	eea6 5b07 	vfma.f64	d5, d6, d7
  4069ca:	ec51 0b15 	vmov	r0, r1, d5
  4069ce:	3a01      	subs	r2, #1

004069d0 <.LVL419>:
  4069d0:	461d      	mov	r5, r3
  4069d2:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000

004069d6 <.LVL420>:
  4069d6:	e5ee      	b.n	4065b6 <.LVL277>

004069d8 <.L133>:
  4069d8:	2239      	movs	r2, #57	; 0x39
  4069da:	46aa      	mov	sl, r5
  4069dc:	7032      	strb	r2, [r6, #0]
  4069de:	463d      	mov	r5, r7

004069e0 <.LVL422>:
  4069e0:	f106 0b01 	add.w	fp, r6, #1

004069e4 <.LVL423>:
  4069e4:	e558      	b.n	406498 <.L142>

004069e6 <.LVL424>:
  4069e6:	ee36 6b44 	vsub.f64	d6, d6, d4
  4069ea:	eeb4 6bc7 	vcmpe.f64	d6, d7
  4069ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4069f2:	dc01      	bgt.n	4069f8 <.LVL426>
  4069f4:	e736      	b.n	406864 <.LDL1>

004069f6 <.LVL425>:
  4069f6:	468b      	mov	fp, r1

004069f8 <.LVL426>:
  4069f8:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
  4069fc:	2b30      	cmp	r3, #48	; 0x30
  4069fe:	f10b 31ff 	add.w	r1, fp, #4294967295

00406a02 <.LVL427>:
  406a02:	d0f8      	beq.n	4069f6 <.LVL425>
  406a04:	e62d      	b.n	406662 <.LVL288+0xe>

00406a06 <.LVL428>:
  406a06:	9202      	str	r2, [sp, #8]

00406a08 <.LVL429>:
  406a08:	f7ff bb6f 	b.w	4060ea <.L77>

00406a0c <.LVL430>:
  406a0c:	930d      	str	r3, [sp, #52]	; 0x34

00406a0e <.LVL431>:
  406a0e:	e447      	b.n	4062a0 <.LVL175>

00406a10 <.LVL432>:
  406a10:	2a39      	cmp	r2, #57	; 0x39
  406a12:	46cb      	mov	fp, r9

00406a14 <.LVL433>:
  406a14:	4691      	mov	r9, r2

00406a16 <.LVL434>:
  406a16:	d0df      	beq.n	4069d8 <.L133>
  406a18:	f1bb 0f00 	cmp.w	fp, #0
  406a1c:	f73f af08 	bgt.w	406830 <.LVL358>
  406a20:	e708      	b.n	406834 <.LVL359>

00406a22 <.LVL435>:
  406a22:	f47f af07 	bne.w	406834 <.LVL359>
  406a26:	f019 0f01 	tst.w	r9, #1
  406a2a:	f43f af03 	beq.w	406834 <.LVL359>
  406a2e:	e6fb      	b.n	406828 <.LVL357>

00406a30 <.LVL436>:
  406a30:	4629      	mov	r1, r5
  406a32:	2300      	movs	r3, #0
  406a34:	220a      	movs	r2, #10
  406a36:	4620      	mov	r0, r4

00406a38 <.LVL437>:
  406a38:	f004 f878 	bl	40ab2c <.LFE159>

00406a3c <.LVL438>:
  406a3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  406a3e:	2b00      	cmp	r3, #0
  406a40:	4605      	mov	r5, r0

00406a42 <.LVL439>:
  406a42:	dd08      	ble.n	406a56 <.LVL443>
  406a44:	461e      	mov	r6, r3
  406a46:	e460      	b.n	40630a <.LVL189>

00406a48 <.LVL440>:
  406a48:	9b01      	ldr	r3, [sp, #4]

00406a4a <.LVL441>:
  406a4a:	2b02      	cmp	r3, #2
  406a4c:	dc20      	bgt.n	406a90 <.LVL451>
  406a4e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  406a50:	e4f1      	b.n	406436 <.LVL230>

00406a52 <.LVL442>:
  406a52:	2102      	movs	r1, #2
  406a54:	e594      	b.n	406580 <.LVL274>

00406a56 <.LVL443>:
  406a56:	9b01      	ldr	r3, [sp, #4]

00406a58 <.LVL444>:
  406a58:	2b02      	cmp	r3, #2
  406a5a:	dc19      	bgt.n	406a90 <.LVL451>
  406a5c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  406a5e:	e454      	b.n	40630a <.LVL189>

00406a60 <.LVL445>:
  406a60:	2501      	movs	r5, #1
  406a62:	f7ff bab0 	b.w	405fc6 <.LVL91>

00406a66 <.LVL446>:
  406a66:	f43f ac33 	beq.w	4062d0 <.LVL184>
  406a6a:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406a6e:	e4c0      	b.n	4063f2 <.LVL218>

00406a70 <.LVL447>:
  406a70:	2500      	movs	r5, #0

00406a72 <.LVL448>:
  406a72:	6465      	str	r5, [r4, #68]	; 0x44
  406a74:	4629      	mov	r1, r5
  406a76:	4620      	mov	r0, r4
  406a78:	f004 fc3e 	bl	40b2f8 <.LFE2>

00406a7c <.LVL449>:
  406a7c:	f04f 36ff 	mov.w	r6, #4294967295
  406a80:	2301      	movs	r3, #1
  406a82:	9008      	str	r0, [sp, #32]
  406a84:	46a9      	mov	r9, r5
  406a86:	6420      	str	r0, [r4, #64]	; 0x40

00406a88 <.LVL450>:
  406a88:	960c      	str	r6, [sp, #48]	; 0x30
  406a8a:	9309      	str	r3, [sp, #36]	; 0x24
  406a8c:	f7ff bad3 	b.w	406036 <.LVL104>

00406a90 <.LVL451>:
  406a90:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  406a92:	e658      	b.n	406746 <.LVL323>
  406a94:	00409ef0 	.word	0x00409ef0
  406a98:	0040b9c0 	.word	0x0040b9c0

Disassembly of section .text.Transform%34:

00406a9c <Transform>:

    #define MD5STEP(f, w, x, y, z, data, s) \
        w = rotlFixed(w + f(x, y, z) + data, s) + x

    static int Transform(Md5* md5)
    {
  406a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00406aa0 <.LCFI0>:
  406aa0:	b083      	sub	sp, #12

00406aa2 <.LCFI1>:
        /* Copy context->state[] to working vars  */
        word32 a = md5->digest[0];
        word32 b = md5->digest[1];
  406aa2:	6d05      	ldr	r5, [r0, #80]	; 0x50

00406aa4 <.LVL2>:
        word32 c = md5->digest[2];
  406aa4:	6d44      	ldr	r4, [r0, #84]	; 0x54
  406aa6:	4627      	mov	r7, r4

00406aa8 <.LVL3>:
        word32 d = md5->digest[3];

        MD5STEP(F1, a, b, c, d, md5->buffer[0]  + 0xd76aa478,  7);
  406aa8:	6d83      	ldr	r3, [r0, #88]	; 0x58
  406aaa:	ea84 0903 	eor.w	r9, r4, r3
  406aae:	ea09 0905 	and.w	r9, r9, r5
  406ab2:	ea89 0903 	eor.w	r9, r9, r3
  406ab6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406ab8:	68c2      	ldr	r2, [r0, #12]
  406aba:	189a      	adds	r2, r3, r2
  406abc:	4bdf      	ldr	r3, [pc, #892]	; (406e3c <.LVL188+0x10>)
  406abe:	4413      	add	r3, r2
  406ac0:	4499      	add	r9, r3
  406ac2:	eb05 6979 	add.w	r9, r5, r9, ror #25

00406ac6 <.LVL7>:
        MD5STEP(F1, d, a, b, c, md5->buffer[1]  + 0xe8c7b756, 12);
  406ac6:	ea85 0c04 	eor.w	ip, r5, r4
  406aca:	ea0c 0c09 	and.w	ip, ip, r9
  406ace:	ea8c 0c04 	eor.w	ip, ip, r4
  406ad2:	6d83      	ldr	r3, [r0, #88]	; 0x58
  406ad4:	6902      	ldr	r2, [r0, #16]
  406ad6:	4413      	add	r3, r2
  406ad8:	4cd9      	ldr	r4, [pc, #868]	; (406e40 <.LVL188+0x14>)

00406ada <.LVL10>:
  406ada:	441c      	add	r4, r3
  406adc:	44a4      	add	ip, r4
  406ade:	eb09 5c3c 	add.w	ip, r9, ip, ror #20

00406ae2 <.LVL12>:
        MD5STEP(F1, c, d, a, b, md5->buffer[2]  + 0x242070db, 17);
  406ae2:	ea85 0609 	eor.w	r6, r5, r9
  406ae6:	ea06 060c 	and.w	r6, r6, ip
  406aea:	406e      	eors	r6, r5
  406aec:	6943      	ldr	r3, [r0, #20]
  406aee:	9701      	str	r7, [sp, #4]
  406af0:	443b      	add	r3, r7
  406af2:	4ad4      	ldr	r2, [pc, #848]	; (406e44 <.LVL188+0x18>)
  406af4:	441a      	add	r2, r3
  406af6:	4416      	add	r6, r2
  406af8:	eb0c 36f6 	add.w	r6, ip, r6, ror #15

00406afc <.LVL16>:
        MD5STEP(F1, b, c, d, a, md5->buffer[3]  + 0xc1bdceee, 22);
  406afc:	ea89 010c 	eor.w	r1, r9, ip
  406b00:	4031      	ands	r1, r6
  406b02:	ea81 0109 	eor.w	r1, r1, r9
  406b06:	6983      	ldr	r3, [r0, #24]
  406b08:	18ea      	adds	r2, r5, r3
  406b0a:	4bcf      	ldr	r3, [pc, #828]	; (406e48 <.LVL188+0x1c>)
  406b0c:	4413      	add	r3, r2
  406b0e:	4419      	add	r1, r3
  406b10:	eb06 21b1 	add.w	r1, r6, r1, ror #10

00406b14 <.LVL20>:
        MD5STEP(F1, a, b, c, d, md5->buffer[4]  + 0xf57c0faf,  7);
  406b14:	ea8c 0306 	eor.w	r3, ip, r6
  406b18:	400b      	ands	r3, r1
  406b1a:	ea83 030c 	eor.w	r3, r3, ip
  406b1e:	4acb      	ldr	r2, [pc, #812]	; (406e4c <.LVL188+0x20>)
  406b20:	69c4      	ldr	r4, [r0, #28]
  406b22:	4422      	add	r2, r4
  406b24:	4491      	add	r9, r2

00406b26 <.LVL23>:
  406b26:	444b      	add	r3, r9
  406b28:	eb01 6373 	add.w	r3, r1, r3, ror #25

00406b2c <.LVL25>:
        MD5STEP(F1, d, a, b, c, md5->buffer[5]  + 0x4787c62a, 12);
  406b2c:	ea86 0401 	eor.w	r4, r6, r1
  406b30:	401c      	ands	r4, r3
  406b32:	4074      	eors	r4, r6
  406b34:	4ac6      	ldr	r2, [pc, #792]	; (406e50 <.LVL188+0x24>)
  406b36:	6a07      	ldr	r7, [r0, #32]
  406b38:	443a      	add	r2, r7
  406b3a:	4494      	add	ip, r2

00406b3c <.LVL28>:
  406b3c:	4464      	add	r4, ip
  406b3e:	eb03 5434 	add.w	r4, r3, r4, ror #20

00406b42 <.LVL30>:
        MD5STEP(F1, c, d, a, b, md5->buffer[6]  + 0xa8304613, 17);
  406b42:	ea81 0203 	eor.w	r2, r1, r3
  406b46:	4022      	ands	r2, r4
  406b48:	404a      	eors	r2, r1
  406b4a:	f8df e36c 	ldr.w	lr, [pc, #876]	; 406eb8 <.LVL188+0x8c>
  406b4e:	6a47      	ldr	r7, [r0, #36]	; 0x24
  406b50:	44be      	add	lr, r7
  406b52:	4476      	add	r6, lr

00406b54 <.LVL33>:
  406b54:	4432      	add	r2, r6
  406b56:	eb04 32f2 	add.w	r2, r4, r2, ror #15

00406b5a <.LVL35>:
        MD5STEP(F1, b, c, d, a, md5->buffer[7]  + 0xfd469501, 22);
  406b5a:	f8d0 a028 	ldr.w	sl, [r0, #40]	; 0x28
  406b5e:	ea83 0804 	eor.w	r8, r3, r4
  406b62:	ea08 0802 	and.w	r8, r8, r2
  406b66:	ea88 0803 	eor.w	r8, r8, r3
  406b6a:	4eba      	ldr	r6, [pc, #744]	; (406e54 <.LVL188+0x28>)
  406b6c:	4456      	add	r6, sl
  406b6e:	4431      	add	r1, r6

00406b70 <.LVL39>:
  406b70:	4488      	add	r8, r1
  406b72:	eb02 28b8 	add.w	r8, r2, r8, ror #10

00406b76 <.LVL41>:
        MD5STEP(F1, a, b, c, d, md5->buffer[8]  + 0x698098d8,  7);
  406b76:	ea84 0e02 	eor.w	lr, r4, r2
  406b7a:	ea0e 0e08 	and.w	lr, lr, r8
  406b7e:	ea8e 0e04 	eor.w	lr, lr, r4
  406b82:	49b5      	ldr	r1, [pc, #724]	; (406e58 <.LVL188+0x2c>)
  406b84:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
  406b86:	4431      	add	r1, r6
  406b88:	440b      	add	r3, r1

00406b8a <.LVL44>:
  406b8a:	449e      	add	lr, r3
  406b8c:	eb08 6e7e 	add.w	lr, r8, lr, ror #25

00406b90 <.LVL46>:
        MD5STEP(F1, d, a, b, c, md5->buffer[9]  + 0x8b44f7af, 12);
  406b90:	ea82 0908 	eor.w	r9, r2, r8
  406b94:	ea09 090e 	and.w	r9, r9, lr
  406b98:	ea89 0902 	eor.w	r9, r9, r2
  406b9c:	4baf      	ldr	r3, [pc, #700]	; (406e5c <.LVL188+0x30>)
  406b9e:	6b01      	ldr	r1, [r0, #48]	; 0x30
  406ba0:	440b      	add	r3, r1
  406ba2:	441c      	add	r4, r3

00406ba4 <.LVL49>:
  406ba4:	44a1      	add	r9, r4
  406ba6:	eb0e 5939 	add.w	r9, lr, r9, ror #20

00406baa <.LVL51>:
        MD5STEP(F1, c, d, a, b, md5->buffer[10] + 0xffff5bb1, 17);
  406baa:	ea88 0c0e 	eor.w	ip, r8, lr
  406bae:	ea0c 0c09 	and.w	ip, ip, r9
  406bb2:	ea8c 0c08 	eor.w	ip, ip, r8
  406bb6:	4baa      	ldr	r3, [pc, #680]	; (406e60 <.LVL188+0x34>)
  406bb8:	6b41      	ldr	r1, [r0, #52]	; 0x34
  406bba:	440b      	add	r3, r1
  406bbc:	441a      	add	r2, r3

00406bbe <.LVL54>:
  406bbe:	4494      	add	ip, r2
  406bc0:	eb09 3cfc 	add.w	ip, r9, ip, ror #15

00406bc4 <.LVL56>:
        MD5STEP(F1, b, c, d, a, md5->buffer[11] + 0x895cd7be, 22);
  406bc4:	ea8e 0609 	eor.w	r6, lr, r9
  406bc8:	ea06 060c 	and.w	r6, r6, ip
  406bcc:	ea86 060e 	eor.w	r6, r6, lr
  406bd0:	4ba4      	ldr	r3, [pc, #656]	; (406e64 <.LVL188+0x38>)
  406bd2:	6b82      	ldr	r2, [r0, #56]	; 0x38
  406bd4:	4413      	add	r3, r2
  406bd6:	4498      	add	r8, r3

00406bd8 <.LVL59>:
  406bd8:	4446      	add	r6, r8
  406bda:	eb0c 26b6 	add.w	r6, ip, r6, ror #10

00406bde <.LVL61>:
        MD5STEP(F1, a, b, c, d, md5->buffer[12] + 0x6b901122,  7);
  406bde:	f8d0 803c 	ldr.w	r8, [r0, #60]	; 0x3c
  406be2:	ea89 010c 	eor.w	r1, r9, ip
  406be6:	4031      	ands	r1, r6
  406be8:	ea81 0109 	eor.w	r1, r1, r9
  406bec:	4b9e      	ldr	r3, [pc, #632]	; (406e68 <.LVL188+0x3c>)
  406bee:	4443      	add	r3, r8
  406bf0:	449e      	add	lr, r3

00406bf2 <.LVL65>:
  406bf2:	4471      	add	r1, lr
  406bf4:	eb06 6171 	add.w	r1, r6, r1, ror #25

00406bf8 <.LVL67>:
        MD5STEP(F1, d, a, b, c, md5->buffer[13] + 0xfd987193, 12);
  406bf8:	ea8c 0306 	eor.w	r3, ip, r6
  406bfc:	400b      	ands	r3, r1
  406bfe:	ea83 030c 	eor.w	r3, r3, ip
  406c02:	4a9a      	ldr	r2, [pc, #616]	; (406e6c <.LVL188+0x40>)
  406c04:	6c04      	ldr	r4, [r0, #64]	; 0x40
  406c06:	4422      	add	r2, r4
  406c08:	4491      	add	r9, r2

00406c0a <.LVL70>:
  406c0a:	444b      	add	r3, r9
  406c0c:	eb01 5333 	add.w	r3, r1, r3, ror #20

00406c10 <.LVL72>:
        MD5STEP(F1, c, d, a, b, md5->buffer[14] + 0xa679438e, 17);
  406c10:	f8d0 9044 	ldr.w	r9, [r0, #68]	; 0x44
  406c14:	ea86 0401 	eor.w	r4, r6, r1
  406c18:	401c      	ands	r4, r3
  406c1a:	4074      	eors	r4, r6
  406c1c:	4a94      	ldr	r2, [pc, #592]	; (406e70 <.LVL188+0x44>)
  406c1e:	444a      	add	r2, r9
  406c20:	4494      	add	ip, r2

00406c22 <.LVL76>:
  406c22:	4464      	add	r4, ip
  406c24:	eb03 34f4 	add.w	r4, r3, r4, ror #15

00406c28 <.LVL78>:
        MD5STEP(F1, b, c, d, a, md5->buffer[15] + 0x49b40821, 22);
  406c28:	f8d0 c048 	ldr.w	ip, [r0, #72]	; 0x48
  406c2c:	ea81 0203 	eor.w	r2, r1, r3
  406c30:	4022      	ands	r2, r4
  406c32:	404a      	eors	r2, r1
  406c34:	f8df e284 	ldr.w	lr, [pc, #644]	; 406ebc <.LVL188+0x90>
  406c38:	44e6      	add	lr, ip
  406c3a:	4476      	add	r6, lr

00406c3c <.LVL82>:
  406c3c:	4432      	add	r2, r6
  406c3e:	eb04 22b2 	add.w	r2, r4, r2, ror #10

00406c42 <.LVL84>:

        MD5STEP(F2, a, b, c, d, md5->buffer[1]  + 0xf61e2562,  5);
  406c42:	ea84 0b02 	eor.w	fp, r4, r2
  406c46:	ea0b 0b03 	and.w	fp, fp, r3
  406c4a:	ea8b 0b04 	eor.w	fp, fp, r4
  406c4e:	4e89      	ldr	r6, [pc, #548]	; (406e74 <.LVL188+0x48>)
  406c50:	6907      	ldr	r7, [r0, #16]
  406c52:	443e      	add	r6, r7
  406c54:	4431      	add	r1, r6

00406c56 <.LVL87>:
  406c56:	448b      	add	fp, r1
  406c58:	eb02 6bfb 	add.w	fp, r2, fp, ror #27

00406c5c <.LVL89>:
        MD5STEP(F2, d, a, b, c, md5->buffer[6]  + 0xc040b340,  9);
  406c5c:	ea82 0e0b 	eor.w	lr, r2, fp
  406c60:	ea0e 0e04 	and.w	lr, lr, r4
  406c64:	ea8e 0e02 	eor.w	lr, lr, r2
  406c68:	4983      	ldr	r1, [pc, #524]	; (406e78 <.LVL188+0x4c>)
  406c6a:	6a46      	ldr	r6, [r0, #36]	; 0x24
  406c6c:	4431      	add	r1, r6
  406c6e:	440b      	add	r3, r1

00406c70 <.LVL92>:
  406c70:	449e      	add	lr, r3
  406c72:	eb0b 5efe 	add.w	lr, fp, lr, ror #23

00406c76 <.LVL94>:
        MD5STEP(F2, c, d, a, b, md5->buffer[11] + 0x265e5a51, 14);
  406c76:	ea8b 030e 	eor.w	r3, fp, lr
  406c7a:	4013      	ands	r3, r2
  406c7c:	ea83 030b 	eor.w	r3, r3, fp
  406c80:	497e      	ldr	r1, [pc, #504]	; (406e7c <.LVL188+0x50>)
  406c82:	6b86      	ldr	r6, [r0, #56]	; 0x38
  406c84:	4431      	add	r1, r6
  406c86:	440c      	add	r4, r1

00406c88 <.LVL97>:
  406c88:	4423      	add	r3, r4
  406c8a:	eb0e 43b3 	add.w	r3, lr, r3, ror #18

00406c8e <.LVL99>:
        MD5STEP(F2, b, c, d, a, md5->buffer[0]  + 0xe9b6c7aa, 20);
  406c8e:	ea8e 0603 	eor.w	r6, lr, r3
  406c92:	ea06 060b 	and.w	r6, r6, fp
  406c96:	ea86 060e 	eor.w	r6, r6, lr
  406c9a:	4979      	ldr	r1, [pc, #484]	; (406e80 <.LVL188+0x54>)
  406c9c:	68c4      	ldr	r4, [r0, #12]
  406c9e:	4421      	add	r1, r4
  406ca0:	440a      	add	r2, r1

00406ca2 <.LVL102>:
  406ca2:	4416      	add	r6, r2
  406ca4:	eb03 3636 	add.w	r6, r3, r6, ror #12

00406ca8 <.LVL104>:
        MD5STEP(F2, a, b, c, d, md5->buffer[5]  + 0xd62f105d,  5);
  406ca8:	ea83 0206 	eor.w	r2, r3, r6
  406cac:	ea02 020e 	and.w	r2, r2, lr
  406cb0:	405a      	eors	r2, r3
  406cb2:	4974      	ldr	r1, [pc, #464]	; (406e84 <.LVL188+0x58>)
  406cb4:	6a04      	ldr	r4, [r0, #32]
  406cb6:	4421      	add	r1, r4
  406cb8:	448b      	add	fp, r1

00406cba <.LVL107>:
  406cba:	445a      	add	r2, fp
  406cbc:	eb06 62f2 	add.w	r2, r6, r2, ror #27

00406cc0 <.LVL109>:
        MD5STEP(F2, d, a, b, c, md5->buffer[10] + 0x02441453,  9);
  406cc0:	ea86 0102 	eor.w	r1, r6, r2
  406cc4:	4019      	ands	r1, r3
  406cc6:	4071      	eors	r1, r6
  406cc8:	4c6f      	ldr	r4, [pc, #444]	; (406e88 <.LVL188+0x5c>)
  406cca:	6b47      	ldr	r7, [r0, #52]	; 0x34
  406ccc:	443c      	add	r4, r7
  406cce:	44a6      	add	lr, r4

00406cd0 <.LVL112>:
  406cd0:	4471      	add	r1, lr
  406cd2:	eb02 51f1 	add.w	r1, r2, r1, ror #23

00406cd6 <.LVL114>:
        MD5STEP(F2, c, d, a, b, md5->buffer[15] + 0xd8a1e681, 14);
  406cd6:	ea82 0401 	eor.w	r4, r2, r1
  406cda:	4034      	ands	r4, r6
  406cdc:	4054      	eors	r4, r2
  406cde:	f8df e1e0 	ldr.w	lr, [pc, #480]	; 406ec0 <.LVL188+0x94>
  406ce2:	44e6      	add	lr, ip
  406ce4:	4473      	add	r3, lr

00406ce6 <.LVL117>:
  406ce6:	441c      	add	r4, r3
  406ce8:	eb01 44b4 	add.w	r4, r1, r4, ror #18

00406cec <.LVL119>:
        MD5STEP(F2, b, c, d, a, md5->buffer[4]  + 0xe7d3fbc8, 20);
  406cec:	ea81 0304 	eor.w	r3, r1, r4
  406cf0:	4013      	ands	r3, r2
  406cf2:	404b      	eors	r3, r1
  406cf4:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 406ec4 <.LVL188+0x98>
  406cf8:	69c7      	ldr	r7, [r0, #28]
  406cfa:	44be      	add	lr, r7
  406cfc:	4476      	add	r6, lr

00406cfe <.LVL122>:
  406cfe:	4433      	add	r3, r6
  406d00:	eb04 3333 	add.w	r3, r4, r3, ror #12

00406d04 <.LVL124>:
        MD5STEP(F2, a, b, c, d, md5->buffer[9]  + 0x21e1cde6,  5);
  406d04:	ea84 0b03 	eor.w	fp, r4, r3
  406d08:	ea0b 0b01 	and.w	fp, fp, r1
  406d0c:	ea8b 0b04 	eor.w	fp, fp, r4
  406d10:	4e5e      	ldr	r6, [pc, #376]	; (406e8c <.LVL188+0x60>)
  406d12:	6b07      	ldr	r7, [r0, #48]	; 0x30
  406d14:	443e      	add	r6, r7
  406d16:	4432      	add	r2, r6

00406d18 <.LVL127>:
  406d18:	4493      	add	fp, r2
  406d1a:	eb03 6bfb 	add.w	fp, r3, fp, ror #27

00406d1e <.LVL129>:
        MD5STEP(F2, d, a, b, c, md5->buffer[14] + 0xc33707d6,  9);
  406d1e:	ea83 0e0b 	eor.w	lr, r3, fp
  406d22:	ea0e 0e04 	and.w	lr, lr, r4
  406d26:	ea8e 0e03 	eor.w	lr, lr, r3
  406d2a:	4a59      	ldr	r2, [pc, #356]	; (406e90 <.LVL188+0x64>)
  406d2c:	444a      	add	r2, r9
  406d2e:	4411      	add	r1, r2

00406d30 <.LVL132>:
  406d30:	448e      	add	lr, r1
  406d32:	eb0b 5efe 	add.w	lr, fp, lr, ror #23

00406d36 <.LVL134>:
        MD5STEP(F2, c, d, a, b, md5->buffer[3]  + 0xf4d50d87, 14);
  406d36:	ea8b 060e 	eor.w	r6, fp, lr
  406d3a:	401e      	ands	r6, r3
  406d3c:	ea86 060b 	eor.w	r6, r6, fp
  406d40:	4a54      	ldr	r2, [pc, #336]	; (406e94 <.LVL188+0x68>)
  406d42:	6981      	ldr	r1, [r0, #24]
  406d44:	440a      	add	r2, r1
  406d46:	4414      	add	r4, r2

00406d48 <.LVL137>:
  406d48:	4426      	add	r6, r4
  406d4a:	eb0e 46b6 	add.w	r6, lr, r6, ror #18

00406d4e <.LVL139>:
        MD5STEP(F2, b, c, d, a, md5->buffer[8]  + 0x455a14ed, 20);
  406d4e:	ea8e 0206 	eor.w	r2, lr, r6
  406d52:	ea02 020b 	and.w	r2, r2, fp
  406d56:	ea82 020e 	eor.w	r2, r2, lr
  406d5a:	494f      	ldr	r1, [pc, #316]	; (406e98 <.LVL188+0x6c>)
  406d5c:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
  406d5e:	4421      	add	r1, r4
  406d60:	440b      	add	r3, r1

00406d62 <.LVL142>:
  406d62:	441a      	add	r2, r3
  406d64:	eb06 3232 	add.w	r2, r6, r2, ror #12

00406d68 <.LVL144>:
        MD5STEP(F2, a, b, c, d, md5->buffer[13] + 0xa9e3e905,  5);
  406d68:	ea86 0302 	eor.w	r3, r6, r2
  406d6c:	ea03 030e 	and.w	r3, r3, lr
  406d70:	4073      	eors	r3, r6
  406d72:	494a      	ldr	r1, [pc, #296]	; (406e9c <.LVL188+0x70>)
  406d74:	6c04      	ldr	r4, [r0, #64]	; 0x40
  406d76:	4421      	add	r1, r4
  406d78:	448b      	add	fp, r1

00406d7a <.LVL147>:
  406d7a:	445b      	add	r3, fp
  406d7c:	eb02 63f3 	add.w	r3, r2, r3, ror #27

00406d80 <.LVL149>:
        MD5STEP(F2, d, a, b, c, md5->buffer[2]  + 0xfcefa3f8,  9);
  406d80:	ea82 0103 	eor.w	r1, r2, r3
  406d84:	4031      	ands	r1, r6
  406d86:	4051      	eors	r1, r2
  406d88:	4c45      	ldr	r4, [pc, #276]	; (406ea0 <.LVL188+0x74>)
  406d8a:	6947      	ldr	r7, [r0, #20]
  406d8c:	443c      	add	r4, r7
  406d8e:	44a6      	add	lr, r4

00406d90 <.LVL152>:
  406d90:	4471      	add	r1, lr
  406d92:	eb03 51f1 	add.w	r1, r3, r1, ror #23

00406d96 <.LVL154>:
        MD5STEP(F2, c, d, a, b, md5->buffer[7]  + 0x676f02d9, 14);
  406d96:	ea83 0401 	eor.w	r4, r3, r1
  406d9a:	4014      	ands	r4, r2
  406d9c:	405c      	eors	r4, r3
  406d9e:	f8df e128 	ldr.w	lr, [pc, #296]	; 406ec8 <.LVL188+0x9c>
  406da2:	44d6      	add	lr, sl
  406da4:	4476      	add	r6, lr

00406da6 <.LVL157>:
  406da6:	4434      	add	r4, r6
  406da8:	eb01 44b4 	add.w	r4, r1, r4, ror #18

00406dac <.LVL159>:
        MD5STEP(F2, b, c, d, a, md5->buffer[12] + 0x8d2a4c8a, 20);
  406dac:	ea81 0b04 	eor.w	fp, r1, r4
  406db0:	ea03 060b 	and.w	r6, r3, fp
  406db4:	404e      	eors	r6, r1
  406db6:	f8df e114 	ldr.w	lr, [pc, #276]	; 406ecc <.LVL188+0xa0>
  406dba:	44c6      	add	lr, r8
  406dbc:	4472      	add	r2, lr

00406dbe <.LVL163>:
  406dbe:	4416      	add	r6, r2
  406dc0:	eb04 3636 	add.w	r6, r4, r6, ror #12

00406dc4 <.LVL165>:

        MD5STEP(F3, a, b, c, d, md5->buffer[5]  + 0xfffa3942,  4);
  406dc4:	4a37      	ldr	r2, [pc, #220]	; (406ea4 <.LVL188+0x78>)
  406dc6:	6a07      	ldr	r7, [r0, #32]
  406dc8:	443a      	add	r2, r7
  406dca:	4413      	add	r3, r2

00406dcc <.LVL166>:
  406dcc:	ea8b 0b06 	eor.w	fp, fp, r6
  406dd0:	445b      	add	r3, fp
  406dd2:	eb06 7333 	add.w	r3, r6, r3, ror #28

00406dd6 <.LVL168>:
        MD5STEP(F3, d, a, b, c, md5->buffer[8]  + 0x8771f681, 11);
  406dd6:	ea84 0206 	eor.w	r2, r4, r6
  406dda:	405a      	eors	r2, r3
  406ddc:	f8df e0f0 	ldr.w	lr, [pc, #240]	; 406ed0 <.LVL188+0xa4>
  406de0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
  406de2:	44be      	add	lr, r7
  406de4:	4471      	add	r1, lr

00406de6 <.LVL171>:
  406de6:	4411      	add	r1, r2
  406de8:	eb03 5171 	add.w	r1, r3, r1, ror #21

00406dec <.LVL173>:
        MD5STEP(F3, c, d, a, b, md5->buffer[11] + 0x6d9d6122, 16);
  406dec:	ea86 0b03 	eor.w	fp, r6, r3
  406df0:	ea8b 0b01 	eor.w	fp, fp, r1
  406df4:	4a2c      	ldr	r2, [pc, #176]	; (406ea8 <.LVL188+0x7c>)
  406df6:	6b87      	ldr	r7, [r0, #56]	; 0x38
  406df8:	443a      	add	r2, r7
  406dfa:	4414      	add	r4, r2

00406dfc <.LVL176>:
  406dfc:	445c      	add	r4, fp
  406dfe:	eb01 4434 	add.w	r4, r1, r4, ror #16

00406e02 <.LVL178>:
        MD5STEP(F3, b, c, d, a, md5->buffer[14] + 0xfde5380c, 23);
  406e02:	ea83 0e01 	eor.w	lr, r3, r1
  406e06:	ea8e 0e04 	eor.w	lr, lr, r4
  406e0a:	4a28      	ldr	r2, [pc, #160]	; (406eac <.LVL188+0x80>)
  406e0c:	444a      	add	r2, r9
  406e0e:	4416      	add	r6, r2

00406e10 <.LVL181>:
  406e10:	44b6      	add	lr, r6
  406e12:	eb04 2e7e 	add.w	lr, r4, lr, ror #9

00406e16 <.LVL183>:
        MD5STEP(F3, a, b, c, d, md5->buffer[1]  + 0xa4beea44,  4);
  406e16:	ea81 0204 	eor.w	r2, r1, r4
  406e1a:	ea82 020e 	eor.w	r2, r2, lr
  406e1e:	4e24      	ldr	r6, [pc, #144]	; (406eb0 <.LVL188+0x84>)
  406e20:	6907      	ldr	r7, [r0, #16]
  406e22:	443e      	add	r6, r7
  406e24:	4433      	add	r3, r6

00406e26 <.LVL186>:
  406e26:	4413      	add	r3, r2
  406e28:	eb0e 7333 	add.w	r3, lr, r3, ror #28

00406e2c <.LVL188>:
        MD5STEP(F3, d, a, b, c, md5->buffer[4]  + 0x4bdecfa9, 11);
  406e2c:	ea84 020e 	eor.w	r2, r4, lr
  406e30:	405a      	eors	r2, r3
  406e32:	4e20      	ldr	r6, [pc, #128]	; (406eb4 <.LVL188+0x88>)
  406e34:	69c7      	ldr	r7, [r0, #28]
  406e36:	443e      	add	r6, r7
  406e38:	4431      	add	r1, r6
  406e3a:	e04b      	b.n	406ed4 <.LVL191>
  406e3c:	d76aa478 	.word	0xd76aa478
  406e40:	e8c7b756 	.word	0xe8c7b756
  406e44:	242070db 	.word	0x242070db
  406e48:	c1bdceee 	.word	0xc1bdceee
  406e4c:	f57c0faf 	.word	0xf57c0faf
  406e50:	4787c62a 	.word	0x4787c62a
  406e54:	fd469501 	.word	0xfd469501
  406e58:	698098d8 	.word	0x698098d8
  406e5c:	8b44f7af 	.word	0x8b44f7af
  406e60:	ffff5bb1 	.word	0xffff5bb1
  406e64:	895cd7be 	.word	0x895cd7be
  406e68:	6b901122 	.word	0x6b901122
  406e6c:	fd987193 	.word	0xfd987193
  406e70:	a679438e 	.word	0xa679438e
  406e74:	f61e2562 	.word	0xf61e2562
  406e78:	c040b340 	.word	0xc040b340
  406e7c:	265e5a51 	.word	0x265e5a51
  406e80:	e9b6c7aa 	.word	0xe9b6c7aa
  406e84:	d62f105d 	.word	0xd62f105d
  406e88:	02441453 	.word	0x02441453
  406e8c:	21e1cde6 	.word	0x21e1cde6
  406e90:	c33707d6 	.word	0xc33707d6
  406e94:	f4d50d87 	.word	0xf4d50d87
  406e98:	455a14ed 	.word	0x455a14ed
  406e9c:	a9e3e905 	.word	0xa9e3e905
  406ea0:	fcefa3f8 	.word	0xfcefa3f8
  406ea4:	fffa3942 	.word	0xfffa3942
  406ea8:	6d9d6122 	.word	0x6d9d6122
  406eac:	fde5380c 	.word	0xfde5380c
  406eb0:	a4beea44 	.word	0xa4beea44
  406eb4:	4bdecfa9 	.word	0x4bdecfa9
  406eb8:	a8304613 	.word	0xa8304613
  406ebc:	49b40821 	.word	0x49b40821
  406ec0:	d8a1e681 	.word	0xd8a1e681
  406ec4:	e7d3fbc8 	.word	0xe7d3fbc8
  406ec8:	676f02d9 	.word	0x676f02d9
  406ecc:	8d2a4c8a 	.word	0x8d2a4c8a
  406ed0:	8771f681 	.word	0x8771f681

00406ed4 <.LVL191>:
  406ed4:	4411      	add	r1, r2
  406ed6:	eb03 5171 	add.w	r1, r3, r1, ror #21

00406eda <.LVL193>:
        MD5STEP(F3, c, d, a, b, md5->buffer[7]  + 0xf6bb4b60, 16);
  406eda:	ea8e 0b03 	eor.w	fp, lr, r3
  406ede:	ea8b 0b01 	eor.w	fp, fp, r1
  406ee2:	4a8c      	ldr	r2, [pc, #560]	; (407114 <.LVL322>)
  406ee4:	4452      	add	r2, sl
  406ee6:	4414      	add	r4, r2

00406ee8 <.LVL196>:
  406ee8:	44a3      	add	fp, r4
  406eea:	eb01 4b3b 	add.w	fp, r1, fp, ror #16

00406eee <.LVL198>:
        MD5STEP(F3, b, c, d, a, md5->buffer[10] + 0xbebfbc70, 23);
  406eee:	ea83 0201 	eor.w	r2, r3, r1
  406ef2:	ea82 020b 	eor.w	r2, r2, fp
  406ef6:	4c88      	ldr	r4, [pc, #544]	; (407118 <.LVL322+0x4>)
  406ef8:	6b46      	ldr	r6, [r0, #52]	; 0x34
  406efa:	4434      	add	r4, r6
  406efc:	44a6      	add	lr, r4

00406efe <.LVL201>:
  406efe:	4472      	add	r2, lr
  406f00:	eb0b 2272 	add.w	r2, fp, r2, ror #9

00406f04 <.LVL203>:
        MD5STEP(F3, a, b, c, d, md5->buffer[13] + 0x289b7ec6,  4);
  406f04:	ea81 040b 	eor.w	r4, r1, fp
  406f08:	4054      	eors	r4, r2
  406f0a:	4e84      	ldr	r6, [pc, #528]	; (40711c <.LVL322+0x8>)
  406f0c:	6c07      	ldr	r7, [r0, #64]	; 0x40
  406f0e:	443e      	add	r6, r7
  406f10:	4433      	add	r3, r6

00406f12 <.LVL206>:
  406f12:	4423      	add	r3, r4
  406f14:	eb02 7333 	add.w	r3, r2, r3, ror #28

00406f18 <.LVL208>:
        MD5STEP(F3, d, a, b, c, md5->buffer[0]  + 0xeaa127fa, 11);
  406f18:	ea8b 0e02 	eor.w	lr, fp, r2
  406f1c:	ea8e 0e03 	eor.w	lr, lr, r3
  406f20:	4c7f      	ldr	r4, [pc, #508]	; (407120 <.LVL322+0xc>)
  406f22:	68c6      	ldr	r6, [r0, #12]
  406f24:	4434      	add	r4, r6
  406f26:	4421      	add	r1, r4

00406f28 <.LVL211>:
  406f28:	448e      	add	lr, r1
  406f2a:	eb03 5e7e 	add.w	lr, r3, lr, ror #21

00406f2e <.LVL213>:
        MD5STEP(F3, c, d, a, b, md5->buffer[3]  + 0xd4ef3085, 16);
  406f2e:	ea82 0603 	eor.w	r6, r2, r3
  406f32:	ea86 060e 	eor.w	r6, r6, lr
  406f36:	497b      	ldr	r1, [pc, #492]	; (407124 <.LVL322+0x10>)
  406f38:	6984      	ldr	r4, [r0, #24]
  406f3a:	4421      	add	r1, r4
  406f3c:	448b      	add	fp, r1

00406f3e <.LVL216>:
  406f3e:	445e      	add	r6, fp
  406f40:	eb0e 4636 	add.w	r6, lr, r6, ror #16

00406f44 <.LVL218>:
        MD5STEP(F3, b, c, d, a, md5->buffer[6]  + 0x04881d05, 23);
  406f44:	ea83 0b0e 	eor.w	fp, r3, lr
  406f48:	ea8b 0b06 	eor.w	fp, fp, r6
  406f4c:	4976      	ldr	r1, [pc, #472]	; (407128 <.LVL322+0x14>)
  406f4e:	6a44      	ldr	r4, [r0, #36]	; 0x24
  406f50:	4421      	add	r1, r4
  406f52:	440a      	add	r2, r1

00406f54 <.LVL221>:
  406f54:	4493      	add	fp, r2
  406f56:	eb06 2b7b 	add.w	fp, r6, fp, ror #9

00406f5a <.LVL223>:
        MD5STEP(F3, a, b, c, d, md5->buffer[9]  + 0xd9d4d039,  4);
  406f5a:	ea8e 0406 	eor.w	r4, lr, r6
  406f5e:	ea84 040b 	eor.w	r4, r4, fp
  406f62:	4a72      	ldr	r2, [pc, #456]	; (40712c <.LVL322+0x18>)
  406f64:	6b01      	ldr	r1, [r0, #48]	; 0x30
  406f66:	440a      	add	r2, r1
  406f68:	4413      	add	r3, r2

00406f6a <.LVL226>:
  406f6a:	441c      	add	r4, r3
  406f6c:	eb0b 7434 	add.w	r4, fp, r4, ror #28

00406f70 <.LVL228>:
        MD5STEP(F3, d, a, b, c, md5->buffer[12] + 0xe6db99e5, 11);
  406f70:	ea86 010b 	eor.w	r1, r6, fp
  406f74:	4061      	eors	r1, r4
  406f76:	4b6e      	ldr	r3, [pc, #440]	; (407130 <.LVL322+0x1c>)
  406f78:	4443      	add	r3, r8
  406f7a:	449e      	add	lr, r3

00406f7c <.LVL231>:
  406f7c:	4471      	add	r1, lr
  406f7e:	eb04 5171 	add.w	r1, r4, r1, ror #21

00406f82 <.LVL233>:
        MD5STEP(F3, c, d, a, b, md5->buffer[15] + 0x1fa27cf8, 16);
  406f82:	ea8b 0304 	eor.w	r3, fp, r4
  406f86:	404b      	eors	r3, r1
  406f88:	4a6a      	ldr	r2, [pc, #424]	; (407134 <.LVL322+0x20>)
  406f8a:	4462      	add	r2, ip
  406f8c:	4416      	add	r6, r2

00406f8e <.LVL236>:
  406f8e:	441e      	add	r6, r3
  406f90:	eb01 4636 	add.w	r6, r1, r6, ror #16

00406f94 <.LVL238>:
        MD5STEP(F3, b, c, d, a, md5->buffer[2]  + 0xc4ac5665, 23);
  406f94:	ea84 0201 	eor.w	r2, r4, r1
  406f98:	4072      	eors	r2, r6
  406f9a:	4b67      	ldr	r3, [pc, #412]	; (407138 <.LVL322+0x24>)
  406f9c:	6947      	ldr	r7, [r0, #20]
  406f9e:	443b      	add	r3, r7
  406fa0:	449b      	add	fp, r3

00406fa2 <.LVL241>:
  406fa2:	445a      	add	r2, fp
  406fa4:	eb06 2272 	add.w	r2, r6, r2, ror #9

00406fa8 <.LVL243>:

        MD5STEP(F4, a, b, c, d, md5->buffer[0]  + 0xf4292244,  6);
  406fa8:	ea62 0301 	orn	r3, r2, r1
  406fac:	4073      	eors	r3, r6
  406fae:	f8df e1c8 	ldr.w	lr, [pc, #456]	; 407178 <.LVL322+0x64>
  406fb2:	68c7      	ldr	r7, [r0, #12]
  406fb4:	44be      	add	lr, r7
  406fb6:	4474      	add	r4, lr

00406fb8 <.LVL246>:
  406fb8:	4423      	add	r3, r4
  406fba:	eb02 63b3 	add.w	r3, r2, r3, ror #26

00406fbe <.LVL248>:
        MD5STEP(F4, d, a, b, c, md5->buffer[7]  + 0x432aff97, 10);
  406fbe:	ea63 0b06 	orn	fp, r3, r6
  406fc2:	ea8b 0b02 	eor.w	fp, fp, r2
  406fc6:	4c5d      	ldr	r4, [pc, #372]	; (40713c <.LVL322+0x28>)
  406fc8:	4454      	add	r4, sl
  406fca:	4421      	add	r1, r4

00406fcc <.LVL251>:
  406fcc:	448b      	add	fp, r1
  406fce:	eb03 5bbb 	add.w	fp, r3, fp, ror #22

00406fd2 <.LVL253>:
        MD5STEP(F4, c, d, a, b, md5->buffer[14] + 0xab9423a7, 15);
  406fd2:	ea6b 0e02 	orn	lr, fp, r2
  406fd6:	ea8e 0e03 	eor.w	lr, lr, r3
  406fda:	4959      	ldr	r1, [pc, #356]	; (407140 <.LVL322+0x2c>)
  406fdc:	4449      	add	r1, r9
  406fde:	440e      	add	r6, r1

00406fe0 <.LVL256>:
  406fe0:	44b6      	add	lr, r6
  406fe2:	eb0b 4e7e 	add.w	lr, fp, lr, ror #17

00406fe6 <.LVL258>:
        MD5STEP(F4, b, c, d, a, md5->buffer[5]  + 0xfc93a039, 21);
  406fe6:	ea6e 0403 	orn	r4, lr, r3
  406fea:	ea84 040b 	eor.w	r4, r4, fp
  406fee:	4955      	ldr	r1, [pc, #340]	; (407144 <.LVL322+0x30>)
  406ff0:	6a06      	ldr	r6, [r0, #32]
  406ff2:	4431      	add	r1, r6
  406ff4:	440a      	add	r2, r1

00406ff6 <.LVL261>:
  406ff6:	4414      	add	r4, r2
  406ff8:	eb0e 24f4 	add.w	r4, lr, r4, ror #11

00406ffc <.LVL263>:
        MD5STEP(F4, a, b, c, d, md5->buffer[12] + 0x655b59c3,  6);
  406ffc:	ea64 060b 	orn	r6, r4, fp
  407000:	ea86 060e 	eor.w	r6, r6, lr
  407004:	4a50      	ldr	r2, [pc, #320]	; (407148 <.LVL322+0x34>)
  407006:	4442      	add	r2, r8
  407008:	4413      	add	r3, r2

0040700a <.LVL266>:
  40700a:	441e      	add	r6, r3
  40700c:	eb04 66b6 	add.w	r6, r4, r6, ror #26

00407010 <.LVL268>:
        MD5STEP(F4, d, a, b, c, md5->buffer[3]  + 0x8f0ccc92, 10);
  407010:	ea66 080e 	orn	r8, r6, lr
  407014:	ea88 0804 	eor.w	r8, r8, r4
  407018:	4b4c      	ldr	r3, [pc, #304]	; (40714c <.LVL322+0x38>)
  40701a:	6982      	ldr	r2, [r0, #24]
  40701c:	4413      	add	r3, r2
  40701e:	449b      	add	fp, r3

00407020 <.LVL271>:
  407020:	44d8      	add	r8, fp
  407022:	eb06 58b8 	add.w	r8, r6, r8, ror #22

00407026 <.LVL273>:
        MD5STEP(F4, c, d, a, b, md5->buffer[10] + 0xffeff47d, 15);
  407026:	ea68 0204 	orn	r2, r8, r4
  40702a:	4072      	eors	r2, r6
  40702c:	4948      	ldr	r1, [pc, #288]	; (407150 <.LVL322+0x3c>)
  40702e:	6b43      	ldr	r3, [r0, #52]	; 0x34
  407030:	4419      	add	r1, r3
  407032:	448e      	add	lr, r1

00407034 <.LVL276>:
  407034:	4472      	add	r2, lr
  407036:	eb08 4272 	add.w	r2, r8, r2, ror #17

0040703a <.LVL278>:
        MD5STEP(F4, b, c, d, a, md5->buffer[1]  + 0x85845dd1, 21);
  40703a:	ea62 0306 	orn	r3, r2, r6
  40703e:	ea83 0308 	eor.w	r3, r3, r8
  407042:	4944      	ldr	r1, [pc, #272]	; (407154 <.LVL322+0x40>)
  407044:	6907      	ldr	r7, [r0, #16]
  407046:	4439      	add	r1, r7
  407048:	440c      	add	r4, r1

0040704a <.LVL281>:
  40704a:	4423      	add	r3, r4
  40704c:	eb02 23f3 	add.w	r3, r2, r3, ror #11

00407050 <.LVL283>:
        MD5STEP(F4, a, b, c, d, md5->buffer[8]  + 0x6fa87e4f,  6);
  407050:	ea63 0e08 	orn	lr, r3, r8
  407054:	ea8e 0e02 	eor.w	lr, lr, r2
  407058:	493f      	ldr	r1, [pc, #252]	; (407158 <.LVL322+0x44>)
  40705a:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
  40705c:	4421      	add	r1, r4
  40705e:	440e      	add	r6, r1

00407060 <.LVL286>:
  407060:	44b6      	add	lr, r6
  407062:	eb03 6ebe 	add.w	lr, r3, lr, ror #26

00407066 <.LVL288>:
        MD5STEP(F4, d, a, b, c, md5->buffer[15] + 0xfe2ce6e0, 10);
  407066:	ea6e 0402 	orn	r4, lr, r2
  40706a:	405c      	eors	r4, r3
  40706c:	493b      	ldr	r1, [pc, #236]	; (40715c <.LVL322+0x48>)
  40706e:	4461      	add	r1, ip
  407070:	4488      	add	r8, r1

00407072 <.LVL291>:
  407072:	4444      	add	r4, r8
  407074:	eb0e 54b4 	add.w	r4, lr, r4, ror #22

00407078 <.LVL293>:
        MD5STEP(F4, c, d, a, b, md5->buffer[6]  + 0xa3014314, 15);
  407078:	ea64 0603 	orn	r6, r4, r3
  40707c:	ea86 060e 	eor.w	r6, r6, lr
  407080:	4937      	ldr	r1, [pc, #220]	; (407160 <.LVL322+0x4c>)
  407082:	6a47      	ldr	r7, [r0, #36]	; 0x24
  407084:	4439      	add	r1, r7
  407086:	440a      	add	r2, r1

00407088 <.LVL296>:
  407088:	4416      	add	r6, r2
  40708a:	eb04 4676 	add.w	r6, r4, r6, ror #17

0040708e <.LVL298>:
        MD5STEP(F4, b, c, d, a, md5->buffer[13] + 0x4e0811a1, 21);
  40708e:	ea66 0c0e 	orn	ip, r6, lr
  407092:	ea8c 0c04 	eor.w	ip, ip, r4
  407096:	4933      	ldr	r1, [pc, #204]	; (407164 <.LVL322+0x50>)
  407098:	6c02      	ldr	r2, [r0, #64]	; 0x40
  40709a:	4411      	add	r1, r2
  40709c:	440b      	add	r3, r1

0040709e <.LVL301>:
  40709e:	449c      	add	ip, r3
  4070a0:	eb06 2cfc 	add.w	ip, r6, ip, ror #11

004070a4 <.LVL303>:
        MD5STEP(F4, a, b, c, d, md5->buffer[4]  + 0xf7537e82,  6);
  4070a4:	ea6c 0204 	orn	r2, ip, r4
  4070a8:	4072      	eors	r2, r6
  4070aa:	492f      	ldr	r1, [pc, #188]	; (407168 <.LVL322+0x54>)
  4070ac:	69c3      	ldr	r3, [r0, #28]
  4070ae:	4419      	add	r1, r3
  4070b0:	448e      	add	lr, r1

004070b2 <.LVL306>:
  4070b2:	4472      	add	r2, lr
  4070b4:	eb0c 62b2 	add.w	r2, ip, r2, ror #26

004070b8 <.LVL308>:
        MD5STEP(F4, d, a, b, c, md5->buffer[11] + 0xbd3af235, 10);
  4070b8:	ea62 0306 	orn	r3, r2, r6
  4070bc:	ea83 030c 	eor.w	r3, r3, ip
  4070c0:	492a      	ldr	r1, [pc, #168]	; (40716c <.LVL322+0x58>)
  4070c2:	6b87      	ldr	r7, [r0, #56]	; 0x38
  4070c4:	4439      	add	r1, r7
  4070c6:	440c      	add	r4, r1

004070c8 <.LVL311>:
  4070c8:	441c      	add	r4, r3
  4070ca:	eb02 54b4 	add.w	r4, r2, r4, ror #22

004070ce <.LVL313>:
        MD5STEP(F4, c, d, a, b, md5->buffer[2]  + 0x2ad7d2bb, 15);
  4070ce:	ea64 030c 	orn	r3, r4, ip
  4070d2:	4053      	eors	r3, r2
  4070d4:	4926      	ldr	r1, [pc, #152]	; (407170 <.LVL322+0x5c>)
  4070d6:	6947      	ldr	r7, [r0, #20]
  4070d8:	4439      	add	r1, r7
  4070da:	440e      	add	r6, r1

004070dc <.LVL316>:
  4070dc:	441e      	add	r6, r3
  4070de:	eb04 4676 	add.w	r6, r4, r6, ror #17

004070e2 <.LVL318>:
        MD5STEP(F4, b, c, d, a, md5->buffer[9]  + 0xeb86d391, 21);

        /* Add the working vars back into digest state[]  */
        md5->digest[0] += a;
  4070e2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4070e4:	4413      	add	r3, r2
  4070e6:	64c3      	str	r3, [r0, #76]	; 0x4c
        MD5STEP(F4, b, c, d, a, md5->buffer[9]  + 0xeb86d391, 21);
  4070e8:	ea66 0202 	orn	r2, r6, r2

004070ec <.LVL319>:
  4070ec:	4062      	eors	r2, r4
  4070ee:	4921      	ldr	r1, [pc, #132]	; (407174 <.LVL322+0x60>)
  4070f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4070f2:	4419      	add	r1, r3
  4070f4:	448c      	add	ip, r1
  4070f6:	4494      	add	ip, r2
        md5->digest[1] += b;
  4070f8:	4435      	add	r5, r6
  4070fa:	eb05 25fc 	add.w	r5, r5, ip, ror #11
  4070fe:	6505      	str	r5, [r0, #80]	; 0x50
        md5->digest[2] += c;
  407100:	9b01      	ldr	r3, [sp, #4]
  407102:	4433      	add	r3, r6
  407104:	6543      	str	r3, [r0, #84]	; 0x54
        md5->digest[3] += d;
  407106:	6d83      	ldr	r3, [r0, #88]	; 0x58
  407108:	441c      	add	r4, r3

0040710a <.LVL320>:
  40710a:	6584      	str	r4, [r0, #88]	; 0x58

        return 0;
    }
  40710c:	2000      	movs	r0, #0

0040710e <.LVL321>:
  40710e:	b003      	add	sp, #12

00407110 <.LCFI2>:
  407110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407114 <.LVL322>:
  407114:	f6bb4b60 	.word	0xf6bb4b60
  407118:	bebfbc70 	.word	0xbebfbc70
  40711c:	289b7ec6 	.word	0x289b7ec6
  407120:	eaa127fa 	.word	0xeaa127fa
  407124:	d4ef3085 	.word	0xd4ef3085
  407128:	04881d05 	.word	0x04881d05
  40712c:	d9d4d039 	.word	0xd9d4d039
  407130:	e6db99e5 	.word	0xe6db99e5
  407134:	1fa27cf8 	.word	0x1fa27cf8
  407138:	c4ac5665 	.word	0xc4ac5665
  40713c:	432aff97 	.word	0x432aff97
  407140:	ab9423a7 	.word	0xab9423a7
  407144:	fc93a039 	.word	0xfc93a039
  407148:	655b59c3 	.word	0x655b59c3
  40714c:	8f0ccc92 	.word	0x8f0ccc92
  407150:	ffeff47d 	.word	0xffeff47d
  407154:	85845dd1 	.word	0x85845dd1
  407158:	6fa87e4f 	.word	0x6fa87e4f
  40715c:	fe2ce6e0 	.word	0xfe2ce6e0
  407160:	a3014314 	.word	0xa3014314
  407164:	4e0811a1 	.word	0x4e0811a1
  407168:	f7537e82 	.word	0xf7537e82
  40716c:	bd3af235 	.word	0xbd3af235
  407170:	2ad7d2bb 	.word	0x2ad7d2bb
  407174:	eb86d391 	.word	0xeb86d391
  407178:	f4292244 	.word	0xf4292244

Disassembly of section .text._malloc_r%35:

0040717c <_malloc_r>:
  40717c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00407180 <.LCFI0>:
  407180:	f101 060b 	add.w	r6, r1, #11
  407184:	2e16      	cmp	r6, #22
  407186:	b083      	sub	sp, #12

00407188 <.LCFI1>:
  407188:	4605      	mov	r5, r0
  40718a:	f240 809e 	bls.w	4072ca <.LVL46>

0040718e <.LVL1>:
  40718e:	f036 0607 	bics.w	r6, r6, #7

00407192 <.LVL2>:
  407192:	f100 80bd 	bmi.w	407310 <.LCFI3>
  407196:	42b1      	cmp	r1, r6
  407198:	f200 80ba 	bhi.w	407310 <.LCFI3>
  40719c:	f004 fc0e 	bl	40b9bc <.LFE141>

004071a0 <.LVL3>:
  4071a0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4071a4:	f0c0 828b 	bcc.w	4076be <.LVL171>
  4071a8:	0a73      	lsrs	r3, r6, #9
  4071aa:	f000 80b8 	beq.w	40731e <.LCFI5>
  4071ae:	2b04      	cmp	r3, #4
  4071b0:	f200 816e 	bhi.w	407490 <.LCFI11>
  4071b4:	09b3      	lsrs	r3, r6, #6
  4071b6:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4071ba:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4071be:	00c3      	lsls	r3, r0, #3

004071c0 <.LVL4>:
  4071c0:	4fb9      	ldr	r7, [pc, #740]	; (4074a8 <.LCFI11+0x18>)
  4071c2:	443b      	add	r3, r7
  4071c4:	f1a3 0108 	sub.w	r1, r3, #8

004071c8 <.LVL5>:
  4071c8:	685c      	ldr	r4, [r3, #4]

004071ca <.LVL6>:
  4071ca:	42a1      	cmp	r1, r4
  4071cc:	d106      	bne.n	4071dc <.LVL10>
  4071ce:	e00c      	b.n	4071ea <.LVL14>

004071d0 <.LVL7>:
  4071d0:	2a00      	cmp	r2, #0
  4071d2:	f280 80aa 	bge.w	40732a <.LVL62>

004071d6 <.LVL8>:
  4071d6:	68e4      	ldr	r4, [r4, #12]
  4071d8:	42a1      	cmp	r1, r4
  4071da:	d006      	beq.n	4071ea <.LVL14>

004071dc <.LVL10>:
  4071dc:	6863      	ldr	r3, [r4, #4]
  4071de:	f023 0303 	bic.w	r3, r3, #3

004071e2 <.LVL11>:
  4071e2:	1b9a      	subs	r2, r3, r6

004071e4 <.LVL12>:
  4071e4:	2a0f      	cmp	r2, #15
  4071e6:	ddf3      	ble.n	4071d0 <.LVL7>

004071e8 <.LVL13>:
  4071e8:	4670      	mov	r0, lr

004071ea <.LVL14>:
  4071ea:	693c      	ldr	r4, [r7, #16]
  4071ec:	f8df e2d0 	ldr.w	lr, [pc, #720]	; 4074c0 <.LCFI11+0x30>
  4071f0:	4574      	cmp	r4, lr
  4071f2:	f000 819f 	beq.w	407534 <.LVL115>
  4071f6:	6863      	ldr	r3, [r4, #4]
  4071f8:	f023 0303 	bic.w	r3, r3, #3

004071fc <.LVL16>:
  4071fc:	1b9a      	subs	r2, r3, r6

004071fe <.LVL17>:
  4071fe:	2a0f      	cmp	r2, #15
  407200:	f300 8184 	bgt.w	40750c <.LVL110>
  407204:	2a00      	cmp	r2, #0
  407206:	f8c7 e014 	str.w	lr, [r7, #20]
  40720a:	f8c7 e010 	str.w	lr, [r7, #16]
  40720e:	f280 809d 	bge.w	40734c <.LCFI7>
  407212:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  407216:	f080 8155 	bcs.w	4074c4 <.LVL101>
  40721a:	08db      	lsrs	r3, r3, #3

0040721c <.LVL18>:
  40721c:	f103 0c01 	add.w	ip, r3, #1
  407220:	1099      	asrs	r1, r3, #2
  407222:	687a      	ldr	r2, [r7, #4]

00407224 <.LVL19>:
  407224:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  407228:	f8c4 8008 	str.w	r8, [r4, #8]
  40722c:	2301      	movs	r3, #1

0040722e <.LVL20>:
  40722e:	408b      	lsls	r3, r1
  407230:	eb07 01cc 	add.w	r1, r7, ip, lsl #3

00407234 <.LVL21>:
  407234:	4313      	orrs	r3, r2
  407236:	3908      	subs	r1, #8

00407238 <.LVL22>:
  407238:	60e1      	str	r1, [r4, #12]
  40723a:	607b      	str	r3, [r7, #4]

0040723c <.LVL23>:
  40723c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  407240:	f8c8 400c 	str.w	r4, [r8, #12]

00407244 <.LVL24>:
  407244:	1082      	asrs	r2, r0, #2
  407246:	2401      	movs	r4, #1

00407248 <.LVL25>:
  407248:	4094      	lsls	r4, r2

0040724a <.LVL26>:
  40724a:	429c      	cmp	r4, r3
  40724c:	f200 808b 	bhi.w	407366 <.LCFI9>
  407250:	421c      	tst	r4, r3
  407252:	d106      	bne.n	407262 <.LVL30>
  407254:	f020 0003 	bic.w	r0, r0, #3

00407258 <.LVL27>:
  407258:	0064      	lsls	r4, r4, #1

0040725a <.LVL28>:
  40725a:	421c      	tst	r4, r3
  40725c:	f100 0004 	add.w	r0, r0, #4

00407260 <.LVL29>:
  407260:	d0fa      	beq.n	407258 <.LVL27>

00407262 <.LVL30>:
  407262:	eb07 09c0 	add.w	r9, r7, r0, lsl #3

00407266 <.LVL31>:
  407266:	46cc      	mov	ip, r9
  407268:	4680      	mov	r8, r0

0040726a <.LVL32>:
  40726a:	f8dc 300c 	ldr.w	r3, [ip, #12]

0040726e <.LVL33>:
  40726e:	459c      	cmp	ip, r3
  407270:	d107      	bne.n	407282 <.LVL36>
  407272:	e161      	b.n	407538 <.LVL116>

00407274 <.LVL34>:
  407274:	2a00      	cmp	r2, #0
  407276:	f280 816f 	bge.w	407558 <.LVL121>
  40727a:	68db      	ldr	r3, [r3, #12]
  40727c:	459c      	cmp	ip, r3
  40727e:	f000 815b 	beq.w	407538 <.LVL116>

00407282 <.LVL36>:
  407282:	6859      	ldr	r1, [r3, #4]
  407284:	f021 0103 	bic.w	r1, r1, #3

00407288 <.LVL37>:
  407288:	1b8a      	subs	r2, r1, r6

0040728a <.LVL38>:
  40728a:	2a0f      	cmp	r2, #15
  40728c:	ddf2      	ble.n	407274 <.LVL34>
  40728e:	f8d3 c00c 	ldr.w	ip, [r3, #12]

00407292 <.LVL39>:
  407292:	f8d3 8008 	ldr.w	r8, [r3, #8]

00407296 <.LVL40>:
  407296:	9301      	str	r3, [sp, #4]
  407298:	199c      	adds	r4, r3, r6

0040729a <.LVL41>:
  40729a:	4628      	mov	r0, r5

0040729c <.LVL42>:
  40729c:	f046 0601 	orr.w	r6, r6, #1
  4072a0:	f042 0501 	orr.w	r5, r2, #1

004072a4 <.LVL43>:
  4072a4:	605e      	str	r6, [r3, #4]
  4072a6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4072aa:	f8cc 8008 	str.w	r8, [ip, #8]
  4072ae:	617c      	str	r4, [r7, #20]
  4072b0:	613c      	str	r4, [r7, #16]
  4072b2:	f8c4 e00c 	str.w	lr, [r4, #12]
  4072b6:	f8c4 e008 	str.w	lr, [r4, #8]
  4072ba:	6065      	str	r5, [r4, #4]
  4072bc:	505a      	str	r2, [r3, r1]
  4072be:	f004 fe0d 	bl	40bedc <.LFE144>

004072c2 <.LVL44>:
  4072c2:	9b01      	ldr	r3, [sp, #4]
  4072c4:	f103 0408 	add.w	r4, r3, #8

004072c8 <.LVL45>:
  4072c8:	e01e      	b.n	407308 <.LVL58>

004072ca <.LVL46>:
  4072ca:	2910      	cmp	r1, #16
  4072cc:	d820      	bhi.n	407310 <.LCFI3>
  4072ce:	f004 fb75 	bl	40b9bc <.LFE141>

004072d2 <.LVL47>:
  4072d2:	2610      	movs	r6, #16

004072d4 <.LVL48>:
  4072d4:	2318      	movs	r3, #24
  4072d6:	2002      	movs	r0, #2

004072d8 <.LVL49>:
  4072d8:	4f73      	ldr	r7, [pc, #460]	; (4074a8 <.LCFI11+0x18>)
  4072da:	443b      	add	r3, r7

004072dc <.LVL50>:
  4072dc:	f1a3 0208 	sub.w	r2, r3, #8

004072e0 <.LVL51>:
  4072e0:	685c      	ldr	r4, [r3, #4]

004072e2 <.LVL52>:
  4072e2:	4294      	cmp	r4, r2
  4072e4:	f000 8131 	beq.w	40754a <.LVL119>

004072e8 <.LVL53>:
  4072e8:	6863      	ldr	r3, [r4, #4]
  4072ea:	68e1      	ldr	r1, [r4, #12]
  4072ec:	68a6      	ldr	r6, [r4, #8]
  4072ee:	f023 0303 	bic.w	r3, r3, #3

004072f2 <.LVL54>:
  4072f2:	4423      	add	r3, r4

004072f4 <.LVL55>:
  4072f4:	4628      	mov	r0, r5
  4072f6:	685a      	ldr	r2, [r3, #4]
  4072f8:	60f1      	str	r1, [r6, #12]
  4072fa:	f042 0201 	orr.w	r2, r2, #1
  4072fe:	608e      	str	r6, [r1, #8]
  407300:	605a      	str	r2, [r3, #4]

00407302 <.LVL56>:
  407302:	f004 fdeb 	bl	40bedc <.LFE144>

00407306 <.LVL57>:
  407306:	3408      	adds	r4, #8

00407308 <.LVL58>:
  407308:	4620      	mov	r0, r4
  40730a:	b003      	add	sp, #12

0040730c <.LCFI2>:
  40730c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407310 <.LCFI3>:
  407310:	2400      	movs	r4, #0
  407312:	230c      	movs	r3, #12
  407314:	4620      	mov	r0, r4

00407316 <.LVL60>:
  407316:	602b      	str	r3, [r5, #0]
  407318:	b003      	add	sp, #12

0040731a <.LCFI4>:
  40731a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040731e <.LCFI5>:
  40731e:	2040      	movs	r0, #64	; 0x40
  407320:	f44f 7300 	mov.w	r3, #512	; 0x200
  407324:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  407328:	e74a      	b.n	4071c0 <.LVL4>

0040732a <.LVL62>:
  40732a:	4423      	add	r3, r4

0040732c <.LVL63>:
  40732c:	68e1      	ldr	r1, [r4, #12]

0040732e <.LVL64>:
  40732e:	685a      	ldr	r2, [r3, #4]

00407330 <.LVL65>:
  407330:	68a6      	ldr	r6, [r4, #8]

00407332 <.LVL66>:
  407332:	f042 0201 	orr.w	r2, r2, #1
  407336:	60f1      	str	r1, [r6, #12]
  407338:	4628      	mov	r0, r5
  40733a:	608e      	str	r6, [r1, #8]
  40733c:	605a      	str	r2, [r3, #4]

0040733e <.LVL67>:
  40733e:	f004 fdcd 	bl	40bedc <.LFE144>

00407342 <.LVL68>:
  407342:	3408      	adds	r4, #8

00407344 <.LVL69>:
  407344:	4620      	mov	r0, r4
  407346:	b003      	add	sp, #12

00407348 <.LCFI6>:
  407348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040734c <.LCFI7>:
  40734c:	4423      	add	r3, r4

0040734e <.LVL71>:
  40734e:	4628      	mov	r0, r5

00407350 <.LVL72>:
  407350:	685a      	ldr	r2, [r3, #4]

00407352 <.LVL73>:
  407352:	f042 0201 	orr.w	r2, r2, #1
  407356:	605a      	str	r2, [r3, #4]

00407358 <.LVL74>:
  407358:	f004 fdc0 	bl	40bedc <.LFE144>

0040735c <.LVL75>:
  40735c:	3408      	adds	r4, #8

0040735e <.LVL76>:
  40735e:	4620      	mov	r0, r4
  407360:	b003      	add	sp, #12

00407362 <.LCFI8>:
  407362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407366 <.LCFI9>:
  407366:	68bc      	ldr	r4, [r7, #8]

00407368 <.LVL78>:
  407368:	6863      	ldr	r3, [r4, #4]
  40736a:	f023 0a03 	bic.w	sl, r3, #3
  40736e:	45b2      	cmp	sl, r6
  407370:	d303      	bcc.n	40737a <.LBB4>
  407372:	ebaa 0306 	sub.w	r3, sl, r6
  407376:	2b0f      	cmp	r3, #15
  407378:	dc7a      	bgt.n	407470 <.LBE4>

0040737a <.LBB4>:
  40737a:	4b4c      	ldr	r3, [pc, #304]	; (4074ac <.LCFI11+0x1c>)
  40737c:	4a4c      	ldr	r2, [pc, #304]	; (4074b0 <.LCFI11+0x20>)
  40737e:	9301      	str	r3, [sp, #4]
  407380:	6811      	ldr	r1, [r2, #0]
  407382:	681a      	ldr	r2, [r3, #0]
  407384:	eb06 0801 	add.w	r8, r6, r1
  407388:	3201      	adds	r2, #1
  40738a:	bf16      	itet	ne
  40738c:	f108 088f 	addne.w	r8, r8, #143	; 0x8f
  407390:	f108 0810 	addeq.w	r8, r8, #16
  407394:	f028 087f 	bicne.w	r8, r8, #127	; 0x7f
  407398:	4641      	mov	r1, r8
  40739a:	4628      	mov	r0, r5
  40739c:	f004 fb36 	bl	40ba0c <_sbrk_r>

004073a0 <.LVL80>:
  4073a0:	f1b0 3fff 	cmp.w	r0, #4294967295
  4073a4:	eb04 0b0a 	add.w	fp, r4, sl

004073a8 <.LVL81>:
  4073a8:	4681      	mov	r9, r0

004073aa <.LVL82>:
  4073aa:	9b01      	ldr	r3, [sp, #4]
  4073ac:	f000 80f1 	beq.w	407592 <.LBB10+0x4>
  4073b0:	4583      	cmp	fp, r0
  4073b2:	f200 80ec 	bhi.w	40758e <.LBB10>
  4073b6:	4a3f      	ldr	r2, [pc, #252]	; (4074b4 <.LCFI11+0x24>)
  4073b8:	6811      	ldr	r1, [r2, #0]
  4073ba:	4441      	add	r1, r8
  4073bc:	6011      	str	r1, [r2, #0]
  4073be:	f000 8147 	beq.w	407650 <.LBB12+0xa>

004073c2 <.LVL83>:
  4073c2:	6818      	ldr	r0, [r3, #0]

004073c4 <.LVL84>:
  4073c4:	9201      	str	r2, [sp, #4]
  4073c6:	3001      	adds	r0, #1
  4073c8:	bf1b      	ittet	ne
  4073ca:	eba9 0b0b 	subne.w	fp, r9, fp

004073ce <.LVL85>:
  4073ce:	4459      	addne	r1, fp
  4073d0:	f8c3 9000 	streq.w	r9, [r3]
  4073d4:	6011      	strne	r1, [r2, #0]
  4073d6:	f019 0107 	ands.w	r1, r9, #7

004073da <.LVL86>:
  4073da:	bf1c      	itt	ne
  4073dc:	f1c1 0308 	rsbne	r3, r1, #8
  4073e0:	4499      	addne	r9, r3

004073e2 <.LVL87>:
  4073e2:	eb09 0308 	add.w	r3, r9, r8
  4073e6:	bf14      	ite	ne
  4073e8:	f1c1 0188 	rsbne	r1, r1, #136	; 0x88

004073ec <.LVL88>:
  4073ec:	2180      	moveq	r1, #128	; 0x80
  4073ee:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  4073f2:	eba1 0803 	sub.w	r8, r1, r3

004073f6 <.LVL89>:
  4073f6:	4641      	mov	r1, r8
  4073f8:	4628      	mov	r0, r5
  4073fa:	f004 fb07 	bl	40ba0c <_sbrk_r>

004073fe <.LVL90>:
  4073fe:	1c43      	adds	r3, r0, #1
  407400:	9a01      	ldr	r2, [sp, #4]
  407402:	f000 813f 	beq.w	407684 <.LVL167>
  407406:	eba0 0309 	sub.w	r3, r0, r9
  40740a:	4443      	add	r3, r8
  40740c:	f043 0301 	orr.w	r3, r3, #1

00407410 <.LVL91>:
  407410:	6811      	ldr	r1, [r2, #0]
  407412:	f8c7 9008 	str.w	r9, [r7, #8]
  407416:	4441      	add	r1, r8
  407418:	42bc      	cmp	r4, r7
  40741a:	f8c9 3004 	str.w	r3, [r9, #4]
  40741e:	6011      	str	r1, [r2, #0]
  407420:	d017      	beq.n	407452 <.LVL94>
  407422:	f1ba 0f0f 	cmp.w	sl, #15
  407426:	f240 80ee 	bls.w	407606 <.LBB11>
  40742a:	6860      	ldr	r0, [r4, #4]
  40742c:	f1aa 030c 	sub.w	r3, sl, #12
  407430:	f023 0307 	bic.w	r3, r3, #7

00407434 <.LVL93>:
  407434:	eb04 0e03 	add.w	lr, r4, r3
  407438:	f000 0001 	and.w	r0, r0, #1
  40743c:	f04f 0c05 	mov.w	ip, #5
  407440:	4318      	orrs	r0, r3
  407442:	2b0f      	cmp	r3, #15
  407444:	6060      	str	r0, [r4, #4]
  407446:	f8ce c004 	str.w	ip, [lr, #4]
  40744a:	f8ce c008 	str.w	ip, [lr, #8]
  40744e:	f200 8110 	bhi.w	407672 <.LBB13>

00407452 <.LVL94>:
  407452:	4b19      	ldr	r3, [pc, #100]	; (4074b8 <.LCFI11+0x28>)
  407454:	68bc      	ldr	r4, [r7, #8]

00407456 <.LVL95>:
  407456:	681a      	ldr	r2, [r3, #0]
  407458:	4291      	cmp	r1, r2
  40745a:	bf88      	it	hi
  40745c:	6019      	strhi	r1, [r3, #0]
  40745e:	4b17      	ldr	r3, [pc, #92]	; (4074bc <.LCFI11+0x2c>)
  407460:	681a      	ldr	r2, [r3, #0]
  407462:	4291      	cmp	r1, r2
  407464:	6862      	ldr	r2, [r4, #4]
  407466:	bf88      	it	hi
  407468:	6019      	strhi	r1, [r3, #0]
  40746a:	f022 0203 	bic.w	r2, r2, #3
  40746e:	e094      	b.n	40759a <.LBE10>

00407470 <.LBE4>:
  407470:	19a2      	adds	r2, r4, r6
  407472:	f043 0301 	orr.w	r3, r3, #1

00407476 <.LVL97>:
  407476:	f046 0601 	orr.w	r6, r6, #1
  40747a:	6066      	str	r6, [r4, #4]
  40747c:	4628      	mov	r0, r5
  40747e:	60ba      	str	r2, [r7, #8]

00407480 <.LVL98>:
  407480:	6053      	str	r3, [r2, #4]
  407482:	f004 fd2b 	bl	40bedc <.LFE144>

00407486 <.LVL99>:
  407486:	3408      	adds	r4, #8
  407488:	4620      	mov	r0, r4
  40748a:	b003      	add	sp, #12

0040748c <.LCFI10>:
  40748c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407490 <.LCFI11>:
  407490:	2b14      	cmp	r3, #20
  407492:	d970      	bls.n	407576 <.LVL130>
  407494:	2b54      	cmp	r3, #84	; 0x54
  407496:	f200 80ac 	bhi.w	4075f2 <.LVL150>
  40749a:	0b33      	lsrs	r3, r6, #12
  40749c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4074a0:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4074a4:	00c3      	lsls	r3, r0, #3
  4074a6:	e68b      	b.n	4071c0 <.LVL4>
  4074a8:	2040d0b0 	.word	0x2040d0b0
  4074ac:	2040dcb0 	.word	0x2040dcb0
  4074b0:	2040dcac 	.word	0x2040dcac
  4074b4:	2040dbd4 	.word	0x2040dbd4
  4074b8:	2040dca4 	.word	0x2040dca4
  4074bc:	2040dca8 	.word	0x2040dca8
  4074c0:	2040d0b8 	.word	0x2040d0b8

004074c4 <.LVL101>:
  4074c4:	0a5a      	lsrs	r2, r3, #9

004074c6 <.LVL102>:
  4074c6:	2a04      	cmp	r2, #4
  4074c8:	d95b      	bls.n	407582 <.LVL131>
  4074ca:	2a14      	cmp	r2, #20
  4074cc:	f200 80b3 	bhi.w	407636 <.LVL159>
  4074d0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4074d4:	00c9      	lsls	r1, r1, #3
  4074d6:	325b      	adds	r2, #91	; 0x5b

004074d8 <.LVL103>:
  4074d8:	eb07 0c01 	add.w	ip, r7, r1
  4074dc:	5879      	ldr	r1, [r7, r1]
  4074de:	f1ac 0c08 	sub.w	ip, ip, #8

004074e2 <.LVL104>:
  4074e2:	458c      	cmp	ip, r1
  4074e4:	f000 8093 	beq.w	40760e <.LBE11>

004074e8 <.LVL105>:
  4074e8:	684a      	ldr	r2, [r1, #4]
  4074ea:	f022 0203 	bic.w	r2, r2, #3
  4074ee:	4293      	cmp	r3, r2
  4074f0:	d27d      	bcs.n	4075ee <.LVL148>
  4074f2:	6889      	ldr	r1, [r1, #8]
  4074f4:	458c      	cmp	ip, r1
  4074f6:	d1f7      	bne.n	4074e8 <.LVL105>

004074f8 <.LVL107>:
  4074f8:	f8dc 200c 	ldr.w	r2, [ip, #12]

004074fc <.LVL108>:
  4074fc:	687b      	ldr	r3, [r7, #4]

004074fe <.LVL109>:
  4074fe:	60e2      	str	r2, [r4, #12]
  407500:	f8c4 c008 	str.w	ip, [r4, #8]
  407504:	6094      	str	r4, [r2, #8]
  407506:	f8cc 400c 	str.w	r4, [ip, #12]
  40750a:	e69b      	b.n	407244 <.LVL24>

0040750c <.LVL110>:
  40750c:	19a1      	adds	r1, r4, r6

0040750e <.LVL111>:
  40750e:	f046 0c01 	orr.w	ip, r6, #1
  407512:	f042 0601 	orr.w	r6, r2, #1
  407516:	f8c4 c004 	str.w	ip, [r4, #4]
  40751a:	4628      	mov	r0, r5

0040751c <.LVL112>:
  40751c:	6179      	str	r1, [r7, #20]
  40751e:	6139      	str	r1, [r7, #16]
  407520:	f8c1 e00c 	str.w	lr, [r1, #12]
  407524:	f8c1 e008 	str.w	lr, [r1, #8]
  407528:	604e      	str	r6, [r1, #4]
  40752a:	50e2      	str	r2, [r4, r3]
  40752c:	f004 fcd6 	bl	40bedc <.LFE144>

00407530 <.LVL113>:
  407530:	3408      	adds	r4, #8

00407532 <.LVL114>:
  407532:	e6e9      	b.n	407308 <.LVL58>

00407534 <.LVL115>:
  407534:	687b      	ldr	r3, [r7, #4]
  407536:	e685      	b.n	407244 <.LVL24>

00407538 <.LVL116>:
  407538:	f108 0801 	add.w	r8, r8, #1

0040753c <.LVL117>:
  40753c:	f018 0f03 	tst.w	r8, #3
  407540:	f10c 0c08 	add.w	ip, ip, #8

00407544 <.LVL118>:
  407544:	f47f ae91 	bne.w	40726a <.LVL32>
  407548:	e037      	b.n	4075ba <.LVL140>

0040754a <.LVL119>:
  40754a:	68dc      	ldr	r4, [r3, #12]
  40754c:	42a3      	cmp	r3, r4
  40754e:	bf08      	it	eq
  407550:	3002      	addeq	r0, #2
  407552:	f43f ae4a 	beq.w	4071ea <.LVL14>
  407556:	e6c7      	b.n	4072e8 <.LVL53>

00407558 <.LVL121>:
  407558:	4419      	add	r1, r3

0040755a <.LVL122>:
  40755a:	461c      	mov	r4, r3

0040755c <.LVL123>:
  40755c:	684a      	ldr	r2, [r1, #4]

0040755e <.LVL124>:
  40755e:	68db      	ldr	r3, [r3, #12]

00407560 <.LVL125>:
  407560:	f854 6f08 	ldr.w	r6, [r4, #8]!

00407564 <.LVL126>:
  407564:	f042 0201 	orr.w	r2, r2, #1
  407568:	604a      	str	r2, [r1, #4]

0040756a <.LVL127>:
  40756a:	4628      	mov	r0, r5

0040756c <.LVL128>:
  40756c:	60f3      	str	r3, [r6, #12]
  40756e:	609e      	str	r6, [r3, #8]
  407570:	f004 fcb4 	bl	40bedc <.LFE144>

00407574 <.LVL129>:
  407574:	e6c8      	b.n	407308 <.LVL58>

00407576 <.LVL130>:
  407576:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40757a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40757e:	00c3      	lsls	r3, r0, #3
  407580:	e61e      	b.n	4071c0 <.LVL4>

00407582 <.LVL131>:
  407582:	099a      	lsrs	r2, r3, #6
  407584:	f102 0139 	add.w	r1, r2, #57	; 0x39
  407588:	00c9      	lsls	r1, r1, #3
  40758a:	3238      	adds	r2, #56	; 0x38
  40758c:	e7a4      	b.n	4074d8 <.LVL103>

0040758e <.LBB10>:
  40758e:	42bc      	cmp	r4, r7
  407590:	d059      	beq.n	407646 <.LBB12>
  407592:	68bc      	ldr	r4, [r7, #8]

00407594 <.LVL133>:
  407594:	6862      	ldr	r2, [r4, #4]
  407596:	f022 0203 	bic.w	r2, r2, #3

0040759a <.LBE10>:
  40759a:	4296      	cmp	r6, r2
  40759c:	eba2 0306 	sub.w	r3, r2, r6

004075a0 <.LVL135>:
  4075a0:	d802      	bhi.n	4075a8 <.LVL136>
  4075a2:	2b0f      	cmp	r3, #15
  4075a4:	f73f af64 	bgt.w	407470 <.LBE4>

004075a8 <.LVL136>:
  4075a8:	4628      	mov	r0, r5
  4075aa:	f004 fc97 	bl	40bedc <.LFE144>

004075ae <.LVL137>:
  4075ae:	2400      	movs	r4, #0
  4075b0:	e6aa      	b.n	407308 <.LVL58>

004075b2 <.LVL138>:
  4075b2:	f859 3908 	ldr.w	r3, [r9], #-8

004075b6 <.LVL139>:
  4075b6:	4599      	cmp	r9, r3
  4075b8:	d17f      	bne.n	4076ba <.LVL170>

004075ba <.LVL140>:
  4075ba:	f010 0f03 	tst.w	r0, #3
  4075be:	f100 30ff 	add.w	r0, r0, #4294967295
  4075c2:	d1f6      	bne.n	4075b2 <.LVL138>
  4075c4:	687b      	ldr	r3, [r7, #4]
  4075c6:	ea23 0304 	bic.w	r3, r3, r4
  4075ca:	607b      	str	r3, [r7, #4]

004075cc <.LVL142>:
  4075cc:	0064      	lsls	r4, r4, #1
  4075ce:	429c      	cmp	r4, r3
  4075d0:	f63f aec9 	bhi.w	407366 <.LCFI9>
  4075d4:	2c00      	cmp	r4, #0
  4075d6:	f43f aec6 	beq.w	407366 <.LCFI9>
  4075da:	421c      	tst	r4, r3
  4075dc:	4640      	mov	r0, r8

004075de <.LVL144>:
  4075de:	f47f ae40 	bne.w	407262 <.LVL30>

004075e2 <.LVL145>:
  4075e2:	0064      	lsls	r4, r4, #1

004075e4 <.LVL146>:
  4075e4:	421c      	tst	r4, r3
  4075e6:	f100 0004 	add.w	r0, r0, #4

004075ea <.LVL147>:
  4075ea:	d0fa      	beq.n	4075e2 <.LVL145>
  4075ec:	e639      	b.n	407262 <.LVL30>

004075ee <.LVL148>:
  4075ee:	468c      	mov	ip, r1

004075f0 <.LVL149>:
  4075f0:	e782      	b.n	4074f8 <.LVL107>

004075f2 <.LVL150>:
  4075f2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4075f6:	d813      	bhi.n	407620 <.LVL158>
  4075f8:	0bf3      	lsrs	r3, r6, #15
  4075fa:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4075fe:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  407602:	00c3      	lsls	r3, r0, #3
  407604:	e5dc      	b.n	4071c0 <.LVL4>

00407606 <.LBB11>:
  407606:	2301      	movs	r3, #1
  407608:	f8c9 3004 	str.w	r3, [r9, #4]

0040760c <.LVL152>:
  40760c:	e7cc      	b.n	4075a8 <.LVL136>

0040760e <.LBE11>:
  40760e:	687b      	ldr	r3, [r7, #4]

00407610 <.LVL154>:
  407610:	1092      	asrs	r2, r2, #2

00407612 <.LVL155>:
  407612:	2101      	movs	r1, #1

00407614 <.LVL156>:
  407614:	fa01 f202 	lsl.w	r2, r1, r2
  407618:	4313      	orrs	r3, r2
  40761a:	607b      	str	r3, [r7, #4]

0040761c <.LVL157>:
  40761c:	4662      	mov	r2, ip
  40761e:	e76e      	b.n	4074fe <.LVL109>

00407620 <.LVL158>:
  407620:	f240 5254 	movw	r2, #1364	; 0x554
  407624:	4293      	cmp	r3, r2
  407626:	d81e      	bhi.n	407666 <.LBE12>
  407628:	0cb3      	lsrs	r3, r6, #18
  40762a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40762e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  407632:	00c3      	lsls	r3, r0, #3
  407634:	e5c4      	b.n	4071c0 <.LVL4>

00407636 <.LVL159>:
  407636:	2a54      	cmp	r2, #84	; 0x54
  407638:	d828      	bhi.n	40768c <.LBE13>
  40763a:	0b1a      	lsrs	r2, r3, #12
  40763c:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  407640:	00c9      	lsls	r1, r1, #3
  407642:	326e      	adds	r2, #110	; 0x6e
  407644:	e748      	b.n	4074d8 <.LVL103>

00407646 <.LBB12>:
  407646:	4a20      	ldr	r2, [pc, #128]	; (4076c8 <.LVL171+0xa>)
  407648:	6811      	ldr	r1, [r2, #0]
  40764a:	4441      	add	r1, r8
  40764c:	6011      	str	r1, [r2, #0]
  40764e:	e6b8      	b.n	4073c2 <.LVL83>
  407650:	f01b 0f7f 	tst.w	fp, #127	; 0x7f
  407654:	f47f aeb5 	bne.w	4073c2 <.LVL83>

00407658 <.LVL161>:
  407658:	eb0a 0308 	add.w	r3, sl, r8

0040765c <.LVL162>:
  40765c:	68ba      	ldr	r2, [r7, #8]
  40765e:	f043 0301 	orr.w	r3, r3, #1

00407662 <.LVL163>:
  407662:	6053      	str	r3, [r2, #4]
  407664:	e6f5      	b.n	407452 <.LVL94>

00407666 <.LBE12>:
  407666:	207f      	movs	r0, #127	; 0x7f
  407668:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40766c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  407670:	e5a6      	b.n	4071c0 <.LVL4>

00407672 <.LBB13>:
  407672:	f104 0108 	add.w	r1, r4, #8
  407676:	4628      	mov	r0, r5
  407678:	9201      	str	r2, [sp, #4]
  40767a:	f001 f9b3 	bl	4089e4 <.LFE174>

0040767e <.LVL166>:
  40767e:	9a01      	ldr	r2, [sp, #4]
  407680:	6811      	ldr	r1, [r2, #0]
  407682:	e6e6      	b.n	407452 <.LVL94>

00407684 <.LVL167>:
  407684:	2301      	movs	r3, #1

00407686 <.LVL168>:
  407686:	f04f 0800 	mov.w	r8, #0
  40768a:	e6c1      	b.n	407410 <.LVL91>

0040768c <.LBE13>:
  40768c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  407690:	d805      	bhi.n	40769e <.LBE13+0x12>
  407692:	0bda      	lsrs	r2, r3, #15
  407694:	f102 0178 	add.w	r1, r2, #120	; 0x78
  407698:	00c9      	lsls	r1, r1, #3
  40769a:	3277      	adds	r2, #119	; 0x77
  40769c:	e71c      	b.n	4074d8 <.LVL103>
  40769e:	f240 5154 	movw	r1, #1364	; 0x554
  4076a2:	428a      	cmp	r2, r1
  4076a4:	d805      	bhi.n	4076b2 <.LBE13+0x26>
  4076a6:	0c9a      	lsrs	r2, r3, #18
  4076a8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4076ac:	00c9      	lsls	r1, r1, #3
  4076ae:	327c      	adds	r2, #124	; 0x7c
  4076b0:	e712      	b.n	4074d8 <.LVL103>
  4076b2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4076b6:	227e      	movs	r2, #126	; 0x7e
  4076b8:	e70e      	b.n	4074d8 <.LVL103>

004076ba <.LVL170>:
  4076ba:	687b      	ldr	r3, [r7, #4]
  4076bc:	e786      	b.n	4075cc <.LVL142>

004076be <.LVL171>:
  4076be:	08f0      	lsrs	r0, r6, #3
  4076c0:	f106 0308 	add.w	r3, r6, #8
  4076c4:	e608      	b.n	4072d8 <.LVL49>
  4076c6:	bf00      	nop
  4076c8:	2040dbd4 	.word	0x2040dbd4

Disassembly of section .text._realloc_r%36:

004076cc <_realloc_r>:
  4076cc:	2900      	cmp	r1, #0
  4076ce:	f000 8095 	beq.w	4077fc <.LCFI6>
  4076d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

004076d6 <.LCFI0>:
  4076d6:	460d      	mov	r5, r1
  4076d8:	4616      	mov	r6, r2
  4076da:	b083      	sub	sp, #12

004076dc <.LCFI1>:
  4076dc:	4680      	mov	r8, r0
  4076de:	f106 070b 	add.w	r7, r6, #11
  4076e2:	f004 f96b 	bl	40b9bc <.LFE141>

004076e6 <.LVL1>:
  4076e6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4076ea:	2f16      	cmp	r7, #22
  4076ec:	f02e 0403 	bic.w	r4, lr, #3
  4076f0:	f1a5 0908 	sub.w	r9, r5, #8

004076f4 <.LVL2>:
  4076f4:	d83c      	bhi.n	407770 <.LVL18>
  4076f6:	2210      	movs	r2, #16
  4076f8:	4617      	mov	r7, r2

004076fa <.LVL3>:
  4076fa:	42be      	cmp	r6, r7
  4076fc:	d83d      	bhi.n	40777a <.LVL19+0x6>
  4076fe:	4294      	cmp	r4, r2
  407700:	da43      	bge.n	40778a <.LCFI3>
  407702:	4bc4      	ldr	r3, [pc, #784]	; (407a14 <.LVL142+0x2>)
  407704:	6899      	ldr	r1, [r3, #8]
  407706:	eb09 0004 	add.w	r0, r9, r4

0040770a <.LVL4>:
  40770a:	4288      	cmp	r0, r1
  40770c:	f000 80b4 	beq.w	407878 <.LVL65>
  407710:	6843      	ldr	r3, [r0, #4]
  407712:	f023 0101 	bic.w	r1, r3, #1
  407716:	4401      	add	r1, r0
  407718:	6849      	ldr	r1, [r1, #4]
  40771a:	07c9      	lsls	r1, r1, #31
  40771c:	d54c      	bpl.n	4077b8 <.LCFI5>

0040771e <.LVL5>:
  40771e:	f01e 0f01 	tst.w	lr, #1
  407722:	f000 809b 	beq.w	40785c <.LBE12>

00407726 <.LVL6>:
  407726:	4631      	mov	r1, r6
  407728:	4640      	mov	r0, r8
  40772a:	f7ff fd27 	bl	40717c <.LFE14>

0040772e <.LVL7>:
  40772e:	4606      	mov	r6, r0

00407730 <.LVL8>:
  407730:	2800      	cmp	r0, #0
  407732:	d03a      	beq.n	4077aa <.LVL26>

00407734 <.LVL9>:
  407734:	f855 3c04 	ldr.w	r3, [r5, #-4]
  407738:	f023 0301 	bic.w	r3, r3, #1
  40773c:	444b      	add	r3, r9
  40773e:	f1a0 0208 	sub.w	r2, r0, #8

00407742 <.LVL10>:
  407742:	429a      	cmp	r2, r3
  407744:	f000 8121 	beq.w	40798a <.LBE24>

00407748 <.LBB2>:
  407748:	1f22      	subs	r2, r4, #4

0040774a <.LVL11>:
  40774a:	2a24      	cmp	r2, #36	; 0x24
  40774c:	f200 8107 	bhi.w	40795e <.LBB21>

00407750 <.LBB3>:
  407750:	2a13      	cmp	r2, #19
  407752:	f200 80db 	bhi.w	40790c <.LBB18>
  407756:	4603      	mov	r3, r0
  407758:	462a      	mov	r2, r5

0040775a <.LVL13>:
  40775a:	6811      	ldr	r1, [r2, #0]
  40775c:	6019      	str	r1, [r3, #0]

0040775e <.LVL14>:
  40775e:	6851      	ldr	r1, [r2, #4]
  407760:	6059      	str	r1, [r3, #4]
  407762:	6892      	ldr	r2, [r2, #8]

00407764 <.LVL15>:
  407764:	609a      	str	r2, [r3, #8]

00407766 <.LBE2>:
  407766:	4629      	mov	r1, r5
  407768:	4640      	mov	r0, r8
  40776a:	f001 f93b 	bl	4089e4 <.LFE174>

0040776e <.LVL17>:
  40776e:	e01c      	b.n	4077aa <.LVL26>

00407770 <.LVL18>:
  407770:	f027 0707 	bic.w	r7, r7, #7

00407774 <.LVL19>:
  407774:	2f00      	cmp	r7, #0
  407776:	463a      	mov	r2, r7
  407778:	dabf      	bge.n	4076fa <.LVL3>
  40777a:	2600      	movs	r6, #0

0040777c <.LVL20>:
  40777c:	230c      	movs	r3, #12
  40777e:	4630      	mov	r0, r6
  407780:	f8c8 3000 	str.w	r3, [r8]
  407784:	b003      	add	sp, #12

00407786 <.LCFI2>:
  407786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040778a <.LCFI3>:
  40778a:	462e      	mov	r6, r5

0040778c <.L11>:
  40778c:	1be3      	subs	r3, r4, r7

0040778e <.LVL23>:
  40778e:	2b0f      	cmp	r3, #15
  407790:	d81e      	bhi.n	4077d0 <.LVL35>
  407792:	f8d9 3004 	ldr.w	r3, [r9, #4]

00407796 <.LVL24>:
  407796:	f003 0301 	and.w	r3, r3, #1
  40779a:	4323      	orrs	r3, r4
  40779c:	444c      	add	r4, r9

0040779e <.LVL25>:
  40779e:	f8c9 3004 	str.w	r3, [r9, #4]
  4077a2:	6863      	ldr	r3, [r4, #4]
  4077a4:	f043 0301 	orr.w	r3, r3, #1
  4077a8:	6063      	str	r3, [r4, #4]

004077aa <.LVL26>:
  4077aa:	4640      	mov	r0, r8
  4077ac:	f004 fb96 	bl	40bedc <.LFE144>

004077b0 <.LVL27>:
  4077b0:	4630      	mov	r0, r6
  4077b2:	b003      	add	sp, #12

004077b4 <.LCFI4>:
  4077b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004077b8 <.LCFI5>:
  4077b8:	f023 0303 	bic.w	r3, r3, #3

004077bc <.LVL29>:
  4077bc:	18e1      	adds	r1, r4, r3
  4077be:	4291      	cmp	r1, r2
  4077c0:	db1f      	blt.n	407802 <.LCFI7>
  4077c2:	68c3      	ldr	r3, [r0, #12]

004077c4 <.LVL30>:
  4077c4:	6882      	ldr	r2, [r0, #8]

004077c6 <.LVL31>:
  4077c6:	462e      	mov	r6, r5

004077c8 <.LVL32>:
  4077c8:	60d3      	str	r3, [r2, #12]
  4077ca:	460c      	mov	r4, r1

004077cc <.LVL33>:
  4077cc:	609a      	str	r2, [r3, #8]

004077ce <.LVL34>:
  4077ce:	e7dd      	b.n	40778c <.L11>

004077d0 <.LVL35>:
  4077d0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4077d4:	eb09 0107 	add.w	r1, r9, r7

004077d8 <.LVL36>:
  4077d8:	f002 0201 	and.w	r2, r2, #1
  4077dc:	444c      	add	r4, r9

004077de <.LVL37>:
  4077de:	f043 0301 	orr.w	r3, r3, #1

004077e2 <.LVL38>:
  4077e2:	4317      	orrs	r7, r2

004077e4 <.LVL39>:
  4077e4:	f8c9 7004 	str.w	r7, [r9, #4]
  4077e8:	604b      	str	r3, [r1, #4]
  4077ea:	6863      	ldr	r3, [r4, #4]
  4077ec:	f043 0301 	orr.w	r3, r3, #1
  4077f0:	3108      	adds	r1, #8

004077f2 <.LVL40>:
  4077f2:	6063      	str	r3, [r4, #4]
  4077f4:	4640      	mov	r0, r8
  4077f6:	f001 f8f5 	bl	4089e4 <.LFE174>

004077fa <.LVL41>:
  4077fa:	e7d6      	b.n	4077aa <.LVL26>

004077fc <.LCFI6>:
  4077fc:	4611      	mov	r1, r2

004077fe <.LVL43>:
  4077fe:	f7ff bcbd 	b.w	40717c <.LFE14>

00407802 <.LCFI7>:
  407802:	f01e 0f01 	tst.w	lr, #1
  407806:	d18e      	bne.n	407726 <.LVL6>
  407808:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40780c:	eba9 0a01 	sub.w	sl, r9, r1

00407810 <.LVL45>:
  407810:	f8da 1004 	ldr.w	r1, [sl, #4]
  407814:	f021 0103 	bic.w	r1, r1, #3

00407818 <.LVL46>:
  407818:	440b      	add	r3, r1

0040781a <.LVL47>:
  40781a:	4423      	add	r3, r4
  40781c:	4293      	cmp	r3, r2
  40781e:	db25      	blt.n	40786c <.LVL63>
  407820:	68c2      	ldr	r2, [r0, #12]

00407822 <.LVL48>:
  407822:	6881      	ldr	r1, [r0, #8]

00407824 <.LVL49>:
  407824:	4656      	mov	r6, sl

00407826 <.LVL50>:
  407826:	60ca      	str	r2, [r1, #12]
  407828:	6091      	str	r1, [r2, #8]

0040782a <.LVL51>:
  40782a:	f8da 100c 	ldr.w	r1, [sl, #12]

0040782e <.LVL52>:
  40782e:	f856 0f08 	ldr.w	r0, [r6, #8]!

00407832 <.LBB7>:
  407832:	1f22      	subs	r2, r4, #4
  407834:	2a24      	cmp	r2, #36	; 0x24

00407836 <.LBE7>:
  407836:	60c1      	str	r1, [r0, #12]
  407838:	6088      	str	r0, [r1, #8]

0040783a <.LBB12>:
  40783a:	f200 8094 	bhi.w	407966 <.LBB22>

0040783e <.LBB8>:
  40783e:	2a13      	cmp	r2, #19
  407840:	d96f      	bls.n	407922 <.LBB19>

00407842 <.LVL56>:
  407842:	6829      	ldr	r1, [r5, #0]

00407844 <.LVL57>:
  407844:	f8ca 1008 	str.w	r1, [sl, #8]

00407848 <.LVL58>:
  407848:	6869      	ldr	r1, [r5, #4]
  40784a:	f8ca 100c 	str.w	r1, [sl, #12]
  40784e:	2a1b      	cmp	r2, #27
  407850:	f200 80a2 	bhi.w	407998 <.LBB10>
  407854:	3508      	adds	r5, #8

00407856 <.LVL59>:
  407856:	f10a 0210 	add.w	r2, sl, #16

0040785a <.LVL60>:
  40785a:	e063      	b.n	407924 <.LVL92>

0040785c <.LBE12>:
  40785c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  407860:	eba9 0a03 	sub.w	sl, r9, r3

00407864 <.LVL62>:
  407864:	f8da 1004 	ldr.w	r1, [sl, #4]
  407868:	f021 0103 	bic.w	r1, r1, #3

0040786c <.LVL63>:
  40786c:	1863      	adds	r3, r4, r1
  40786e:	4293      	cmp	r3, r2
  407870:	f6ff af59 	blt.w	407726 <.LVL6>
  407874:	4656      	mov	r6, sl

00407876 <.LVL64>:
  407876:	e7d8      	b.n	40782a <.LVL51>

00407878 <.LVL65>:
  407878:	6841      	ldr	r1, [r0, #4]
  40787a:	f021 0b03 	bic.w	fp, r1, #3

0040787e <.LVL66>:
  40787e:	44a3      	add	fp, r4

00407880 <.LVL67>:
  407880:	f107 0010 	add.w	r0, r7, #16

00407884 <.LVL68>:
  407884:	4583      	cmp	fp, r0
  407886:	da56      	bge.n	407936 <.LBE20>

00407888 <.LVL69>:
  407888:	f01e 0f01 	tst.w	lr, #1
  40788c:	f47f af4b 	bne.w	407726 <.LVL6>
  407890:	f855 1c08 	ldr.w	r1, [r5, #-8]

00407894 <.LVL70>:
  407894:	eba9 0a01 	sub.w	sl, r9, r1

00407898 <.LVL71>:
  407898:	f8da 1004 	ldr.w	r1, [sl, #4]
  40789c:	f021 0103 	bic.w	r1, r1, #3

004078a0 <.LVL72>:
  4078a0:	448b      	add	fp, r1
  4078a2:	4558      	cmp	r0, fp
  4078a4:	dce2      	bgt.n	40786c <.LVL63>
  4078a6:	4656      	mov	r6, sl

004078a8 <.LVL73>:
  4078a8:	f8da 100c 	ldr.w	r1, [sl, #12]

004078ac <.LVL74>:
  4078ac:	f856 0f08 	ldr.w	r0, [r6, #8]!

004078b0 <.LBB13>:
  4078b0:	1f22      	subs	r2, r4, #4
  4078b2:	2a24      	cmp	r2, #36	; 0x24

004078b4 <.LBE13>:
  4078b4:	60c1      	str	r1, [r0, #12]
  4078b6:	6088      	str	r0, [r1, #8]

004078b8 <.LBB17>:
  4078b8:	f200 808f 	bhi.w	4079da <.LBE15>

004078bc <.LBB14>:
  4078bc:	2a13      	cmp	r2, #19
  4078be:	f240 808a 	bls.w	4079d6 <.LBB15>

004078c2 <.LVL78>:
  4078c2:	6829      	ldr	r1, [r5, #0]

004078c4 <.LVL79>:
  4078c4:	f8ca 1008 	str.w	r1, [sl, #8]

004078c8 <.LVL80>:
  4078c8:	6869      	ldr	r1, [r5, #4]
  4078ca:	f8ca 100c 	str.w	r1, [sl, #12]
  4078ce:	2a1b      	cmp	r2, #27
  4078d0:	f200 808a 	bhi.w	4079e8 <.LBB16>
  4078d4:	3508      	adds	r5, #8

004078d6 <.LVL81>:
  4078d6:	f10a 0210 	add.w	r2, sl, #16

004078da <.LVL82>:
  4078da:	6829      	ldr	r1, [r5, #0]
  4078dc:	6011      	str	r1, [r2, #0]

004078de <.LVL83>:
  4078de:	6869      	ldr	r1, [r5, #4]
  4078e0:	6051      	str	r1, [r2, #4]
  4078e2:	68a9      	ldr	r1, [r5, #8]
  4078e4:	6091      	str	r1, [r2, #8]

004078e6 <.LBE14>:
  4078e6:	eb0a 0107 	add.w	r1, sl, r7
  4078ea:	ebab 0207 	sub.w	r2, fp, r7
  4078ee:	f042 0201 	orr.w	r2, r2, #1
  4078f2:	6099      	str	r1, [r3, #8]
  4078f4:	604a      	str	r2, [r1, #4]
  4078f6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4078fa:	f003 0301 	and.w	r3, r3, #1
  4078fe:	431f      	orrs	r7, r3

00407900 <.LVL85>:
  407900:	4640      	mov	r0, r8
  407902:	f8ca 7004 	str.w	r7, [sl, #4]
  407906:	f004 fae9 	bl	40bedc <.LFE144>

0040790a <.LVL86>:
  40790a:	e751      	b.n	4077b0 <.LVL27>

0040790c <.LBB18>:
  40790c:	682b      	ldr	r3, [r5, #0]
  40790e:	6003      	str	r3, [r0, #0]

00407910 <.LVL88>:
  407910:	686b      	ldr	r3, [r5, #4]
  407912:	6043      	str	r3, [r0, #4]
  407914:	2a1b      	cmp	r2, #27
  407916:	d82d      	bhi.n	407974 <.LBB24>
  407918:	f100 0308 	add.w	r3, r0, #8

0040791c <.LVL89>:
  40791c:	f105 0208 	add.w	r2, r5, #8

00407920 <.LVL90>:
  407920:	e71b      	b.n	40775a <.LVL13>

00407922 <.LBB19>:
  407922:	4632      	mov	r2, r6

00407924 <.LVL92>:
  407924:	6829      	ldr	r1, [r5, #0]
  407926:	6011      	str	r1, [r2, #0]

00407928 <.LVL93>:
  407928:	6869      	ldr	r1, [r5, #4]
  40792a:	6051      	str	r1, [r2, #4]
  40792c:	68a9      	ldr	r1, [r5, #8]
  40792e:	6091      	str	r1, [r2, #8]

00407930 <.LBE19>:
  407930:	461c      	mov	r4, r3

00407932 <.LBB20>:
  407932:	46d1      	mov	r9, sl

00407934 <.LVL95>:
  407934:	e72a      	b.n	40778c <.L11>

00407936 <.LBE20>:
  407936:	eb09 0107 	add.w	r1, r9, r7

0040793a <.LVL97>:
  40793a:	ebab 0b07 	sub.w	fp, fp, r7

0040793e <.LVL98>:
  40793e:	f04b 0201 	orr.w	r2, fp, #1
  407942:	6099      	str	r1, [r3, #8]
  407944:	604a      	str	r2, [r1, #4]

00407946 <.LVL99>:
  407946:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40794a:	f003 0301 	and.w	r3, r3, #1
  40794e:	431f      	orrs	r7, r3

00407950 <.LVL100>:
  407950:	4640      	mov	r0, r8

00407952 <.LVL101>:
  407952:	f845 7c04 	str.w	r7, [r5, #-4]
  407956:	f004 fac1 	bl	40bedc <.LFE144>

0040795a <.LVL102>:
  40795a:	462e      	mov	r6, r5

0040795c <.LVL103>:
  40795c:	e728      	b.n	4077b0 <.LVL27>

0040795e <.LBB21>:
  40795e:	4629      	mov	r1, r5
  407960:	f002 fa62 	bl	409e28 <.LFE170>

00407964 <.LVL105>:
  407964:	e6ff      	b.n	407766 <.LBE2>

00407966 <.LBB22>:
  407966:	4629      	mov	r1, r5

00407968 <.LVL107>:
  407968:	4630      	mov	r0, r6

0040796a <.LBE22>:
  40796a:	461c      	mov	r4, r3

0040796c <.LBB23>:
  40796c:	46d1      	mov	r9, sl

0040796e <.LVL110>:
  40796e:	f002 fa5b 	bl	409e28 <.LFE170>

00407972 <.LVL111>:
  407972:	e70b      	b.n	40778c <.L11>

00407974 <.LBB24>:
  407974:	68ab      	ldr	r3, [r5, #8]
  407976:	6083      	str	r3, [r0, #8]

00407978 <.LVL113>:
  407978:	68eb      	ldr	r3, [r5, #12]
  40797a:	60c3      	str	r3, [r0, #12]
  40797c:	2a24      	cmp	r2, #36	; 0x24
  40797e:	d017      	beq.n	4079b0 <.LBB26>
  407980:	f100 0310 	add.w	r3, r0, #16

00407984 <.LVL114>:
  407984:	f105 0210 	add.w	r2, r5, #16

00407988 <.LVL115>:
  407988:	e6e7      	b.n	40775a <.LVL13>

0040798a <.LBE24>:
  40798a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40798e:	f023 0303 	bic.w	r3, r3, #3
  407992:	441c      	add	r4, r3

00407994 <.LVL117>:
  407994:	462e      	mov	r6, r5
  407996:	e6f9      	b.n	40778c <.L11>

00407998 <.LBB10>:
  407998:	68a9      	ldr	r1, [r5, #8]
  40799a:	f8ca 1010 	str.w	r1, [sl, #16]

0040799e <.LVL119>:
  40799e:	68e9      	ldr	r1, [r5, #12]
  4079a0:	f8ca 1014 	str.w	r1, [sl, #20]
  4079a4:	2a24      	cmp	r2, #36	; 0x24
  4079a6:	d00c      	beq.n	4079c2 <.LBB11>
  4079a8:	3510      	adds	r5, #16

004079aa <.LVL120>:
  4079aa:	f10a 0218 	add.w	r2, sl, #24

004079ae <.LVL121>:
  4079ae:	e7b9      	b.n	407924 <.LVL92>

004079b0 <.LBB26>:
  4079b0:	692b      	ldr	r3, [r5, #16]
  4079b2:	6103      	str	r3, [r0, #16]
  4079b4:	696b      	ldr	r3, [r5, #20]
  4079b6:	6143      	str	r3, [r0, #20]
  4079b8:	f105 0218 	add.w	r2, r5, #24

004079bc <.LVL123>:
  4079bc:	f100 0318 	add.w	r3, r0, #24

004079c0 <.LVL124>:
  4079c0:	e6cb      	b.n	40775a <.LVL13>

004079c2 <.LBB11>:
  4079c2:	692a      	ldr	r2, [r5, #16]

004079c4 <.LVL126>:
  4079c4:	f8ca 2018 	str.w	r2, [sl, #24]
  4079c8:	696a      	ldr	r2, [r5, #20]
  4079ca:	f8ca 201c 	str.w	r2, [sl, #28]
  4079ce:	3518      	adds	r5, #24

004079d0 <.LVL127>:
  4079d0:	f10a 0220 	add.w	r2, sl, #32

004079d4 <.LVL128>:
  4079d4:	e7a6      	b.n	407924 <.LVL92>

004079d6 <.LBB15>:
  4079d6:	4632      	mov	r2, r6

004079d8 <.LVL130>:
  4079d8:	e77f      	b.n	4078da <.LVL82>

004079da <.LBE15>:
  4079da:	4629      	mov	r1, r5

004079dc <.LVL132>:
  4079dc:	4630      	mov	r0, r6

004079de <.LVL133>:
  4079de:	9301      	str	r3, [sp, #4]
  4079e0:	f002 fa22 	bl	409e28 <.LFE170>

004079e4 <.LVL134>:
  4079e4:	9b01      	ldr	r3, [sp, #4]
  4079e6:	e77e      	b.n	4078e6 <.LBE14>

004079e8 <.LBB16>:
  4079e8:	68a9      	ldr	r1, [r5, #8]
  4079ea:	f8ca 1010 	str.w	r1, [sl, #16]

004079ee <.LVL136>:
  4079ee:	68e9      	ldr	r1, [r5, #12]
  4079f0:	f8ca 1014 	str.w	r1, [sl, #20]
  4079f4:	2a24      	cmp	r2, #36	; 0x24
  4079f6:	d003      	beq.n	407a00 <.LVL139>
  4079f8:	3510      	adds	r5, #16

004079fa <.LVL137>:
  4079fa:	f10a 0218 	add.w	r2, sl, #24

004079fe <.LVL138>:
  4079fe:	e76c      	b.n	4078da <.LVL82>

00407a00 <.LVL139>:
  407a00:	692a      	ldr	r2, [r5, #16]

00407a02 <.LVL140>:
  407a02:	f8ca 2018 	str.w	r2, [sl, #24]
  407a06:	696a      	ldr	r2, [r5, #20]
  407a08:	f8ca 201c 	str.w	r2, [sl, #28]
  407a0c:	3518      	adds	r5, #24

00407a0e <.LVL141>:
  407a0e:	f10a 0220 	add.w	r2, sl, #32

00407a12 <.LVL142>:
  407a12:	e762      	b.n	4078da <.LVL82>
  407a14:	2040d0b0 	.word	0x2040d0b0

Disassembly of section .text.Transform%37:

00407a18 <Transform>:
    #ifndef XTRANSFORM
         #define XTRANSFORM(S, B) Transform((S))
     #endif

    static int Transform(Sha256* sha256)
    {
  407a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00407a1c <.LCFI0>:
  407a1c:	b0cb      	sub	sp, #300	; 0x12c

00407a1e <.LCFI1>:
  407a1e:	f1a0 0a04 	sub.w	sl, r0, #4
  407a22:	ab41      	add	r3, sp, #260	; 0x104
  407a24:	9300      	str	r3, [sp, #0]
  407a26:	f100 011c 	add.w	r1, r0, #28
  407a2a:	4652      	mov	r2, sl

00407a2c <.LVL2>:
        word32 W[SHA256_BLOCK_SIZE];
    #endif

        /* Copy context->state[] to working vars */
        for (i = 0; i < 8; i++)
            S[i] = sha256->digest[i];
  407a2c:	f852 4f04 	ldr.w	r4, [r2, #4]!
  407a30:	f843 4f04 	str.w	r4, [r3, #4]!
        for (i = 0; i < 8; i++)
  407a34:	428a      	cmp	r2, r1
  407a36:	d1f9      	bne.n	407a2c <.LVL2>
  407a38:	9201      	str	r2, [sp, #4]
  407a3a:	301c      	adds	r0, #28

00407a3c <.LVL3>:
  407a3c:	ab01      	add	r3, sp, #4
  407a3e:	a911      	add	r1, sp, #68	; 0x44

00407a40 <.LVL4>:

        for (i = 0; i < 16; i++)
            W[i] = sha256->buffer[i];
  407a40:	f850 2f04 	ldr.w	r2, [r0, #4]!
  407a44:	f843 2f04 	str.w	r2, [r3, #4]!
        for (i = 0; i < 16; i++)
  407a48:	428b      	cmp	r3, r1
  407a4a:	d1f9      	bne.n	407a40 <.LVL4>
  407a4c:	f10d 0908 	add.w	r9, sp, #8
  407a50:	ac32      	add	r4, sp, #200	; 0xc8
  407a52:	4648      	mov	r0, r9
  407a54:	4605      	mov	r5, r0

        for (i = 16; i < SHA256_BLOCK_SIZE; i++)
            W[i] = Gamma1(W[i-2]) + W[i-7] + Gamma0(W[i-15]) + W[i-16];
  407a56:	6b82      	ldr	r2, [r0, #56]	; 0x38
  407a58:	f850 1f04 	ldr.w	r1, [r0, #4]!

00407a5c <.LBB143>:
        return (x >> y) | (x << (sizeof(y) * 8 - y));
  407a5c:	ea4f 43f2 	mov.w	r3, r2, ror #19

00407a60 <.LBE143>:
  407a60:	ea83 4372 	eor.w	r3, r3, r2, ror #17
  407a64:	ea83 2392 	eor.w	r3, r3, r2, lsr #10
  407a68:	6a6a      	ldr	r2, [r5, #36]	; 0x24
  407a6a:	682d      	ldr	r5, [r5, #0]
  407a6c:	442a      	add	r2, r5
  407a6e:	4413      	add	r3, r2

00407a70 <.LBB145>:
  407a70:	ea4f 42b1 	mov.w	r2, r1, ror #18

00407a74 <.LBE145>:
  407a74:	ea82 12f1 	eor.w	r2, r2, r1, ror #7
  407a78:	ea82 02d1 	eor.w	r2, r2, r1, lsr #3
  407a7c:	4413      	add	r3, r2
  407a7e:	63c3      	str	r3, [r0, #60]	; 0x3c
        for (i = 16; i < SHA256_BLOCK_SIZE; i++)
  407a80:	42a0      	cmp	r0, r4
  407a82:	d1e7      	bne.n	407a54 <.LVL4+0x14>
  407a84:	f8dd c124 	ldr.w	ip, [sp, #292]	; 0x124
  407a88:	9a45      	ldr	r2, [sp, #276]	; 0x114
  407a8a:	f8dd e120 	ldr.w	lr, [sp, #288]	; 0x120
  407a8e:	9944      	ldr	r1, [sp, #272]	; 0x110
  407a90:	9f47      	ldr	r7, [sp, #284]	; 0x11c
  407a92:	9d43      	ldr	r5, [sp, #268]	; 0x10c
  407a94:	9b46      	ldr	r3, [sp, #280]	; 0x118
  407a96:	9842      	ldr	r0, [sp, #264]	; 0x108
  407a98:	f8df 8284 	ldr.w	r8, [pc, #644]	; 407d20 <.LVL39+0x4>
  407a9c:	46d3      	mov	fp, sl
  407a9e:	46ca      	mov	sl, r9

00407aa0 <.LVL5>:
  407aa0:	46c1      	mov	r9, r8

00407aa2 <.LBB147>:
  407aa2:	ea4f 24f3 	mov.w	r4, r3, ror #11

00407aa6 <.LBE147>:

        for (i = 0; i < SHA256_BLOCK_SIZE; i += 8) {
            RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],i+0);
  407aa6:	ea84 14b3 	eor.w	r4, r4, r3, ror #6
  407aaa:	ea84 6873 	eor.w	r8, r4, r3, ror #25
  407aae:	f8d9 4000 	ldr.w	r4, [r9]
  407ab2:	f8da 6000 	ldr.w	r6, [sl]
  407ab6:	4434      	add	r4, r6
  407ab8:	4444      	add	r4, r8
  407aba:	ea8e 0607 	eor.w	r6, lr, r7
  407abe:	401e      	ands	r6, r3
  407ac0:	ea86 060e 	eor.w	r6, r6, lr
  407ac4:	4434      	add	r4, r6
  407ac6:	44a4      	add	ip, r4

00407ac8 <.LVL6>:
  407ac8:	4462      	add	r2, ip

00407aca <.LBB149>:
  407aca:	ea4f 3470 	mov.w	r4, r0, ror #13

00407ace <.LBE149>:
  407ace:	ea84 04b0 	eor.w	r4, r4, r0, ror #2
  407ad2:	ea84 54b0 	eor.w	r4, r4, r0, ror #22
  407ad6:	ea40 0605 	orr.w	r6, r0, r5
  407ada:	400e      	ands	r6, r1
  407adc:	ea00 0805 	and.w	r8, r0, r5
  407ae0:	ea46 0608 	orr.w	r6, r6, r8
  407ae4:	4434      	add	r4, r6

00407ae6 <.LVL7>:
  407ae6:	44a4      	add	ip, r4

00407ae8 <.LVL8>:
            RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],i+1);
  407ae8:	f8d9 4004 	ldr.w	r4, [r9, #4]

00407aec <.LVL9>:
  407aec:	f8da 6004 	ldr.w	r6, [sl, #4]
  407af0:	4434      	add	r4, r6
  407af2:	4474      	add	r4, lr
  407af4:	ea83 0e07 	eor.w	lr, r3, r7
  407af8:	ea0e 0e02 	and.w	lr, lr, r2
  407afc:	ea8e 0e07 	eor.w	lr, lr, r7
  407b00:	4474      	add	r4, lr

00407b02 <.LBB151>:
  407b02:	ea4f 2ef2 	mov.w	lr, r2, ror #11

00407b06 <.LBE151>:
  407b06:	ea8e 1eb2 	eor.w	lr, lr, r2, ror #6
  407b0a:	ea8e 6e72 	eor.w	lr, lr, r2, ror #25
  407b0e:	4474      	add	r4, lr

00407b10 <.LVL10>:
  407b10:	eb04 0e01 	add.w	lr, r4, r1

00407b14 <.LBB153>:
  407b14:	ea4f 317c 	mov.w	r1, ip, ror #13

00407b18 <.LBE153>:
  407b18:	ea81 01bc 	eor.w	r1, r1, ip, ror #2
  407b1c:	ea81 51bc 	eor.w	r1, r1, ip, ror #22
  407b20:	ea4c 0600 	orr.w	r6, ip, r0
  407b24:	402e      	ands	r6, r5
  407b26:	ea0c 0800 	and.w	r8, ip, r0
  407b2a:	ea46 0608 	orr.w	r6, r6, r8
  407b2e:	4431      	add	r1, r6

00407b30 <.LVL11>:
  407b30:	4421      	add	r1, r4

00407b32 <.LVL12>:
            RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],i+2);
  407b32:	f8d9 4008 	ldr.w	r4, [r9, #8]

00407b36 <.LVL13>:
  407b36:	f8da 6008 	ldr.w	r6, [sl, #8]
  407b3a:	4434      	add	r4, r6
  407b3c:	443c      	add	r4, r7
  407b3e:	ea82 0703 	eor.w	r7, r2, r3
  407b42:	ea07 070e 	and.w	r7, r7, lr
  407b46:	405f      	eors	r7, r3
  407b48:	443c      	add	r4, r7

00407b4a <.LBB155>:
  407b4a:	ea4f 27fe 	mov.w	r7, lr, ror #11

00407b4e <.LBE155>:
  407b4e:	ea87 17be 	eor.w	r7, r7, lr, ror #6
  407b52:	ea87 677e 	eor.w	r7, r7, lr, ror #25
  407b56:	4427      	add	r7, r4

00407b58 <.LVL14>:
  407b58:	443d      	add	r5, r7

00407b5a <.LBB157>:
  407b5a:	ea4f 3471 	mov.w	r4, r1, ror #13

00407b5e <.LBE157>:
  407b5e:	ea84 04b1 	eor.w	r4, r4, r1, ror #2
  407b62:	ea84 54b1 	eor.w	r4, r4, r1, ror #22
  407b66:	ea4c 0601 	orr.w	r6, ip, r1
  407b6a:	4006      	ands	r6, r0
  407b6c:	ea0c 0801 	and.w	r8, ip, r1
  407b70:	ea46 0608 	orr.w	r6, r6, r8
  407b74:	4434      	add	r4, r6

00407b76 <.LVL15>:
  407b76:	443c      	add	r4, r7

00407b78 <.LVL16>:
            RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],i+3);
  407b78:	f8d9 600c 	ldr.w	r6, [r9, #12]
  407b7c:	f8da 700c 	ldr.w	r7, [sl, #12]

00407b80 <.LVL17>:
  407b80:	443e      	add	r6, r7
  407b82:	4433      	add	r3, r6
  407b84:	ea82 060e 	eor.w	r6, r2, lr
  407b88:	402e      	ands	r6, r5
  407b8a:	4056      	eors	r6, r2
  407b8c:	4433      	add	r3, r6

00407b8e <.LBB159>:
  407b8e:	ea4f 26f5 	mov.w	r6, r5, ror #11

00407b92 <.LBE159>:
  407b92:	ea86 16b5 	eor.w	r6, r6, r5, ror #6
  407b96:	ea86 6675 	eor.w	r6, r6, r5, ror #25
  407b9a:	441e      	add	r6, r3

00407b9c <.LVL18>:
  407b9c:	eb06 0800 	add.w	r8, r6, r0

00407ba0 <.LBB161>:
  407ba0:	ea4f 3374 	mov.w	r3, r4, ror #13

00407ba4 <.LBE161>:
  407ba4:	ea83 03b4 	eor.w	r3, r3, r4, ror #2
  407ba8:	ea83 53b4 	eor.w	r3, r3, r4, ror #22
  407bac:	ea41 0004 	orr.w	r0, r1, r4
  407bb0:	ea00 000c 	and.w	r0, r0, ip
  407bb4:	ea01 0704 	and.w	r7, r1, r4
  407bb8:	4338      	orrs	r0, r7
  407bba:	4403      	add	r3, r0

00407bbc <.LVL19>:
  407bbc:	4433      	add	r3, r6

00407bbe <.LVL20>:
            RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],i+4);
  407bbe:	f8d9 0010 	ldr.w	r0, [r9, #16]
  407bc2:	f8da 6010 	ldr.w	r6, [sl, #16]

00407bc6 <.LVL21>:
  407bc6:	4430      	add	r0, r6
  407bc8:	4402      	add	r2, r0
  407bca:	ea8e 0005 	eor.w	r0, lr, r5
  407bce:	ea00 0008 	and.w	r0, r0, r8
  407bd2:	ea80 000e 	eor.w	r0, r0, lr
  407bd6:	4402      	add	r2, r0

00407bd8 <.LBB163>:
  407bd8:	ea4f 20f8 	mov.w	r0, r8, ror #11

00407bdc <.LBE163>:
  407bdc:	ea80 10b8 	eor.w	r0, r0, r8, ror #6
  407be0:	ea80 6078 	eor.w	r0, r0, r8, ror #25
  407be4:	4410      	add	r0, r2

00407be6 <.LVL22>:
  407be6:	4484      	add	ip, r0

00407be8 <.LBB165>:
  407be8:	ea4f 3273 	mov.w	r2, r3, ror #13

00407bec <.LBE165>:
  407bec:	ea82 02b3 	eor.w	r2, r2, r3, ror #2
  407bf0:	ea82 52b3 	eor.w	r2, r2, r3, ror #22
  407bf4:	ea44 0603 	orr.w	r6, r4, r3
  407bf8:	400e      	ands	r6, r1
  407bfa:	ea04 0703 	and.w	r7, r4, r3
  407bfe:	433e      	orrs	r6, r7
  407c00:	4432      	add	r2, r6

00407c02 <.LVL23>:
  407c02:	4402      	add	r2, r0

00407c04 <.LVL24>:
            RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],i+5);
  407c04:	f8d9 0014 	ldr.w	r0, [r9, #20]

00407c08 <.LVL25>:
  407c08:	f8da 6014 	ldr.w	r6, [sl, #20]
  407c0c:	4430      	add	r0, r6
  407c0e:	4470      	add	r0, lr
  407c10:	ea85 0e08 	eor.w	lr, r5, r8
  407c14:	ea0e 0e0c 	and.w	lr, lr, ip
  407c18:	ea8e 0e05 	eor.w	lr, lr, r5
  407c1c:	4470      	add	r0, lr

00407c1e <.LBB167>:
  407c1e:	ea4f 2efc 	mov.w	lr, ip, ror #11

00407c22 <.LBE167>:
  407c22:	ea8e 1ebc 	eor.w	lr, lr, ip, ror #6
  407c26:	ea8e 6e7c 	eor.w	lr, lr, ip, ror #25
  407c2a:	4470      	add	r0, lr

00407c2c <.LVL26>:
  407c2c:	eb01 0e00 	add.w	lr, r1, r0

00407c30 <.LBB169>:
  407c30:	ea4f 3172 	mov.w	r1, r2, ror #13

00407c34 <.LBE169>:
  407c34:	ea81 01b2 	eor.w	r1, r1, r2, ror #2
  407c38:	ea81 51b2 	eor.w	r1, r1, r2, ror #22
  407c3c:	ea43 0602 	orr.w	r6, r3, r2
  407c40:	4026      	ands	r6, r4
  407c42:	ea03 0702 	and.w	r7, r3, r2
  407c46:	433e      	orrs	r6, r7
  407c48:	4431      	add	r1, r6

00407c4a <.LVL27>:
  407c4a:	4401      	add	r1, r0

00407c4c <.LVL28>:
            RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],i+6);
  407c4c:	f8d9 0018 	ldr.w	r0, [r9, #24]

00407c50 <.LVL29>:
  407c50:	f8da 6018 	ldr.w	r6, [sl, #24]
  407c54:	4430      	add	r0, r6
  407c56:	4405      	add	r5, r0
  407c58:	ea88 000c 	eor.w	r0, r8, ip
  407c5c:	ea00 000e 	and.w	r0, r0, lr
  407c60:	ea80 0008 	eor.w	r0, r0, r8
  407c64:	4405      	add	r5, r0

00407c66 <.LBB171>:
  407c66:	ea4f 20fe 	mov.w	r0, lr, ror #11

00407c6a <.LBE171>:
  407c6a:	ea80 10be 	eor.w	r0, r0, lr, ror #6
  407c6e:	ea80 607e 	eor.w	r0, r0, lr, ror #25
  407c72:	4428      	add	r0, r5

00407c74 <.LVL30>:
  407c74:	1827      	adds	r7, r4, r0

00407c76 <.LBB173>:
  407c76:	ea4f 3571 	mov.w	r5, r1, ror #13

00407c7a <.LBE173>:
  407c7a:	ea85 05b1 	eor.w	r5, r5, r1, ror #2
  407c7e:	ea85 55b1 	eor.w	r5, r5, r1, ror #22
  407c82:	ea42 0401 	orr.w	r4, r2, r1
  407c86:	401c      	ands	r4, r3
  407c88:	ea02 0601 	and.w	r6, r2, r1
  407c8c:	4334      	orrs	r4, r6
  407c8e:	4425      	add	r5, r4

00407c90 <.LVL31>:
  407c90:	4405      	add	r5, r0

00407c92 <.LVL32>:
            RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],i+7);
  407c92:	f8d9 001c 	ldr.w	r0, [r9, #28]

00407c96 <.LVL33>:
  407c96:	f8da 401c 	ldr.w	r4, [sl, #28]
  407c9a:	4420      	add	r0, r4
  407c9c:	4440      	add	r0, r8
  407c9e:	ea8c 080e 	eor.w	r8, ip, lr
  407ca2:	ea08 0807 	and.w	r8, r8, r7
  407ca6:	ea88 080c 	eor.w	r8, r8, ip
  407caa:	4440      	add	r0, r8

00407cac <.LBB175>:
  407cac:	ea4f 28f7 	mov.w	r8, r7, ror #11

00407cb0 <.LBE175>:
  407cb0:	ea88 18b7 	eor.w	r8, r8, r7, ror #6
  407cb4:	ea88 6877 	eor.w	r8, r8, r7, ror #25
  407cb8:	4480      	add	r8, r0

00407cba <.LVL34>:
  407cba:	4443      	add	r3, r8

00407cbc <.LBB177>:
  407cbc:	ea4f 3075 	mov.w	r0, r5, ror #13

00407cc0 <.LBE177>:
  407cc0:	ea80 00b5 	eor.w	r0, r0, r5, ror #2
  407cc4:	ea80 50b5 	eor.w	r0, r0, r5, ror #22
  407cc8:	ea41 0405 	orr.w	r4, r1, r5
  407ccc:	4014      	ands	r4, r2
  407cce:	ea01 0605 	and.w	r6, r1, r5
  407cd2:	4334      	orrs	r4, r6
  407cd4:	4420      	add	r0, r4

00407cd6 <.LVL35>:
  407cd6:	4440      	add	r0, r8

00407cd8 <.LVL36>:
  407cd8:	f109 0920 	add.w	r9, r9, #32
  407cdc:	f10a 0a20 	add.w	sl, sl, #32
        for (i = 0; i < SHA256_BLOCK_SIZE; i += 8) {
  407ce0:	4c0e      	ldr	r4, [pc, #56]	; (407d1c <.LVL39>)
  407ce2:	45a1      	cmp	r9, r4
  407ce4:	f47f aedd 	bne.w	407aa2 <.LBB147>
  407ce8:	46da      	mov	sl, fp
  407cea:	f8cd c124 	str.w	ip, [sp, #292]	; 0x124
  407cee:	9346      	str	r3, [sp, #280]	; 0x118
  407cf0:	f8cd e120 	str.w	lr, [sp, #288]	; 0x120
  407cf4:	9747      	str	r7, [sp, #284]	; 0x11c
  407cf6:	9042      	str	r0, [sp, #264]	; 0x108
  407cf8:	9543      	str	r5, [sp, #268]	; 0x10c
  407cfa:	9144      	str	r1, [sp, #272]	; 0x110
  407cfc:	9245      	str	r2, [sp, #276]	; 0x114
  407cfe:	9a00      	ldr	r2, [sp, #0]

00407d00 <.LVL37>:
  407d00:	9801      	ldr	r0, [sp, #4]

00407d02 <.LVL38>:
        }

        /* Add the working vars back into digest state[] */
        for (i = 0; i < 8; i++) {
            sha256->digest[i] += S[i];
  407d02:	f8da 3004 	ldr.w	r3, [sl, #4]
  407d06:	f852 1f04 	ldr.w	r1, [r2, #4]!
  407d0a:	440b      	add	r3, r1
  407d0c:	f84a 3f04 	str.w	r3, [sl, #4]!
        for (i = 0; i < 8; i++) {
  407d10:	4582      	cmp	sl, r0
  407d12:	d1f6      	bne.n	407d02 <.LVL38>
    #ifdef WOLFSSL_SMALL_STACK
        XFREE(W, NULL, DYNAMIC_TYPE_TMP_BUFFER);
    #endif

        return 0;
    }
  407d14:	2000      	movs	r0, #0
  407d16:	b04b      	add	sp, #300	; 0x12c

00407d18 <.LCFI2>:
  407d18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407d1c <.LVL39>:
  407d1c:	00409998 	.word	0x00409998
  407d20:	00409898 	.word	0x00409898

Disassembly of section .text%38:

00407d24 <__udivmoddi4>:
  407d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407d28:	468c      	mov	ip, r1
  407d2a:	460d      	mov	r5, r1
  407d2c:	4604      	mov	r4, r0
  407d2e:	9e08      	ldr	r6, [sp, #32]
  407d30:	2b00      	cmp	r3, #0
  407d32:	d151      	bne.n	407dd8 <__udivmoddi4+0xb4>
  407d34:	428a      	cmp	r2, r1
  407d36:	4617      	mov	r7, r2
  407d38:	d96d      	bls.n	407e16 <__udivmoddi4+0xf2>
  407d3a:	fab2 fe82 	clz	lr, r2
  407d3e:	f1be 0f00 	cmp.w	lr, #0
  407d42:	d00b      	beq.n	407d5c <__udivmoddi4+0x38>
  407d44:	f1ce 0c20 	rsb	ip, lr, #32
  407d48:	fa01 f50e 	lsl.w	r5, r1, lr
  407d4c:	fa20 fc0c 	lsr.w	ip, r0, ip
  407d50:	fa02 f70e 	lsl.w	r7, r2, lr
  407d54:	ea4c 0c05 	orr.w	ip, ip, r5
  407d58:	fa00 f40e 	lsl.w	r4, r0, lr
  407d5c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  407d60:	0c25      	lsrs	r5, r4, #16
  407d62:	fbbc f8fa 	udiv	r8, ip, sl
  407d66:	fa1f f987 	uxth.w	r9, r7
  407d6a:	fb0a cc18 	mls	ip, sl, r8, ip
  407d6e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  407d72:	fb08 f309 	mul.w	r3, r8, r9
  407d76:	42ab      	cmp	r3, r5
  407d78:	d90a      	bls.n	407d90 <__udivmoddi4+0x6c>
  407d7a:	19ed      	adds	r5, r5, r7
  407d7c:	f108 32ff 	add.w	r2, r8, #4294967295
  407d80:	f080 8123 	bcs.w	407fca <__udivmoddi4+0x2a6>
  407d84:	42ab      	cmp	r3, r5
  407d86:	f240 8120 	bls.w	407fca <__udivmoddi4+0x2a6>
  407d8a:	f1a8 0802 	sub.w	r8, r8, #2
  407d8e:	443d      	add	r5, r7
  407d90:	1aed      	subs	r5, r5, r3
  407d92:	b2a4      	uxth	r4, r4
  407d94:	fbb5 f0fa 	udiv	r0, r5, sl
  407d98:	fb0a 5510 	mls	r5, sl, r0, r5
  407d9c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  407da0:	fb00 f909 	mul.w	r9, r0, r9
  407da4:	45a1      	cmp	r9, r4
  407da6:	d909      	bls.n	407dbc <__udivmoddi4+0x98>
  407da8:	19e4      	adds	r4, r4, r7
  407daa:	f100 33ff 	add.w	r3, r0, #4294967295
  407dae:	f080 810a 	bcs.w	407fc6 <__udivmoddi4+0x2a2>
  407db2:	45a1      	cmp	r9, r4
  407db4:	f240 8107 	bls.w	407fc6 <__udivmoddi4+0x2a2>
  407db8:	3802      	subs	r0, #2
  407dba:	443c      	add	r4, r7
  407dbc:	eba4 0409 	sub.w	r4, r4, r9
  407dc0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  407dc4:	2100      	movs	r1, #0
  407dc6:	2e00      	cmp	r6, #0
  407dc8:	d061      	beq.n	407e8e <__udivmoddi4+0x16a>
  407dca:	fa24 f40e 	lsr.w	r4, r4, lr
  407dce:	2300      	movs	r3, #0
  407dd0:	6034      	str	r4, [r6, #0]
  407dd2:	6073      	str	r3, [r6, #4]
  407dd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407dd8:	428b      	cmp	r3, r1
  407dda:	d907      	bls.n	407dec <__udivmoddi4+0xc8>
  407ddc:	2e00      	cmp	r6, #0
  407dde:	d054      	beq.n	407e8a <__udivmoddi4+0x166>
  407de0:	2100      	movs	r1, #0
  407de2:	e886 0021 	stmia.w	r6, {r0, r5}
  407de6:	4608      	mov	r0, r1
  407de8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407dec:	fab3 f183 	clz	r1, r3
  407df0:	2900      	cmp	r1, #0
  407df2:	f040 808e 	bne.w	407f12 <__udivmoddi4+0x1ee>
  407df6:	42ab      	cmp	r3, r5
  407df8:	d302      	bcc.n	407e00 <__udivmoddi4+0xdc>
  407dfa:	4282      	cmp	r2, r0
  407dfc:	f200 80fa 	bhi.w	407ff4 <__udivmoddi4+0x2d0>
  407e00:	1a84      	subs	r4, r0, r2
  407e02:	eb65 0503 	sbc.w	r5, r5, r3
  407e06:	2001      	movs	r0, #1
  407e08:	46ac      	mov	ip, r5
  407e0a:	2e00      	cmp	r6, #0
  407e0c:	d03f      	beq.n	407e8e <__udivmoddi4+0x16a>
  407e0e:	e886 1010 	stmia.w	r6, {r4, ip}
  407e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407e16:	b912      	cbnz	r2, 407e1e <__udivmoddi4+0xfa>
  407e18:	2701      	movs	r7, #1
  407e1a:	fbb7 f7f2 	udiv	r7, r7, r2
  407e1e:	fab7 fe87 	clz	lr, r7
  407e22:	f1be 0f00 	cmp.w	lr, #0
  407e26:	d134      	bne.n	407e92 <__udivmoddi4+0x16e>
  407e28:	1beb      	subs	r3, r5, r7
  407e2a:	0c3a      	lsrs	r2, r7, #16
  407e2c:	fa1f fc87 	uxth.w	ip, r7
  407e30:	2101      	movs	r1, #1
  407e32:	fbb3 f8f2 	udiv	r8, r3, r2
  407e36:	0c25      	lsrs	r5, r4, #16
  407e38:	fb02 3318 	mls	r3, r2, r8, r3
  407e3c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  407e40:	fb0c f308 	mul.w	r3, ip, r8
  407e44:	42ab      	cmp	r3, r5
  407e46:	d907      	bls.n	407e58 <__udivmoddi4+0x134>
  407e48:	19ed      	adds	r5, r5, r7
  407e4a:	f108 30ff 	add.w	r0, r8, #4294967295
  407e4e:	d202      	bcs.n	407e56 <__udivmoddi4+0x132>
  407e50:	42ab      	cmp	r3, r5
  407e52:	f200 80d1 	bhi.w	407ff8 <__udivmoddi4+0x2d4>
  407e56:	4680      	mov	r8, r0
  407e58:	1aed      	subs	r5, r5, r3
  407e5a:	b2a3      	uxth	r3, r4
  407e5c:	fbb5 f0f2 	udiv	r0, r5, r2
  407e60:	fb02 5510 	mls	r5, r2, r0, r5
  407e64:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  407e68:	fb0c fc00 	mul.w	ip, ip, r0
  407e6c:	45a4      	cmp	ip, r4
  407e6e:	d907      	bls.n	407e80 <__udivmoddi4+0x15c>
  407e70:	19e4      	adds	r4, r4, r7
  407e72:	f100 33ff 	add.w	r3, r0, #4294967295
  407e76:	d202      	bcs.n	407e7e <__udivmoddi4+0x15a>
  407e78:	45a4      	cmp	ip, r4
  407e7a:	f200 80b8 	bhi.w	407fee <__udivmoddi4+0x2ca>
  407e7e:	4618      	mov	r0, r3
  407e80:	eba4 040c 	sub.w	r4, r4, ip
  407e84:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  407e88:	e79d      	b.n	407dc6 <__udivmoddi4+0xa2>
  407e8a:	4631      	mov	r1, r6
  407e8c:	4630      	mov	r0, r6
  407e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407e92:	f1ce 0420 	rsb	r4, lr, #32
  407e96:	fa05 f30e 	lsl.w	r3, r5, lr
  407e9a:	fa07 f70e 	lsl.w	r7, r7, lr
  407e9e:	fa20 f804 	lsr.w	r8, r0, r4
  407ea2:	0c3a      	lsrs	r2, r7, #16
  407ea4:	fa25 f404 	lsr.w	r4, r5, r4
  407ea8:	ea48 0803 	orr.w	r8, r8, r3
  407eac:	fbb4 f1f2 	udiv	r1, r4, r2
  407eb0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  407eb4:	fb02 4411 	mls	r4, r2, r1, r4
  407eb8:	fa1f fc87 	uxth.w	ip, r7
  407ebc:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  407ec0:	fb01 f30c 	mul.w	r3, r1, ip
  407ec4:	42ab      	cmp	r3, r5
  407ec6:	fa00 f40e 	lsl.w	r4, r0, lr
  407eca:	d909      	bls.n	407ee0 <__udivmoddi4+0x1bc>
  407ecc:	19ed      	adds	r5, r5, r7
  407ece:	f101 30ff 	add.w	r0, r1, #4294967295
  407ed2:	f080 808a 	bcs.w	407fea <__udivmoddi4+0x2c6>
  407ed6:	42ab      	cmp	r3, r5
  407ed8:	f240 8087 	bls.w	407fea <__udivmoddi4+0x2c6>
  407edc:	3902      	subs	r1, #2
  407ede:	443d      	add	r5, r7
  407ee0:	1aeb      	subs	r3, r5, r3
  407ee2:	fa1f f588 	uxth.w	r5, r8
  407ee6:	fbb3 f0f2 	udiv	r0, r3, r2
  407eea:	fb02 3310 	mls	r3, r2, r0, r3
  407eee:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  407ef2:	fb00 f30c 	mul.w	r3, r0, ip
  407ef6:	42ab      	cmp	r3, r5
  407ef8:	d907      	bls.n	407f0a <__udivmoddi4+0x1e6>
  407efa:	19ed      	adds	r5, r5, r7
  407efc:	f100 38ff 	add.w	r8, r0, #4294967295
  407f00:	d26f      	bcs.n	407fe2 <__udivmoddi4+0x2be>
  407f02:	42ab      	cmp	r3, r5
  407f04:	d96d      	bls.n	407fe2 <__udivmoddi4+0x2be>
  407f06:	3802      	subs	r0, #2
  407f08:	443d      	add	r5, r7
  407f0a:	1aeb      	subs	r3, r5, r3
  407f0c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  407f10:	e78f      	b.n	407e32 <__udivmoddi4+0x10e>
  407f12:	f1c1 0720 	rsb	r7, r1, #32
  407f16:	fa22 f807 	lsr.w	r8, r2, r7
  407f1a:	408b      	lsls	r3, r1
  407f1c:	fa05 f401 	lsl.w	r4, r5, r1
  407f20:	ea48 0303 	orr.w	r3, r8, r3
  407f24:	fa20 fe07 	lsr.w	lr, r0, r7
  407f28:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  407f2c:	40fd      	lsrs	r5, r7
  407f2e:	ea4e 0e04 	orr.w	lr, lr, r4
  407f32:	fbb5 f9fc 	udiv	r9, r5, ip
  407f36:	ea4f 441e 	mov.w	r4, lr, lsr #16
  407f3a:	fb0c 5519 	mls	r5, ip, r9, r5
  407f3e:	fa1f f883 	uxth.w	r8, r3
  407f42:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  407f46:	fb09 f408 	mul.w	r4, r9, r8
  407f4a:	42ac      	cmp	r4, r5
  407f4c:	fa02 f201 	lsl.w	r2, r2, r1
  407f50:	fa00 fa01 	lsl.w	sl, r0, r1
  407f54:	d908      	bls.n	407f68 <__udivmoddi4+0x244>
  407f56:	18ed      	adds	r5, r5, r3
  407f58:	f109 30ff 	add.w	r0, r9, #4294967295
  407f5c:	d243      	bcs.n	407fe6 <__udivmoddi4+0x2c2>
  407f5e:	42ac      	cmp	r4, r5
  407f60:	d941      	bls.n	407fe6 <__udivmoddi4+0x2c2>
  407f62:	f1a9 0902 	sub.w	r9, r9, #2
  407f66:	441d      	add	r5, r3
  407f68:	1b2d      	subs	r5, r5, r4
  407f6a:	fa1f fe8e 	uxth.w	lr, lr
  407f6e:	fbb5 f0fc 	udiv	r0, r5, ip
  407f72:	fb0c 5510 	mls	r5, ip, r0, r5
  407f76:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  407f7a:	fb00 f808 	mul.w	r8, r0, r8
  407f7e:	45a0      	cmp	r8, r4
  407f80:	d907      	bls.n	407f92 <__udivmoddi4+0x26e>
  407f82:	18e4      	adds	r4, r4, r3
  407f84:	f100 35ff 	add.w	r5, r0, #4294967295
  407f88:	d229      	bcs.n	407fde <__udivmoddi4+0x2ba>
  407f8a:	45a0      	cmp	r8, r4
  407f8c:	d927      	bls.n	407fde <__udivmoddi4+0x2ba>
  407f8e:	3802      	subs	r0, #2
  407f90:	441c      	add	r4, r3
  407f92:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  407f96:	eba4 0408 	sub.w	r4, r4, r8
  407f9a:	fba0 8902 	umull	r8, r9, r0, r2
  407f9e:	454c      	cmp	r4, r9
  407fa0:	46c6      	mov	lr, r8
  407fa2:	464d      	mov	r5, r9
  407fa4:	d315      	bcc.n	407fd2 <__udivmoddi4+0x2ae>
  407fa6:	d012      	beq.n	407fce <__udivmoddi4+0x2aa>
  407fa8:	b156      	cbz	r6, 407fc0 <__udivmoddi4+0x29c>
  407faa:	ebba 030e 	subs.w	r3, sl, lr
  407fae:	eb64 0405 	sbc.w	r4, r4, r5
  407fb2:	fa04 f707 	lsl.w	r7, r4, r7
  407fb6:	40cb      	lsrs	r3, r1
  407fb8:	431f      	orrs	r7, r3
  407fba:	40cc      	lsrs	r4, r1
  407fbc:	6037      	str	r7, [r6, #0]
  407fbe:	6074      	str	r4, [r6, #4]
  407fc0:	2100      	movs	r1, #0
  407fc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407fc6:	4618      	mov	r0, r3
  407fc8:	e6f8      	b.n	407dbc <__udivmoddi4+0x98>
  407fca:	4690      	mov	r8, r2
  407fcc:	e6e0      	b.n	407d90 <__udivmoddi4+0x6c>
  407fce:	45c2      	cmp	sl, r8
  407fd0:	d2ea      	bcs.n	407fa8 <__udivmoddi4+0x284>
  407fd2:	ebb8 0e02 	subs.w	lr, r8, r2
  407fd6:	eb69 0503 	sbc.w	r5, r9, r3
  407fda:	3801      	subs	r0, #1
  407fdc:	e7e4      	b.n	407fa8 <__udivmoddi4+0x284>
  407fde:	4628      	mov	r0, r5
  407fe0:	e7d7      	b.n	407f92 <__udivmoddi4+0x26e>
  407fe2:	4640      	mov	r0, r8
  407fe4:	e791      	b.n	407f0a <__udivmoddi4+0x1e6>
  407fe6:	4681      	mov	r9, r0
  407fe8:	e7be      	b.n	407f68 <__udivmoddi4+0x244>
  407fea:	4601      	mov	r1, r0
  407fec:	e778      	b.n	407ee0 <__udivmoddi4+0x1bc>
  407fee:	3802      	subs	r0, #2
  407ff0:	443c      	add	r4, r7
  407ff2:	e745      	b.n	407e80 <__udivmoddi4+0x15c>
  407ff4:	4608      	mov	r0, r1
  407ff6:	e708      	b.n	407e0a <__udivmoddi4+0xe6>
  407ff8:	f1a8 0802 	sub.w	r8, r8, #2
  407ffc:	443d      	add	r5, r7
  407ffe:	e72b      	b.n	407e58 <__udivmoddi4+0x134>

Disassembly of section .text.wc_Sha512Final%39:

00408000 <wc_Sha512Final>:

int wc_Sha512Final(Sha512* sha512, byte* hash)
{
    int ret;

    if (sha512 == NULL || hash == NULL) {
  408000:	2800      	cmp	r0, #0
  408002:	f000 8120 	beq.w	408246 <.LBE801>
{
  408006:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

0040800a <.LCFI7>:
  40800a:	b083      	sub	sp, #12

0040800c <.LCFI8>:
  40800c:	468e      	mov	lr, r1
  40800e:	4601      	mov	r1, r0

00408010 <.LVL46>:
    if (sha512 == NULL || hash == NULL) {
  408010:	f1be 0f00 	cmp.w	lr, #0
  408014:	f000 8111 	beq.w	40823a <.LBE799>

00408018 <.LBB762>:
    byte* local = (byte*)sha512->buffer;
  408018:	f100 0358 	add.w	r3, r0, #88	; 0x58
  40801c:	9301      	str	r3, [sp, #4]

0040801e <.LVL48>:
    if (sha512 == NULL) {
  40801e:	2800      	cmp	r0, #0
  408020:	f000 810e 	beq.w	408240 <.LBB801>
    AddLength(sha512, sha512->buffLen);               /* before adding pads */
  408024:	6800      	ldr	r0, [r0, #0]

00408026 <.LBB764>:
    word64 tmp = sha512->loLen;
  408026:	e9d1 2302 	ldrd	r2, r3, [r1, #8]

0040802a <.LVL50>:
    if ( (sha512->loLen += len) < tmp)
  40802a:	eb12 0a00 	adds.w	sl, r2, r0
  40802e:	f143 0b00 	adc.w	fp, r3, #0
  408032:	e9c1 ab02 	strd	sl, fp, [r1, #8]
  408036:	459b      	cmp	fp, r3
  408038:	bf08      	it	eq
  40803a:	4592      	cmpeq	sl, r2
  40803c:	d206      	bcs.n	40804c <.LVL52+0x4>
        sha512->hiLen++;                       /* carry low to high */
  40803e:	e9d1 2304 	ldrd	r2, r3, [r1, #16]

00408042 <.LVL51>:
  408042:	3201      	adds	r2, #1
  408044:	f143 0300 	adc.w	r3, r3, #0

00408048 <.LVL52>:
  408048:	e9c1 2304 	strd	r2, r3, [r1, #16]
  40804c:	468a      	mov	sl, r1
  40804e:	46f3      	mov	fp, lr

00408050 <.LBE764>:
    local[sha512->buffLen++] = 0x80;  /* add 1 */
  408050:	1c43      	adds	r3, r0, #1
  408052:	600b      	str	r3, [r1, #0]
  408054:	2380      	movs	r3, #128	; 0x80
  408056:	9a01      	ldr	r2, [sp, #4]
  408058:	5413      	strb	r3, [r2, r0]
    if (sha512->buffLen > SHA512_PAD_SIZE) {
  40805a:	6808      	ldr	r0, [r1, #0]
  40805c:	2870      	cmp	r0, #112	; 0x70
  40805e:	d92f      	bls.n	4080c0 <.LVL61>

00408060 <.LVL54>:
        XMEMSET(&local[sha512->buffLen], 0, SHA512_BLOCK_SIZE - sha512->buffLen);
  408060:	1a1a      	subs	r2, r3, r0
  408062:	2100      	movs	r1, #0

00408064 <.LVL55>:
  408064:	9b01      	ldr	r3, [sp, #4]
  408066:	4418      	add	r0, r3
  408068:	f002 fb6a 	bl	40a740 <.LFE25>

0040806c <.LVL56>:
        sha512->buffLen += SHA512_BLOCK_SIZE - sha512->buffLen;
  40806c:	4652      	mov	r2, sl
  40806e:	2380      	movs	r3, #128	; 0x80
  408070:	f842 3b50 	str.w	r3, [r2], #80

00408074 <.LVL57>:
  408074:	f10a 0ed0 	add.w	lr, sl, #208	; 0xd0

00408078 <.LBB766>:
        out[i] = ByteReverseWord64(in[i]);
  408078:	6893      	ldr	r3, [r2, #8]
  40807a:	68d1      	ldr	r1, [r2, #12]

0040807c <.LBB768>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40807c:	0a18      	lsrs	r0, r3, #8
  40807e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  408082:	021b      	lsls	r3, r3, #8
  408084:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  408088:	4303      	orrs	r3, r0

0040808a <.LBE770>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  40808a:	ea4f 4733 	mov.w	r7, r3, ror #16
  40808e:	2600      	movs	r6, #0

00408090 <.LBB772>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408090:	0a0b      	lsrs	r3, r1, #8
  408092:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408096:	0209      	lsls	r1, r1, #8
  408098:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40809c:	430b      	orrs	r3, r1

0040809e <.LBB774>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40809e:	ea4f 4333 	mov.w	r3, r3, ror #16

004080a2 <.LBE772>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  4080a2:	ea46 0003 	orr.w	r0, r6, r3
  4080a6:	4639      	mov	r1, r7

004080a8 <.LBE768>:
        out[i] = ByteReverseWord64(in[i]);
  4080a8:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  4080ac:	4572      	cmp	r2, lr
  4080ae:	d1e3      	bne.n	408078 <.LBB766>

004080b0 <.LBE766>:
        ret = Transform(sha512);
  4080b0:	4650      	mov	r0, sl
  4080b2:	f7f8 f86f 	bl	400194 <_etext>

004080b6 <.LVL60>:
        if (ret != 0)
  4080b6:	4602      	mov	r2, r0
  4080b8:	2800      	cmp	r0, #0
  4080ba:	d151      	bne.n	408160 <.LBE762>
        sha512->buffLen = 0;
  4080bc:	f8ca 6000 	str.w	r6, [sl]

004080c0 <.LVL61>:
    XMEMSET(&local[sha512->buffLen], 0, SHA512_PAD_SIZE - sha512->buffLen);
  4080c0:	f8da 0000 	ldr.w	r0, [sl]
  4080c4:	f1c0 0270 	rsb	r2, r0, #112	; 0x70
  4080c8:	2100      	movs	r1, #0
  4080ca:	9b01      	ldr	r3, [sp, #4]
  4080cc:	4418      	add	r0, r3
  4080ce:	f002 fb37 	bl	40a740 <.LFE25>

004080d2 <.LVL62>:
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  4080d2:	f8da 7008 	ldr.w	r7, [sl, #8]
  4080d6:	f8da 600c 	ldr.w	r6, [sl, #12]
                                                         (sha512->hiLen << 3);
  4080da:	f8da 2010 	ldr.w	r2, [sl, #16]
  4080de:	f8da 3014 	ldr.w	r3, [sl, #20]
  4080e2:	00d9      	lsls	r1, r3, #3
  4080e4:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  4080e8:	00d0      	lsls	r0, r2, #3
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  4080ea:	0f72      	lsrs	r2, r6, #29
  4080ec:	2300      	movs	r3, #0
  4080ee:	1812      	adds	r2, r2, r0
  4080f0:	414b      	adcs	r3, r1
  4080f2:	e9ca 2304 	strd	r2, r3, [sl, #16]
    sha512->loLen = sha512->loLen << 3;
  4080f6:	00f6      	lsls	r6, r6, #3
  4080f8:	ea46 7657 	orr.w	r6, r6, r7, lsr #29
  4080fc:	00ff      	lsls	r7, r7, #3
  4080fe:	f8ca 7008 	str.w	r7, [sl, #8]
  408102:	f8ca 600c 	str.w	r6, [sl, #12]

00408106 <.LVL63>:
  408106:	f10a 0250 	add.w	r2, sl, #80	; 0x50
  40810a:	f10a 06c0 	add.w	r6, sl, #192	; 0xc0

0040810e <.LBB776>:
        out[i] = ByteReverseWord64(in[i]);
  40810e:	6893      	ldr	r3, [r2, #8]
  408110:	68d1      	ldr	r1, [r2, #12]

00408112 <.LBB778>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408112:	0a18      	lsrs	r0, r3, #8
  408114:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  408118:	021b      	lsls	r3, r3, #8
  40811a:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  40811e:	4303      	orrs	r3, r0

00408120 <.LBE780>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408120:	ea4f 4533 	mov.w	r5, r3, ror #16
  408124:	2400      	movs	r4, #0

00408126 <.LBB782>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408126:	0a0b      	lsrs	r3, r1, #8
  408128:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  40812c:	0209      	lsls	r1, r1, #8
  40812e:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  408132:	430b      	orrs	r3, r1

00408134 <.LBB784>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408134:	ea4f 4333 	mov.w	r3, r3, ror #16

00408138 <.LBE782>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408138:	ea44 0003 	orr.w	r0, r4, r3
  40813c:	4629      	mov	r1, r5

0040813e <.LBE778>:
        out[i] = ByteReverseWord64(in[i]);
  40813e:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  408142:	42b2      	cmp	r2, r6
  408144:	d1e3      	bne.n	40810e <.LBB776>

00408146 <.LBE776>:
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 2] = sha512->hiLen;
  408146:	e9da 2304 	ldrd	r2, r3, [sl, #16]
  40814a:	e9ca 2332 	strd	r2, r3, [sl, #200]	; 0xc8
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 1] = sha512->loLen;
  40814e:	e9da 2302 	ldrd	r2, r3, [sl, #8]
  408152:	e9ca 2334 	strd	r2, r3, [sl, #208]	; 0xd0
    ret = Transform(sha512);
  408156:	4650      	mov	r0, sl
  408158:	f7f8 f81c 	bl	400194 <_etext>

0040815c <.LVL66>:
    if (ret != 0)
  40815c:	4602      	mov	r2, r0
  40815e:	b118      	cbz	r0, 408168 <.LBB798>

00408160 <.LBE762>:
        return ret;

    XMEMCPY(hash, sha512->digest, SHA512_DIGEST_SIZE);

    return InitSha512(sha512);  /* reset state */
}
  408160:	4610      	mov	r0, r2
  408162:	b003      	add	sp, #12

00408164 <.LCFI9>:
  408164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00408168 <.LBB798>:
        ByteReverseWords64(sha512->digest, sha512->digest, SHA512_DIGEST_SIZE);
  408168:	f10a 0618 	add.w	r6, sl, #24

0040816c <.LVL69>:
  40816c:	f10a 0410 	add.w	r4, sl, #16
  408170:	f10a 0550 	add.w	r5, sl, #80	; 0x50

00408174 <.LBB786>:
        out[i] = ByteReverseWord64(in[i]);
  408174:	68a3      	ldr	r3, [r4, #8]
  408176:	68e1      	ldr	r1, [r4, #12]

00408178 <.LBB788>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408178:	0a18      	lsrs	r0, r3, #8
  40817a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  40817e:	021b      	lsls	r3, r3, #8
  408180:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  408184:	4303      	orrs	r3, r0

00408186 <.LBE790>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408186:	ea4f 4933 	mov.w	r9, r3, ror #16
  40818a:	f04f 0800 	mov.w	r8, #0

0040818e <.LBB792>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40818e:	0a0b      	lsrs	r3, r1, #8
  408190:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408194:	0209      	lsls	r1, r1, #8
  408196:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40819a:	430b      	orrs	r3, r1

0040819c <.LBB794>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40819c:	ea4f 4333 	mov.w	r3, r3, ror #16

004081a0 <.LBE792>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  4081a0:	ea48 0003 	orr.w	r0, r8, r3
  4081a4:	4649      	mov	r1, r9

004081a6 <.LBE788>:
        out[i] = ByteReverseWord64(in[i]);
  4081a6:	e9e4 0102 	strd	r0, r1, [r4, #8]!
    for (i = 0; i < count; i++)
  4081aa:	42ac      	cmp	r4, r5
  4081ac:	d1e2      	bne.n	408174 <.LBB786>

004081ae <.LBE786>:
    XMEMCPY(hash, sha512->digest, SHA512_DIGEST_SIZE);
  4081ae:	4633      	mov	r3, r6
  4081b0:	46de      	mov	lr, fp
  4081b2:	3640      	adds	r6, #64	; 0x40

004081b4 <.LVL72>:
  4081b4:	681d      	ldr	r5, [r3, #0]
  4081b6:	685c      	ldr	r4, [r3, #4]
  4081b8:	6898      	ldr	r0, [r3, #8]
  4081ba:	68d9      	ldr	r1, [r3, #12]
  4081bc:	f8ce 5000 	str.w	r5, [lr]
  4081c0:	f8ce 4004 	str.w	r4, [lr, #4]
  4081c4:	f8ce 0008 	str.w	r0, [lr, #8]
  4081c8:	f8ce 100c 	str.w	r1, [lr, #12]
  4081cc:	3310      	adds	r3, #16
  4081ce:	f10e 0e10 	add.w	lr, lr, #16
  4081d2:	42b3      	cmp	r3, r6
  4081d4:	d1ee      	bne.n	4081b4 <.LVL72>

004081d6 <.LBB799>:
    sha512->digest[0] = W64LIT(0x6a09e667f3bcc908);
  4081d6:	a11e      	add	r1, pc, #120	; (adr r1, 408250 <.LVL78+0x4>)
  4081d8:	e9d1 0100 	ldrd	r0, r1, [r1]
  4081dc:	e9ca 0106 	strd	r0, r1, [sl, #24]
    sha512->digest[1] = W64LIT(0xbb67ae8584caa73b);
  4081e0:	a11d      	add	r1, pc, #116	; (adr r1, 408258 <.LVL78+0xc>)
  4081e2:	e9d1 0100 	ldrd	r0, r1, [r1]
  4081e6:	e9ca 0108 	strd	r0, r1, [sl, #32]
    sha512->digest[2] = W64LIT(0x3c6ef372fe94f82b);
  4081ea:	a11d      	add	r1, pc, #116	; (adr r1, 408260 <.LVL78+0x14>)
  4081ec:	e9d1 0100 	ldrd	r0, r1, [r1]
  4081f0:	e9ca 010a 	strd	r0, r1, [sl, #40]	; 0x28
    sha512->digest[3] = W64LIT(0xa54ff53a5f1d36f1);
  4081f4:	a11c      	add	r1, pc, #112	; (adr r1, 408268 <.LVL78+0x1c>)
  4081f6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4081fa:	e9ca 010c 	strd	r0, r1, [sl, #48]	; 0x30
    sha512->digest[4] = W64LIT(0x510e527fade682d1);
  4081fe:	a11c      	add	r1, pc, #112	; (adr r1, 408270 <.LVL78+0x24>)
  408200:	e9d1 0100 	ldrd	r0, r1, [r1]
  408204:	e9ca 010e 	strd	r0, r1, [sl, #56]	; 0x38
    sha512->digest[5] = W64LIT(0x9b05688c2b3e6c1f);
  408208:	a11b      	add	r1, pc, #108	; (adr r1, 408278 <.LVL78+0x2c>)
  40820a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40820e:	e9ca 0110 	strd	r0, r1, [sl, #64]	; 0x40
    sha512->digest[6] = W64LIT(0x1f83d9abfb41bd6b);
  408212:	a11b      	add	r1, pc, #108	; (adr r1, 408280 <.LVL78+0x34>)
  408214:	e9d1 0100 	ldrd	r0, r1, [r1]
  408218:	e9ca 0112 	strd	r0, r1, [sl, #72]	; 0x48
    sha512->digest[7] = W64LIT(0x5be0cd19137e2179);
  40821c:	a11a      	add	r1, pc, #104	; (adr r1, 408288 <.LVL78+0x3c>)
  40821e:	e9d1 0100 	ldrd	r0, r1, [r1]
  408222:	e9ca 0114 	strd	r0, r1, [sl, #80]	; 0x50
    sha512->buffLen = 0;
  408226:	2300      	movs	r3, #0
  408228:	f8ca 3000 	str.w	r3, [sl]
    sha512->loLen   = 0;
  40822c:	2000      	movs	r0, #0
  40822e:	2100      	movs	r1, #0
  408230:	e9ca 0102 	strd	r0, r1, [sl, #8]
    sha512->hiLen   = 0;
  408234:	e9ca 0104 	strd	r0, r1, [sl, #16]
  408238:	e792      	b.n	408160 <.LBE762>

0040823a <.LBE799>:
        return BAD_FUNC_ARG;
  40823a:	f06f 02ac 	mvn.w	r2, #172	; 0xac
  40823e:	e78f      	b.n	408160 <.LBE762>

00408240 <.LBB801>:
        return BAD_FUNC_ARG;
  408240:	f06f 02ac 	mvn.w	r2, #172	; 0xac

00408244 <.LVL76>:
  408244:	e78c      	b.n	408160 <.LBE762>

00408246 <.LBE801>:
        return BAD_FUNC_ARG;
  408246:	f06f 02ac 	mvn.w	r2, #172	; 0xac
}
  40824a:	4610      	mov	r0, r2

0040824c <.LVL78>:
  40824c:	4770      	bx	lr
  40824e:	bf00      	nop
  408250:	f3bcc908 	.word	0xf3bcc908
  408254:	6a09e667 	.word	0x6a09e667
  408258:	84caa73b 	.word	0x84caa73b
  40825c:	bb67ae85 	.word	0xbb67ae85
  408260:	fe94f82b 	.word	0xfe94f82b
  408264:	3c6ef372 	.word	0x3c6ef372
  408268:	5f1d36f1 	.word	0x5f1d36f1
  40826c:	a54ff53a 	.word	0xa54ff53a
  408270:	ade682d1 	.word	0xade682d1
  408274:	510e527f 	.word	0x510e527f
  408278:	2b3e6c1f 	.word	0x2b3e6c1f
  40827c:	9b05688c 	.word	0x9b05688c
  408280:	fb41bd6b 	.word	0xfb41bd6b
  408284:	1f83d9ab 	.word	0x1f83d9ab
  408288:	137e2179 	.word	0x137e2179
  40828c:	5be0cd19 	.word	0x5be0cd19

Disassembly of section .text.wc_Sha384Final%40:

00408290 <wc_Sha384Final>:

int wc_Sha384Final(Sha384* sha384, byte* hash)
{
    int ret;

    if (sha384 == NULL || hash == NULL) {
  408290:	2800      	cmp	r0, #0
  408292:	f000 8120 	beq.w	4084d6 <.LBE922>
{
  408296:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

0040829a <.LCFI14>:
  40829a:	b083      	sub	sp, #12

0040829c <.LCFI15>:
  40829c:	468e      	mov	lr, r1
  40829e:	4601      	mov	r1, r0

004082a0 <.LVL105>:
    if (sha384 == NULL || hash == NULL) {
  4082a0:	f1be 0f00 	cmp.w	lr, #0
  4082a4:	f000 8111 	beq.w	4084ca <.LBE920>

004082a8 <.LBB883>:
    byte* local = (byte*)sha512->buffer;
  4082a8:	f100 0358 	add.w	r3, r0, #88	; 0x58
  4082ac:	9301      	str	r3, [sp, #4]

004082ae <.LVL107>:
    if (sha512 == NULL) {
  4082ae:	2800      	cmp	r0, #0
  4082b0:	f000 810e 	beq.w	4084d0 <.LBB922>
    AddLength(sha512, sha512->buffLen);               /* before adding pads */
  4082b4:	6800      	ldr	r0, [r0, #0]

004082b6 <.LBB885>:
    word64 tmp = sha512->loLen;
  4082b6:	e9d1 2302 	ldrd	r2, r3, [r1, #8]

004082ba <.LVL109>:
    if ( (sha512->loLen += len) < tmp)
  4082ba:	eb12 0a00 	adds.w	sl, r2, r0
  4082be:	f143 0b00 	adc.w	fp, r3, #0
  4082c2:	e9c1 ab02 	strd	sl, fp, [r1, #8]
  4082c6:	459b      	cmp	fp, r3
  4082c8:	bf08      	it	eq
  4082ca:	4592      	cmpeq	sl, r2
  4082cc:	d206      	bcs.n	4082dc <.LVL111+0x4>
        sha512->hiLen++;                       /* carry low to high */
  4082ce:	e9d1 2304 	ldrd	r2, r3, [r1, #16]

004082d2 <.LVL110>:
  4082d2:	3201      	adds	r2, #1
  4082d4:	f143 0300 	adc.w	r3, r3, #0

004082d8 <.LVL111>:
  4082d8:	e9c1 2304 	strd	r2, r3, [r1, #16]
  4082dc:	468a      	mov	sl, r1
  4082de:	46f3      	mov	fp, lr

004082e0 <.LBE885>:
    local[sha512->buffLen++] = 0x80;  /* add 1 */
  4082e0:	1c43      	adds	r3, r0, #1
  4082e2:	600b      	str	r3, [r1, #0]
  4082e4:	2380      	movs	r3, #128	; 0x80
  4082e6:	9a01      	ldr	r2, [sp, #4]
  4082e8:	5413      	strb	r3, [r2, r0]
    if (sha512->buffLen > SHA512_PAD_SIZE) {
  4082ea:	6808      	ldr	r0, [r1, #0]
  4082ec:	2870      	cmp	r0, #112	; 0x70
  4082ee:	d92f      	bls.n	408350 <.LVL120>

004082f0 <.LVL113>:
        XMEMSET(&local[sha512->buffLen], 0, SHA512_BLOCK_SIZE - sha512->buffLen);
  4082f0:	1a1a      	subs	r2, r3, r0
  4082f2:	2100      	movs	r1, #0

004082f4 <.LVL114>:
  4082f4:	9b01      	ldr	r3, [sp, #4]
  4082f6:	4418      	add	r0, r3
  4082f8:	f002 fa22 	bl	40a740 <.LFE25>

004082fc <.LVL115>:
        sha512->buffLen += SHA512_BLOCK_SIZE - sha512->buffLen;
  4082fc:	4652      	mov	r2, sl
  4082fe:	2380      	movs	r3, #128	; 0x80
  408300:	f842 3b50 	str.w	r3, [r2], #80

00408304 <.LVL116>:
  408304:	f10a 0ed0 	add.w	lr, sl, #208	; 0xd0

00408308 <.LBB887>:
        out[i] = ByteReverseWord64(in[i]);
  408308:	6893      	ldr	r3, [r2, #8]
  40830a:	68d1      	ldr	r1, [r2, #12]

0040830c <.LBB889>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40830c:	0a18      	lsrs	r0, r3, #8
  40830e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  408312:	021b      	lsls	r3, r3, #8
  408314:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  408318:	4303      	orrs	r3, r0

0040831a <.LBE891>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  40831a:	ea4f 4733 	mov.w	r7, r3, ror #16
  40831e:	2600      	movs	r6, #0

00408320 <.LBB893>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408320:	0a0b      	lsrs	r3, r1, #8
  408322:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408326:	0209      	lsls	r1, r1, #8
  408328:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40832c:	430b      	orrs	r3, r1

0040832e <.LBB895>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40832e:	ea4f 4333 	mov.w	r3, r3, ror #16

00408332 <.LBE893>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408332:	ea46 0003 	orr.w	r0, r6, r3
  408336:	4639      	mov	r1, r7

00408338 <.LBE889>:
        out[i] = ByteReverseWord64(in[i]);
  408338:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  40833c:	4572      	cmp	r2, lr
  40833e:	d1e3      	bne.n	408308 <.LBB887>

00408340 <.LBE887>:
        ret = Transform(sha512);
  408340:	4650      	mov	r0, sl
  408342:	f7f7 ff27 	bl	400194 <_etext>

00408346 <.LVL119>:
        if (ret != 0)
  408346:	4602      	mov	r2, r0
  408348:	2800      	cmp	r0, #0
  40834a:	d151      	bne.n	4083f0 <.LBE883>
        sha512->buffLen = 0;
  40834c:	f8ca 6000 	str.w	r6, [sl]

00408350 <.LVL120>:
    XMEMSET(&local[sha512->buffLen], 0, SHA512_PAD_SIZE - sha512->buffLen);
  408350:	f8da 0000 	ldr.w	r0, [sl]
  408354:	f1c0 0270 	rsb	r2, r0, #112	; 0x70
  408358:	2100      	movs	r1, #0
  40835a:	9b01      	ldr	r3, [sp, #4]
  40835c:	4418      	add	r0, r3
  40835e:	f002 f9ef 	bl	40a740 <.LFE25>

00408362 <.LVL121>:
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  408362:	f8da 7008 	ldr.w	r7, [sl, #8]
  408366:	f8da 600c 	ldr.w	r6, [sl, #12]
                                                         (sha512->hiLen << 3);
  40836a:	f8da 2010 	ldr.w	r2, [sl, #16]
  40836e:	f8da 3014 	ldr.w	r3, [sl, #20]
  408372:	00d9      	lsls	r1, r3, #3
  408374:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
  408378:	00d0      	lsls	r0, r2, #3
    sha512->hiLen = (sha512->loLen >> (8 * sizeof(sha512->loLen) - 3)) +
  40837a:	0f72      	lsrs	r2, r6, #29
  40837c:	2300      	movs	r3, #0
  40837e:	1812      	adds	r2, r2, r0
  408380:	414b      	adcs	r3, r1
  408382:	e9ca 2304 	strd	r2, r3, [sl, #16]
    sha512->loLen = sha512->loLen << 3;
  408386:	00f6      	lsls	r6, r6, #3
  408388:	ea46 7657 	orr.w	r6, r6, r7, lsr #29
  40838c:	00ff      	lsls	r7, r7, #3
  40838e:	f8ca 7008 	str.w	r7, [sl, #8]
  408392:	f8ca 600c 	str.w	r6, [sl, #12]

00408396 <.LVL122>:
  408396:	f10a 0250 	add.w	r2, sl, #80	; 0x50
  40839a:	f10a 06c0 	add.w	r6, sl, #192	; 0xc0

0040839e <.LBB897>:
        out[i] = ByteReverseWord64(in[i]);
  40839e:	6893      	ldr	r3, [r2, #8]
  4083a0:	68d1      	ldr	r1, [r2, #12]

004083a2 <.LBB899>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  4083a2:	0a18      	lsrs	r0, r3, #8
  4083a4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  4083a8:	021b      	lsls	r3, r3, #8
  4083aa:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  4083ae:	4303      	orrs	r3, r0

004083b0 <.LBE901>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  4083b0:	ea4f 4533 	mov.w	r5, r3, ror #16
  4083b4:	2400      	movs	r4, #0

004083b6 <.LBB903>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  4083b6:	0a0b      	lsrs	r3, r1, #8
  4083b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  4083bc:	0209      	lsls	r1, r1, #8
  4083be:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  4083c2:	430b      	orrs	r3, r1

004083c4 <.LBB905>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  4083c4:	ea4f 4333 	mov.w	r3, r3, ror #16

004083c8 <.LBE903>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  4083c8:	ea44 0003 	orr.w	r0, r4, r3
  4083cc:	4629      	mov	r1, r5

004083ce <.LBE899>:
        out[i] = ByteReverseWord64(in[i]);
  4083ce:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  4083d2:	42b2      	cmp	r2, r6
  4083d4:	d1e3      	bne.n	40839e <.LBB897>

004083d6 <.LBE897>:
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 2] = sha512->hiLen;
  4083d6:	e9da 2304 	ldrd	r2, r3, [sl, #16]
  4083da:	e9ca 2332 	strd	r2, r3, [sl, #200]	; 0xc8
    sha512->buffer[SHA512_BLOCK_SIZE / sizeof(word64) - 1] = sha512->loLen;
  4083de:	e9da 2302 	ldrd	r2, r3, [sl, #8]
  4083e2:	e9ca 2334 	strd	r2, r3, [sl, #208]	; 0xd0
    ret = Transform(sha512);
  4083e6:	4650      	mov	r0, sl
  4083e8:	f7f7 fed4 	bl	400194 <_etext>

004083ec <.LVL125>:
    if (ret != 0)
  4083ec:	4602      	mov	r2, r0
  4083ee:	b118      	cbz	r0, 4083f8 <.LBB919>

004083f0 <.LBE883>:
        return ret;

    XMEMCPY(hash, sha384->digest, SHA384_DIGEST_SIZE);

    return InitSha384(sha384);  /* reset state */
}
  4083f0:	4610      	mov	r0, r2
  4083f2:	b003      	add	sp, #12

004083f4 <.LCFI16>:
  4083f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004083f8 <.LBB919>:
        ByteReverseWords64(sha512->digest, sha512->digest, SHA512_DIGEST_SIZE);
  4083f8:	f10a 0618 	add.w	r6, sl, #24

004083fc <.LVL128>:
  4083fc:	f10a 0410 	add.w	r4, sl, #16
  408400:	f10a 0550 	add.w	r5, sl, #80	; 0x50

00408404 <.LBB907>:
        out[i] = ByteReverseWord64(in[i]);
  408404:	68a3      	ldr	r3, [r4, #8]
  408406:	68e1      	ldr	r1, [r4, #12]

00408408 <.LBB909>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408408:	0a18      	lsrs	r0, r3, #8
  40840a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  40840e:	021b      	lsls	r3, r3, #8
  408410:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  408414:	4303      	orrs	r3, r0

00408416 <.LBE911>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408416:	ea4f 4933 	mov.w	r9, r3, ror #16
  40841a:	f04f 0800 	mov.w	r8, #0

0040841e <.LBB913>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40841e:	0a0b      	lsrs	r3, r1, #8
  408420:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408424:	0209      	lsls	r1, r1, #8
  408426:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  40842a:	430b      	orrs	r3, r1

0040842c <.LBB915>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40842c:	ea4f 4333 	mov.w	r3, r3, ror #16

00408430 <.LBE913>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  408430:	ea48 0003 	orr.w	r0, r8, r3
  408434:	4649      	mov	r1, r9

00408436 <.LBE909>:
        out[i] = ByteReverseWord64(in[i]);
  408436:	e9e4 0102 	strd	r0, r1, [r4, #8]!
    for (i = 0; i < count; i++)
  40843a:	42ac      	cmp	r4, r5
  40843c:	d1e2      	bne.n	408404 <.LBB907>

0040843e <.LBE907>:
    XMEMCPY(hash, sha384->digest, SHA384_DIGEST_SIZE);
  40843e:	4633      	mov	r3, r6
  408440:	46de      	mov	lr, fp
  408442:	3630      	adds	r6, #48	; 0x30

00408444 <.LVL131>:
  408444:	681d      	ldr	r5, [r3, #0]
  408446:	685c      	ldr	r4, [r3, #4]
  408448:	6898      	ldr	r0, [r3, #8]
  40844a:	68d9      	ldr	r1, [r3, #12]
  40844c:	f8ce 5000 	str.w	r5, [lr]
  408450:	f8ce 4004 	str.w	r4, [lr, #4]
  408454:	f8ce 0008 	str.w	r0, [lr, #8]
  408458:	f8ce 100c 	str.w	r1, [lr, #12]
  40845c:	3310      	adds	r3, #16
  40845e:	f10e 0e10 	add.w	lr, lr, #16
  408462:	42b3      	cmp	r3, r6
  408464:	d1ee      	bne.n	408444 <.LVL131>

00408466 <.LBB920>:
    sha384->digest[0] = W64LIT(0xcbbb9d5dc1059ed8);
  408466:	a11e      	add	r1, pc, #120	; (adr r1, 4084e0 <.LVL137+0x4>)
  408468:	e9d1 0100 	ldrd	r0, r1, [r1]
  40846c:	e9ca 0106 	strd	r0, r1, [sl, #24]
    sha384->digest[1] = W64LIT(0x629a292a367cd507);
  408470:	a11d      	add	r1, pc, #116	; (adr r1, 4084e8 <.LVL137+0xc>)
  408472:	e9d1 0100 	ldrd	r0, r1, [r1]
  408476:	e9ca 0108 	strd	r0, r1, [sl, #32]
    sha384->digest[2] = W64LIT(0x9159015a3070dd17);
  40847a:	a11d      	add	r1, pc, #116	; (adr r1, 4084f0 <.LVL137+0x14>)
  40847c:	e9d1 0100 	ldrd	r0, r1, [r1]
  408480:	e9ca 010a 	strd	r0, r1, [sl, #40]	; 0x28
    sha384->digest[3] = W64LIT(0x152fecd8f70e5939);
  408484:	a11c      	add	r1, pc, #112	; (adr r1, 4084f8 <.LVL137+0x1c>)
  408486:	e9d1 0100 	ldrd	r0, r1, [r1]
  40848a:	e9ca 010c 	strd	r0, r1, [sl, #48]	; 0x30
    sha384->digest[4] = W64LIT(0x67332667ffc00b31);
  40848e:	a11c      	add	r1, pc, #112	; (adr r1, 408500 <.LVL137+0x24>)
  408490:	e9d1 0100 	ldrd	r0, r1, [r1]
  408494:	e9ca 010e 	strd	r0, r1, [sl, #56]	; 0x38
    sha384->digest[5] = W64LIT(0x8eb44a8768581511);
  408498:	a11b      	add	r1, pc, #108	; (adr r1, 408508 <.LVL137+0x2c>)
  40849a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40849e:	e9ca 0110 	strd	r0, r1, [sl, #64]	; 0x40
    sha384->digest[6] = W64LIT(0xdb0c2e0d64f98fa7);
  4084a2:	a11b      	add	r1, pc, #108	; (adr r1, 408510 <.LVL137+0x34>)
  4084a4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4084a8:	e9ca 0112 	strd	r0, r1, [sl, #72]	; 0x48
    sha384->digest[7] = W64LIT(0x47b5481dbefa4fa4);
  4084ac:	a11a      	add	r1, pc, #104	; (adr r1, 408518 <.LVL137+0x3c>)
  4084ae:	e9d1 0100 	ldrd	r0, r1, [r1]
  4084b2:	e9ca 0114 	strd	r0, r1, [sl, #80]	; 0x50
    sha384->buffLen = 0;
  4084b6:	2300      	movs	r3, #0
  4084b8:	f8ca 3000 	str.w	r3, [sl]
    sha384->loLen   = 0;
  4084bc:	2000      	movs	r0, #0
  4084be:	2100      	movs	r1, #0
  4084c0:	e9ca 0102 	strd	r0, r1, [sl, #8]
    sha384->hiLen   = 0;
  4084c4:	e9ca 0104 	strd	r0, r1, [sl, #16]
  4084c8:	e792      	b.n	4083f0 <.LBE883>

004084ca <.LBE920>:
        return BAD_FUNC_ARG;
  4084ca:	f06f 02ac 	mvn.w	r2, #172	; 0xac
  4084ce:	e78f      	b.n	4083f0 <.LBE883>

004084d0 <.LBB922>:
        return BAD_FUNC_ARG;
  4084d0:	f06f 02ac 	mvn.w	r2, #172	; 0xac

004084d4 <.LVL135>:
  4084d4:	e78c      	b.n	4083f0 <.LBE883>

004084d6 <.LBE922>:
        return BAD_FUNC_ARG;
  4084d6:	f06f 02ac 	mvn.w	r2, #172	; 0xac
}
  4084da:	4610      	mov	r0, r2

004084dc <.LVL137>:
  4084dc:	4770      	bx	lr
  4084de:	bf00      	nop
  4084e0:	c1059ed8 	.word	0xc1059ed8
  4084e4:	cbbb9d5d 	.word	0xcbbb9d5d
  4084e8:	367cd507 	.word	0x367cd507
  4084ec:	629a292a 	.word	0x629a292a
  4084f0:	3070dd17 	.word	0x3070dd17
  4084f4:	9159015a 	.word	0x9159015a
  4084f8:	f70e5939 	.word	0xf70e5939
  4084fc:	152fecd8 	.word	0x152fecd8
  408500:	ffc00b31 	.word	0xffc00b31
  408504:	67332667 	.word	0x67332667
  408508:	68581511 	.word	0x68581511
  40850c:	8eb44a87 	.word	0x8eb44a87
  408510:	64f98fa7 	.word	0x64f98fa7
  408514:	db0c2e0d 	.word	0xdb0c2e0d
  408518:	befa4fa4 	.word	0xbefa4fa4
  40851c:	47b5481d 	.word	0x47b5481d

Disassembly of section .rodata.K512%41:

00408520 <K512>:
  408520:	d728ae22 428a2f98 23ef65cd 71374491     ".(../.B.e.#.D7q
  408530:	ec4d3b2f b5c0fbcf 8189dbbc e9b5dba5     /;M.............
  408540:	f348b538 3956c25b b605d019 59f111f1     8.H.[.V9.......Y
  408550:	af194f9b 923f82a4 da6d8118 ab1c5ed5     .O....?...m..^..
  408560:	a3030242 d807aa98 45706fbe 12835b01     B........opE.[..
  408570:	4ee4b28c 243185be d5ffb4e2 550c7dc3     ...N..1$.....}.U
  408580:	f27b896f 72be5d74 3b1696b1 80deb1fe     o.{.t].r...;....
  408590:	25c71235 9bdc06a7 cf692694 c19bf174     5..%.....&i.t...
  4085a0:	9ef14ad2 e49b69c1 384f25e3 efbe4786     .J...i...%O8.G..
  4085b0:	8b8cd5b5 0fc19dc6 77ac9c65 240ca1cc     ........e..w...$
  4085c0:	592b0275 2de92c6f 6ea6e483 4a7484aa     u.+Yo,.-...n..tJ
  4085d0:	bd41fbd4 5cb0a9dc 831153b5 76f988da     ..A....\.S.....v
  4085e0:	ee66dfab 983e5152 2db43210 a831c66d     ..f.RQ>..2.-m.1.
  4085f0:	98fb213f b00327c8 beef0ee4 bf597fc7     ?!...'........Y.
  408600:	3da88fc2 c6e00bf3 930aa725 d5a79147     ...=....%...G...
  408610:	e003826f 06ca6351 0a0e6e70 14292967     o...Qc..pn..g)).
  408620:	46d22ffc 27b70a85 5c26c926 2e1b2138     ./.F...'&.&\8!..
  408630:	5ac42aed 4d2c6dfc 9d95b3df 53380d13     .*.Z.m,M......8S
  408640:	8baf63de 650a7354 3c77b2a8 766a0abb     .c..Ts.e..w<..jv
  408650:	47edaee6 81c2c92e 1482353b 92722c85     ...G....;5...,r.
  408660:	4cf10364 a2bfe8a1 bc423001 a81a664b     d..L.....0B.Kf..
  408670:	d0f89791 c24b8b70 0654be30 c76c51a3     ....p.K.0.T..Ql.
  408680:	d6ef5218 d192e819 5565a910 d6990624     .R........eU$...
  408690:	5771202a f40e3585 32bbd1b8 106aa070     * qW.5.....2p.j.
  4086a0:	b8d2d0c8 19a4c116 5141ab53 1e376c08     ........S.AQ.l7.
  4086b0:	df8eeb99 2748774c e19b48a8 34b0bcb5     ....LwH'.H.....4
  4086c0:	c5c95a63 391c0cb3 e3418acb 4ed8aa4a     cZ.....9..A.J..N
  4086d0:	7763e373 5b9cca4f d6b2b8a3 682e6ff3     s.cwO..[.....o.h
  4086e0:	5defb2fc 748f82ee 43172f60 78a5636f     ...]...t`/.Coc.x
  4086f0:	a1f0ab72 84c87814 1a6439ec 8cc70208     r....x...9d.....
  408700:	23631e28 90befffa de82bde9 a4506ceb     (.c#.........lP.
  408710:	b2c67915 bef9a3f7 e372532b c67178f2     .y......+Sr..xq.
  408720:	ea26619c ca273ece 21c0c207 d186b8c7     .a&..>'....!....
  408730:	cde0eb1e eada7dd6 ee6ed178 f57d4f7f     .....}..x.n..O}.
  408740:	72176fba 06f067aa a2c898a6 0a637dc5     .o.r.g.......}c.
  408750:	bef90dae 113f9804 131c471b 1b710b35     ......?..G..5.q.
  408760:	23047d84 28db77f5 40c72493 32caab7b     .}.#.w.(.$.@{..2
  408770:	15c9bebc 3c9ebe0a 9c100d4c 431d67c4     .......<L....g.C
  408780:	cb3e42b6 4cc5d4be fc657e2a 597f299c     .B>....L*~e..).Y
  408790:	3ad6faec 5fcb6fab 4a475817 6c44198c     ...:.o._.XGJ..Dl

Disassembly of section .text.APP_Tasks%42:

004087a0 <APP_Tasks>:

  Remarks:
    See prototype in app.h.
 */

void APP_Tasks(void) {
  4087a0:	b570      	push	{r4, r5, r6, lr}

004087a2 <.LCFI18>:

    static int i;

    /* Check the application's current state. */
    switch (appData.state) {
  4087a2:	4b80      	ldr	r3, [pc, #512]	; (4089a4 <.LBE44+0xe>)
  4087a4:	781b      	ldrb	r3, [r3, #0]
  4087a6:	2b08      	cmp	r3, #8
  4087a8:	f200 80fa 	bhi.w	4089a0 <.LBE44+0xa>
  4087ac:	e8df f013 	tbh	[pc, r3, lsl #1]
  4087b0:	000d0009 	.word	0x000d0009
  4087b4:	00190013 	.word	0x00190013
  4087b8:	0025001f 	.word	0x0025001f
  4087bc:	00ee002e 	.word	0x00ee002e
  4087c0:	00b7      	.short	0x00b7
            //            SYS_MESSAGE("SYS_MESSAGE:" "\r\n Application created " __DATE__ " " __TIME__ " initialized!\r\n");            
            //            SYS_DEBUG(SYS_ERROR_INFO,"SYS_DEBUG:" "\r\n Application created " __DATE__ " " __TIME__ " initialized!\r\n");
            // SYS_CONSOLE_Write(SYS_CONSOLE_INDEX_0, STDOUT_FILENO, msgBuffer, strlen(msgBuffer));            


            appData.state = APP_STATE_RUN_MD5_FEED;
  4087c2:	2201      	movs	r2, #1
  4087c4:	4b77      	ldr	r3, [pc, #476]	; (4089a4 <.LBE44+0xe>)
  4087c6:	701a      	strb	r2, [r3, #0]
            break;
  4087c8:	bd70      	pop	{r4, r5, r6, pc}
            appData.state = APP_STATE_RUN_MD5_FEED;
            break;
#endif

        case APP_STATE_RUN_MD5_FEED:
            APP_Md5Run_Feed();
  4087ca:	f002 fb13 	bl	40adf4 <APP_Md5Run_Feed>

004087ce <.LVL61>:
            appData.state = APP_STATE_RUN_SHA1_FEED;
  4087ce:	2202      	movs	r2, #2
  4087d0:	4b74      	ldr	r3, [pc, #464]	; (4089a4 <.LBE44+0xe>)
  4087d2:	701a      	strb	r2, [r3, #0]
            break;
  4087d4:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA1_FEED:
            APP_ShaRun_Feed();
  4087d6:	f002 fa63 	bl	40aca0 <.LFE143>

004087da <.LVL62>:
            appData.state = APP_STATE_RUN_SHA256_FEED;
  4087da:	2203      	movs	r2, #3
  4087dc:	4b71      	ldr	r3, [pc, #452]	; (4089a4 <.LBE44+0xe>)
  4087de:	701a      	strb	r2, [r3, #0]
            break;
  4087e0:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA256_FEED:
            APP_Sha256Run_Feed();
  4087e2:	f002 fa97 	bl	40ad14 <.LFE166>

004087e6 <.LVL63>:
            appData.state = APP_STATE_RUN_SHA384_FEED;
  4087e6:	2204      	movs	r2, #4
  4087e8:	4b6e      	ldr	r3, [pc, #440]	; (4089a4 <.LBE44+0xe>)
  4087ea:	701a      	strb	r2, [r3, #0]
            break;
  4087ec:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA384_FEED:
            APP_Sha384Run_Feed();
  4087ee:	f002 fc5b 	bl	40b0a8 <APP_Sha384Run_Feed>

004087f2 <.LVL64>:
            appData.state = APP_STATE_RUN_SHA512_FEED;
  4087f2:	2205      	movs	r2, #5
  4087f4:	4b6b      	ldr	r3, [pc, #428]	; (4089a4 <.LBE44+0xe>)
  4087f6:	701a      	strb	r2, [r3, #0]
            break;
  4087f8:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_RUN_SHA512_FEED:
            APP_Sha512Run_Feed();
  4087fa:	f002 fc83 	bl	40b104 <.LFE168>

004087fe <.LVL65>:
            i = 0;
  4087fe:	2200      	movs	r2, #0
  408800:	4b69      	ldr	r3, [pc, #420]	; (4089a8 <.LBE44+0x12>)
  408802:	601a      	str	r2, [r3, #0]
            appData.state = APP_STATE_DISPLAY_RESULTS;
  408804:	2206      	movs	r2, #6
  408806:	4b67      	ldr	r3, [pc, #412]	; (4089a4 <.LBE44+0xe>)
  408808:	701a      	strb	r2, [r3, #0]
            break;
  40880a:	bd70      	pop	{r4, r5, r6, pc}

        case APP_STATE_DISPLAY_RESULTS:
            switch (i) {
  40880c:	4b66      	ldr	r3, [pc, #408]	; (4089a8 <.LBE44+0x12>)
  40880e:	681b      	ldr	r3, [r3, #0]
  408810:	3b01      	subs	r3, #1
  408812:	2b08      	cmp	r3, #8
  408814:	d81c      	bhi.n	408850 <.LVL68>
  408816:	e8df f003 	tbb	[pc, r3]
  40881a:	1b05      	.short	0x1b05
  40881c:	1b3d1b26 	.word	0x1b3d1b26
  408820:	1b54      	.short	0x1b54
  408822:	6b          	.byte	0x6b
  408823:	00          	.byte	0x00
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.md5_timing);
#endif
                    break;

                case 1:
                    sprintf(printBuffer, "%s\n\rMD5 from feed:     ", printBuffer);
  408824:	4c61      	ldr	r4, [pc, #388]	; (4089ac <.LBE44+0x16>)
  408826:	4d62      	ldr	r5, [pc, #392]	; (4089b0 <.LBE44+0x1a>)
  408828:	4622      	mov	r2, r4
  40882a:	f105 0108 	add.w	r1, r5, #8
  40882e:	4620      	mov	r0, r4
  408830:	f002 fd3c 	bl	40b2ac <.LFE166>

00408834 <.LVL66>:
                    APP_DisplayHash(appData.md5_feed_result, CRYPT_MD5_DIGEST_SIZE);
  408834:	4e5b      	ldr	r6, [pc, #364]	; (4089a4 <.LBE44+0xe>)
  408836:	2110      	movs	r1, #16
  408838:	f106 00cc 	add.w	r0, r6, #204	; 0xcc
  40883c:	f003 f852 	bl	40b8e4 <L0>

00408840 <.LVL67>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.md5_feed_timing);
  408840:	f8d6 30dc 	ldr.w	r3, [r6, #220]	; 0xdc
  408844:	4622      	mov	r2, r4
  408846:	f105 0120 	add.w	r1, r5, #32
  40884a:	4620      	mov	r0, r4
  40884c:	f002 fd2e 	bl	40b2ac <.LFE166>

00408850 <.LVL68>:
                    sprintf(printBuffer, "%s\n\rSHA512 from feed:  ", printBuffer);
                    APP_DisplayHash(appData.sha512_feed_result, CRYPT_SHA512_DIGEST_SIZE);
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha512_feed_timing);
                    break;
            }
            i++;
  408850:	4a55      	ldr	r2, [pc, #340]	; (4089a8 <.LBE44+0x12>)
  408852:	6813      	ldr	r3, [r2, #0]
  408854:	3301      	adds	r3, #1
  408856:	6013      	str	r3, [r2, #0]
            if (i > 9)
  408858:	2b09      	cmp	r3, #9
                appData.state = APP_STATE_CHECK_RESULTS;
  40885a:	bfcc      	ite	gt
  40885c:	2208      	movgt	r2, #8
            else {
                appData.state = APP_STATE_WAIT_FOR_CONSOLE;
  40885e:	2207      	movle	r2, #7
  408860:	4b50      	ldr	r3, [pc, #320]	; (4089a4 <.LBE44+0xe>)
  408862:	701a      	strb	r2, [r3, #0]
  408864:	bd70      	pop	{r4, r5, r6, pc}
                    sprintf(printBuffer, "%s\n\rSHA from feed:     ", printBuffer);
  408866:	4c51      	ldr	r4, [pc, #324]	; (4089ac <.LBE44+0x16>)
  408868:	4d51      	ldr	r5, [pc, #324]	; (4089b0 <.LBE44+0x1a>)
  40886a:	4622      	mov	r2, r4
  40886c:	f105 013c 	add.w	r1, r5, #60	; 0x3c
  408870:	4620      	mov	r0, r4
  408872:	f002 fd1b 	bl	40b2ac <.LFE166>

00408876 <.LVL69>:
                    APP_DisplayHash(appData.sha1_feed_result, CRYPT_SHA_DIGEST_SIZE);
  408876:	4e4b      	ldr	r6, [pc, #300]	; (4089a4 <.LBE44+0xe>)
  408878:	2114      	movs	r1, #20
  40887a:	f106 00e0 	add.w	r0, r6, #224	; 0xe0
  40887e:	f003 f831 	bl	40b8e4 <L0>

00408882 <.LVL70>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha1_feed_timing);
  408882:	f8d6 30f4 	ldr.w	r3, [r6, #244]	; 0xf4
  408886:	4622      	mov	r2, r4
  408888:	f105 0120 	add.w	r1, r5, #32
  40888c:	4620      	mov	r0, r4
  40888e:	f002 fd0d 	bl	40b2ac <.LFE166>

00408892 <.LVL71>:
                    break;
  408892:	e7dd      	b.n	408850 <.LVL68>
                    sprintf(printBuffer, "%s\n\rSHA256 from feed:  ", printBuffer);
  408894:	4c45      	ldr	r4, [pc, #276]	; (4089ac <.LBE44+0x16>)
  408896:	4d46      	ldr	r5, [pc, #280]	; (4089b0 <.LBE44+0x1a>)
  408898:	4622      	mov	r2, r4
  40889a:	f105 0154 	add.w	r1, r5, #84	; 0x54
  40889e:	4620      	mov	r0, r4
  4088a0:	f002 fd04 	bl	40b2ac <.LFE166>

004088a4 <.LVL72>:
                    APP_DisplayHash(appData.sha256_feed_result, CRYPT_SHA256_DIGEST_SIZE);
  4088a4:	4e3f      	ldr	r6, [pc, #252]	; (4089a4 <.LBE44+0xe>)
  4088a6:	2120      	movs	r1, #32
  4088a8:	f106 00f8 	add.w	r0, r6, #248	; 0xf8
  4088ac:	f003 f81a 	bl	40b8e4 <L0>

004088b0 <.LVL73>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha256_feed_timing);
  4088b0:	f8d6 3118 	ldr.w	r3, [r6, #280]	; 0x118
  4088b4:	4622      	mov	r2, r4
  4088b6:	f105 0120 	add.w	r1, r5, #32
  4088ba:	4620      	mov	r0, r4
  4088bc:	f002 fcf6 	bl	40b2ac <.LFE166>

004088c0 <.LVL74>:
                    break;
  4088c0:	e7c6      	b.n	408850 <.LVL68>
                    sprintf(printBuffer, "%s\n\rSHA384 from feed:  ", printBuffer);
  4088c2:	4c3a      	ldr	r4, [pc, #232]	; (4089ac <.LBE44+0x16>)
  4088c4:	4d3a      	ldr	r5, [pc, #232]	; (4089b0 <.LBE44+0x1a>)
  4088c6:	4622      	mov	r2, r4
  4088c8:	f105 016c 	add.w	r1, r5, #108	; 0x6c
  4088cc:	4620      	mov	r0, r4
  4088ce:	f002 fced 	bl	40b2ac <.LFE166>

004088d2 <.LVL75>:
                    APP_DisplayHash(appData.sha384_feed_result, CRYPT_SHA384_DIGEST_SIZE);
  4088d2:	4e34      	ldr	r6, [pc, #208]	; (4089a4 <.LBE44+0xe>)
  4088d4:	2130      	movs	r1, #48	; 0x30
  4088d6:	f506 708e 	add.w	r0, r6, #284	; 0x11c
  4088da:	f003 f803 	bl	40b8e4 <L0>

004088de <.LVL76>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha384_feed_timing);
  4088de:	f8d6 314c 	ldr.w	r3, [r6, #332]	; 0x14c
  4088e2:	4622      	mov	r2, r4
  4088e4:	f105 0120 	add.w	r1, r5, #32
  4088e8:	4620      	mov	r0, r4
  4088ea:	f002 fcdf 	bl	40b2ac <.LFE166>

004088ee <.LVL77>:
                    break;
  4088ee:	e7af      	b.n	408850 <.LVL68>
                    sprintf(printBuffer, "%s\n\rSHA512 from feed:  ", printBuffer);
  4088f0:	4c2e      	ldr	r4, [pc, #184]	; (4089ac <.LBE44+0x16>)
  4088f2:	4d2f      	ldr	r5, [pc, #188]	; (4089b0 <.LBE44+0x1a>)
  4088f4:	4622      	mov	r2, r4
  4088f6:	f105 0184 	add.w	r1, r5, #132	; 0x84
  4088fa:	4620      	mov	r0, r4
  4088fc:	f002 fcd6 	bl	40b2ac <.LFE166>

00408900 <.LVL78>:
                    APP_DisplayHash(appData.sha512_feed_result, CRYPT_SHA512_DIGEST_SIZE);
  408900:	4e28      	ldr	r6, [pc, #160]	; (4089a4 <.LBE44+0xe>)
  408902:	2140      	movs	r1, #64	; 0x40
  408904:	f506 70a8 	add.w	r0, r6, #336	; 0x150
  408908:	f002 ffec 	bl	40b8e4 <L0>

0040890c <.LVL79>:
                    sprintf(printBuffer, "%s\t took %d clock cycles", printBuffer, (int) appData.sha512_feed_timing);
  40890c:	f8d6 3190 	ldr.w	r3, [r6, #400]	; 0x190
  408910:	4622      	mov	r2, r4
  408912:	f105 0120 	add.w	r1, r5, #32
  408916:	4620      	mov	r0, r4
  408918:	f002 fcc8 	bl	40b2ac <.LFE166>

0040891c <.LVL80>:
                    break;
  40891c:	e798      	b.n	408850 <.LVL68>
                    memcmp(SHAExpected, appData.sha1_result, CRYPT_SHA_DIGEST_SIZE) ||
                    memcmp(SHA256Expected, appData.sha256_result, CRYPT_SHA256_DIGEST_SIZE) ||
                    memcmp(SHA384Expected, appData.sha384_result, CRYPT_SHA384_DIGEST_SIZE) ||
                    memcmp(SHA512Expected, appData.sha512_result, CRYPT_SHA512_DIGEST_SIZE) ||
#endif
                    memcmp(MD5Expected, appData.md5_feed_result, CRYPT_MD5_DIGEST_SIZE) ||
  40891e:	2210      	movs	r2, #16
  408920:	4924      	ldr	r1, [pc, #144]	; (4089b4 <.LBE44+0x1e>)
  408922:	4825      	ldr	r0, [pc, #148]	; (4089b8 <.LBE44+0x22>)
  408924:	f002 fb30 	bl	40af88 <.LFE163>

00408928 <.LVL81>:
            if (
  408928:	b9b8      	cbnz	r0, 40895a <.LVL85+0x2>
                    memcmp(SHAExpected, appData.sha1_feed_result, CRYPT_SHA_DIGEST_SIZE) ||
  40892a:	2214      	movs	r2, #20
  40892c:	4923      	ldr	r1, [pc, #140]	; (4089bc <.LBE44+0x26>)
  40892e:	4824      	ldr	r0, [pc, #144]	; (4089c0 <.LBE44+0x2a>)
  408930:	f002 fb2a 	bl	40af88 <.LFE163>

00408934 <.LVL82>:
                    memcmp(MD5Expected, appData.md5_feed_result, CRYPT_MD5_DIGEST_SIZE) ||
  408934:	b988      	cbnz	r0, 40895a <.LVL85+0x2>
                    memcmp(SHA256Expected, appData.sha256_feed_result, CRYPT_SHA256_DIGEST_SIZE) ||
  408936:	2220      	movs	r2, #32
  408938:	4922      	ldr	r1, [pc, #136]	; (4089c4 <.LBE44+0x2e>)
  40893a:	4823      	ldr	r0, [pc, #140]	; (4089c8 <.LBE44+0x32>)
  40893c:	f002 fb24 	bl	40af88 <.LFE163>

00408940 <.LVL83>:
                    memcmp(SHAExpected, appData.sha1_feed_result, CRYPT_SHA_DIGEST_SIZE) ||
  408940:	b958      	cbnz	r0, 40895a <.LVL85+0x2>
                    memcmp(SHA384Expected, appData.sha384_feed_result, CRYPT_SHA384_DIGEST_SIZE) ||
  408942:	2230      	movs	r2, #48	; 0x30
  408944:	4921      	ldr	r1, [pc, #132]	; (4089cc <.LBE44+0x36>)
  408946:	4822      	ldr	r0, [pc, #136]	; (4089d0 <.LBE44+0x3a>)
  408948:	f002 fb1e 	bl	40af88 <.LFE163>

0040894c <.LVL84>:
                    memcmp(SHA256Expected, appData.sha256_feed_result, CRYPT_SHA256_DIGEST_SIZE) ||
  40894c:	b928      	cbnz	r0, 40895a <.LVL85+0x2>
                    memcmp(SHA512Expected, appData.sha512_feed_result, CRYPT_SHA512_DIGEST_SIZE)) {
  40894e:	2240      	movs	r2, #64	; 0x40
  408950:	4920      	ldr	r1, [pc, #128]	; (4089d4 <.LBE44+0x3e>)
  408952:	4821      	ldr	r0, [pc, #132]	; (4089d8 <.LBE44+0x42>)
  408954:	f002 fb18 	bl	40af88 <.LFE163>

00408958 <.LVL85>:
                    memcmp(SHA384Expected, appData.sha384_feed_result, CRYPT_SHA384_DIGEST_SIZE) ||
  408958:	b190      	cbz	r0, 408980 <.LVL88+0x8>
                // We had an error during comparisons
                sprintf(printBuffer, "%s\n\rA test failed.", printBuffer);
  40895a:	4814      	ldr	r0, [pc, #80]	; (4089ac <.LBE44+0x16>)
  40895c:	4602      	mov	r2, r0
  40895e:	491f      	ldr	r1, [pc, #124]	; (4089dc <.LBE44+0x46>)
  408960:	f002 fca4 	bl	40b2ac <.LFE166>

00408964 <.LVL86>:
                //BSP_LEDOn(BSP_LED_1);
            } else {
                sprintf(printBuffer, "%s\n\rAll tests passed.", printBuffer);
                //BSP_LEDOn(BSP_LED_3);
            }
            SYS_CONSOLE_Write(SYS_CONSOLE_INDEX_0, STDOUT_FILENO, printBuffer, strlen(printBuffer));
  408964:	4c11      	ldr	r4, [pc, #68]	; (4089ac <.LBE44+0x16>)
  408966:	4620      	mov	r0, r4
  408968:	f001 f98a 	bl	409c80 <strlen>

0040896c <.LVL87>:
  40896c:	4603      	mov	r3, r0
  40896e:	4622      	mov	r2, r4
  408970:	2101      	movs	r1, #1
  408972:	2000      	movs	r0, #0
  408974:	f002 ff6e 	bl	40b854 <.LFE0>

00408978 <.LVL88>:
            appData.state = APP_SPIN;
  408978:	2209      	movs	r2, #9
  40897a:	4b0a      	ldr	r3, [pc, #40]	; (4089a4 <.LBE44+0xe>)
  40897c:	701a      	strb	r2, [r3, #0]
            break;
  40897e:	bd70      	pop	{r4, r5, r6, pc}
                sprintf(printBuffer, "%s\n\rAll tests passed.", printBuffer);
  408980:	480a      	ldr	r0, [pc, #40]	; (4089ac <.LBE44+0x16>)
  408982:	4602      	mov	r2, r0
  408984:	4916      	ldr	r1, [pc, #88]	; (4089e0 <.LBE44+0x4a>)
  408986:	f002 fc91 	bl	40b2ac <.LFE166>

0040898a <.LVL89>:
  40898a:	e7eb      	b.n	408964 <.LVL86>

        case APP_STATE_WAIT_FOR_CONSOLE:
            //            if (appData.wrComplete)
            if (appData.wallTime <= APP_getTicks())
  40898c:	4b05      	ldr	r3, [pc, #20]	; (4089a4 <.LBE44+0xe>)
  40898e:	f8d3 4194 	ldr.w	r4, [r3, #404]	; 0x194

00408992 <.LBB44>:
    return SYS_TIME_CounterGet();
  408992:	f003 fa9b 	bl	40becc <SYS_TIME_CounterGet>

00408996 <.LBE44>:
            if (appData.wallTime <= APP_getTicks())
  408996:	4284      	cmp	r4, r0
  408998:	d802      	bhi.n	4089a0 <.LBE44+0xa>
                appData.state = APP_STATE_DISPLAY_RESULTS;
  40899a:	2206      	movs	r2, #6
  40899c:	4b01      	ldr	r3, [pc, #4]	; (4089a4 <.LBE44+0xe>)
  40899e:	701a      	strb	r2, [r3, #0]
  4089a0:	bd70      	pop	{r4, r5, r6, pc}
  4089a2:	bf00      	nop
  4089a4:	2040d6b8 	.word	0x2040d6b8
  4089a8:	2040dc9c 	.word	0x2040dc9c
  4089ac:	20400488 	.word	0x20400488
  4089b0:	00409690 	.word	0x00409690
  4089b4:	2040d784 	.word	0x2040d784
  4089b8:	0040bc84 	.word	0x0040bc84
  4089bc:	2040d798 	.word	0x2040d798
  4089c0:	0040bb1c 	.word	0x0040bb1c
  4089c4:	2040d7b0 	.word	0x2040d7b0
  4089c8:	0040b9e8 	.word	0x0040b9e8
  4089cc:	2040d7d4 	.word	0x2040d7d4
  4089d0:	0040b7b8 	.word	0x0040b7b8
  4089d4:	2040d808 	.word	0x2040d808
  4089d8:	0040b460 	.word	0x0040b460
  4089dc:	0040972c 	.word	0x0040972c
  4089e0:	00409740 	.word	0x00409740

Disassembly of section .text._free_r%43:

004089e4 <_free_r>:
  4089e4:	2900      	cmp	r1, #0
  4089e6:	d044      	beq.n	408a72 <.LVL43>
  4089e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

004089ec <.LCFI1>:
  4089ec:	460d      	mov	r5, r1
  4089ee:	4680      	mov	r8, r0
  4089f0:	f002 ffe4 	bl	40b9bc <.LFE141>

004089f4 <.LVL24>:
  4089f4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4089f8:	4969      	ldr	r1, [pc, #420]	; (408ba0 <.LVL82+0xa>)
  4089fa:	f027 0301 	bic.w	r3, r7, #1
  4089fe:	f1a5 0408 	sub.w	r4, r5, #8

00408a02 <.LVL25>:
  408a02:	18e2      	adds	r2, r4, r3

00408a04 <.LVL26>:
  408a04:	688e      	ldr	r6, [r1, #8]
  408a06:	6850      	ldr	r0, [r2, #4]
  408a08:	42b2      	cmp	r2, r6
  408a0a:	f020 0003 	bic.w	r0, r0, #3

00408a0e <.LVL27>:
  408a0e:	d05e      	beq.n	408ace <.LVL56>
  408a10:	07fe      	lsls	r6, r7, #31
  408a12:	6050      	str	r0, [r2, #4]

00408a14 <.LVL28>:
  408a14:	d40b      	bmi.n	408a2e <.LVL34>
  408a16:	f855 7c08 	ldr.w	r7, [r5, #-8]

00408a1a <.LVL29>:
  408a1a:	1be4      	subs	r4, r4, r7
  408a1c:	f101 0e08 	add.w	lr, r1, #8
  408a20:	68a5      	ldr	r5, [r4, #8]

00408a22 <.LVL31>:
  408a22:	4575      	cmp	r5, lr
  408a24:	443b      	add	r3, r7
  408a26:	d06d      	beq.n	408b04 <.LVL70>
  408a28:	68e7      	ldr	r7, [r4, #12]

00408a2a <.LVL33>:
  408a2a:	60ef      	str	r7, [r5, #12]
  408a2c:	60bd      	str	r5, [r7, #8]

00408a2e <.LVL34>:
  408a2e:	1815      	adds	r5, r2, r0
  408a30:	686d      	ldr	r5, [r5, #4]
  408a32:	07ed      	lsls	r5, r5, #31
  408a34:	d53e      	bpl.n	408ab4 <.LCFI5>
  408a36:	f043 0201 	orr.w	r2, r3, #1

00408a3a <.LVL35>:
  408a3a:	6062      	str	r2, [r4, #4]
  408a3c:	50e3      	str	r3, [r4, r3]

00408a3e <.LVL36>:
  408a3e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  408a42:	d217      	bcs.n	408a74 <.LCFI3>
  408a44:	08db      	lsrs	r3, r3, #3

00408a46 <.LVL37>:
  408a46:	1c58      	adds	r0, r3, #1
  408a48:	109a      	asrs	r2, r3, #2
  408a4a:	684d      	ldr	r5, [r1, #4]
  408a4c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  408a50:	60a7      	str	r7, [r4, #8]
  408a52:	2301      	movs	r3, #1

00408a54 <.LVL38>:
  408a54:	4093      	lsls	r3, r2
  408a56:	eb01 02c0 	add.w	r2, r1, r0, lsl #3

00408a5a <.LVL39>:
  408a5a:	432b      	orrs	r3, r5
  408a5c:	3a08      	subs	r2, #8

00408a5e <.LVL40>:
  408a5e:	60e2      	str	r2, [r4, #12]
  408a60:	604b      	str	r3, [r1, #4]
  408a62:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  408a66:	60fc      	str	r4, [r7, #12]

00408a68 <.LVL41>:
  408a68:	4640      	mov	r0, r8
  408a6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}

00408a6e <.LCFI2>:
  408a6e:	f003 ba35 	b.w	40bedc <.LFE144>

00408a72 <.LVL43>:
  408a72:	4770      	bx	lr

00408a74 <.LCFI3>:
  408a74:	0a5a      	lsrs	r2, r3, #9
  408a76:	2a04      	cmp	r2, #4
  408a78:	d852      	bhi.n	408b20 <.LVL74>
  408a7a:	099a      	lsrs	r2, r3, #6
  408a7c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  408a80:	00ff      	lsls	r7, r7, #3
  408a82:	f102 0538 	add.w	r5, r2, #56	; 0x38

00408a86 <.LVL45>:
  408a86:	19c8      	adds	r0, r1, r7
  408a88:	59ca      	ldr	r2, [r1, r7]
  408a8a:	3808      	subs	r0, #8

00408a8c <.LVL46>:
  408a8c:	4290      	cmp	r0, r2
  408a8e:	d04f      	beq.n	408b30 <.LVL75>
  408a90:	6851      	ldr	r1, [r2, #4]
  408a92:	f021 0103 	bic.w	r1, r1, #3
  408a96:	428b      	cmp	r3, r1
  408a98:	d232      	bcs.n	408b00 <.LVL68>
  408a9a:	6892      	ldr	r2, [r2, #8]
  408a9c:	4290      	cmp	r0, r2
  408a9e:	d1f7      	bne.n	408a90 <.LVL46+0x4>

00408aa0 <.LVL48>:
  408aa0:	68c3      	ldr	r3, [r0, #12]

00408aa2 <.LVL49>:
  408aa2:	60a0      	str	r0, [r4, #8]
  408aa4:	60e3      	str	r3, [r4, #12]
  408aa6:	609c      	str	r4, [r3, #8]
  408aa8:	60c4      	str	r4, [r0, #12]
  408aaa:	4640      	mov	r0, r8

00408aac <.LVL50>:
  408aac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}

00408ab0 <.LCFI4>:
  408ab0:	f003 ba14 	b.w	40bedc <.LFE144>

00408ab4 <.LCFI5>:
  408ab4:	6895      	ldr	r5, [r2, #8]
  408ab6:	4f3b      	ldr	r7, [pc, #236]	; (408ba4 <.LVL82+0xe>)
  408ab8:	42bd      	cmp	r5, r7
  408aba:	4403      	add	r3, r0
  408abc:	d040      	beq.n	408b40 <.LVL79>
  408abe:	68d0      	ldr	r0, [r2, #12]

00408ac0 <.LVL54>:
  408ac0:	60e8      	str	r0, [r5, #12]
  408ac2:	f043 0201 	orr.w	r2, r3, #1

00408ac6 <.LVL55>:
  408ac6:	6085      	str	r5, [r0, #8]
  408ac8:	6062      	str	r2, [r4, #4]
  408aca:	50e3      	str	r3, [r4, r3]
  408acc:	e7b7      	b.n	408a3e <.LVL36>

00408ace <.LVL56>:
  408ace:	07ff      	lsls	r7, r7, #31

00408ad0 <.LVL57>:
  408ad0:	4403      	add	r3, r0
  408ad2:	d407      	bmi.n	408ae4 <.LVL64>
  408ad4:	f855 2c08 	ldr.w	r2, [r5, #-8]

00408ad8 <.LVL59>:
  408ad8:	1aa4      	subs	r4, r4, r2

00408ada <.LVL60>:
  408ada:	4413      	add	r3, r2
  408adc:	68a0      	ldr	r0, [r4, #8]

00408ade <.LVL62>:
  408ade:	68e2      	ldr	r2, [r4, #12]

00408ae0 <.LVL63>:
  408ae0:	60c2      	str	r2, [r0, #12]
  408ae2:	6090      	str	r0, [r2, #8]

00408ae4 <.LVL64>:
  408ae4:	4a30      	ldr	r2, [pc, #192]	; (408ba8 <.LVL82+0x12>)
  408ae6:	6812      	ldr	r2, [r2, #0]
  408ae8:	f043 0001 	orr.w	r0, r3, #1
  408aec:	4293      	cmp	r3, r2
  408aee:	6060      	str	r0, [r4, #4]

00408af0 <.LVL65>:
  408af0:	608c      	str	r4, [r1, #8]
  408af2:	d3b9      	bcc.n	408a68 <.LVL41>
  408af4:	4b2d      	ldr	r3, [pc, #180]	; (408bac <.LVL82+0x16>)

00408af6 <.LVL66>:
  408af6:	4640      	mov	r0, r8
  408af8:	6819      	ldr	r1, [r3, #0]
  408afa:	f001 ff03 	bl	40a904 <.LFE0>

00408afe <.LVL67>:
  408afe:	e7b3      	b.n	408a68 <.LVL41>

00408b00 <.LVL68>:
  408b00:	4610      	mov	r0, r2

00408b02 <.LVL69>:
  408b02:	e7cd      	b.n	408aa0 <.LVL48>

00408b04 <.LVL70>:
  408b04:	1811      	adds	r1, r2, r0
  408b06:	6849      	ldr	r1, [r1, #4]
  408b08:	07c9      	lsls	r1, r1, #31
  408b0a:	d444      	bmi.n	408b96 <.LVL82>
  408b0c:	6891      	ldr	r1, [r2, #8]
  408b0e:	68d2      	ldr	r2, [r2, #12]

00408b10 <.LVL71>:
  408b10:	60ca      	str	r2, [r1, #12]
  408b12:	4403      	add	r3, r0

00408b14 <.LVL72>:
  408b14:	f043 0001 	orr.w	r0, r3, #1

00408b18 <.LVL73>:
  408b18:	6091      	str	r1, [r2, #8]
  408b1a:	6060      	str	r0, [r4, #4]
  408b1c:	50e3      	str	r3, [r4, r3]
  408b1e:	e7a3      	b.n	408a68 <.LVL41>

00408b20 <.LVL74>:
  408b20:	2a14      	cmp	r2, #20
  408b22:	d816      	bhi.n	408b52 <.LVL81>
  408b24:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  408b28:	00ff      	lsls	r7, r7, #3
  408b2a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  408b2e:	e7aa      	b.n	408a86 <.LVL45>

00408b30 <.LVL75>:
  408b30:	10aa      	asrs	r2, r5, #2

00408b32 <.LVL76>:
  408b32:	2301      	movs	r3, #1

00408b34 <.LVL77>:
  408b34:	684d      	ldr	r5, [r1, #4]

00408b36 <.LVL78>:
  408b36:	4093      	lsls	r3, r2
  408b38:	432b      	orrs	r3, r5
  408b3a:	604b      	str	r3, [r1, #4]
  408b3c:	4603      	mov	r3, r0
  408b3e:	e7b0      	b.n	408aa2 <.LVL49>

00408b40 <.LVL79>:
  408b40:	f043 0201 	orr.w	r2, r3, #1

00408b44 <.LVL80>:
  408b44:	614c      	str	r4, [r1, #20]
  408b46:	610c      	str	r4, [r1, #16]
  408b48:	60e5      	str	r5, [r4, #12]
  408b4a:	60a5      	str	r5, [r4, #8]
  408b4c:	6062      	str	r2, [r4, #4]
  408b4e:	50e3      	str	r3, [r4, r3]
  408b50:	e78a      	b.n	408a68 <.LVL41>

00408b52 <.LVL81>:
  408b52:	2a54      	cmp	r2, #84	; 0x54
  408b54:	d806      	bhi.n	408b64 <.LVL81+0x12>
  408b56:	0b1a      	lsrs	r2, r3, #12
  408b58:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  408b5c:	00ff      	lsls	r7, r7, #3
  408b5e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  408b62:	e790      	b.n	408a86 <.LVL45>
  408b64:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  408b68:	d806      	bhi.n	408b78 <.LVL81+0x26>
  408b6a:	0bda      	lsrs	r2, r3, #15
  408b6c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  408b70:	00ff      	lsls	r7, r7, #3
  408b72:	f102 0577 	add.w	r5, r2, #119	; 0x77
  408b76:	e786      	b.n	408a86 <.LVL45>
  408b78:	f240 5054 	movw	r0, #1364	; 0x554
  408b7c:	4282      	cmp	r2, r0
  408b7e:	d806      	bhi.n	408b8e <.LVL81+0x3c>
  408b80:	0c9a      	lsrs	r2, r3, #18
  408b82:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  408b86:	00ff      	lsls	r7, r7, #3
  408b88:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  408b8c:	e77b      	b.n	408a86 <.LVL45>
  408b8e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  408b92:	257e      	movs	r5, #126	; 0x7e
  408b94:	e777      	b.n	408a86 <.LVL45>

00408b96 <.LVL82>:
  408b96:	f043 0101 	orr.w	r1, r3, #1
  408b9a:	6061      	str	r1, [r4, #4]
  408b9c:	6013      	str	r3, [r2, #0]
  408b9e:	e763      	b.n	408a68 <.LVL41>
  408ba0:	2040d0b0 	.word	0x2040d0b0
  408ba4:	2040d0b8 	.word	0x2040d0b8
  408ba8:	2040dcb4 	.word	0x2040dcb4
  408bac:	2040dcac 	.word	0x2040dcac

Disassembly of section .text.wc_Sha256Final%44:

00408bb0 <wc_Sha256Final>:

        return XTRANSFORM(sha256, local);
    }

    int wc_Sha256Final(Sha256* sha256, byte* hash)
    {
  408bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

00408bb2 <.LCFI8>:
        int ret;

        if (sha256 == NULL || hash == NULL) {
  408bb2:	2800      	cmp	r0, #0
  408bb4:	f000 80a9 	beq.w	408d0a <.LVL93>
  408bb8:	4604      	mov	r4, r0
  408bba:	2900      	cmp	r1, #0
  408bbc:	f000 80a5 	beq.w	408d0a <.LVL93>

00408bc0 <.LBB240>:
        byte* local = (byte*)sha256->buffer;
  408bc0:	f100 0620 	add.w	r6, r0, #32

00408bc4 <.LVL71>:
        if (sha256 == NULL) {
  408bc4:	2800      	cmp	r0, #0
  408bc6:	f000 80a3 	beq.w	408d10 <.LBB265>
        AddLength(sha256, sha256->buffLen);  /* before adding pads */
  408bca:	6e03      	ldr	r3, [r0, #96]	; 0x60

00408bcc <.LBB242>:
        word32 tmp = sha256->loLen;
  408bcc:	6e40      	ldr	r0, [r0, #100]	; 0x64

00408bce <.LVL73>:
        if ( (sha256->loLen += len) < tmp)
  408bce:	181a      	adds	r2, r3, r0
  408bd0:	6662      	str	r2, [r4, #100]	; 0x64
  408bd2:	4290      	cmp	r0, r2
  408bd4:	d902      	bls.n	408bdc <.LVL73+0xe>
            sha256->hiLen++;                       /* carry low to high */
  408bd6:	6ea2      	ldr	r2, [r4, #104]	; 0x68
  408bd8:	3201      	adds	r2, #1
  408bda:	66a2      	str	r2, [r4, #104]	; 0x68
  408bdc:	460d      	mov	r5, r1

00408bde <.LBE242>:
        local[sha256->buffLen++] = 0x80;     /* add 1 */
  408bde:	1c5a      	adds	r2, r3, #1
  408be0:	6622      	str	r2, [r4, #96]	; 0x60
  408be2:	2280      	movs	r2, #128	; 0x80
  408be4:	54f2      	strb	r2, [r6, r3]
        if (sha256->buffLen > SHA256_PAD_SIZE) {
  408be6:	6e20      	ldr	r0, [r4, #96]	; 0x60
  408be8:	2838      	cmp	r0, #56	; 0x38
  408bea:	d921      	bls.n	408c30 <.LVL81>
            XMEMSET(&local[sha256->buffLen], 0,
  408bec:	f1c0 0240 	rsb	r2, r0, #64	; 0x40
  408bf0:	2100      	movs	r1, #0

00408bf2 <.LVL75>:
  408bf2:	4430      	add	r0, r6
  408bf4:	f001 fda4 	bl	40a740 <.LFE25>

00408bf8 <.LVL76>:
            sha256->buffLen += SHA256_BLOCK_SIZE - sha256->buffLen;
  408bf8:	2340      	movs	r3, #64	; 0x40
  408bfa:	6623      	str	r3, [r4, #96]	; 0x60

00408bfc <.LVL77>:
  408bfc:	f104 011c 	add.w	r1, r4, #28
  408c00:	f104 005c 	add.w	r0, r4, #92	; 0x5c

00408c04 <.LBB244>:
        out[i] = ByteReverseWord32(in[i]);
  408c04:	684a      	ldr	r2, [r1, #4]

00408c06 <.LBB246>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408c06:	0a13      	lsrs	r3, r2, #8
  408c08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408c0c:	0212      	lsls	r2, r2, #8
  408c0e:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  408c12:	4313      	orrs	r3, r2

00408c14 <.LBB248>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408c14:	ea4f 4333 	mov.w	r3, r3, ror #16

00408c18 <.LBE246>:
        out[i] = ByteReverseWord32(in[i]);
  408c18:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  408c1c:	4281      	cmp	r1, r0
  408c1e:	d1f1      	bne.n	408c04 <.LBB244>

00408c20 <.LBE244>:
            ret = XTRANSFORM(sha256, local);
  408c20:	4620      	mov	r0, r4
  408c22:	f7fe fef9 	bl	407a18 <.LBE16>

00408c26 <.LVL80>:
            if (ret != 0)
  408c26:	4607      	mov	r7, r0
  408c28:	2800      	cmp	r0, #0
  408c2a:	d16c      	bne.n	408d06 <.LBE263>
            sha256->buffLen = 0;
  408c2c:	2300      	movs	r3, #0
  408c2e:	6623      	str	r3, [r4, #96]	; 0x60

00408c30 <.LVL81>:
        XMEMSET(&local[sha256->buffLen], 0, SHA256_PAD_SIZE - sha256->buffLen);
  408c30:	6e20      	ldr	r0, [r4, #96]	; 0x60
  408c32:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
  408c36:	2100      	movs	r1, #0
  408c38:	4430      	add	r0, r6
  408c3a:	f001 fd81 	bl	40a740 <.LFE25>

00408c3e <.LVL82>:
        sha256->hiLen = (sha256->loLen >> (8 * sizeof(sha256->loLen) - 3)) +
  408c3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
                                                         (sha256->hiLen << 3);
  408c40:	6ea1      	ldr	r1, [r4, #104]	; 0x68
        sha256->hiLen = (sha256->loLen >> (8 * sizeof(sha256->loLen) - 3)) +
  408c42:	0f5a      	lsrs	r2, r3, #29
  408c44:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
  408c48:	66a2      	str	r2, [r4, #104]	; 0x68
        sha256->loLen = sha256->loLen << 3;
  408c4a:	00db      	lsls	r3, r3, #3
  408c4c:	6663      	str	r3, [r4, #100]	; 0x64

00408c4e <.LVL83>:
  408c4e:	f104 011c 	add.w	r1, r4, #28
  408c52:	f104 005c 	add.w	r0, r4, #92	; 0x5c

00408c56 <.LBB250>:
        out[i] = ByteReverseWord32(in[i]);
  408c56:	684a      	ldr	r2, [r1, #4]

00408c58 <.LBB252>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408c58:	0a13      	lsrs	r3, r2, #8
  408c5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408c5e:	0212      	lsls	r2, r2, #8
  408c60:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  408c64:	4313      	orrs	r3, r2

00408c66 <.LBB254>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408c66:	ea4f 4333 	mov.w	r3, r3, ror #16

00408c6a <.LBE252>:
        out[i] = ByteReverseWord32(in[i]);
  408c6a:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  408c6e:	4281      	cmp	r1, r0
  408c70:	d1f1      	bne.n	408c56 <.LBB250>

00408c72 <.LBE250>:
        XMEMCPY(&local[SHA256_PAD_SIZE], &sha256->hiLen, sizeof(word32));
  408c72:	6ea3      	ldr	r3, [r4, #104]	; 0x68
  408c74:	65a3      	str	r3, [r4, #88]	; 0x58
        XMEMCPY(&local[SHA256_PAD_SIZE + sizeof(word32)], &sha256->loLen,
  408c76:	6e63      	ldr	r3, [r4, #100]	; 0x64
  408c78:	65e3      	str	r3, [r4, #92]	; 0x5c
        return XTRANSFORM(sha256, local);
  408c7a:	4620      	mov	r0, r4
  408c7c:	f7fe fecc 	bl	407a18 <.LBE16>

00408c80 <.LBE240>:
        #endif
        }
    #endif /* WOLFSSL_ASYNC_CRYPT */

        ret = Sha256Final(sha256);
        if (ret != 0)
  408c80:	4607      	mov	r7, r0
  408c82:	2800      	cmp	r0, #0
  408c84:	d13f      	bne.n	408d06 <.LBE263>
            return ret;

    #if defined(LITTLE_ENDIAN_ORDER)
        ByteReverseWords(sha256->digest, sha256->digest, SHA256_DIGEST_SIZE);
  408c86:	4626      	mov	r6, r4

00408c88 <.LVL87>:
  408c88:	1f21      	subs	r1, r4, #4
  408c8a:	f104 001c 	add.w	r0, r4, #28

00408c8e <.LBB257>:
        out[i] = ByteReverseWord32(in[i]);
  408c8e:	684a      	ldr	r2, [r1, #4]

00408c90 <.LBB259>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408c90:	0a13      	lsrs	r3, r2, #8
  408c92:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408c96:	0212      	lsls	r2, r2, #8
  408c98:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  408c9c:	4313      	orrs	r3, r2

00408c9e <.LBB261>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408c9e:	ea4f 4333 	mov.w	r3, r3, ror #16

00408ca2 <.LBE259>:
        out[i] = ByteReverseWord32(in[i]);
  408ca2:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  408ca6:	4281      	cmp	r1, r0
  408ca8:	d1f1      	bne.n	408c8e <.LBB257>

00408caa <.LBE257>:
    #endif
        XMEMCPY(hash, sha256->digest, SHA256_DIGEST_SIZE);
  408caa:	6830      	ldr	r0, [r6, #0]
  408cac:	6871      	ldr	r1, [r6, #4]
  408cae:	68b2      	ldr	r2, [r6, #8]
  408cb0:	68f3      	ldr	r3, [r6, #12]
  408cb2:	6028      	str	r0, [r5, #0]
  408cb4:	6069      	str	r1, [r5, #4]
  408cb6:	60aa      	str	r2, [r5, #8]
  408cb8:	60eb      	str	r3, [r5, #12]
  408cba:	6930      	ldr	r0, [r6, #16]
  408cbc:	6971      	ldr	r1, [r6, #20]
  408cbe:	69b2      	ldr	r2, [r6, #24]
  408cc0:	69f3      	ldr	r3, [r6, #28]
  408cc2:	6128      	str	r0, [r5, #16]
  408cc4:	6169      	str	r1, [r5, #20]
  408cc6:	61aa      	str	r2, [r5, #24]
  408cc8:	61eb      	str	r3, [r5, #28]

00408cca <.LBB263>:
    XMEMSET(sha256->digest, 0, sizeof(sha256->digest));
  408cca:	2220      	movs	r2, #32
  408ccc:	2100      	movs	r1, #0
  408cce:	4620      	mov	r0, r4
  408cd0:	f001 fd36 	bl	40a740 <.LFE25>

00408cd4 <.LVL91>:
    sha256->digest[0] = 0x6A09E667L;
  408cd4:	4b10      	ldr	r3, [pc, #64]	; (408d18 <.LVL95+0x4>)
  408cd6:	6023      	str	r3, [r4, #0]
    sha256->digest[1] = 0xBB67AE85L;
  408cd8:	4b10      	ldr	r3, [pc, #64]	; (408d1c <.LVL95+0x8>)
  408cda:	6063      	str	r3, [r4, #4]
    sha256->digest[2] = 0x3C6EF372L;
  408cdc:	4b10      	ldr	r3, [pc, #64]	; (408d20 <.LVL95+0xc>)
  408cde:	60a3      	str	r3, [r4, #8]
    sha256->digest[3] = 0xA54FF53AL;
  408ce0:	4b10      	ldr	r3, [pc, #64]	; (408d24 <.LVL95+0x10>)
  408ce2:	60e3      	str	r3, [r4, #12]
    sha256->digest[4] = 0x510E527FL;
  408ce4:	4b10      	ldr	r3, [pc, #64]	; (408d28 <.LVL95+0x14>)
  408ce6:	6123      	str	r3, [r4, #16]
    sha256->digest[5] = 0x9B05688CL;
  408ce8:	4b10      	ldr	r3, [pc, #64]	; (408d2c <.LVL95+0x18>)
  408cea:	6163      	str	r3, [r4, #20]
    sha256->digest[6] = 0x1F83D9ABL;
  408cec:	4b10      	ldr	r3, [pc, #64]	; (408d30 <.LVL95+0x1c>)
  408cee:	61a3      	str	r3, [r4, #24]
    sha256->digest[7] = 0x5BE0CD19L;
  408cf0:	f103 5374 	add.w	r3, r3, #1023410176	; 0x3d000000
  408cf4:	f5a3 0323 	sub.w	r3, r3, #10682368	; 0xa30000
  408cf8:	f6a3 4392 	subw	r3, r3, #3218	; 0xc92
  408cfc:	61e3      	str	r3, [r4, #28]
    sha256->buffLen = 0;
  408cfe:	2300      	movs	r3, #0
  408d00:	6623      	str	r3, [r4, #96]	; 0x60
    sha256->loLen   = 0;
  408d02:	6663      	str	r3, [r4, #100]	; 0x64
    sha256->hiLen   = 0;
  408d04:	66a3      	str	r3, [r4, #104]	; 0x68

00408d06 <.LBE263>:

        return InitSha256(sha256);  /* reset state */
    }
  408d06:	4638      	mov	r0, r7
  408d08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00408d0a <.LVL93>:
            return BAD_FUNC_ARG;
  408d0a:	f06f 07ac 	mvn.w	r7, #172	; 0xac
  408d0e:	e7fa      	b.n	408d06 <.LBE263>

00408d10 <.LBB265>:
            return BAD_FUNC_ARG;
  408d10:	f06f 07ac 	mvn.w	r7, #172	; 0xac

00408d14 <.LVL95>:
  408d14:	e7f7      	b.n	408d06 <.LBE263>
  408d16:	bf00      	nop
  408d18:	6a09e667 	.word	0x6a09e667
  408d1c:	bb67ae85 	.word	0xbb67ae85
  408d20:	3c6ef372 	.word	0x3c6ef372
  408d24:	a54ff53a 	.word	0xa54ff53a
  408d28:	510e527f 	.word	0x510e527f
  408d2c:	9b05688c 	.word	0x9b05688c
  408d30:	1f83d9ab 	.word	0x1f83d9ab

Disassembly of section .text.Console_UART_Tasks%45:

00408d34 <Console_UART_Tasks>:
        consUartData.isReadComplete = true;
    }
}

void Console_UART_Tasks(SYS_MODULE_OBJ object)
{
  408d34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

00408d38 <.LCFI5>:
    /* Update the application state machine based
     * on the current state */
    struct QPacket pkt;
    size_t *sizeRead;

    switch(consUartData.state)
  408d38:	4b4c      	ldr	r3, [pc, #304]	; (408e6c <.LVL45+0x4>)
  408d3a:	781b      	ldrb	r3, [r3, #0]
  408d3c:	2b08      	cmp	r3, #8
  408d3e:	f200 8093 	bhi.w	408e68 <.LVL45>
  408d42:	e8df f003 	tbb	[pc, r3]
  408d46:	9105      	.short	0x9105
  408d48:	6029124f 	.word	0x6029124f
  408d4c:	9191      	.short	0x9191
  408d4e:	8f          	.byte	0x8f
  408d4f:	00          	.byte	0x00
    {
        case CONSOLE_UART_STATE_INIT:

            /* Register a callback with device layer to get event notification (for end point 0) */
            USART1_WriteCallbackRegister(UARTDeviceWriteCallback, 0);
  408d50:	2100      	movs	r1, #0
  408d52:	4847      	ldr	r0, [pc, #284]	; (408e70 <.LVL45+0x8>)

00408d54 <.LVL19>:
  408d54:	f003 f820 	bl	40bd98 <.LFE171>

00408d58 <.LVL20>:
            USART1_ReadCallbackRegister(UARTDeviceReadCallback, 0);
  408d58:	2100      	movs	r1, #0
  408d5a:	4846      	ldr	r0, [pc, #280]	; (408e74 <.LVL45+0xc>)
  408d5c:	f003 f824 	bl	40bda8 <.LFE150>

00408d60 <.LVL21>:

            /* If the driver was opened, it is ready for operation */
            consUartData.state = CONSOLE_UART_STATE_READY;
  408d60:	2202      	movs	r2, #2
  408d62:	4b42      	ldr	r3, [pc, #264]	; (408e6c <.LVL45+0x4>)
  408d64:	701a      	strb	r2, [r3, #0]

            break;
  408d66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00408d6a <.LVL22>:

        case CONSOLE_UART_STATE_SCHEDULE_READ:

            consUartData.state = CONSOLE_UART_STATE_WAIT_FOR_READ_COMPLETE;
  408d6a:	2204      	movs	r2, #4
  408d6c:	4b3f      	ldr	r3, [pc, #252]	; (408e6c <.LVL45+0x4>)
  408d6e:	701a      	strb	r2, [r3, #0]

            if (readQueue.numElem)
  408d70:	4b41      	ldr	r3, [pc, #260]	; (408e78 <.LVL45+0x10>)
  408d72:	689b      	ldr	r3, [r3, #8]
  408d74:	2b00      	cmp	r3, #0
  408d76:	d077      	beq.n	408e68 <.LVL45>
            {
                consUartData.isReadComplete = false;
  408d78:	2200      	movs	r2, #0
  408d7a:	4b3c      	ldr	r3, [pc, #240]	; (408e6c <.LVL45+0x4>)
  408d7c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
                pkt = rdQueueElements[readQueue.tailPos];
  408d80:	4b3e      	ldr	r3, [pc, #248]	; (408e7c <.LVL45+0x14>)
  408d82:	4a3d      	ldr	r2, [pc, #244]	; (408e78 <.LVL45+0x10>)
  408d84:	6812      	ldr	r2, [r2, #0]
  408d86:	eb03 01c2 	add.w	r1, r3, r2, lsl #3

00408d8a <.LVL23>:

                USART1_Read (pkt.data.buf, pkt.sz);
  408d8a:	6849      	ldr	r1, [r1, #4]

00408d8c <.LVL24>:
  408d8c:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]

00408d90 <.LVL25>:
  408d90:	f002 fca0 	bl	40b6d4 <.LFE145>

00408d94 <.LVL26>:
  408d94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00408d98 <.LVL27>:
            }
            break;

        case CONSOLE_UART_STATE_WAIT_FOR_READ_COMPLETE:

            if(consUartData.isReadComplete)
  408d98:	4b34      	ldr	r3, [pc, #208]	; (408e6c <.LVL45+0x4>)
  408d9a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
  408d9e:	b943      	cbnz	r3, 408db2 <.LVL27+0x1a>
                    consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
                }
            }
            else
            {
                if (writeQueue.numElem)
  408da0:	4b37      	ldr	r3, [pc, #220]	; (408e80 <.LVL45+0x18>)
  408da2:	689b      	ldr	r3, [r3, #8]
  408da4:	2b00      	cmp	r3, #0
  408da6:	d05f      	beq.n	408e68 <.LVL45>
                {
                    consUartData.state = CONSOLE_UART_STATE_SCHEDULE_WRITE;
  408da8:	2205      	movs	r2, #5
  408daa:	4b30      	ldr	r3, [pc, #192]	; (408e6c <.LVL45+0x4>)
  408dac:	701a      	strb	r2, [r3, #0]
  408dae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                sizeRead = &rdQueueElements[readQueue.tailPos].sz;
  408db2:	4c31      	ldr	r4, [pc, #196]	; (408e78 <.LVL45+0x10>)
  408db4:	6825      	ldr	r5, [r4, #0]

00408db6 <.LVL28>:
                popQueue(&readQueue);
  408db6:	4620      	mov	r0, r4

00408db8 <.LVL29>:
  408db8:	f002 fe78 	bl	40baac <.LFE4>

00408dbc <.LVL30>:
                if (readQueue.numElem == 0)
  408dbc:	68a3      	ldr	r3, [r4, #8]
  408dbe:	b963      	cbnz	r3, 408dda <.LVL31+0xa>
                    if (consUartData.rdCallback != NULL)
  408dc0:	4b2a      	ldr	r3, [pc, #168]	; (408e6c <.LVL45+0x4>)
  408dc2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
  408dc4:	b123      	cbz	r3, 408dd0 <.LVL31>
                sizeRead = &rdQueueElements[readQueue.tailPos].sz;
  408dc6:	482d      	ldr	r0, [pc, #180]	; (408e7c <.LVL45+0x14>)
  408dc8:	eb00 00c5 	add.w	r0, r0, r5, lsl #3
                        consUartData.rdCallback(sizeRead);
  408dcc:	3004      	adds	r0, #4
  408dce:	4798      	blx	r3

00408dd0 <.LVL31>:
                    consUartData.state = CONSOLE_UART_STATE_READY;
  408dd0:	2202      	movs	r2, #2
  408dd2:	4b26      	ldr	r3, [pc, #152]	; (408e6c <.LVL45+0x4>)
  408dd4:	701a      	strb	r2, [r3, #0]
  408dd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                    consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
  408dda:	2203      	movs	r2, #3
  408ddc:	4b23      	ldr	r3, [pc, #140]	; (408e6c <.LVL45+0x4>)
  408dde:	701a      	strb	r2, [r3, #0]
  408de0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00408de4 <.LVL33>:
            }
            break;

        case CONSOLE_UART_STATE_READY:

            if (readQueue.numElem)
  408de4:	4b24      	ldr	r3, [pc, #144]	; (408e78 <.LVL45+0x10>)
  408de6:	689b      	ldr	r3, [r3, #8]
  408de8:	b943      	cbnz	r3, 408dfc <.LVL33+0x18>
            {
                consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
            }
            else if (writeQueue.numElem)
  408dea:	4b25      	ldr	r3, [pc, #148]	; (408e80 <.LVL45+0x18>)
  408dec:	689b      	ldr	r3, [r3, #8]
  408dee:	2b00      	cmp	r3, #0
  408df0:	d03a      	beq.n	408e68 <.LVL45>
            {
                /* If there is data to be written, then try writing it */
                consUartData.state = CONSOLE_UART_STATE_SCHEDULE_WRITE;
  408df2:	2205      	movs	r2, #5
  408df4:	4b1d      	ldr	r3, [pc, #116]	; (408e6c <.LVL45+0x4>)
  408df6:	701a      	strb	r2, [r3, #0]
  408df8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                consUartData.state = CONSOLE_UART_STATE_SCHEDULE_READ;
  408dfc:	2203      	movs	r2, #3
  408dfe:	4b1b      	ldr	r3, [pc, #108]	; (408e6c <.LVL45+0x4>)
  408e00:	701a      	strb	r2, [r3, #0]
  408e02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            }
            break;

        case CONSOLE_UART_STATE_SCHEDULE_WRITE:

            if (writeQueue.numElem)
  408e06:	4b1e      	ldr	r3, [pc, #120]	; (408e80 <.LVL45+0x18>)
  408e08:	689b      	ldr	r3, [r3, #8]
  408e0a:	b36b      	cbz	r3, 408e68 <.LVL45>
            {
                /* This means there is data to sent out */
                pkt = wrQueueElements[writeQueue.tailPos];
  408e0c:	4b1d      	ldr	r3, [pc, #116]	; (408e84 <.LVL45+0x1c>)
  408e0e:	4a1c      	ldr	r2, [pc, #112]	; (408e80 <.LVL45+0x18>)
  408e10:	6812      	ldr	r2, [r2, #0]
  408e12:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
  408e16:	f853 6032 	ldr.w	r6, [r3, r2, lsl #3]

00408e1a <.LVL34>:
  408e1a:	684d      	ldr	r5, [r1, #4]

00408e1c <.LBB6>:

                    if(status == true)
                    {
                        /* This means this buffer was added successfully to
                         * the PLIB. Do a callback. */
                        if (consUartData.wrCallback != NULL)
  408e1c:	f8df 804c 	ldr.w	r8, [pc, #76]	; 408e6c <.LVL45+0x4>
                        {
                            consUartData.wrCallback((void *)wrQueueElements[writeQueue.tailPos].data.cbuf);
                        }

                        /* Remove this element from the write queue */
                        popQueue(&writeQueue);
  408e20:	4c17      	ldr	r4, [pc, #92]	; (408e80 <.LVL45+0x18>)
                        pkt = wrQueueElements[writeQueue.tailPos];
  408e22:	461f      	mov	r7, r3
  408e24:	e00e      	b.n	408e44 <.LBB7>

00408e26 <.LVL36>:
                            consUartData.wrCallback((void *)wrQueueElements[writeQueue.tailPos].data.cbuf);
  408e26:	6822      	ldr	r2, [r4, #0]
  408e28:	f857 0032 	ldr.w	r0, [r7, r2, lsl #3]

00408e2c <.LVL37>:
  408e2c:	4798      	blx	r3
                        popQueue(&writeQueue);
  408e2e:	4620      	mov	r0, r4
  408e30:	f002 fe3c 	bl	40baac <.LFE4>

00408e34 <.LVL39>:
                        pkt = wrQueueElements[writeQueue.tailPos];
  408e34:	6823      	ldr	r3, [r4, #0]
  408e36:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
  408e3a:	f857 6033 	ldr.w	r6, [r7, r3, lsl #3]

00408e3e <.LVL40>:
  408e3e:	6855      	ldr	r5, [r2, #4]

00408e40 <.LBE6>:
                    {
                        /* Got an invalid handle. This most likely means
                         * that the write buffer queue is full */
                    }

                } while(writeQueue.numElem);
  408e40:	68a3      	ldr	r3, [r4, #8]
  408e42:	b153      	cbz	r3, 408e5a <.LBE7>

00408e44 <.LBB7>:
                    bool status = USART1_Write(pkt.data.buf, pkt.sz);
  408e44:	4629      	mov	r1, r5
  408e46:	4630      	mov	r0, r6
  408e48:	f002 fac4 	bl	40b3d4 <.LFE165>

00408e4c <.LVL42>:
                    if(status == true)
  408e4c:	2800      	cmp	r0, #0
  408e4e:	d0f7      	beq.n	408e40 <.LBE6>
                        if (consUartData.wrCallback != NULL)
  408e50:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
  408e54:	2b00      	cmp	r3, #0
  408e56:	d1e6      	bne.n	408e26 <.LVL36>
  408e58:	e7e9      	b.n	408e2e <.LVL37+0x2>

00408e5a <.LBE7>:
                /* If we are here, it either means there is nothing more to
                 * write of the write buffer queue is full. We cannot do much
                 * with respect to write at point. We move the state to
                 * ready */

                consUartData.state = CONSOLE_UART_STATE_READY;
  408e5a:	2202      	movs	r2, #2
  408e5c:	4b03      	ldr	r3, [pc, #12]	; (408e6c <.LVL45+0x4>)
  408e5e:	701a      	strb	r2, [r3, #0]
  408e60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00408e64 <.LVL44>:
        case CONSOLE_UART_STATE_OPERATIONAL_ERROR:

            /* We arrive at this state if the UART driver reports an error on a read or write operation
               We will attempt to recover by flushing the local buffers */

            Console_UART_Flush();
  408e64:	f002 fba0 	bl	40b5a8 <Console_UART_Flush>

00408e68 <.LVL45>:
  408e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  408e6c:	2040db4c 	.word	0x2040db4c
  408e70:	0040bd89 	.word	0x0040bd89
  408e74:	0040bc3d 	.word	0x0040bc3d
  408e78:	2040dc54 	.word	0x2040dc54
  408e7c:	2040dafc 	.word	0x2040dafc
  408e80:	2040dc68 	.word	0x2040dc68
  408e84:	2040d4b8 	.word	0x2040d4b8

Disassembly of section .text.wc_ShaFinal%46:

00408e88 <wc_ShaFinal>:

int wc_ShaFinal(Sha* sha, byte* hash)
{
    byte* local;

    if (sha == NULL || hash == NULL) {
  408e88:	2800      	cmp	r0, #0
  408e8a:	f000 8097 	beq.w	408fbc <.LCFI7>
{
  408e8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

00408e90 <.LCFI6>:
  408e90:	4605      	mov	r5, r0
    if (sha == NULL || hash == NULL) {
  408e92:	2900      	cmp	r1, #0
  408e94:	f000 808f 	beq.w	408fb6 <.LVL393>
        return BAD_FUNC_ARG;
    }

    local = (byte*)sha->buffer;
  408e98:	f100 070c 	add.w	r7, r0, #12

00408e9c <.LVL372>:
        return IntelQaSymSha(&sha->asyncDev, hash, NULL, SHA_DIGEST_SIZE);
    #endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    AddLength(sha, sha->buffLen);  /* before adding pads */
  408e9c:	6803      	ldr	r3, [r0, #0]

00408e9e <.LBB805>:
    word32 tmp = sha->loLen;
  408e9e:	6840      	ldr	r0, [r0, #4]

00408ea0 <.LVL374>:
    if ( (sha->loLen += len) < tmp)
  408ea0:	181a      	adds	r2, r3, r0
  408ea2:	606a      	str	r2, [r5, #4]
  408ea4:	4290      	cmp	r0, r2
  408ea6:	d902      	bls.n	408eae <.LVL374+0xe>
        sha->hiLen++;                       /* carry low to high */
  408ea8:	68aa      	ldr	r2, [r5, #8]
  408eaa:	3201      	adds	r2, #1
  408eac:	60aa      	str	r2, [r5, #8]
  408eae:	460e      	mov	r6, r1

00408eb0 <.LBE805>:

    local[sha->buffLen++] = 0x80;  /* add 1 */
  408eb0:	1c5a      	adds	r2, r3, #1
  408eb2:	602a      	str	r2, [r5, #0]
  408eb4:	2280      	movs	r2, #128	; 0x80
  408eb6:	54fa      	strb	r2, [r7, r3]

    /* pad with zeros */
    if (sha->buffLen > SHA_PAD_SIZE) {
  408eb8:	6828      	ldr	r0, [r5, #0]
  408eba:	2838      	cmp	r0, #56	; 0x38
  408ebc:	d85a      	bhi.n	408f74 <.LVL386>

00408ebe <.LVL376>:
        ByteReverseWords(sha->buffer, sha->buffer, SHA_BLOCK_SIZE);
#endif
        XTRANSFORM(sha, local);
        sha->buffLen = 0;
    }
    XMEMSET(&local[sha->buffLen], 0, SHA_PAD_SIZE - sha->buffLen);
  408ebe:	462c      	mov	r4, r5
  408ec0:	f854 0b08 	ldr.w	r0, [r4], #8
  408ec4:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
  408ec8:	2100      	movs	r1, #0
  408eca:	4438      	add	r0, r7
  408ecc:	f001 fc38 	bl	40a740 <.LFE25>

00408ed0 <.LVL377>:
  408ed0:	f105 0148 	add.w	r1, r5, #72	; 0x48

00408ed4 <.LBB807>:
        out[i] = ByteReverseWord32(in[i]);
  408ed4:	6862      	ldr	r2, [r4, #4]

00408ed6 <.LBB809>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408ed6:	0a13      	lsrs	r3, r2, #8
  408ed8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408edc:	0212      	lsls	r2, r2, #8
  408ede:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  408ee2:	4313      	orrs	r3, r2

00408ee4 <.LBB811>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408ee4:	ea4f 4333 	mov.w	r3, r3, ror #16

00408ee8 <.LBE809>:
        out[i] = ByteReverseWord32(in[i]);
  408ee8:	f844 3f04 	str.w	r3, [r4, #4]!
    for (i = 0; i < count; i++)
  408eec:	428c      	cmp	r4, r1
  408eee:	d1f1      	bne.n	408ed4 <.LBB807>

00408ef0 <.LBE807>:
    ByteReverseWords(sha->buffer, sha->buffer, SHA_BLOCK_SIZE);
#endif

    /* store lengths */
    /* put lengths in bits */
    sha->hiLen = (sha->loLen >> (8*sizeof(sha->loLen) - 3)) + (sha->hiLen << 3);
  408ef0:	686b      	ldr	r3, [r5, #4]
  408ef2:	68a9      	ldr	r1, [r5, #8]
  408ef4:	0f5a      	lsrs	r2, r3, #29
  408ef6:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
  408efa:	60aa      	str	r2, [r5, #8]
    sha->loLen = sha->loLen << 3;
  408efc:	00db      	lsls	r3, r3, #3
  408efe:	606b      	str	r3, [r5, #4]

    /* ! length ordering dependent on digest endian type ! */
    XMEMCPY(&local[SHA_PAD_SIZE], &sha->hiLen, sizeof(word32));
  408f00:	646a      	str	r2, [r5, #68]	; 0x44
    XMEMCPY(&local[SHA_PAD_SIZE + sizeof(word32)], &sha->loLen, sizeof(word32));
  408f02:	64ab      	str	r3, [r5, #72]	; 0x48
    ByteReverseWords(&sha->buffer[SHA_PAD_SIZE/sizeof(word32)],
                     &sha->buffer[SHA_PAD_SIZE/sizeof(word32)],
                     2 * sizeof(word32));
#endif

    XTRANSFORM(sha, local);
  408f04:	4639      	mov	r1, r7
  408f06:	4628      	mov	r0, r5
  408f08:	f7fb f966 	bl	4041d8 <.LFE18>

00408f0c <.LVL380>:
#ifdef LITTLE_ENDIAN_ORDER
    ByteReverseWords(sha->digest, sha->digest, SHA_DIGEST_SIZE);
  408f0c:	f105 044c 	add.w	r4, r5, #76	; 0x4c

00408f10 <.LVL381>:
  408f10:	f105 0148 	add.w	r1, r5, #72	; 0x48
  408f14:	f105 005c 	add.w	r0, r5, #92	; 0x5c

00408f18 <.LBB813>:
        out[i] = ByteReverseWord32(in[i]);
  408f18:	684a      	ldr	r2, [r1, #4]

00408f1a <.LBB815>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408f1a:	0a13      	lsrs	r3, r2, #8
  408f1c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408f20:	0212      	lsls	r2, r2, #8
  408f22:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  408f26:	4313      	orrs	r3, r2

00408f28 <.LBB817>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408f28:	ea4f 4333 	mov.w	r3, r3, ror #16

00408f2c <.LBE815>:
        out[i] = ByteReverseWord32(in[i]);
  408f2c:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  408f30:	4281      	cmp	r1, r0
  408f32:	d1f1      	bne.n	408f18 <.LBB813>

00408f34 <.LBE813>:
#endif
    XMEMCPY(hash, sha->digest, SHA_DIGEST_SIZE);
  408f34:	6823      	ldr	r3, [r4, #0]
  408f36:	6860      	ldr	r0, [r4, #4]
  408f38:	68a1      	ldr	r1, [r4, #8]
  408f3a:	68e2      	ldr	r2, [r4, #12]
  408f3c:	6033      	str	r3, [r6, #0]
  408f3e:	6070      	str	r0, [r6, #4]
  408f40:	60b1      	str	r1, [r6, #8]
  408f42:	60f2      	str	r2, [r6, #12]
  408f44:	6923      	ldr	r3, [r4, #16]
  408f46:	6133      	str	r3, [r6, #16]

00408f48 <.LBB819>:
        sha->digest[0] = 0x67452301L;
  408f48:	4b1e      	ldr	r3, [pc, #120]	; (408fc4 <.LVL396+0x4>)
  408f4a:	64eb      	str	r3, [r5, #76]	; 0x4c
        sha->digest[1] = 0xEFCDAB89L;
  408f4c:	f103 3388 	add.w	r3, r3, #2290649224	; 0x88888888
  408f50:	652b      	str	r3, [r5, #80]	; 0x50
        sha->digest[2] = 0x98BADCFEL;
  408f52:	f103 4329 	add.w	r3, r3, #2835349504	; 0xa9000000
  408f56:	f5a3 1396 	sub.w	r3, r3, #1228800	; 0x12c000
  408f5a:	f6a3 638b 	subw	r3, r3, #3723	; 0xe8b
  408f5e:	656b      	str	r3, [r5, #84]	; 0x54
        sha->digest[3] = 0x10325476L;
  408f60:	f1a3 3388 	sub.w	r3, r3, #2290649224	; 0x88888888
  408f64:	65ab      	str	r3, [r5, #88]	; 0x58
        sha->digest[4] = 0xC3D2E1F0L;
  408f66:	4b18      	ldr	r3, [pc, #96]	; (408fc8 <.LVL396+0x8>)
  408f68:	65eb      	str	r3, [r5, #92]	; 0x5c
        sha->buffLen = 0;
  408f6a:	2000      	movs	r0, #0
  408f6c:	6028      	str	r0, [r5, #0]
        sha->loLen   = 0;
  408f6e:	6068      	str	r0, [r5, #4]
        sha->hiLen   = 0;
  408f70:	60a8      	str	r0, [r5, #8]

00408f72 <.LBE819>:

    return InitSha(sha); /* reset state */
  408f72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00408f74 <.LVL386>:
        XMEMSET(&local[sha->buffLen], 0, SHA_BLOCK_SIZE - sha->buffLen);
  408f74:	f1c0 0240 	rsb	r2, r0, #64	; 0x40
  408f78:	2100      	movs	r1, #0

00408f7a <.LVL387>:
  408f7a:	4438      	add	r0, r7
  408f7c:	f001 fbe0 	bl	40a740 <.LFE25>

00408f80 <.LVL388>:
        sha->buffLen += SHA_BLOCK_SIZE - sha->buffLen;
  408f80:	4629      	mov	r1, r5
  408f82:	2340      	movs	r3, #64	; 0x40
  408f84:	f841 3b08 	str.w	r3, [r1], #8

00408f88 <.LVL389>:
  408f88:	f105 0048 	add.w	r0, r5, #72	; 0x48

00408f8c <.LBB821>:
        out[i] = ByteReverseWord32(in[i]);
  408f8c:	684a      	ldr	r2, [r1, #4]

00408f8e <.LBB823>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  408f8e:	0a13      	lsrs	r3, r2, #8
  408f90:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  408f94:	0212      	lsls	r2, r2, #8
  408f96:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  408f9a:	4313      	orrs	r3, r2

00408f9c <.LBB825>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  408f9c:	ea4f 4333 	mov.w	r3, r3, ror #16

00408fa0 <.LBE823>:
        out[i] = ByteReverseWord32(in[i]);
  408fa0:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  408fa4:	4281      	cmp	r1, r0
  408fa6:	d1f1      	bne.n	408f8c <.LBB821>

00408fa8 <.LBE821>:
        XTRANSFORM(sha, local);
  408fa8:	4639      	mov	r1, r7
  408faa:	4628      	mov	r0, r5
  408fac:	f7fb f914 	bl	4041d8 <.LFE18>

00408fb0 <.LVL392>:
        sha->buffLen = 0;
  408fb0:	2300      	movs	r3, #0
  408fb2:	602b      	str	r3, [r5, #0]
  408fb4:	e783      	b.n	408ebe <.LVL376>

00408fb6 <.LVL393>:
        return BAD_FUNC_ARG;
  408fb6:	f06f 00ac 	mvn.w	r0, #172	; 0xac

00408fba <.LVL394>:
}
  408fba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00408fbc <.LCFI7>:
        return BAD_FUNC_ARG;
  408fbc:	f06f 00ac 	mvn.w	r0, #172	; 0xac

00408fc0 <.LVL396>:
  408fc0:	4770      	bx	lr
  408fc2:	bf00      	nop
  408fc4:	67452301 	.word	0x67452301
  408fc8:	c3d2e1f0 	.word	0xc3d2e1f0

Disassembly of section .text%47:

00408fcc <memcpy>:
  408fcc:	4684      	mov	ip, r0
  408fce:	ea41 0300 	orr.w	r3, r1, r0
  408fd2:	f013 0303 	ands.w	r3, r3, #3
  408fd6:	d16d      	bne.n	4090b4 <memcpy+0xe8>
  408fd8:	3a40      	subs	r2, #64	; 0x40
  408fda:	d341      	bcc.n	409060 <memcpy+0x94>
  408fdc:	f851 3b04 	ldr.w	r3, [r1], #4
  408fe0:	f840 3b04 	str.w	r3, [r0], #4
  408fe4:	f851 3b04 	ldr.w	r3, [r1], #4
  408fe8:	f840 3b04 	str.w	r3, [r0], #4
  408fec:	f851 3b04 	ldr.w	r3, [r1], #4
  408ff0:	f840 3b04 	str.w	r3, [r0], #4
  408ff4:	f851 3b04 	ldr.w	r3, [r1], #4
  408ff8:	f840 3b04 	str.w	r3, [r0], #4
  408ffc:	f851 3b04 	ldr.w	r3, [r1], #4
  409000:	f840 3b04 	str.w	r3, [r0], #4
  409004:	f851 3b04 	ldr.w	r3, [r1], #4
  409008:	f840 3b04 	str.w	r3, [r0], #4
  40900c:	f851 3b04 	ldr.w	r3, [r1], #4
  409010:	f840 3b04 	str.w	r3, [r0], #4
  409014:	f851 3b04 	ldr.w	r3, [r1], #4
  409018:	f840 3b04 	str.w	r3, [r0], #4
  40901c:	f851 3b04 	ldr.w	r3, [r1], #4
  409020:	f840 3b04 	str.w	r3, [r0], #4
  409024:	f851 3b04 	ldr.w	r3, [r1], #4
  409028:	f840 3b04 	str.w	r3, [r0], #4
  40902c:	f851 3b04 	ldr.w	r3, [r1], #4
  409030:	f840 3b04 	str.w	r3, [r0], #4
  409034:	f851 3b04 	ldr.w	r3, [r1], #4
  409038:	f840 3b04 	str.w	r3, [r0], #4
  40903c:	f851 3b04 	ldr.w	r3, [r1], #4
  409040:	f840 3b04 	str.w	r3, [r0], #4
  409044:	f851 3b04 	ldr.w	r3, [r1], #4
  409048:	f840 3b04 	str.w	r3, [r0], #4
  40904c:	f851 3b04 	ldr.w	r3, [r1], #4
  409050:	f840 3b04 	str.w	r3, [r0], #4
  409054:	f851 3b04 	ldr.w	r3, [r1], #4
  409058:	f840 3b04 	str.w	r3, [r0], #4
  40905c:	3a40      	subs	r2, #64	; 0x40
  40905e:	d2bd      	bcs.n	408fdc <memcpy+0x10>
  409060:	3230      	adds	r2, #48	; 0x30
  409062:	d311      	bcc.n	409088 <memcpy+0xbc>
  409064:	f851 3b04 	ldr.w	r3, [r1], #4
  409068:	f840 3b04 	str.w	r3, [r0], #4
  40906c:	f851 3b04 	ldr.w	r3, [r1], #4
  409070:	f840 3b04 	str.w	r3, [r0], #4
  409074:	f851 3b04 	ldr.w	r3, [r1], #4
  409078:	f840 3b04 	str.w	r3, [r0], #4
  40907c:	f851 3b04 	ldr.w	r3, [r1], #4
  409080:	f840 3b04 	str.w	r3, [r0], #4
  409084:	3a10      	subs	r2, #16
  409086:	d2ed      	bcs.n	409064 <memcpy+0x98>
  409088:	320c      	adds	r2, #12
  40908a:	d305      	bcc.n	409098 <memcpy+0xcc>
  40908c:	f851 3b04 	ldr.w	r3, [r1], #4
  409090:	f840 3b04 	str.w	r3, [r0], #4
  409094:	3a04      	subs	r2, #4
  409096:	d2f9      	bcs.n	40908c <memcpy+0xc0>
  409098:	3204      	adds	r2, #4
  40909a:	d008      	beq.n	4090ae <memcpy+0xe2>
  40909c:	07d2      	lsls	r2, r2, #31
  40909e:	bf1c      	itt	ne
  4090a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4090a4:	f800 3b01 	strbne.w	r3, [r0], #1
  4090a8:	d301      	bcc.n	4090ae <memcpy+0xe2>
  4090aa:	880b      	ldrh	r3, [r1, #0]
  4090ac:	8003      	strh	r3, [r0, #0]
  4090ae:	4660      	mov	r0, ip
  4090b0:	4770      	bx	lr
  4090b2:	bf00      	nop
  4090b4:	2a08      	cmp	r2, #8
  4090b6:	d313      	bcc.n	4090e0 <memcpy+0x114>
  4090b8:	078b      	lsls	r3, r1, #30
  4090ba:	d08d      	beq.n	408fd8 <memcpy+0xc>
  4090bc:	f010 0303 	ands.w	r3, r0, #3
  4090c0:	d08a      	beq.n	408fd8 <memcpy+0xc>
  4090c2:	f1c3 0304 	rsb	r3, r3, #4
  4090c6:	1ad2      	subs	r2, r2, r3
  4090c8:	07db      	lsls	r3, r3, #31
  4090ca:	bf1c      	itt	ne
  4090cc:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4090d0:	f800 3b01 	strbne.w	r3, [r0], #1
  4090d4:	d380      	bcc.n	408fd8 <memcpy+0xc>
  4090d6:	f831 3b02 	ldrh.w	r3, [r1], #2
  4090da:	f820 3b02 	strh.w	r3, [r0], #2
  4090de:	e77b      	b.n	408fd8 <memcpy+0xc>
  4090e0:	3a04      	subs	r2, #4
  4090e2:	d3d9      	bcc.n	409098 <memcpy+0xcc>
  4090e4:	3a01      	subs	r2, #1
  4090e6:	f811 3b01 	ldrb.w	r3, [r1], #1
  4090ea:	f800 3b01 	strb.w	r3, [r0], #1
  4090ee:	d2f9      	bcs.n	4090e4 <memcpy+0x118>
  4090f0:	780b      	ldrb	r3, [r1, #0]
  4090f2:	7003      	strb	r3, [r0, #0]
  4090f4:	784b      	ldrb	r3, [r1, #1]
  4090f6:	7043      	strb	r3, [r0, #1]
  4090f8:	788b      	ldrb	r3, [r1, #2]
  4090fa:	7083      	strb	r3, [r0, #2]
  4090fc:	4660      	mov	r0, ip
  4090fe:	4770      	bx	lr

Disassembly of section .text.quorem%48:

00409100 <quorem>:
  409100:	6902      	ldr	r2, [r0, #16]
  409102:	690b      	ldr	r3, [r1, #16]

00409104 <.LVL1>:
  409104:	4293      	cmp	r3, r2
  409106:	f300 808d 	bgt.w	409224 <.LCFI3>
  40910a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

0040910e <.LCFI0>:
  40910e:	f103 38ff 	add.w	r8, r3, #4294967295
  409112:	f101 0714 	add.w	r7, r1, #20

00409116 <.LVL2>:
  409116:	f100 0b14 	add.w	fp, r0, #20
  40911a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40911e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  409122:	ea4f 0488 	mov.w	r4, r8, lsl #2
  409126:	b083      	sub	sp, #12

00409128 <.LCFI1>:
  409128:	3201      	adds	r2, #1
  40912a:	fbb3 f9f2 	udiv	r9, r3, r2
  40912e:	eb0b 0304 	add.w	r3, fp, r4
  409132:	9400      	str	r4, [sp, #0]
  409134:	eb07 0a04 	add.w	sl, r7, r4

00409138 <.LVL3>:
  409138:	9301      	str	r3, [sp, #4]

0040913a <.LVL4>:
  40913a:	f1b9 0f00 	cmp.w	r9, #0
  40913e:	d039      	beq.n	4091b4 <.LVL23>
  409140:	2500      	movs	r5, #0
  409142:	462e      	mov	r6, r5
  409144:	46bc      	mov	ip, r7
  409146:	46de      	mov	lr, fp

00409148 <.LVL5>:
  409148:	f85c 4b04 	ldr.w	r4, [ip], #4

0040914c <.LVL6>:
  40914c:	f8de 3000 	ldr.w	r3, [lr]
  409150:	b2a2      	uxth	r2, r4
  409152:	fb09 5502 	mla	r5, r9, r2, r5

00409156 <.LVL7>:
  409156:	0c22      	lsrs	r2, r4, #16
  409158:	0c2c      	lsrs	r4, r5, #16

0040915a <.LVL8>:
  40915a:	fb09 4202 	mla	r2, r9, r2, r4

0040915e <.LVL9>:
  40915e:	b2ad      	uxth	r5, r5

00409160 <.LVL10>:
  409160:	1b75      	subs	r5, r6, r5
  409162:	b296      	uxth	r6, r2

00409164 <.LVL11>:
  409164:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  409168:	fa15 f383 	uxtah	r3, r5, r3
  40916c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  409170:	b29b      	uxth	r3, r3
  409172:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  409176:	45e2      	cmp	sl, ip
  409178:	ea4f 4512 	mov.w	r5, r2, lsr #16

0040917c <.LVL12>:
  40917c:	f84e 3b04 	str.w	r3, [lr], #4

00409180 <.LVL13>:
  409180:	ea4f 4626 	mov.w	r6, r6, asr #16

00409184 <.LVL14>:
  409184:	d2e0      	bcs.n	409148 <.LVL5>
  409186:	9b00      	ldr	r3, [sp, #0]
  409188:	f85b 3003 	ldr.w	r3, [fp, r3]
  40918c:	b993      	cbnz	r3, 4091b4 <.LVL23>

0040918e <.LVL15>:
  40918e:	9c01      	ldr	r4, [sp, #4]
  409190:	1f23      	subs	r3, r4, #4

00409192 <.LVL16>:
  409192:	459b      	cmp	fp, r3
  409194:	d20c      	bcs.n	4091b0 <.LVL22>
  409196:	f854 3c04 	ldr.w	r3, [r4, #-4]

0040919a <.LVL17>:
  40919a:	b94b      	cbnz	r3, 4091b0 <.LVL22>
  40919c:	f1a4 0308 	sub.w	r3, r4, #8
  4091a0:	e002      	b.n	4091a8 <.LVL19+0x2>

004091a2 <.LVL18>:
  4091a2:	681a      	ldr	r2, [r3, #0]
  4091a4:	3b04      	subs	r3, #4

004091a6 <.LVL19>:
  4091a6:	b91a      	cbnz	r2, 4091b0 <.LVL22>
  4091a8:	459b      	cmp	fp, r3
  4091aa:	f108 38ff 	add.w	r8, r8, #4294967295

004091ae <.LVL21>:
  4091ae:	d3f8      	bcc.n	4091a2 <.LVL18>

004091b0 <.LVL22>:
  4091b0:	f8c0 8010 	str.w	r8, [r0, #16]

004091b4 <.LVL23>:
  4091b4:	4604      	mov	r4, r0
  4091b6:	f002 fae3 	bl	40b780 <.LBE18>

004091ba <.LVL24>:
  4091ba:	2800      	cmp	r0, #0
  4091bc:	db2e      	blt.n	40921c <.LVL46>
  4091be:	f109 0901 	add.w	r9, r9, #1

004091c2 <.LVL25>:
  4091c2:	465d      	mov	r5, fp
  4091c4:	2300      	movs	r3, #0

004091c6 <.LVL26>:
  4091c6:	f857 1b04 	ldr.w	r1, [r7], #4

004091ca <.LVL27>:
  4091ca:	6828      	ldr	r0, [r5, #0]
  4091cc:	b28a      	uxth	r2, r1
  4091ce:	1a9a      	subs	r2, r3, r2
  4091d0:	0c0b      	lsrs	r3, r1, #16

004091d2 <.LVL28>:
  4091d2:	fa12 f280 	uxtah	r2, r2, r0

004091d6 <.LVL29>:
  4091d6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16

004091da <.LVL30>:
  4091da:	eb03 4322 	add.w	r3, r3, r2, asr #16

004091de <.LVL31>:
  4091de:	b292      	uxth	r2, r2

004091e0 <.LVL32>:
  4091e0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4091e4:	45ba      	cmp	sl, r7
  4091e6:	f845 2b04 	str.w	r2, [r5], #4

004091ea <.LVL33>:
  4091ea:	ea4f 4323 	mov.w	r3, r3, asr #16

004091ee <.LVL34>:
  4091ee:	d2ea      	bcs.n	4091c6 <.LVL26>

004091f0 <.LVL35>:
  4091f0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4091f4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2

004091f8 <.LVL36>:
  4091f8:	b982      	cbnz	r2, 40921c <.LVL46>

004091fa <.LVL37>:
  4091fa:	1f1a      	subs	r2, r3, #4

004091fc <.LVL38>:
  4091fc:	4593      	cmp	fp, r2
  4091fe:	d20b      	bcs.n	409218 <.LVL45>
  409200:	f853 2c04 	ldr.w	r2, [r3, #-4]

00409204 <.LVL39>:
  409204:	b942      	cbnz	r2, 409218 <.LVL45>
  409206:	3b08      	subs	r3, #8

00409208 <.LVL40>:
  409208:	e002      	b.n	409210 <.LVL42+0x2>

0040920a <.LVL41>:
  40920a:	681a      	ldr	r2, [r3, #0]
  40920c:	3b04      	subs	r3, #4

0040920e <.LVL42>:
  40920e:	b91a      	cbnz	r2, 409218 <.LVL45>
  409210:	459b      	cmp	fp, r3
  409212:	f108 38ff 	add.w	r8, r8, #4294967295

00409216 <.LVL44>:
  409216:	d3f8      	bcc.n	40920a <.LVL41>

00409218 <.LVL45>:
  409218:	f8c4 8010 	str.w	r8, [r4, #16]

0040921c <.LVL46>:
  40921c:	4648      	mov	r0, r9
  40921e:	b003      	add	sp, #12

00409220 <.LCFI2>:
  409220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00409224 <.LCFI3>:
  409224:	2000      	movs	r0, #0

00409226 <.LVL48>:
  409226:	4770      	bx	lr

Disassembly of section .text.USART1_InterruptHandler%49:

00409228 <USART1_InterruptHandler>:

    return;
}

void USART1_InterruptHandler( void )
{
  409228:	b570      	push	{r4, r5, r6, lr}

0040922a <.LCFI0>:
    /* Error status */
    uint32_t errorStatus = (USART1_REGS->US_CSR & (US_CSR_OVRE_Msk | US_CSR_FRAME_Msk | US_CSR_PARE_Msk));
  40922a:	4b46      	ldr	r3, [pc, #280]	; (409344 <.LBB11+0xe>)
  40922c:	695b      	ldr	r3, [r3, #20]

0040922e <.LVL0>:

    if(errorStatus != 0)
  40922e:	f013 0fe0 	tst.w	r3, #224	; 0xe0
  409232:	d00e      	beq.n	409252 <.LVL1+0x1c>
    {
        /* Client must call USARTx_ErrorGet() function to clear the errors */

        /* USART errors are normally associated with the receiver, hence calling
         * receiver context */
        if( usart1Obj.rxCallback != NULL )
  409234:	4b44      	ldr	r3, [pc, #272]	; (409348 <.LBB11+0x12>)

00409236 <.LVL1>:
  409236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  409238:	b113      	cbz	r3, 409240 <.LVL1+0xa>
        {
            usart1Obj.rxCallback(usart1Obj.rxContext);
  40923a:	4a43      	ldr	r2, [pc, #268]	; (409348 <.LBB11+0x12>)
  40923c:	6a90      	ldr	r0, [r2, #40]	; 0x28
  40923e:	4798      	blx	r3
        }

        usart1Obj.rxBusyStatus = false;
  409240:	4b41      	ldr	r3, [pc, #260]	; (409348 <.LBB11+0x12>)
  409242:	2200      	movs	r2, #0
  409244:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        usart1Obj.rxSize = 0;
  409248:	61da      	str	r2, [r3, #28]
        usart1Obj.rxProcessedSize = 0;
  40924a:	621a      	str	r2, [r3, #32]

        /* Disable Read, Overrun, Parity and Framing error interrupts */
        USART1_REGS->US_IDR = (US_IDR_RXRDY_Msk | US_IDR_FRAME_Msk | US_IDR_PARE_Msk | US_IDR_OVRE_Msk);
  40924c:	22e1      	movs	r2, #225	; 0xe1
  40924e:	4b3d      	ldr	r3, [pc, #244]	; (409344 <.LBB11+0xe>)
  409250:	60da      	str	r2, [r3, #12]
    }

    /* Receiver status */
    if(US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk))
  409252:	4b3c      	ldr	r3, [pc, #240]	; (409344 <.LBB11+0xe>)
  409254:	695b      	ldr	r3, [r3, #20]
  409256:	f013 0f01 	tst.w	r3, #1
  40925a:	d105      	bne.n	409268 <.LBB6>
    {
        USART1_ISR_RX_Handler();
    }

    /* Transmitter status */
    if(US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk))
  40925c:	4b39      	ldr	r3, [pc, #228]	; (409344 <.LBB11+0xe>)
  40925e:	695b      	ldr	r3, [r3, #20]
  409260:	f413 7f00 	tst.w	r3, #512	; 0x200
  409264:	d134      	bne.n	4092d0 <.LBB8>
  409266:	bd70      	pop	{r4, r5, r6, pc}

00409268 <.LBB6>:
    if(usart1Obj.rxBusyStatus == true)
  409268:	4b37      	ldr	r3, [pc, #220]	; (409348 <.LBB11+0x12>)
  40926a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40926e:	2b00      	cmp	r3, #0
  409270:	d0f4      	beq.n	40925c <.LVL1+0x26>
        while((US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk)) && (usart1Obj.rxSize > usart1Obj.rxProcessedSize) )
  409272:	4b34      	ldr	r3, [pc, #208]	; (409344 <.LBB11+0xe>)
  409274:	695b      	ldr	r3, [r3, #20]
  409276:	f013 0f01 	tst.w	r3, #1
  40927a:	d023      	beq.n	4092c4 <.LBB6+0x5c>
  40927c:	4a32      	ldr	r2, [pc, #200]	; (409348 <.LBB11+0x12>)
  40927e:	6a13      	ldr	r3, [r2, #32]
  409280:	69d2      	ldr	r2, [r2, #28]
  409282:	429a      	cmp	r2, r3
  409284:	d90e      	bls.n	4092a4 <.LBB6+0x3c>
            usart1Obj.rxBuffer[usart1Obj.rxProcessedSize++] = (USART1_REGS->US_RHR& US_RHR_RXCHR_Msk);
  409286:	4a30      	ldr	r2, [pc, #192]	; (409348 <.LBB11+0x12>)
  409288:	492e      	ldr	r1, [pc, #184]	; (409344 <.LBB11+0xe>)
  40928a:	6990      	ldr	r0, [r2, #24]
  40928c:	1c5c      	adds	r4, r3, #1
  40928e:	6214      	str	r4, [r2, #32]
  409290:	698c      	ldr	r4, [r1, #24]
  409292:	54c4      	strb	r4, [r0, r3]
        while((US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk)) && (usart1Obj.rxSize > usart1Obj.rxProcessedSize) )
  409294:	694b      	ldr	r3, [r1, #20]
  409296:	f013 0f01 	tst.w	r3, #1
  40929a:	d013      	beq.n	4092c4 <.LBB6+0x5c>
  40929c:	6a13      	ldr	r3, [r2, #32]
  40929e:	69d0      	ldr	r0, [r2, #28]
  4092a0:	4283      	cmp	r3, r0
  4092a2:	d3f2      	bcc.n	40928a <.LBB6+0x22>
            usart1Obj.rxBusyStatus = false;
  4092a4:	4b28      	ldr	r3, [pc, #160]	; (409348 <.LBB11+0x12>)
  4092a6:	2200      	movs	r2, #0
  4092a8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
            usart1Obj.rxSize = 0;
  4092ac:	61da      	str	r2, [r3, #28]
            usart1Obj.rxProcessedSize = 0;
  4092ae:	621a      	str	r2, [r3, #32]
            USART1_REGS->US_IDR = (US_IDR_RXRDY_Msk | US_IDR_FRAME_Msk | US_IDR_PARE_Msk | US_IDR_OVRE_Msk);
  4092b0:	21e1      	movs	r1, #225	; 0xe1
  4092b2:	4a24      	ldr	r2, [pc, #144]	; (409344 <.LBB11+0xe>)
  4092b4:	60d1      	str	r1, [r2, #12]
            if(usart1Obj.rxCallback != NULL)
  4092b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  4092b8:	2b00      	cmp	r3, #0
  4092ba:	d0cf      	beq.n	40925c <.LVL1+0x26>
                usart1Obj.rxCallback(usart1Obj.rxContext);
  4092bc:	4a22      	ldr	r2, [pc, #136]	; (409348 <.LBB11+0x12>)
  4092be:	6a90      	ldr	r0, [r2, #40]	; 0x28
  4092c0:	4798      	blx	r3
  4092c2:	e7cb      	b.n	40925c <.LVL1+0x26>
        if(usart1Obj.rxProcessedSize >= usart1Obj.rxSize)
  4092c4:	4b20      	ldr	r3, [pc, #128]	; (409348 <.LBB11+0x12>)
  4092c6:	6a1a      	ldr	r2, [r3, #32]
  4092c8:	69db      	ldr	r3, [r3, #28]
  4092ca:	429a      	cmp	r2, r3
  4092cc:	d3c6      	bcc.n	40925c <.LVL1+0x26>
  4092ce:	e7e9      	b.n	4092a4 <.LBB6+0x3c>

004092d0 <.LBB8>:
    if(usart1Obj.txBusyStatus == true)
  4092d0:	4b1d      	ldr	r3, [pc, #116]	; (409348 <.LBB11+0x12>)
  4092d2:	7d1b      	ldrb	r3, [r3, #20]
  4092d4:	2b00      	cmp	r3, #0
  4092d6:	d0c6      	beq.n	409266 <.LVL1+0x30>
        while((US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk)) && (usart1Obj.txSize > usart1Obj.txProcessedSize) )
  4092d8:	4b1a      	ldr	r3, [pc, #104]	; (409344 <.LBB11+0xe>)
  4092da:	695b      	ldr	r3, [r3, #20]
  4092dc:	f413 7f00 	tst.w	r3, #512	; 0x200
  4092e0:	d029      	beq.n	409336 <.LBB11>
  4092e2:	4b19      	ldr	r3, [pc, #100]	; (409348 <.LBB11+0x12>)
  4092e4:	685d      	ldr	r5, [r3, #4]
  4092e6:	689b      	ldr	r3, [r3, #8]
  4092e8:	429d      	cmp	r5, r3
  4092ea:	d914      	bls.n	409316 <.LBB8+0x46>
            USART1_REGS->US_THR|= usart1Obj.txBuffer[usart1Obj.txProcessedSize++];
  4092ec:	4a16      	ldr	r2, [pc, #88]	; (409348 <.LBB11+0x12>)
  4092ee:	6814      	ldr	r4, [r2, #0]
  4092f0:	4423      	add	r3, r4
  4092f2:	4425      	add	r5, r4
  4092f4:	4616      	mov	r6, r2
  4092f6:	f1c4 0401 	rsb	r4, r4, #1
  4092fa:	4912      	ldr	r1, [pc, #72]	; (409344 <.LBB11+0xe>)
  4092fc:	18e2      	adds	r2, r4, r3
  4092fe:	60b2      	str	r2, [r6, #8]
  409300:	f813 2b01 	ldrb.w	r2, [r3], #1
  409304:	69c8      	ldr	r0, [r1, #28]
  409306:	4302      	orrs	r2, r0
  409308:	61ca      	str	r2, [r1, #28]
        while((US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk)) && (usart1Obj.txSize > usart1Obj.txProcessedSize) )
  40930a:	694a      	ldr	r2, [r1, #20]
  40930c:	f412 7f00 	tst.w	r2, #512	; 0x200
  409310:	d011      	beq.n	409336 <.LBB11>
  409312:	429d      	cmp	r5, r3
  409314:	d1f2      	bne.n	4092fc <.LBB8+0x2c>
            usart1Obj.txBusyStatus = false;
  409316:	4b0c      	ldr	r3, [pc, #48]	; (409348 <.LBB11+0x12>)
  409318:	2200      	movs	r2, #0
  40931a:	751a      	strb	r2, [r3, #20]
            usart1Obj.txSize = 0;
  40931c:	605a      	str	r2, [r3, #4]
            usart1Obj.txProcessedSize = 0;
  40931e:	609a      	str	r2, [r3, #8]
            USART1_REGS->US_IDR = US_IDR_TXEMPTY_Msk;
  409320:	f44f 7100 	mov.w	r1, #512	; 0x200
  409324:	4a07      	ldr	r2, [pc, #28]	; (409344 <.LBB11+0xe>)
  409326:	60d1      	str	r1, [r2, #12]
            if(usart1Obj.txCallback != NULL)
  409328:	68db      	ldr	r3, [r3, #12]
  40932a:	2b00      	cmp	r3, #0
  40932c:	d09b      	beq.n	409266 <.LVL1+0x30>
                usart1Obj.txCallback(usart1Obj.txContext);
  40932e:	4a06      	ldr	r2, [pc, #24]	; (409348 <.LBB11+0x12>)
  409330:	6910      	ldr	r0, [r2, #16]
  409332:	4798      	blx	r3

00409334 <.LBE8>:
    {
        USART1_ISR_TX_Handler();
    }

    return;
  409334:	e797      	b.n	409266 <.LVL1+0x30>

00409336 <.LBB11>:
        if(usart1Obj.txProcessedSize >= usart1Obj.txSize)
  409336:	4b04      	ldr	r3, [pc, #16]	; (409348 <.LBB11+0x12>)
  409338:	689a      	ldr	r2, [r3, #8]
  40933a:	685b      	ldr	r3, [r3, #4]
  40933c:	429a      	cmp	r2, r3
  40933e:	d392      	bcc.n	409266 <.LVL1+0x30>
  409340:	e7e9      	b.n	409316 <.LBB8+0x46>
  409342:	bf00      	nop
  409344:	40028000 	.word	0x40028000
  409348:	20400454 	.word	0x20400454

Disassembly of section .text.__multiply%50:

0040934c <__multiply>:
  40934c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

00409350 <.LCFI7>:
  409350:	690c      	ldr	r4, [r1, #16]
  409352:	6915      	ldr	r5, [r2, #16]
  409354:	42ac      	cmp	r4, r5
  409356:	b083      	sub	sp, #12

00409358 <.LCFI8>:
  409358:	468b      	mov	fp, r1
  40935a:	4616      	mov	r6, r2
  40935c:	da04      	bge.n	409368 <.LVL110>
  40935e:	4622      	mov	r2, r4

00409360 <.LVL108>:
  409360:	46b3      	mov	fp, r6
  409362:	462c      	mov	r4, r5
  409364:	460e      	mov	r6, r1

00409366 <.LVL109>:
  409366:	4615      	mov	r5, r2

00409368 <.LVL110>:
  409368:	f8db 3008 	ldr.w	r3, [fp, #8]
  40936c:	f8db 1004 	ldr.w	r1, [fp, #4]

00409370 <.LVL111>:
  409370:	eb04 0805 	add.w	r8, r4, r5

00409374 <.LVL112>:
  409374:	4598      	cmp	r8, r3
  409376:	bfc8      	it	gt
  409378:	3101      	addgt	r1, #1
  40937a:	f001 ffbd 	bl	40b2f8 <.LFE2>

0040937e <.LVL114>:
  40937e:	f100 0914 	add.w	r9, r0, #20
  409382:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  409386:	45d1      	cmp	r9, sl
  409388:	9000      	str	r0, [sp, #0]

0040938a <.LVL115>:
  40938a:	d205      	bcs.n	409398 <.LVL118>
  40938c:	464b      	mov	r3, r9
  40938e:	2100      	movs	r1, #0

00409390 <.LVL116>:
  409390:	f843 1b04 	str.w	r1, [r3], #4
  409394:	459a      	cmp	sl, r3
  409396:	d8fb      	bhi.n	409390 <.LVL116>

00409398 <.LVL118>:
  409398:	f106 0c14 	add.w	ip, r6, #20
  40939c:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  4093a0:	f10b 0b14 	add.w	fp, fp, #20

004093a4 <.LVL119>:
  4093a4:	459c      	cmp	ip, r3
  4093a6:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2

004093aa <.LVL120>:
  4093aa:	d24c      	bcs.n	409446 <.LVL144>
  4093ac:	f8cd a004 	str.w	sl, [sp, #4]
  4093b0:	469a      	mov	sl, r3

004093b2 <.LVL121>:
  4093b2:	f8dc 5000 	ldr.w	r5, [ip]
  4093b6:	b2af      	uxth	r7, r5

004093b8 <.LVL122>:
  4093b8:	b1ef      	cbz	r7, 4093f6 <.LVL130>
  4093ba:	2100      	movs	r1, #0
  4093bc:	464d      	mov	r5, r9
  4093be:	465e      	mov	r6, fp
  4093c0:	460c      	mov	r4, r1

004093c2 <.LVL123>:
  4093c2:	f856 2b04 	ldr.w	r2, [r6], #4

004093c6 <.LVL124>:
  4093c6:	6828      	ldr	r0, [r5, #0]
  4093c8:	b293      	uxth	r3, r2
  4093ca:	b281      	uxth	r1, r0
  4093cc:	fb07 1303 	mla	r3, r7, r3, r1
  4093d0:	0c12      	lsrs	r2, r2, #16
  4093d2:	0c01      	lsrs	r1, r0, #16
  4093d4:	4423      	add	r3, r4

004093d6 <.LVL125>:
  4093d6:	fb07 1102 	mla	r1, r7, r2, r1
  4093da:	eb01 4113 	add.w	r1, r1, r3, lsr #16

004093de <.LVL126>:
  4093de:	b29b      	uxth	r3, r3

004093e0 <.LVL127>:
  4093e0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4093e4:	45b6      	cmp	lr, r6
  4093e6:	f845 3b04 	str.w	r3, [r5], #4

004093ea <.LVL128>:
  4093ea:	ea4f 4411 	mov.w	r4, r1, lsr #16

004093ee <.LVL129>:
  4093ee:	d8e8      	bhi.n	4093c2 <.LVL123>
  4093f0:	602c      	str	r4, [r5, #0]
  4093f2:	f8dc 5000 	ldr.w	r5, [ip]

004093f6 <.LVL130>:
  4093f6:	0c2d      	lsrs	r5, r5, #16

004093f8 <.LVL131>:
  4093f8:	d01d      	beq.n	409436 <.LVL141>

004093fa <.LVL132>:
  4093fa:	f8d9 3000 	ldr.w	r3, [r9]

004093fe <.LVL133>:
  4093fe:	4648      	mov	r0, r9
  409400:	461c      	mov	r4, r3
  409402:	4659      	mov	r1, fp
  409404:	2200      	movs	r2, #0

00409406 <.LVL134>:
  409406:	880e      	ldrh	r6, [r1, #0]
  409408:	0c24      	lsrs	r4, r4, #16
  40940a:	fb05 4406 	mla	r4, r5, r6, r4
  40940e:	4422      	add	r2, r4

00409410 <.LVL135>:
  409410:	b29b      	uxth	r3, r3

00409412 <.LVL136>:
  409412:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  409416:	f840 3b04 	str.w	r3, [r0], #4

0040941a <.LVL137>:
  40941a:	f851 3b04 	ldr.w	r3, [r1], #4

0040941e <.LVL138>:
  40941e:	6804      	ldr	r4, [r0, #0]
  409420:	0c1b      	lsrs	r3, r3, #16
  409422:	b2a6      	uxth	r6, r4
  409424:	fb05 6303 	mla	r3, r5, r3, r6
  409428:	eb03 4312 	add.w	r3, r3, r2, lsr #16

0040942c <.LVL139>:
  40942c:	458e      	cmp	lr, r1
  40942e:	ea4f 4213 	mov.w	r2, r3, lsr #16

00409432 <.LVL140>:
  409432:	d8e8      	bhi.n	409406 <.LVL134>
  409434:	6003      	str	r3, [r0, #0]

00409436 <.LVL141>:
  409436:	f10c 0c04 	add.w	ip, ip, #4
  40943a:	45e2      	cmp	sl, ip
  40943c:	f109 0904 	add.w	r9, r9, #4
  409440:	d8b7      	bhi.n	4093b2 <.LVL121>
  409442:	f8dd a004 	ldr.w	sl, [sp, #4]

00409446 <.LVL144>:
  409446:	f1b8 0f00 	cmp.w	r8, #0
  40944a:	dd0b      	ble.n	409464 <.LVL149>
  40944c:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  409450:	f1aa 0a04 	sub.w	sl, sl, #4
  409454:	b11b      	cbz	r3, 40945e <.LVL147>
  409456:	e005      	b.n	409464 <.LVL149>
  409458:	f85a 3d04 	ldr.w	r3, [sl, #-4]!

0040945c <.LVL146>:
  40945c:	b913      	cbnz	r3, 409464 <.LVL149>

0040945e <.LVL147>:
  40945e:	f1b8 0801 	subs.w	r8, r8, #1

00409462 <.LVL148>:
  409462:	d1f9      	bne.n	409458 <.LVL144+0x12>

00409464 <.LVL149>:
  409464:	9800      	ldr	r0, [sp, #0]
  409466:	f8c0 8010 	str.w	r8, [r0, #16]
  40946a:	b003      	add	sp, #12

0040946c <.LCFI9>:
  40946c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text.Reset_Handler%51:

00409470 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void __attribute__((optimize("-O1"), section(".text.Reset_Handler"), long_call)) Reset_Handler(void)
{
  409470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

00409472 <.LCFI0>:
    uint32_t *pSrc;

    /* Call the optional application-provided _on_reset() function. */
    if (_on_reset)
  409472:	4b3e      	ldr	r3, [pc, #248]	; (40956c <.LVL15+0x2>)
  409474:	b103      	cbz	r3, 409478 <.LVL0>
    {
        _on_reset();
  409476:	4798      	blx	r3

00409478 <.LVL0>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_reset)
  409478:	4b3d      	ldr	r3, [pc, #244]	; (409570 <.LVL15+0x6>)
  40947a:	b103      	cbz	r3, 40947e <.LBB143>
        __xc32_on_reset();
  40947c:	4798      	blx	r3

0040947e <.LBB143>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40947e:	f3ef 8110 	mrs	r1, PRIMASK

00409482 <.LBB147>:
  __ASM volatile ("cpsid i" : : : "memory");
  409482:	b672      	cpsid	i

00409484 <.LBE147>:
     SCB->CPACR |= (0xFu << 20);
  409484:	4a3b      	ldr	r2, [pc, #236]	; (409574 <.LVL15+0xa>)
  409486:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
  40948a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  40948e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

00409492 <.LBB149>:
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  409492:	f3bf 8f4f 	dsb	sy

00409496 <.LBB151>:
  __ASM volatile ("isb 0xF":::"memory");
  409496:	f3bf 8f6f 	isb	sy

0040949a <.LBE151>:
    if (!prim)
  40949a:	b901      	cbnz	r1, 40949e <.LBB155>

0040949c <.LBB153>:
  __ASM volatile ("cpsie i" : : : "memory");
  40949c:	b662      	cpsie	i

0040949e <.LBB155>:
  __ASM volatile ("dsb 0xF":::"memory");
  40949e:	f3bf 8f4f 	dsb	sy

004094a2 <.LBB159>:
  __ASM volatile ("isb 0xF":::"memory");
  4094a2:	f3bf 8f6f 	isb	sy

004094a6 <.LBE159>:
    SCB->ITCMCR &= ~(uint32_t)SCB_ITCMCR_EN_Msk;
  4094a6:	4c33      	ldr	r4, [pc, #204]	; (409574 <.LVL15+0xa>)
  4094a8:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
  4094ac:	f023 0301 	bic.w	r3, r3, #1
  4094b0:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
    SCB->DTCMCR &= ~(uint32_t)SCB_ITCMCR_EN_Msk;
  4094b4:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
  4094b8:	f023 0301 	bic.w	r3, r3, #1
  4094bc:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294

004094c0 <.LBB161>:
  __ASM volatile ("dsb 0xF":::"memory");
  4094c0:	f3bf 8f4f 	dsb	sy

004094c4 <.LBB163>:
  __ASM volatile ("isb 0xF":::"memory");
  4094c4:	f3bf 8f6f 	isb	sy

004094c8 <.LBE155>:
    /* Disable TCM  */
    TCM_Disable();

    /* Initialize data after TCM is enabled.
     * Data initialization from the XC32 .dinit template */
    __pic32c_data_initialization();
  4094c8:	f001 f9d2 	bl	40a870 <.LFE163>

004094cc <.LVL2>:
	

#  ifdef SCB_VTOR_TBLOFF_Msk
    /*  Set the vector-table base address in FLASH */
    pSrc = (uint32_t *) & __svectors;
    SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4094cc:	4b2a      	ldr	r3, [pc, #168]	; (409578 <.LVL15+0xe>)
  4094ce:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4094d2:	60a3      	str	r3, [r4, #8]
#  endif /* SCB_VTOR_TBLOFF_Msk */

    /* Initialize the C library */
    __libc_init_array();
  4094d4:	4b29      	ldr	r3, [pc, #164]	; (40957c <.LVL15+0x12>)
  4094d6:	4798      	blx	r3

004094d8 <.LBB165>:
  __ASM volatile ("dsb 0xF":::"memory");
  4094d8:	f3bf 8f4f 	dsb	sy

004094dc <.LBB170>:
  __ASM volatile ("isb 0xF":::"memory");
  4094dc:	f3bf 8f6f 	isb	sy

004094e0 <.LBE170>:
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  4094e0:	2200      	movs	r2, #0
  4094e2:	f8c4 2250 	str.w	r2, [r4, #592]	; 0x250

004094e6 <.LBB172>:
  __ASM volatile ("dsb 0xF":::"memory");
  4094e6:	f3bf 8f4f 	dsb	sy

004094ea <.LBB174>:
  __ASM volatile ("isb 0xF":::"memory");
  4094ea:	f3bf 8f6f 	isb	sy

004094ee <.LBE174>:
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  4094ee:	6963      	ldr	r3, [r4, #20]
  4094f0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  4094f4:	6163      	str	r3, [r4, #20]

004094f6 <.LBB176>:
  __ASM volatile ("dsb 0xF":::"memory");
  4094f6:	f3bf 8f4f 	dsb	sy

004094fa <.LBB178>:
  __ASM volatile ("isb 0xF":::"memory");
  4094fa:	f3bf 8f6f 	isb	sy

004094fe <.LBB180>:
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  4094fe:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84

00409502 <.LBB183>:
  __ASM volatile ("dsb 0xF":::"memory");
  409502:	f3bf 8f4f 	dsb	sy

00409506 <.LBE183>:
    __DSB();

    ccsidr = SCB->CCSIDR;
  409506:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80

0040950a <.LVL4>:

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  40950a:	f3c5 364e 	ubfx	r6, r5, #13, #15

0040950e <.LVL5>:
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  40950e:	f3c5 05c9 	ubfx	r5, r5, #3, #10

00409512 <.LVL6>:
  409512:	0177      	lsls	r7, r6, #5
  409514:	ea4f 7c85 	mov.w	ip, r5, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  409518:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  40951c:	4620      	mov	r0, r4
  40951e:	ea07 040e 	and.w	r4, r7, lr
  409522:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  409524:	462b      	mov	r3, r5

00409526 <.LVL8>:
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  409526:	ea42 0104 	orr.w	r1, r2, r4
  40952a:	f8c0 1260 	str.w	r1, [r0, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  40952e:	3b01      	subs	r3, #1
  409530:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  409534:	f1b3 3fff 	cmp.w	r3, #4294967295
  409538:	d1f5      	bne.n	409526 <.LVL8>
    } while(sets-- != 0U);
  40953a:	3e01      	subs	r6, #1
  40953c:	3f20      	subs	r7, #32
  40953e:	f1b6 3fff 	cmp.w	r6, #4294967295
  409542:	d1ec      	bne.n	40951e <.LVL6+0xc>

00409544 <.LBB185>:
  409544:	f3bf 8f4f 	dsb	sy

00409548 <.LBE185>:
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  409548:	4a0a      	ldr	r2, [pc, #40]	; (409574 <.LVL15+0xa>)
  40954a:	6953      	ldr	r3, [r2, #20]

0040954c <.LVL11>:
  40954c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  409550:	6153      	str	r3, [r2, #20]

00409552 <.LBB187>:
  409552:	f3bf 8f4f 	dsb	sy

00409556 <.LBB189>:
  __ASM volatile ("isb 0xF":::"memory");
  409556:	f3bf 8f6f 	isb	sy

0040955a <.LBE180>:

    /* Enable Data Cache    */
    DCache_Enable();

    /* Call the optional application-provided _on_bootstrap() function. */
    if (_on_bootstrap)
  40955a:	4b09      	ldr	r3, [pc, #36]	; (409580 <.LVL15+0x16>)
  40955c:	b103      	cbz	r3, 409560 <.LVL13>
    {
        _on_bootstrap();
  40955e:	4798      	blx	r3

00409560 <.LVL13>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_bootstrap)
  409560:	4b08      	ldr	r3, [pc, #32]	; (409584 <.LVL15+0x1a>)
  409562:	b103      	cbz	r3, 409566 <.LVL14>
    {
        __xc32_on_bootstrap();
  409564:	4798      	blx	r3

00409566 <.LVL14>:
    }

    /* Branch to application's main function */
    main();
  409566:	f002 fc3f 	bl	40bde8 <main>

0040956a <.LVL15>:
  40956a:	e7fe      	b.n	40956a <.LVL15>
	...
  409574:	e000ed00 	.word	0xe000ed00
  409578:	00400000 	.word	0x00400000
  40957c:	0040b211 	.word	0x0040b211
	...

Disassembly of section .text.__mdiff%52:

00409588 <__mdiff>:
  409588:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

0040958c <.LBB30>:
  40958c:	690f      	ldr	r7, [r1, #16]

0040958e <.LBE30>:
  40958e:	460e      	mov	r6, r1

00409590 <.LBB35>:
  409590:	6911      	ldr	r1, [r2, #16]

00409592 <.LVL227>:
  409592:	1a7f      	subs	r7, r7, r1

00409594 <.LVL228>:
  409594:	2f00      	cmp	r7, #0

00409596 <.LBE35>:
  409596:	4690      	mov	r8, r2

00409598 <.LBB36>:
  409598:	d117      	bne.n	4095ca <.LVL243>
  40959a:	0089      	lsls	r1, r1, #2
  40959c:	f106 0514 	add.w	r5, r6, #20
  4095a0:	f102 0e14 	add.w	lr, r2, #20
  4095a4:	186b      	adds	r3, r5, r1
  4095a6:	4471      	add	r1, lr
  4095a8:	e001      	b.n	4095ae <.LVL233+0x4>

004095aa <.LVL233>:
  4095aa:	429d      	cmp	r5, r3
  4095ac:	d25c      	bcs.n	409668 <.LVL274>
  4095ae:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4095b2:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4095b6:	42a2      	cmp	r2, r4
  4095b8:	d0f7      	beq.n	4095aa <.LVL233>
  4095ba:	d25e      	bcs.n	40967a <.LBB37>
  4095bc:	4633      	mov	r3, r6
  4095be:	462c      	mov	r4, r5

004095c0 <.LVL238>:
  4095c0:	4646      	mov	r6, r8

004095c2 <.LVL239>:
  4095c2:	4675      	mov	r5, lr
  4095c4:	4698      	mov	r8, r3

004095c6 <.LBE36>:
  4095c6:	2701      	movs	r7, #1
  4095c8:	e005      	b.n	4095d6 <.LVL245>

004095ca <.LVL243>:
  4095ca:	db58      	blt.n	40967e <.LBE37>

004095cc <.LVL244>:
  4095cc:	f106 0514 	add.w	r5, r6, #20
  4095d0:	f108 0414 	add.w	r4, r8, #20
  4095d4:	2700      	movs	r7, #0

004095d6 <.LVL245>:
  4095d6:	6871      	ldr	r1, [r6, #4]
  4095d8:	f001 fe8e 	bl	40b2f8 <.LFE2>

004095dc <.LVL246>:
  4095dc:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4095e0:	6936      	ldr	r6, [r6, #16]

004095e2 <.LVL247>:
  4095e2:	60c7      	str	r7, [r0, #12]
  4095e4:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4095e8:	46a6      	mov	lr, r4
  4095ea:	eb05 0786 	add.w	r7, r5, r6, lsl #2

004095ee <.LVL248>:
  4095ee:	f100 0414 	add.w	r4, r0, #20

004095f2 <.LVL249>:
  4095f2:	2300      	movs	r3, #0

004095f4 <.LVL250>:
  4095f4:	f85e 1b04 	ldr.w	r1, [lr], #4
  4095f8:	f855 8b04 	ldr.w	r8, [r5], #4

004095fc <.LVL251>:
  4095fc:	b28a      	uxth	r2, r1
  4095fe:	fa13 f388 	uxtah	r3, r3, r8

00409602 <.LVL252>:
  409602:	0c09      	lsrs	r1, r1, #16
  409604:	1a9a      	subs	r2, r3, r2

00409606 <.LVL253>:
  409606:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  40960a:	eb03 4322 	add.w	r3, r3, r2, asr #16

0040960e <.LVL254>:
  40960e:	b292      	uxth	r2, r2

00409610 <.LVL255>:
  409610:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  409614:	45f4      	cmp	ip, lr
  409616:	f844 2b04 	str.w	r2, [r4], #4

0040961a <.LVL256>:
  40961a:	ea4f 4323 	mov.w	r3, r3, asr #16

0040961e <.LVL257>:
  40961e:	d8e9      	bhi.n	4095f4 <.LVL250>

00409620 <.LVL258>:
  409620:	42af      	cmp	r7, r5
  409622:	d917      	bls.n	409654 <.LVL269>
  409624:	46a4      	mov	ip, r4

00409626 <.LVL259>:
  409626:	46ae      	mov	lr, r5

00409628 <.LVL260>:
  409628:	f85e 2b04 	ldr.w	r2, [lr], #4

0040962c <.LVL261>:
  40962c:	fa13 f382 	uxtah	r3, r3, r2

00409630 <.LVL262>:
  409630:	1419      	asrs	r1, r3, #16

00409632 <.LVL263>:
  409632:	eb01 4112 	add.w	r1, r1, r2, lsr #16

00409636 <.LVL264>:
  409636:	b29b      	uxth	r3, r3

00409638 <.LVL265>:
  409638:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  40963c:	4577      	cmp	r7, lr
  40963e:	f84c 2b04 	str.w	r2, [ip], #4

00409642 <.LVL266>:
  409642:	ea4f 4321 	mov.w	r3, r1, asr #16

00409646 <.LVL267>:
  409646:	d8ef      	bhi.n	409628 <.LVL260>
  409648:	43ed      	mvns	r5, r5
  40964a:	442f      	add	r7, r5

0040964c <.LVL268>:
  40964c:	f027 0703 	bic.w	r7, r7, #3
  409650:	3704      	adds	r7, #4
  409652:	443c      	add	r4, r7

00409654 <.LVL269>:
  409654:	3c04      	subs	r4, #4
  409656:	b922      	cbnz	r2, 409662 <.LVL273+0x4>

00409658 <.LVL271>:
  409658:	f854 3d04 	ldr.w	r3, [r4, #-4]!

0040965c <.LVL272>:
  40965c:	3e01      	subs	r6, #1

0040965e <.LVL273>:
  40965e:	2b00      	cmp	r3, #0
  409660:	d0fa      	beq.n	409658 <.LVL271>
  409662:	6106      	str	r6, [r0, #16]
  409664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00409668 <.LVL274>:
  409668:	2100      	movs	r1, #0
  40966a:	f001 fe45 	bl	40b2f8 <.LFE2>

0040966e <.LVL275>:
  40966e:	2201      	movs	r2, #1
  409670:	2300      	movs	r3, #0
  409672:	6102      	str	r2, [r0, #16]
  409674:	6143      	str	r3, [r0, #20]
  409676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040967a <.LBB37>:
  40967a:	4674      	mov	r4, lr
  40967c:	e7ab      	b.n	4095d6 <.LVL245>

0040967e <.LBE37>:
  40967e:	4633      	mov	r3, r6
  409680:	f106 0414 	add.w	r4, r6, #20
  409684:	f102 0514 	add.w	r5, r2, #20
  409688:	4616      	mov	r6, r2

0040968a <.LVL278>:
  40968a:	2701      	movs	r7, #1
  40968c:	4698      	mov	r8, r3
  40968e:	e7a2      	b.n	4095d6 <.LVL245>

Disassembly of section .rodata%53:

00409690 <.LANCHOR1>:
  409690:	30257325 	.word	0x30257325
  409694:	00005832 	.word	0x00005832
  409698:	0d0a7325 	.word	0x0d0a7325
  40969c:	2035444d 	.word	0x2035444d
  4096a0:	6d6f7266 	.word	0x6d6f7266
  4096a4:	65656620 	.word	0x65656620
  4096a8:	20203a64 	.word	0x20203a64
  4096ac:	00202020 	.word	0x00202020
  4096b0:	20097325 	.word	0x20097325
  4096b4:	6b6f6f74 	.word	0x6b6f6f74
  4096b8:	20642520 	.word	0x20642520
  4096bc:	636f6c63 	.word	0x636f6c63
  4096c0:	7963206b 	.word	0x7963206b
  4096c4:	73656c63 	.word	0x73656c63
  4096c8:	00000000 	.word	0x00000000
  4096cc:	0d0a7325 	.word	0x0d0a7325
  4096d0:	20414853 	.word	0x20414853
  4096d4:	6d6f7266 	.word	0x6d6f7266
  4096d8:	65656620 	.word	0x65656620
  4096dc:	20203a64 	.word	0x20203a64
  4096e0:	00202020 	.word	0x00202020
  4096e4:	0d0a7325 	.word	0x0d0a7325
  4096e8:	32414853 	.word	0x32414853
  4096ec:	66203635 	.word	0x66203635
  4096f0:	206d6f72 	.word	0x206d6f72
  4096f4:	64656566 	.word	0x64656566
  4096f8:	0020203a 	.word	0x0020203a
  4096fc:	0d0a7325 	.word	0x0d0a7325
  409700:	33414853 	.word	0x33414853
  409704:	66203438 	.word	0x66203438
  409708:	206d6f72 	.word	0x206d6f72
  40970c:	64656566 	.word	0x64656566
  409710:	0020203a 	.word	0x0020203a
  409714:	0d0a7325 	.word	0x0d0a7325
  409718:	35414853 	.word	0x35414853
  40971c:	66203231 	.word	0x66203231
  409720:	206d6f72 	.word	0x206d6f72
  409724:	64656566 	.word	0x64656566
  409728:	0020203a 	.word	0x0020203a
  40972c:	0d0a7325 	.word	0x0d0a7325
  409730:	65742041 	.word	0x65742041
  409734:	66207473 	.word	0x66207473
  409738:	656c6961 	.word	0x656c6961
  40973c:	00002e64 	.word	0x00002e64
  409740:	0d0a7325 	.word	0x0d0a7325
  409744:	206c6c41 	.word	0x206c6c41
  409748:	74736574 	.word	0x74736574
  40974c:	61702073 	.word	0x61702073
  409750:	64657373 	.word	0x64657373
  409754:	0000002e 	.word	0x0000002e
  409758:	41200a0d 	.word	0x41200a0d
  40975c:	696c7070 	.word	0x696c7070
  409760:	69746163 	.word	0x69746163
  409764:	63206e6f 	.word	0x63206e6f
  409768:	74616572 	.word	0x74616572
  40976c:	4f206465 	.word	0x4f206465
  409770:	32207463 	.word	0x32207463
  409774:	30322035 	.word	0x30322035
  409778:	31203831 	.word	0x31203831
  40977c:	30313a31 	.word	0x30313a31
  409780:	2033303a 	.word	0x2033303a
  409784:	74696e69 	.word	0x74696e69
  409788:	696c6169 	.word	0x696c6169
  40978c:	2164657a 	.word	0x2164657a
  409790:	0a0d      	.short	0x0a0d
	...

Disassembly of section .rodata._ctype_%54:

00409794 <_ctype_>:
  409794:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4097a4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4097b4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4097c4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4097d4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4097e4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4097f4:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  409804:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  409814:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
  409894:	0000 bf00                                   ....

Disassembly of section .rodata.K%55:

00409898 <K>:
  409898:	2f98 428a 4491 7137 fbcf b5c0 dba5 e9b5     ./.B.D7q........
  4098a8:	c25b 3956 11f1 59f1 82a4 923f 5ed5 ab1c     [.V9...Y..?..^..
  4098b8:	aa98 d807 5b01 1283 85be 2431 7dc3 550c     .....[....1$.}.U
  4098c8:	5d74 72be b1fe 80de 06a7 9bdc f174 c19b     t].r........t...
  4098d8:	69c1 e49b 4786 efbe 9dc6 0fc1 a1cc 240c     .i...G.........$
  4098e8:	2c6f 2de9 84aa 4a74 a9dc 5cb0 88da 76f9     o,.-..tJ...\...v
  4098f8:	5152 983e c66d a831 27c8 b003 7fc7 bf59     RQ>.m.1..'....Y.
  409908:	0bf3 c6e0 9147 d5a7 6351 06ca 2967 1429     ....G...Qc..g)).
  409918:	0a85 27b7 2138 2e1b 6dfc 4d2c 0d13 5338     ...'8!...m,M..8S
  409928:	7354 650a 0abb 766a c92e 81c2 2c85 9272     Ts.e..jv.....,r.
  409938:	e8a1 a2bf 664b a81a 8b70 c24b 51a3 c76c     ....Kf..p.K..Ql.
  409948:	e819 d192 0624 d699 3585 f40e a070 106a     ....$....5..p.j.
  409958:	c116 19a4 6c08 1e37 774c 2748 bcb5 34b0     .....l7.LwH'...4
  409968:	0cb3 391c aa4a 4ed8 ca4f 5b9c 6ff3 682e     ...9J..NO..[.o.h
  409978:	82ee 748f 636f 78a5 7814 84c8 0208 8cc7     ...toc.x.x......
  409988:	fffa 90be 6ceb a450 a3f7 bef9 78f2 c671     .....lP......xq.

Disassembly of section .text.__ssprint_r%56:

00409998 <__ssprint_r>:
  409998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

0040999c <.LCFI0>:
  40999c:	6893      	ldr	r3, [r2, #8]
  40999e:	b083      	sub	sp, #12

004099a0 <.LCFI1>:
  4099a0:	4690      	mov	r8, r2

004099a2 <.LVL1>:
  4099a2:	2b00      	cmp	r3, #0
  4099a4:	d070      	beq.n	409a88 <.LCFI3>
  4099a6:	4682      	mov	sl, r0
  4099a8:	460c      	mov	r4, r1
  4099aa:	6817      	ldr	r7, [r2, #0]
  4099ac:	688d      	ldr	r5, [r1, #8]
  4099ae:	6808      	ldr	r0, [r1, #0]

004099b0 <.LVL2>:
  4099b0:	e042      	b.n	409a38 <.LVL16>

004099b2 <.LVL3>:
  4099b2:	89a3      	ldrh	r3, [r4, #12]
  4099b4:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4099b8:	d02e      	beq.n	409a18 <.LBE2>

004099ba <.LBB2>:
  4099ba:	6965      	ldr	r5, [r4, #20]
  4099bc:	6921      	ldr	r1, [r4, #16]
  4099be:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4099c2:	eba0 0b01 	sub.w	fp, r0, r1

004099c6 <.LVL4>:
  4099c6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  4099ca:	f10b 0001 	add.w	r0, fp, #1
  4099ce:	106d      	asrs	r5, r5, #1

004099d0 <.LVL5>:
  4099d0:	4430      	add	r0, r6
  4099d2:	42a8      	cmp	r0, r5
  4099d4:	462a      	mov	r2, r5
  4099d6:	bf84      	itt	hi
  4099d8:	4605      	movhi	r5, r0
  4099da:	462a      	movhi	r2, r5
  4099dc:	055b      	lsls	r3, r3, #21
  4099de:	d538      	bpl.n	409a52 <.LBB3>
  4099e0:	4611      	mov	r1, r2
  4099e2:	4650      	mov	r0, sl
  4099e4:	f7fd fbca 	bl	40717c <.LFE14>

004099e8 <.LVL7>:
  4099e8:	2800      	cmp	r0, #0
  4099ea:	d03c      	beq.n	409a66 <.L10>
  4099ec:	465a      	mov	r2, fp
  4099ee:	6921      	ldr	r1, [r4, #16]
  4099f0:	9001      	str	r0, [sp, #4]
  4099f2:	f7ff faeb 	bl	408fcc <.LFE19>

004099f6 <.LVL8>:
  4099f6:	89a2      	ldrh	r2, [r4, #12]
  4099f8:	9b01      	ldr	r3, [sp, #4]
  4099fa:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4099fe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  409a02:	81a2      	strh	r2, [r4, #12]

00409a04 <.LVL9>:
  409a04:	eba5 020b 	sub.w	r2, r5, fp
  409a08:	eb03 000b 	add.w	r0, r3, fp
  409a0c:	6165      	str	r5, [r4, #20]
  409a0e:	6123      	str	r3, [r4, #16]
  409a10:	6020      	str	r0, [r4, #0]
  409a12:	60a2      	str	r2, [r4, #8]
  409a14:	4635      	mov	r5, r6

00409a16 <.LVL10>:
  409a16:	46b3      	mov	fp, r6

00409a18 <.LBE2>:
  409a18:	465a      	mov	r2, fp
  409a1a:	4649      	mov	r1, r9
  409a1c:	f000 fa04 	bl	409e28 <.LFE170>

00409a20 <.LVL12>:
  409a20:	f8d8 3008 	ldr.w	r3, [r8, #8]
  409a24:	68a2      	ldr	r2, [r4, #8]
  409a26:	6820      	ldr	r0, [r4, #0]
  409a28:	1b55      	subs	r5, r2, r5

00409a2a <.LVL13>:
  409a2a:	4458      	add	r0, fp
  409a2c:	1b9e      	subs	r6, r3, r6

00409a2e <.LVL14>:
  409a2e:	60a5      	str	r5, [r4, #8]
  409a30:	6020      	str	r0, [r4, #0]

00409a32 <.LVL15>:
  409a32:	f8c8 6008 	str.w	r6, [r8, #8]
  409a36:	b33e      	cbz	r6, 409a88 <.LCFI3>

00409a38 <.LVL16>:
  409a38:	687e      	ldr	r6, [r7, #4]

00409a3a <.LVL17>:
  409a3a:	463b      	mov	r3, r7
  409a3c:	3708      	adds	r7, #8

00409a3e <.LVL18>:
  409a3e:	2e00      	cmp	r6, #0
  409a40:	d0fa      	beq.n	409a38 <.LVL16>
  409a42:	42ae      	cmp	r6, r5
  409a44:	f8d3 9000 	ldr.w	r9, [r3]
  409a48:	46ab      	mov	fp, r5
  409a4a:	d2b2      	bcs.n	4099b2 <.LVL3>
  409a4c:	4635      	mov	r5, r6

00409a4e <.LVL19>:
  409a4e:	46b3      	mov	fp, r6
  409a50:	e7e2      	b.n	409a18 <.LBE2>

00409a52 <.LBB3>:
  409a52:	4650      	mov	r0, sl
  409a54:	f7fd fe3a 	bl	4076cc <.LFE2>

00409a58 <.LVL21>:
  409a58:	4603      	mov	r3, r0
  409a5a:	2800      	cmp	r0, #0
  409a5c:	d1d2      	bne.n	409a04 <.LVL9>
  409a5e:	6921      	ldr	r1, [r4, #16]
  409a60:	4650      	mov	r0, sl

00409a62 <.LVL22>:
  409a62:	f7fe ffbf 	bl	4089e4 <.LFE174>

00409a66 <.L10>:
  409a66:	230c      	movs	r3, #12
  409a68:	f8ca 3000 	str.w	r3, [sl]

00409a6c <.LBE3>:
  409a6c:	89a3      	ldrh	r3, [r4, #12]
  409a6e:	2200      	movs	r2, #0
  409a70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  409a74:	f04f 30ff 	mov.w	r0, #4294967295
  409a78:	81a3      	strh	r3, [r4, #12]
  409a7a:	f8c8 2008 	str.w	r2, [r8, #8]
  409a7e:	f8c8 2004 	str.w	r2, [r8, #4]
  409a82:	b003      	add	sp, #12

00409a84 <.LCFI2>:
  409a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00409a88 <.LCFI3>:
  409a88:	2000      	movs	r0, #0
  409a8a:	f8c8 0004 	str.w	r0, [r8, #4]
  409a8e:	b003      	add	sp, #12

00409a90 <.LCFI4>:
  409a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text.wc_Sha512Update%57:

00409a94 <wc_Sha512Update>:
{
  409a94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

00409a98 <.LCFI6>:
    if (sha512 == NULL || (data == NULL && len > 0)) {
  409a98:	2800      	cmp	r0, #0
  409a9a:	d065      	beq.n	409b68 <.LVL43>
  409a9c:	4689      	mov	r9, r1
  409a9e:	4615      	mov	r5, r2
  409aa0:	4680      	mov	r8, r0
  409aa2:	b909      	cbnz	r1, 409aa8 <.LBB700>
  409aa4:	2a00      	cmp	r2, #0
  409aa6:	d162      	bne.n	409b6e <.LVL43+0x6>

00409aa8 <.LBB700>:
    byte* local = (byte*)sha512->buffer;
  409aa8:	f108 0b58 	add.w	fp, r8, #88	; 0x58

00409aac <.LVL25>:
    if (sha512->buffLen >= SHA512_BLOCK_SIZE)
  409aac:	f8d8 3000 	ldr.w	r3, [r8]
  409ab0:	2b7f      	cmp	r3, #127	; 0x7f
  409ab2:	d85f      	bhi.n	409b74 <.LBB719>
    while (len) {
  409ab4:	2d00      	cmp	r5, #0
  409ab6:	d060      	beq.n	409b7a <.LBB719+0x6>
  409ab8:	f108 0ad0 	add.w	sl, r8, #208	; 0xd0
  409abc:	e004      	b.n	409ac8 <.LBB717>

00409abe <.LBB702>:
            sha512->buffLen = 0;
  409abe:	2300      	movs	r3, #0
  409ac0:	f8c8 3000 	str.w	r3, [r8]

00409ac4 <.LBE702>:
    while (len) {
  409ac4:	2d00      	cmp	r5, #0
  409ac6:	d04b      	beq.n	409b60 <.LBE715>

00409ac8 <.LBB717>:
        word32 add = min(len, SHA512_BLOCK_SIZE - sha512->buffLen);
  409ac8:	f8d8 0000 	ldr.w	r0, [r8]

00409acc <.LVL28>:
  409acc:	f1c0 0480 	rsb	r4, r0, #128	; 0x80

00409ad0 <.LBB703>:
    #if defined(HAVE_FIPS) && !defined(min) /* so ifdef check passes */
        #define min min
    #endif
    STATIC INLINE word32 min(word32 a, word32 b)
    {
        return a > b ? b : a;
  409ad0:	42ac      	cmp	r4, r5
  409ad2:	bf28      	it	cs
  409ad4:	462c      	movcs	r4, r5

00409ad6 <.LBE703>:
        XMEMCPY(&local[sha512->buffLen], data, add);
  409ad6:	4622      	mov	r2, r4
  409ad8:	4649      	mov	r1, r9
  409ada:	4458      	add	r0, fp
  409adc:	f7ff fa76 	bl	408fcc <.LFE19>

00409ae0 <.LVL31>:
        sha512->buffLen += add;
  409ae0:	f8d8 3000 	ldr.w	r3, [r8]
  409ae4:	4423      	add	r3, r4
  409ae6:	f8c8 3000 	str.w	r3, [r8]
        data            += add;
  409aea:	44a1      	add	r9, r4
        len             -= add;
  409aec:	1b2d      	subs	r5, r5, r4
        if (sha512->buffLen == SHA512_BLOCK_SIZE) {
  409aee:	2b80      	cmp	r3, #128	; 0x80
  409af0:	d1e8      	bne.n	409ac4 <.LBE702>
  409af2:	f108 0250 	add.w	r2, r8, #80	; 0x50

00409af6 <.LBB705>:
        out[i] = ByteReverseWord64(in[i]);
  409af6:	6893      	ldr	r3, [r2, #8]
  409af8:	68d1      	ldr	r1, [r2, #12]

00409afa <.LBB707>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  409afa:	0a18      	lsrs	r0, r3, #8
  409afc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  409b00:	021b      	lsls	r3, r3, #8
  409b02:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  409b06:	4303      	orrs	r3, r0

00409b08 <.LBE709>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  409b08:	ea4f 4733 	mov.w	r7, r3, ror #16
  409b0c:	2600      	movs	r6, #0

00409b0e <.LBB711>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  409b0e:	0a0b      	lsrs	r3, r1, #8
  409b10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  409b14:	0209      	lsls	r1, r1, #8
  409b16:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  409b1a:	430b      	orrs	r3, r1

00409b1c <.LBB713>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  409b1c:	ea4f 4333 	mov.w	r3, r3, ror #16

00409b20 <.LBE711>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  409b20:	ea46 0003 	orr.w	r0, r6, r3
  409b24:	4639      	mov	r1, r7

00409b26 <.LBE707>:
        out[i] = ByteReverseWord64(in[i]);
  409b26:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  409b2a:	4592      	cmp	sl, r2
  409b2c:	d1e3      	bne.n	409af6 <.LBB705>

00409b2e <.LBE705>:
            ret = Transform(sha512);
  409b2e:	4640      	mov	r0, r8
  409b30:	f7f6 fb30 	bl	400194 <_etext>

00409b34 <.LVL35>:
            if (ret != 0)
  409b34:	4603      	mov	r3, r0
  409b36:	b9a0      	cbnz	r0, 409b62 <.LBE700>

00409b38 <.LBB715>:
    word64 tmp = sha512->loLen;
  409b38:	e9d8 2302 	ldrd	r2, r3, [r8, #8]

00409b3c <.LVL37>:
    if ( (sha512->loLen += len) < tmp)
  409b3c:	f112 0080 	adds.w	r0, r2, #128	; 0x80

00409b40 <.LVL38>:
  409b40:	f143 0100 	adc.w	r1, r3, #0
  409b44:	e9c8 0102 	strd	r0, r1, [r8, #8]
  409b48:	4299      	cmp	r1, r3
  409b4a:	bf08      	it	eq
  409b4c:	4290      	cmpeq	r0, r2
  409b4e:	d2b6      	bcs.n	409abe <.LBB702>
        sha512->hiLen++;                       /* carry low to high */
  409b50:	e9d8 2304 	ldrd	r2, r3, [r8, #16]

00409b54 <.LVL39>:
  409b54:	3201      	adds	r2, #1
  409b56:	f143 0300 	adc.w	r3, r3, #0

00409b5a <.LVL40>:
  409b5a:	e9c8 2304 	strd	r2, r3, [r8, #16]
  409b5e:	e7ae      	b.n	409abe <.LBB702>

00409b60 <.LBE715>:
    while (len) {
  409b60:	2300      	movs	r3, #0

00409b62 <.LBE700>:
}
  409b62:	4618      	mov	r0, r3
  409b64:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00409b68 <.LVL43>:
        return BAD_FUNC_ARG;
  409b68:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  409b6c:	e7f9      	b.n	409b62 <.LBE700>
  409b6e:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  409b72:	e7f6      	b.n	409b62 <.LBE700>

00409b74 <.LBB719>:
        return BUFFER_E;
  409b74:	f06f 0383 	mvn.w	r3, #131	; 0x83
  409b78:	e7f3      	b.n	409b62 <.LBE700>
    while (len) {
  409b7a:	2300      	movs	r3, #0
  409b7c:	e7f1      	b.n	409b62 <.LBE700>

Disassembly of section .text.wc_Sha384Update%58:

00409b7e <wc_Sha384Update>:
{
  409b7e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

00409b82 <.LCFI13>:
    if (sha384 == NULL || (data == NULL && len > 0)) {
  409b82:	2800      	cmp	r0, #0
  409b84:	d065      	beq.n	409c52 <.LVL102>
  409b86:	4689      	mov	r9, r1
  409b88:	4615      	mov	r5, r2
  409b8a:	4680      	mov	r8, r0
  409b8c:	b909      	cbnz	r1, 409b92 <.LBB821>
  409b8e:	2a00      	cmp	r2, #0
  409b90:	d162      	bne.n	409c58 <.LVL102+0x6>

00409b92 <.LBB821>:
    byte* local = (byte*)sha512->buffer;
  409b92:	f108 0b58 	add.w	fp, r8, #88	; 0x58

00409b96 <.LVL84>:
    if (sha512->buffLen >= SHA512_BLOCK_SIZE)
  409b96:	f8d8 3000 	ldr.w	r3, [r8]
  409b9a:	2b7f      	cmp	r3, #127	; 0x7f
  409b9c:	d85f      	bhi.n	409c5e <.LBB840>
    while (len) {
  409b9e:	2d00      	cmp	r5, #0
  409ba0:	d060      	beq.n	409c64 <.LBB840+0x6>
  409ba2:	f108 0ad0 	add.w	sl, r8, #208	; 0xd0
  409ba6:	e004      	b.n	409bb2 <.LBB838>

00409ba8 <.LBB823>:
            sha512->buffLen = 0;
  409ba8:	2300      	movs	r3, #0
  409baa:	f8c8 3000 	str.w	r3, [r8]

00409bae <.LBE823>:
    while (len) {
  409bae:	2d00      	cmp	r5, #0
  409bb0:	d04b      	beq.n	409c4a <.LBE836>

00409bb2 <.LBB838>:
        word32 add = min(len, SHA512_BLOCK_SIZE - sha512->buffLen);
  409bb2:	f8d8 0000 	ldr.w	r0, [r8]

00409bb6 <.LVL87>:
  409bb6:	f1c0 0480 	rsb	r4, r0, #128	; 0x80

00409bba <.LBB824>:
        return a > b ? b : a;
  409bba:	42ac      	cmp	r4, r5
  409bbc:	bf28      	it	cs
  409bbe:	462c      	movcs	r4, r5

00409bc0 <.LBE824>:
        XMEMCPY(&local[sha512->buffLen], data, add);
  409bc0:	4622      	mov	r2, r4
  409bc2:	4649      	mov	r1, r9
  409bc4:	4458      	add	r0, fp
  409bc6:	f7ff fa01 	bl	408fcc <.LFE19>

00409bca <.LVL90>:
        sha512->buffLen += add;
  409bca:	f8d8 3000 	ldr.w	r3, [r8]
  409bce:	4423      	add	r3, r4
  409bd0:	f8c8 3000 	str.w	r3, [r8]
        data            += add;
  409bd4:	44a1      	add	r9, r4
        len             -= add;
  409bd6:	1b2d      	subs	r5, r5, r4
        if (sha512->buffLen == SHA512_BLOCK_SIZE) {
  409bd8:	2b80      	cmp	r3, #128	; 0x80
  409bda:	d1e8      	bne.n	409bae <.LBE823>
  409bdc:	f108 0250 	add.w	r2, r8, #80	; 0x50

00409be0 <.LBB826>:
        out[i] = ByteReverseWord64(in[i]);
  409be0:	6893      	ldr	r3, [r2, #8]
  409be2:	68d1      	ldr	r1, [r2, #12]

00409be4 <.LBB828>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  409be4:	0a18      	lsrs	r0, r3, #8
  409be6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
  409bea:	021b      	lsls	r3, r3, #8
  409bec:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
  409bf0:	4303      	orrs	r3, r0

00409bf2 <.LBE830>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  409bf2:	ea4f 4733 	mov.w	r7, r3, ror #16
  409bf6:	2600      	movs	r6, #0

00409bf8 <.LBB832>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  409bf8:	0a0b      	lsrs	r3, r1, #8
  409bfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  409bfe:	0209      	lsls	r1, r1, #8
  409c00:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
  409c04:	430b      	orrs	r3, r1

00409c06 <.LBB834>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  409c06:	ea4f 4333 	mov.w	r3, r3, ror #16

00409c0a <.LBE832>:
	return (word64)(ByteReverseWord32((word32)value)) << 32 |
  409c0a:	ea46 0003 	orr.w	r0, r6, r3
  409c0e:	4639      	mov	r1, r7

00409c10 <.LBE828>:
        out[i] = ByteReverseWord64(in[i]);
  409c10:	e9e2 0102 	strd	r0, r1, [r2, #8]!
    for (i = 0; i < count; i++)
  409c14:	4592      	cmp	sl, r2
  409c16:	d1e3      	bne.n	409be0 <.LBB826>

00409c18 <.LBE826>:
            ret = Transform(sha512);
  409c18:	4640      	mov	r0, r8
  409c1a:	f7f6 fabb 	bl	400194 <_etext>

00409c1e <.LVL94>:
            if (ret != 0)
  409c1e:	4603      	mov	r3, r0
  409c20:	b9a0      	cbnz	r0, 409c4c <.LBE821>

00409c22 <.LBB836>:
    word64 tmp = sha512->loLen;
  409c22:	e9d8 2302 	ldrd	r2, r3, [r8, #8]

00409c26 <.LVL96>:
    if ( (sha512->loLen += len) < tmp)
  409c26:	f112 0080 	adds.w	r0, r2, #128	; 0x80

00409c2a <.LVL97>:
  409c2a:	f143 0100 	adc.w	r1, r3, #0
  409c2e:	e9c8 0102 	strd	r0, r1, [r8, #8]
  409c32:	4299      	cmp	r1, r3
  409c34:	bf08      	it	eq
  409c36:	4290      	cmpeq	r0, r2
  409c38:	d2b6      	bcs.n	409ba8 <.LBB823>
        sha512->hiLen++;                       /* carry low to high */
  409c3a:	e9d8 2304 	ldrd	r2, r3, [r8, #16]

00409c3e <.LVL98>:
  409c3e:	3201      	adds	r2, #1
  409c40:	f143 0300 	adc.w	r3, r3, #0

00409c44 <.LVL99>:
  409c44:	e9c8 2304 	strd	r2, r3, [r8, #16]
  409c48:	e7ae      	b.n	409ba8 <.LBB823>

00409c4a <.LBE836>:
    while (len) {
  409c4a:	2300      	movs	r3, #0

00409c4c <.LBE821>:
}
  409c4c:	4618      	mov	r0, r3
  409c4e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00409c52 <.LVL102>:
        return BAD_FUNC_ARG;
  409c52:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  409c56:	e7f9      	b.n	409c4c <.LBE821>
  409c58:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  409c5c:	e7f6      	b.n	409c4c <.LBE821>

00409c5e <.LBB840>:
        return BUFFER_E;
  409c5e:	f06f 0383 	mvn.w	r3, #131	; 0x83
  409c62:	e7f3      	b.n	409c4c <.LBE821>
    while (len) {
  409c64:	2300      	movs	r3, #0
  409c66:	e7f1      	b.n	409c4c <.LBE821>

Disassembly of section .text%59:

00409c80 <strlen>:
  409c80:	f890 f000 	pld	[r0]
  409c84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  409c88:	f020 0107 	bic.w	r1, r0, #7
  409c8c:	f06f 0c00 	mvn.w	ip, #0
  409c90:	f010 0407 	ands.w	r4, r0, #7
  409c94:	f891 f020 	pld	[r1, #32]
  409c98:	f040 8049 	bne.w	409d2e <strlen+0xae>
  409c9c:	f04f 0400 	mov.w	r4, #0
  409ca0:	f06f 0007 	mvn.w	r0, #7
  409ca4:	e9d1 2300 	ldrd	r2, r3, [r1]
  409ca8:	f891 f040 	pld	[r1, #64]	; 0x40
  409cac:	f100 0008 	add.w	r0, r0, #8
  409cb0:	fa82 f24c 	uadd8	r2, r2, ip
  409cb4:	faa4 f28c 	sel	r2, r4, ip
  409cb8:	fa83 f34c 	uadd8	r3, r3, ip
  409cbc:	faa2 f38c 	sel	r3, r2, ip
  409cc0:	bb4b      	cbnz	r3, 409d16 <strlen+0x96>
  409cc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  409cc6:	fa82 f24c 	uadd8	r2, r2, ip
  409cca:	f100 0008 	add.w	r0, r0, #8
  409cce:	faa4 f28c 	sel	r2, r4, ip
  409cd2:	fa83 f34c 	uadd8	r3, r3, ip
  409cd6:	faa2 f38c 	sel	r3, r2, ip
  409cda:	b9e3      	cbnz	r3, 409d16 <strlen+0x96>
  409cdc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  409ce0:	fa82 f24c 	uadd8	r2, r2, ip
  409ce4:	f100 0008 	add.w	r0, r0, #8
  409ce8:	faa4 f28c 	sel	r2, r4, ip
  409cec:	fa83 f34c 	uadd8	r3, r3, ip
  409cf0:	faa2 f38c 	sel	r3, r2, ip
  409cf4:	b97b      	cbnz	r3, 409d16 <strlen+0x96>
  409cf6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  409cfa:	f101 0120 	add.w	r1, r1, #32
  409cfe:	fa82 f24c 	uadd8	r2, r2, ip
  409d02:	f100 0008 	add.w	r0, r0, #8
  409d06:	faa4 f28c 	sel	r2, r4, ip
  409d0a:	fa83 f34c 	uadd8	r3, r3, ip
  409d0e:	faa2 f38c 	sel	r3, r2, ip
  409d12:	2b00      	cmp	r3, #0
  409d14:	d0c6      	beq.n	409ca4 <strlen+0x24>
  409d16:	2a00      	cmp	r2, #0
  409d18:	bf04      	itt	eq
  409d1a:	3004      	addeq	r0, #4
  409d1c:	461a      	moveq	r2, r3
  409d1e:	ba12      	rev	r2, r2
  409d20:	fab2 f282 	clz	r2, r2
  409d24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  409d28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  409d2c:	4770      	bx	lr
  409d2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  409d32:	f004 0503 	and.w	r5, r4, #3
  409d36:	f1c4 0000 	rsb	r0, r4, #0
  409d3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  409d3e:	f014 0f04 	tst.w	r4, #4
  409d42:	f891 f040 	pld	[r1, #64]	; 0x40
  409d46:	fa0c f505 	lsl.w	r5, ip, r5
  409d4a:	ea62 0205 	orn	r2, r2, r5
  409d4e:	bf1c      	itt	ne
  409d50:	ea63 0305 	ornne	r3, r3, r5
  409d54:	4662      	movne	r2, ip
  409d56:	f04f 0400 	mov.w	r4, #0
  409d5a:	e7a9      	b.n	409cb0 <strlen+0x30>

Disassembly of section .text.SYS_TIME_PLIBCallback%60:

00409d5c <SYS_TIME_PLIBCallback>:
        }
    }
}

static void SYS_TIME_PLIBCallback(uintptr_t context)
{
  409d5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

00409d60 <.LCFI23>:
    SYS_TIME_COUNTER_OBJ* counterObj = (SYS_TIME_COUNTER_OBJ *)&gSystemCounterObj;
    SYS_TIME_TIMER_OBJ* tmrActive = counterObj->tmrActive;
  409d60:	4c2f      	ldr	r4, [pc, #188]	; (409e20 <.LVL234>)
  409d62:	6b25      	ldr	r5, [r4, #48]	; 0x30

00409d64 <.LVL210>:
    uint32_t elapsedCount = 0;
    bool interruptState;

    counterObj->hwTimerCurrentValue = counterObj->timePlib->timerCounterGet();
  409d64:	6863      	ldr	r3, [r4, #4]
  409d66:	699b      	ldr	r3, [r3, #24]
  409d68:	4798      	blx	r3

00409d6a <.LVL211>:
  409d6a:	6160      	str	r0, [r4, #20]

    elapsedCount = SYS_TIME_GetElapsedCount(counterObj->hwTimerCurrentValue);
  409d6c:	f001 ff72 	bl	40bc54 <.LFE172>

00409d70 <.LVL212>:
  409d70:	4606      	mov	r6, r0

00409d72 <.LVL213>:

    if (tmrActive != NULL)
  409d72:	2d00      	cmp	r5, #0
  409d74:	d047      	beq.n	409e06 <.LVL228>
    {
        counterObj->interruptNestingCount++;
  409d76:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
  409d7a:	3301      	adds	r3, #1
  409d7c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

00409d80 <.LBB49>:
    SYS_TIME_UpdateTimerList(elapsedCounts);
  409d80:	f001 fdc6 	bl	40b910 <.LFE164>

00409d84 <.LBB51>:
    SYS_TIME_TIMER_OBJ* tmrActive = counterObj->tmrActive;
  409d84:	6b24      	ldr	r4, [r4, #48]	; 0x30

00409d86 <.LVL216>:
    while (tmrActive != NULL)
  409d86:	b134      	cbz	r4, 409d96 <.LVL218>
        if(tmrActive->relativeTimePending == 0)
  409d88:	68a3      	ldr	r3, [r4, #8]
  409d8a:	b923      	cbnz	r3, 409d96 <.LVL218>
            tmrActive->tmrElapsedFlag = true;
  409d8c:	2501      	movs	r5, #1

00409d8e <.LVL217>:
                    tmrActive->active = false;
  409d8e:	f04f 0800 	mov.w	r8, #0
            tmrActive = counterObj->tmrActive;
  409d92:	4f23      	ldr	r7, [pc, #140]	; (409e20 <.LVL234>)
  409d94:	e011      	b.n	409dba <.LVL221+0x14>

00409d96 <.LVL218>:
  409d96:	4c23      	ldr	r4, [pc, #140]	; (409e24 <.LVL234+0x4>)

00409d98 <.LVL219>:
  409d98:	f504 75a0 	add.w	r5, r4, #320	; 0x140

00409d9c <.LBB54>:
            timers[i].tmrElapsed = false;
  409d9c:	2700      	movs	r7, #0
  409d9e:	e01f      	b.n	409de0 <.LBB56+0x4>

00409da0 <.LBB55>:
                SYS_TIME_TimerDestroy(tmrActive->tmrHandle);
  409da0:	69e0      	ldr	r0, [r4, #28]
  409da2:	f001 fc5b 	bl	40b65c <.LFE177>

00409da6 <.LVL221>:
            if(tmrActive->callback != NULL)
  409da6:	68e3      	ldr	r3, [r4, #12]
  409da8:	b10b      	cbz	r3, 409dae <.LVL221+0x8>
                tmrActive->callback(tmrActive->context);
  409daa:	6920      	ldr	r0, [r4, #16]
  409dac:	4798      	blx	r3
            tmrActive = counterObj->tmrActive;
  409dae:	6b3c      	ldr	r4, [r7, #48]	; 0x30
    while (tmrActive != NULL)
  409db0:	2c00      	cmp	r4, #0
  409db2:	d0f0      	beq.n	409d96 <.LVL218>
        if(tmrActive->relativeTimePending == 0)
  409db4:	68a3      	ldr	r3, [r4, #8]
  409db6:	2b00      	cmp	r3, #0
  409db8:	d1ed      	bne.n	409d96 <.LVL218>
            tmrActive->tmrElapsedFlag = true;
  409dba:	7525      	strb	r5, [r4, #20]
            tmrActive->tmrElapsed = true;
  409dbc:	7565      	strb	r5, [r4, #21]
            if ((tmrActive->type == SYS_TIME_SINGLE) && (tmrActive->callback != NULL))
  409dbe:	78a3      	ldrb	r3, [r4, #2]
  409dc0:	b913      	cbnz	r3, 409dc8 <.LVL221+0x22>
  409dc2:	68e3      	ldr	r3, [r4, #12]
  409dc4:	2b00      	cmp	r3, #0
  409dc6:	d1eb      	bne.n	409da0 <.LBB55>
                SYS_TIME_RemoveFromList(tmrActive);
  409dc8:	4620      	mov	r0, r4
  409dca:	f001 f9f7 	bl	40b1bc <.LFE167>

00409dce <.LVL224>:
                if (tmrActive->type == SYS_TIME_SINGLE)
  409dce:	78a3      	ldrb	r3, [r4, #2]
  409dd0:	2b00      	cmp	r3, #0
  409dd2:	d1e8      	bne.n	409da6 <.LVL221>
                    tmrActive->active = false;
  409dd4:	f884 8001 	strb.w	r8, [r4, #1]
  409dd8:	e7e5      	b.n	409da6 <.LVL221>

00409dda <.LVL225>:
  409dda:	3420      	adds	r4, #32

00409ddc <.LBB56>:
    for (uint8_t i = 0; i < SYS_TIME_MAX_TIMERS; i++)
  409ddc:	42ac      	cmp	r4, r5
  409dde:	d00c      	beq.n	409dfa <.LBE49>
  409de0:	4620      	mov	r0, r4
        if (timers[i].tmrElapsed == true)
  409de2:	7d63      	ldrb	r3, [r4, #21]
  409de4:	2b00      	cmp	r3, #0
  409de6:	d0f8      	beq.n	409dda <.LVL225>
            timers[i].tmrElapsed = false;
  409de8:	7567      	strb	r7, [r4, #21]
            if (timers[i].type == SYS_TIME_PERIODIC)
  409dea:	78a3      	ldrb	r3, [r4, #2]
  409dec:	2b01      	cmp	r3, #1
  409dee:	d1f4      	bne.n	409dda <.LVL225>
                timers[i].relativeTimePending = timers[i].requestedTime;
  409df0:	6863      	ldr	r3, [r4, #4]
  409df2:	60a3      	str	r3, [r4, #8]
                SYS_TIME_AddToList(&timers[i]);
  409df4:	f000 fcf2 	bl	40a7dc <SYS_TIME_AddToList>

00409df8 <.LVL226>:
  409df8:	e7ef      	b.n	409dda <.LVL225>

00409dfa <.LBE49>:

        SYS_TIME_UpdateTime(elapsedCount);

        counterObj->interruptNestingCount--;
  409dfa:	4a09      	ldr	r2, [pc, #36]	; (409e20 <.LVL234>)
  409dfc:	f892 302c 	ldrb.w	r3, [r2, #44]	; 0x2c
  409e00:	3b01      	subs	r3, #1
  409e02:	f882 302c 	strb.w	r3, [r2, #44]	; 0x2c

00409e06 <.LVL228>:
    }
    SYS_TIME_Counter64Update(elapsedCount);
  409e06:	4630      	mov	r0, r6
  409e08:	f001 fe5e 	bl	40bac8 <.LFE164>

00409e0c <.LVL229>:

    interruptState = SYS_INT_Disable();
  409e0c:	f001 ff80 	bl	40bd10 <SYS_INT_Disable>

00409e10 <.LVL230>:
  409e10:	4604      	mov	r4, r0

00409e12 <.LVL231>:
    SYS_TIME_HwTimerCompareUpdate();
  409e12:	f000 fe49 	bl	40aaa8 <.LFE18>

00409e16 <.LVL232>:
    SYS_INT_Restore(interruptState);
  409e16:	4620      	mov	r0, r4
  409e18:	f001 ff83 	bl	40bd22 <.LFE142>

00409e1c <.LVL233>:
  409e1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00409e20 <.LVL234>:
  409e20:	2040db9c 	.word	0x2040db9c
  409e24:	2040d9bc 	.word	0x2040d9bc

Disassembly of section .text.memmove%61:

00409e28 <memmove>:
  409e28:	4288      	cmp	r0, r1
  409e2a:	b5f0      	push	{r4, r5, r6, r7, lr}

00409e2c <.LCFI0>:
  409e2c:	d90d      	bls.n	409e4a <.LVL6>
  409e2e:	188b      	adds	r3, r1, r2
  409e30:	4298      	cmp	r0, r3
  409e32:	d20a      	bcs.n	409e4a <.LVL6>

00409e34 <.LVL1>:
  409e34:	1884      	adds	r4, r0, r2

00409e36 <.LVL2>:
  409e36:	2a00      	cmp	r2, #0
  409e38:	d051      	beq.n	409ede <.LVL26>
  409e3a:	4622      	mov	r2, r4

00409e3c <.LVL3>:
  409e3c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!

00409e40 <.LVL4>:
  409e40:	f802 4d01 	strb.w	r4, [r2, #-1]!

00409e44 <.LVL5>:
  409e44:	4299      	cmp	r1, r3
  409e46:	d1f9      	bne.n	409e3c <.LVL3>
  409e48:	bdf0      	pop	{r4, r5, r6, r7, pc}

00409e4a <.LVL6>:
  409e4a:	2a0f      	cmp	r2, #15
  409e4c:	d948      	bls.n	409ee0 <.LVL27>
  409e4e:	ea41 0300 	orr.w	r3, r1, r0
  409e52:	079b      	lsls	r3, r3, #30
  409e54:	d146      	bne.n	409ee4 <.LVL27+0x4>
  409e56:	f100 0410 	add.w	r4, r0, #16
  409e5a:	f101 0310 	add.w	r3, r1, #16
  409e5e:	4615      	mov	r5, r2

00409e60 <.LVL7>:
  409e60:	f853 6c10 	ldr.w	r6, [r3, #-16]
  409e64:	f844 6c10 	str.w	r6, [r4, #-16]

00409e68 <.LVL8>:
  409e68:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  409e6c:	f844 6c0c 	str.w	r6, [r4, #-12]

00409e70 <.LVL9>:
  409e70:	f853 6c08 	ldr.w	r6, [r3, #-8]
  409e74:	f844 6c08 	str.w	r6, [r4, #-8]

00409e78 <.LVL10>:
  409e78:	3d10      	subs	r5, #16
  409e7a:	f853 6c04 	ldr.w	r6, [r3, #-4]
  409e7e:	f844 6c04 	str.w	r6, [r4, #-4]
  409e82:	2d0f      	cmp	r5, #15
  409e84:	f103 0310 	add.w	r3, r3, #16

00409e88 <.LVL12>:
  409e88:	f104 0410 	add.w	r4, r4, #16
  409e8c:	d8e8      	bhi.n	409e60 <.LVL7>
  409e8e:	f1a2 0310 	sub.w	r3, r2, #16

00409e92 <.LVL13>:
  409e92:	f023 030f 	bic.w	r3, r3, #15
  409e96:	f002 0e0f 	and.w	lr, r2, #15
  409e9a:	3310      	adds	r3, #16
  409e9c:	f1be 0f03 	cmp.w	lr, #3
  409ea0:	4419      	add	r1, r3

00409ea2 <.LVL14>:
  409ea2:	4403      	add	r3, r0

00409ea4 <.LVL15>:
  409ea4:	d921      	bls.n	409eea <.LVL29>
  409ea6:	1f1e      	subs	r6, r3, #4
  409ea8:	460d      	mov	r5, r1
  409eaa:	4674      	mov	r4, lr

00409eac <.LVL16>:
  409eac:	3c04      	subs	r4, #4

00409eae <.LVL17>:
  409eae:	f855 7b04 	ldr.w	r7, [r5], #4

00409eb2 <.LVL18>:
  409eb2:	f846 7f04 	str.w	r7, [r6, #4]!
  409eb6:	2c03      	cmp	r4, #3
  409eb8:	d8f8      	bhi.n	409eac <.LVL16>
  409eba:	f1ae 0404 	sub.w	r4, lr, #4

00409ebe <.LVL19>:
  409ebe:	f024 0403 	bic.w	r4, r4, #3
  409ec2:	3404      	adds	r4, #4
  409ec4:	4421      	add	r1, r4
  409ec6:	4423      	add	r3, r4
  409ec8:	f002 0203 	and.w	r2, r2, #3

00409ecc <.LVL20>:
  409ecc:	b162      	cbz	r2, 409ee8 <.LVL28>

00409ece <.LVL21>:
  409ece:	3b01      	subs	r3, #1

00409ed0 <.LVL22>:
  409ed0:	440a      	add	r2, r1

00409ed2 <.LVL23>:
  409ed2:	f811 4b01 	ldrb.w	r4, [r1], #1

00409ed6 <.LVL24>:
  409ed6:	f803 4f01 	strb.w	r4, [r3, #1]!

00409eda <.LVL25>:
  409eda:	428a      	cmp	r2, r1
  409edc:	d1f9      	bne.n	409ed2 <.LVL23>

00409ede <.LVL26>:
  409ede:	bdf0      	pop	{r4, r5, r6, r7, pc}

00409ee0 <.LVL27>:
  409ee0:	4603      	mov	r3, r0
  409ee2:	e7f3      	b.n	409ecc <.LVL20>
  409ee4:	4603      	mov	r3, r0
  409ee6:	e7f2      	b.n	409ece <.LVL21>

00409ee8 <.LVL28>:
  409ee8:	bdf0      	pop	{r4, r5, r6, r7, pc}

00409eea <.LVL29>:
  409eea:	4672      	mov	r2, lr
  409eec:	e7ee      	b.n	409ecc <.LVL20>

00409eee <.LFE17>:
  409eee:	bf00      	nop

Disassembly of section .rodata.__mprec_tens%62:

00409ef0 <__mprec_tens>:
  409ef0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  409f00:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  409f10:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  409f20:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  409f30:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  409f40:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  409f50:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  409f60:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  409f70:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  409f80:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  409f90:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  409fa0:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  409fb0:	9db4 79d9 7843 44ea                         ...yCx.D

Disassembly of section .text.wc_Md5Final%63:

00409fb8 <wc_Md5Final>:

int wc_Md5Final(Md5* md5, byte* hash)
{
    byte* local;

    if (md5 == NULL || hash == NULL) {
  409fb8:	2800      	cmp	r0, #0
  409fba:	d059      	beq.n	40a070 <.LCFI7>
{
  409fbc:	b570      	push	{r4, r5, r6, lr}

00409fbe <.LCFI6>:
  409fbe:	4604      	mov	r4, r0
    if (md5 == NULL || hash == NULL) {
  409fc0:	2900      	cmp	r1, #0
  409fc2:	d052      	beq.n	40a06a <.LVL364>
        return IntelQaSymMd5(&md5->asyncDev, hash, NULL, MD5_DIGEST_SIZE);
    #endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    local = (byte*)md5->buffer;
  409fc4:	f100 060c 	add.w	r6, r0, #12

00409fc8 <.LVL351>:

    AddMd5Length(md5, md5->buffLen);  /* before adding pads */
  409fc8:	6803      	ldr	r3, [r0, #0]

00409fca <.LBB151>:
    word32 tmp = md5->loLen;
  409fca:	6840      	ldr	r0, [r0, #4]

00409fcc <.LVL353>:
    if ((md5->loLen += len) < tmp) {
  409fcc:	181a      	adds	r2, r3, r0
  409fce:	6062      	str	r2, [r4, #4]
  409fd0:	4290      	cmp	r0, r2
  409fd2:	d902      	bls.n	409fda <.LVL353+0xe>
        md5->hiLen++;                       /* carry low to high */
  409fd4:	68a2      	ldr	r2, [r4, #8]
  409fd6:	3201      	adds	r2, #1
  409fd8:	60a2      	str	r2, [r4, #8]
  409fda:	460d      	mov	r5, r1

00409fdc <.LBE151>:
    local[md5->buffLen++] = 0x80;  /* add 1 */
  409fdc:	1c5a      	adds	r2, r3, #1
  409fde:	6022      	str	r2, [r4, #0]
  409fe0:	2280      	movs	r2, #128	; 0x80
  409fe2:	54f2      	strb	r2, [r6, r3]

    /* pad with zeros */
    if (md5->buffLen > MD5_PAD_SIZE) {
  409fe4:	6820      	ldr	r0, [r4, #0]
  409fe6:	2838      	cmp	r0, #56	; 0x38
  409fe8:	d831      	bhi.n	40a04e <.LVL360>

00409fea <.LVL355>:
        ByteReverseWords(md5->buffer, md5->buffer, MD5_BLOCK_SIZE);
    #endif
        XTRANSFORM(md5, local);
        md5->buffLen = 0;
    }
    XMEMSET(&local[md5->buffLen], 0, MD5_PAD_SIZE - md5->buffLen);
  409fea:	6820      	ldr	r0, [r4, #0]
  409fec:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
  409ff0:	2100      	movs	r1, #0
  409ff2:	4430      	add	r0, r6
  409ff4:	f000 fba4 	bl	40a740 <.LFE25>

00409ff8 <.LVL356>:
#if defined(BIG_ENDIAN_ORDER) && !defined(FREESCALE_MMCAU_SHA)
    ByteReverseWords(md5->buffer, md5->buffer, MD5_BLOCK_SIZE);
#endif

    /* put lengths in bits */
    md5->hiLen = (md5->loLen >> (8*sizeof(md5->loLen) - 3)) +
  409ff8:	6863      	ldr	r3, [r4, #4]
                 (md5->hiLen << 3);
  409ffa:	68a1      	ldr	r1, [r4, #8]
    md5->hiLen = (md5->loLen >> (8*sizeof(md5->loLen) - 3)) +
  409ffc:	0f5a      	lsrs	r2, r3, #29
  409ffe:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
  40a002:	60a2      	str	r2, [r4, #8]
    md5->loLen = md5->loLen << 3;
  40a004:	00db      	lsls	r3, r3, #3
  40a006:	6063      	str	r3, [r4, #4]

    /* store lengths */
    /* ! length ordering dependent on digest endian type ! */
    XMEMCPY(&local[MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
  40a008:	6463      	str	r3, [r4, #68]	; 0x44
    XMEMCPY(&local[MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));
  40a00a:	64a2      	str	r2, [r4, #72]	; 0x48

    /* final transform and result to hash */
    XTRANSFORM(md5, local);
  40a00c:	4620      	mov	r0, r4
  40a00e:	f7fc fd45 	bl	406a9c <.LFE18>

0040a012 <.LVL357>:
#ifdef BIG_ENDIAN_ORDER
    ByteReverseWords(md5->digest, md5->digest, MD5_DIGEST_SIZE);
#endif
    XMEMCPY(hash, md5->digest, MD5_DIGEST_SIZE);
  40a012:	4623      	mov	r3, r4
  40a014:	f853 0f4c 	ldr.w	r0, [r3, #76]!
  40a018:	6859      	ldr	r1, [r3, #4]
  40a01a:	689a      	ldr	r2, [r3, #8]
  40a01c:	68db      	ldr	r3, [r3, #12]
  40a01e:	6028      	str	r0, [r5, #0]
  40a020:	6069      	str	r1, [r5, #4]
  40a022:	60aa      	str	r2, [r5, #8]
  40a024:	60eb      	str	r3, [r5, #12]

0040a026 <.LBB153>:
    md5->digest[0] = 0x67452301L;
  40a026:	4b14      	ldr	r3, [pc, #80]	; (40a078 <.LVL367+0x4>)
  40a028:	64e3      	str	r3, [r4, #76]	; 0x4c
    md5->digest[1] = 0xefcdab89L;
  40a02a:	f103 3388 	add.w	r3, r3, #2290649224	; 0x88888888
  40a02e:	6523      	str	r3, [r4, #80]	; 0x50
    md5->digest[2] = 0x98badcfeL;
  40a030:	f103 4329 	add.w	r3, r3, #2835349504	; 0xa9000000
  40a034:	f5a3 1396 	sub.w	r3, r3, #1228800	; 0x12c000
  40a038:	f6a3 638b 	subw	r3, r3, #3723	; 0xe8b
  40a03c:	6563      	str	r3, [r4, #84]	; 0x54
    md5->digest[3] = 0x10325476L;
  40a03e:	f1a3 3388 	sub.w	r3, r3, #2290649224	; 0x88888888
  40a042:	65a3      	str	r3, [r4, #88]	; 0x58
    md5->buffLen = 0;
  40a044:	2000      	movs	r0, #0
  40a046:	6020      	str	r0, [r4, #0]
    md5->loLen   = 0;
  40a048:	6060      	str	r0, [r4, #4]
    md5->hiLen   = 0;
  40a04a:	60a0      	str	r0, [r4, #8]

0040a04c <.LBE153>:

    return _InitMd5(md5); /* reset state */
  40a04c:	bd70      	pop	{r4, r5, r6, pc}

0040a04e <.LVL360>:
        XMEMSET(&local[md5->buffLen], 0, MD5_BLOCK_SIZE - md5->buffLen);
  40a04e:	f1c0 0240 	rsb	r2, r0, #64	; 0x40
  40a052:	2100      	movs	r1, #0

0040a054 <.LVL361>:
  40a054:	4430      	add	r0, r6
  40a056:	f000 fb73 	bl	40a740 <.LFE25>

0040a05a <.LVL362>:
        md5->buffLen += MD5_BLOCK_SIZE - md5->buffLen;
  40a05a:	2340      	movs	r3, #64	; 0x40
  40a05c:	6023      	str	r3, [r4, #0]
        XTRANSFORM(md5, local);
  40a05e:	4620      	mov	r0, r4
  40a060:	f7fc fd1c 	bl	406a9c <.LFE18>

0040a064 <.LVL363>:
        md5->buffLen = 0;
  40a064:	2300      	movs	r3, #0
  40a066:	6023      	str	r3, [r4, #0]
  40a068:	e7bf      	b.n	409fea <.LVL355>

0040a06a <.LVL364>:
        return BAD_FUNC_ARG;
  40a06a:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a06e <.LVL365>:
}
  40a06e:	bd70      	pop	{r4, r5, r6, pc}

0040a070 <.LCFI7>:
        return BAD_FUNC_ARG;
  40a070:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a074 <.LVL367>:
  40a074:	4770      	bx	lr
  40a076:	bf00      	nop
  40a078:	67452301 	.word	0x67452301

Disassembly of section .text.__d2b%64:

0040a07c <__d2b>:
  40a07c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}

0040a080 <.LCFI17>:
  40a080:	ec57 6b10 	vmov	r6, r7, d0
  40a084:	b083      	sub	sp, #12

0040a086 <.LCFI18>:
  40a086:	4688      	mov	r8, r1
  40a088:	2101      	movs	r1, #1

0040a08a <.LVL324>:
  40a08a:	463c      	mov	r4, r7
  40a08c:	f3c7 550a 	ubfx	r5, r7, #20, #11
  40a090:	4617      	mov	r7, r2
  40a092:	f001 f931 	bl	40b2f8 <.LFE2>

0040a096 <.LVL326>:
  40a096:	f3c4 0413 	ubfx	r4, r4, #0, #20
  40a09a:	4681      	mov	r9, r0

0040a09c <.LVL327>:
  40a09c:	b10d      	cbz	r5, 40a0a2 <.LVL327+0x6>
  40a09e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40a0a2:	9401      	str	r4, [sp, #4]
  40a0a4:	b31e      	cbz	r6, 40a0ee <.LCFI20>
  40a0a6:	a802      	add	r0, sp, #8

0040a0a8 <.LVL328>:
  40a0a8:	f840 6d08 	str.w	r6, [r0, #-8]!
  40a0ac:	f000 ff9c 	bl	40afe8 <__lo0bits>

0040a0b0 <.LVL329>:
  40a0b0:	2800      	cmp	r0, #0
  40a0b2:	d134      	bne.n	40a11e <.LCFI22>
  40a0b4:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40a0b8:	f8c9 2014 	str.w	r2, [r9, #20]
  40a0bc:	2b00      	cmp	r3, #0
  40a0be:	bf0c      	ite	eq
  40a0c0:	2101      	moveq	r1, #1
  40a0c2:	2102      	movne	r1, #2
  40a0c4:	f8c9 3018 	str.w	r3, [r9, #24]
  40a0c8:	f8c9 1010 	str.w	r1, [r9, #16]

0040a0cc <.LVL330>:
  40a0cc:	b9dd      	cbnz	r5, 40a106 <.LVL338+0x4>
  40a0ce:	eb09 0381 	add.w	r3, r9, r1, lsl #2
  40a0d2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432

0040a0d6 <.LVL331>:
  40a0d6:	f8c8 0000 	str.w	r0, [r8]
  40a0da:	6918      	ldr	r0, [r3, #16]

0040a0dc <.LVL332>:
  40a0dc:	f001 fa44 	bl	40b568 <.LFE17>

0040a0e0 <.LVL333>:
  40a0e0:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40a0e4:	6038      	str	r0, [r7, #0]
  40a0e6:	4648      	mov	r0, r9
  40a0e8:	b003      	add	sp, #12

0040a0ea <.LCFI19>:
  40a0ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0040a0ee <.LCFI20>:
  40a0ee:	a801      	add	r0, sp, #4

0040a0f0 <.LVL335>:
  40a0f0:	f000 ff7a 	bl	40afe8 <__lo0bits>

0040a0f4 <.LVL336>:
  40a0f4:	9b01      	ldr	r3, [sp, #4]
  40a0f6:	f8c9 3014 	str.w	r3, [r9, #20]
  40a0fa:	2101      	movs	r1, #1
  40a0fc:	3020      	adds	r0, #32

0040a0fe <.LVL337>:
  40a0fe:	f8c9 1010 	str.w	r1, [r9, #16]

0040a102 <.LVL338>:
  40a102:	2d00      	cmp	r5, #0
  40a104:	d0e3      	beq.n	40a0ce <.LVL330+0x2>
  40a106:	f2a5 4533 	subw	r5, r5, #1075	; 0x433

0040a10a <.LVL339>:
  40a10a:	4405      	add	r5, r0

0040a10c <.LVL340>:
  40a10c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35

0040a110 <.LVL341>:
  40a110:	f8c8 5000 	str.w	r5, [r8]
  40a114:	6038      	str	r0, [r7, #0]
  40a116:	4648      	mov	r0, r9
  40a118:	b003      	add	sp, #12

0040a11a <.LCFI21>:
  40a11a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0040a11e <.LCFI22>:
  40a11e:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40a122:	f1c0 0220 	rsb	r2, r0, #32
  40a126:	fa03 f202 	lsl.w	r2, r3, r2
  40a12a:	430a      	orrs	r2, r1
  40a12c:	40c3      	lsrs	r3, r0
  40a12e:	9301      	str	r3, [sp, #4]
  40a130:	f8c9 2014 	str.w	r2, [r9, #20]
  40a134:	e7c2      	b.n	40a0bc <.LVL329+0xc>

0040a136 <.LFE31>:
  40a136:	bf00      	nop

Disassembly of section .text.wc_InitSha512_ex%65:

0040a138 <wc_InitSha512_ex>:
        if (sha512 == NULL)
  40a138:	2800      	cmp	r0, #0
  40a13a:	d035      	beq.n	40a1a8 <.LVL21>
    {
  40a13c:	b430      	push	{r4, r5}

0040a13e <.LCFI4>:
  40a13e:	4603      	mov	r3, r0
        sha512->heap = heap;
  40a140:	f8c0 10d8 	str.w	r1, [r0, #216]	; 0xd8

0040a144 <.LBB679>:
    sha512->digest[0] = W64LIT(0x6a09e667f3bcc908);
  40a144:	a11a      	add	r1, pc, #104	; (adr r1, 40a1b0 <.LVL22+0x4>)
  40a146:	e9d1 0100 	ldrd	r0, r1, [r1]

0040a14a <.LVL19>:
  40a14a:	e9c3 0106 	strd	r0, r1, [r3, #24]
    sha512->digest[1] = W64LIT(0xbb67ae8584caa73b);
  40a14e:	a11a      	add	r1, pc, #104	; (adr r1, 40a1b8 <.LVL22+0xc>)
  40a150:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a154:	e9c3 0108 	strd	r0, r1, [r3, #32]
    sha512->digest[2] = W64LIT(0x3c6ef372fe94f82b);
  40a158:	a119      	add	r1, pc, #100	; (adr r1, 40a1c0 <.LVL22+0x14>)
  40a15a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a15e:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
    sha512->digest[3] = W64LIT(0xa54ff53a5f1d36f1);
  40a162:	a119      	add	r1, pc, #100	; (adr r1, 40a1c8 <.LVL22+0x1c>)
  40a164:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a168:	e9c3 010c 	strd	r0, r1, [r3, #48]	; 0x30
    sha512->digest[4] = W64LIT(0x510e527fade682d1);
  40a16c:	a118      	add	r1, pc, #96	; (adr r1, 40a1d0 <.LVL22+0x24>)
  40a16e:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a172:	e9c3 010e 	strd	r0, r1, [r3, #56]	; 0x38
    sha512->digest[5] = W64LIT(0x9b05688c2b3e6c1f);
  40a176:	a118      	add	r1, pc, #96	; (adr r1, 40a1d8 <.LVL22+0x2c>)
  40a178:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a17c:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
    sha512->digest[6] = W64LIT(0x1f83d9abfb41bd6b);
  40a180:	a117      	add	r1, pc, #92	; (adr r1, 40a1e0 <.LVL22+0x34>)
  40a182:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a186:	e9c3 0112 	strd	r0, r1, [r3, #72]	; 0x48
    sha512->digest[7] = W64LIT(0x5be0cd19137e2179);
  40a18a:	a117      	add	r1, pc, #92	; (adr r1, 40a1e8 <.LVL22+0x3c>)
  40a18c:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a190:	e9c3 0114 	strd	r0, r1, [r3, #80]	; 0x50
    sha512->buffLen = 0;
  40a194:	2000      	movs	r0, #0
  40a196:	6018      	str	r0, [r3, #0]
    sha512->loLen   = 0;
  40a198:	2400      	movs	r4, #0
  40a19a:	2500      	movs	r5, #0
  40a19c:	e9c3 4502 	strd	r4, r5, [r3, #8]
    sha512->hiLen   = 0;
  40a1a0:	e9c3 4504 	strd	r4, r5, [r3, #16]

0040a1a4 <.LBE679>:
    }
  40a1a4:	bc30      	pop	{r4, r5}

0040a1a6 <.LCFI5>:
  40a1a6:	4770      	bx	lr

0040a1a8 <.LVL21>:
            return BAD_FUNC_ARG;
  40a1a8:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a1ac <.LVL22>:
  40a1ac:	4770      	bx	lr
  40a1ae:	bf00      	nop
  40a1b0:	f3bcc908 	.word	0xf3bcc908
  40a1b4:	6a09e667 	.word	0x6a09e667
  40a1b8:	84caa73b 	.word	0x84caa73b
  40a1bc:	bb67ae85 	.word	0xbb67ae85
  40a1c0:	fe94f82b 	.word	0xfe94f82b
  40a1c4:	3c6ef372 	.word	0x3c6ef372
  40a1c8:	5f1d36f1 	.word	0x5f1d36f1
  40a1cc:	a54ff53a 	.word	0xa54ff53a
  40a1d0:	ade682d1 	.word	0xade682d1
  40a1d4:	510e527f 	.word	0x510e527f
  40a1d8:	2b3e6c1f 	.word	0x2b3e6c1f
  40a1dc:	9b05688c 	.word	0x9b05688c
  40a1e0:	fb41bd6b 	.word	0xfb41bd6b
  40a1e4:	1f83d9ab 	.word	0x1f83d9ab
  40a1e8:	137e2179 	.word	0x137e2179
  40a1ec:	5be0cd19 	.word	0x5be0cd19

Disassembly of section .text.wc_InitSha384_ex%66:

0040a1f0 <wc_InitSha384_ex>:
#else
int wc_InitSha384_ex(Sha384* sha384, void* heap, int devId)
{
    int ret;

    if (sha384 == NULL) {
  40a1f0:	2800      	cmp	r0, #0
  40a1f2:	d035      	beq.n	40a260 <.LVL142>
{
  40a1f4:	b430      	push	{r4, r5}

0040a1f6 <.LCFI19>:
  40a1f6:	4603      	mov	r3, r0
        return BAD_FUNC_ARG;
    }

    sha384->heap = heap;
  40a1f8:	f8c0 10d8 	str.w	r1, [r0, #216]	; 0xd8

0040a1fc <.LBB925>:
    sha384->digest[0] = W64LIT(0xcbbb9d5dc1059ed8);
  40a1fc:	a11a      	add	r1, pc, #104	; (adr r1, 40a268 <.LVL143+0x4>)
  40a1fe:	e9d1 0100 	ldrd	r0, r1, [r1]

0040a202 <.LVL140>:
  40a202:	e9c3 0106 	strd	r0, r1, [r3, #24]
    sha384->digest[1] = W64LIT(0x629a292a367cd507);
  40a206:	a11a      	add	r1, pc, #104	; (adr r1, 40a270 <.LVL143+0xc>)
  40a208:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a20c:	e9c3 0108 	strd	r0, r1, [r3, #32]
    sha384->digest[2] = W64LIT(0x9159015a3070dd17);
  40a210:	a119      	add	r1, pc, #100	; (adr r1, 40a278 <.LVL143+0x14>)
  40a212:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a216:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
    sha384->digest[3] = W64LIT(0x152fecd8f70e5939);
  40a21a:	a119      	add	r1, pc, #100	; (adr r1, 40a280 <.LVL143+0x1c>)
  40a21c:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a220:	e9c3 010c 	strd	r0, r1, [r3, #48]	; 0x30
    sha384->digest[4] = W64LIT(0x67332667ffc00b31);
  40a224:	a118      	add	r1, pc, #96	; (adr r1, 40a288 <.LVL143+0x24>)
  40a226:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a22a:	e9c3 010e 	strd	r0, r1, [r3, #56]	; 0x38
    sha384->digest[5] = W64LIT(0x8eb44a8768581511);
  40a22e:	a118      	add	r1, pc, #96	; (adr r1, 40a290 <.LVL143+0x2c>)
  40a230:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a234:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
    sha384->digest[6] = W64LIT(0xdb0c2e0d64f98fa7);
  40a238:	a117      	add	r1, pc, #92	; (adr r1, 40a298 <.LVL143+0x34>)
  40a23a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a23e:	e9c3 0112 	strd	r0, r1, [r3, #72]	; 0x48
    sha384->digest[7] = W64LIT(0x47b5481dbefa4fa4);
  40a242:	a117      	add	r1, pc, #92	; (adr r1, 40a2a0 <.LVL143+0x3c>)
  40a244:	e9d1 0100 	ldrd	r0, r1, [r1]
  40a248:	e9c3 0114 	strd	r0, r1, [r3, #80]	; 0x50
    sha384->buffLen = 0;
  40a24c:	2000      	movs	r0, #0
  40a24e:	6018      	str	r0, [r3, #0]
    sha384->loLen   = 0;
  40a250:	2400      	movs	r4, #0
  40a252:	2500      	movs	r5, #0
  40a254:	e9c3 4502 	strd	r4, r5, [r3, #8]
    sha384->hiLen   = 0;
  40a258:	e9c3 4504 	strd	r4, r5, [r3, #16]

0040a25c <.LBE925>:
#else
    (void)devId;
#endif /* WOLFSSL_ASYNC_CRYPT */

    return ret;
}
  40a25c:	bc30      	pop	{r4, r5}

0040a25e <.LCFI20>:
  40a25e:	4770      	bx	lr

0040a260 <.LVL142>:
        return BAD_FUNC_ARG;
  40a260:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a264 <.LVL143>:
  40a264:	4770      	bx	lr
  40a266:	bf00      	nop
  40a268:	c1059ed8 	.word	0xc1059ed8
  40a26c:	cbbb9d5d 	.word	0xcbbb9d5d
  40a270:	367cd507 	.word	0x367cd507
  40a274:	629a292a 	.word	0x629a292a
  40a278:	3070dd17 	.word	0x3070dd17
  40a27c:	9159015a 	.word	0x9159015a
  40a280:	f70e5939 	.word	0xf70e5939
  40a284:	152fecd8 	.word	0x152fecd8
  40a288:	ffc00b31 	.word	0xffc00b31
  40a28c:	67332667 	.word	0x67332667
  40a290:	68581511 	.word	0x68581511
  40a294:	8eb44a87 	.word	0x8eb44a87
  40a298:	64f98fa7 	.word	0x64f98fa7
  40a29c:	db0c2e0d 	.word	0xdb0c2e0d
  40a2a0:	befa4fa4 	.word	0xbefa4fa4
  40a2a4:	47b5481d 	.word	0x47b5481d

Disassembly of section .text.wc_ShaUpdate%67:

0040a2a8 <wc_ShaUpdate>:
    if (sha == NULL ||(data == NULL && len > 0)) {
  40a2a8:	2800      	cmp	r0, #0
  40a2aa:	d04a      	beq.n	40a342 <.LCFI4>
{
  40a2ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}

0040a2b0 <.LCFI3>:
  40a2b0:	460f      	mov	r7, r1
  40a2b2:	4616      	mov	r6, r2
  40a2b4:	4604      	mov	r4, r0
    if (sha == NULL ||(data == NULL && len > 0)) {
  40a2b6:	b909      	cbnz	r1, 40a2bc <.LCFI3+0xc>
  40a2b8:	2a00      	cmp	r2, #0
  40a2ba:	d145      	bne.n	40a348 <.LCFI5>
    local = (byte*)sha->buffer;
  40a2bc:	f104 080c 	add.w	r8, r4, #12

0040a2c0 <.LVL351>:
    if (sha->buffLen >= SHA_BLOCK_SIZE)
  40a2c0:	6823      	ldr	r3, [r4, #0]
  40a2c2:	2b3f      	cmp	r3, #63	; 0x3f
  40a2c4:	d844      	bhi.n	40a350 <.LVL367>
    while (len) {
  40a2c6:	2e00      	cmp	r6, #0
  40a2c8:	d046      	beq.n	40a358 <.LVL369>
  40a2ca:	f104 0548 	add.w	r5, r4, #72	; 0x48

0040a2ce <.LBB771>:
            sha->buffLen = 0;
  40a2ce:	f04f 0900 	mov.w	r9, #0
  40a2d2:	e002      	b.n	40a2da <.LBB782>

0040a2d4 <.LVL352>:
  40a2d4:	f8c4 9000 	str.w	r9, [r4]

0040a2d8 <.LBE771>:
    while (len) {
  40a2d8:	b386      	cbz	r6, 40a33c <.LBE780>

0040a2da <.LBB782>:
        word32 add = min(len, SHA_BLOCK_SIZE - sha->buffLen);
  40a2da:	6820      	ldr	r0, [r4, #0]

0040a2dc <.LVL353>:
  40a2dc:	f1c0 0a40 	rsb	sl, r0, #64	; 0x40

0040a2e0 <.LBB772>:
        return a > b ? b : a;
  40a2e0:	45b2      	cmp	sl, r6
  40a2e2:	bf28      	it	cs
  40a2e4:	46b2      	movcs	sl, r6

0040a2e6 <.LBE772>:
        XMEMCPY(&local[sha->buffLen], data, add);
  40a2e6:	4652      	mov	r2, sl
  40a2e8:	4639      	mov	r1, r7
  40a2ea:	4440      	add	r0, r8
  40a2ec:	f7fe fe6e 	bl	408fcc <.LFE19>

0040a2f0 <.LVL356>:
        sha->buffLen += add;
  40a2f0:	6823      	ldr	r3, [r4, #0]
  40a2f2:	4453      	add	r3, sl
  40a2f4:	6023      	str	r3, [r4, #0]
        data         += add;
  40a2f6:	4457      	add	r7, sl
        len          -= add;
  40a2f8:	eba6 060a 	sub.w	r6, r6, sl
        if (sha->buffLen == SHA_BLOCK_SIZE) {
  40a2fc:	2b40      	cmp	r3, #64	; 0x40
  40a2fe:	d1eb      	bne.n	40a2d8 <.LBE771>
  40a300:	f104 0108 	add.w	r1, r4, #8

0040a304 <.LBB774>:
        out[i] = ByteReverseWord32(in[i]);
  40a304:	684a      	ldr	r2, [r1, #4]

0040a306 <.LBB776>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40a306:	0a13      	lsrs	r3, r2, #8
  40a308:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  40a30c:	0212      	lsls	r2, r2, #8
  40a30e:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  40a312:	4313      	orrs	r3, r2

0040a314 <.LBB778>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40a314:	ea4f 4333 	mov.w	r3, r3, ror #16

0040a318 <.LBE776>:
        out[i] = ByteReverseWord32(in[i]);
  40a318:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  40a31c:	42a9      	cmp	r1, r5
  40a31e:	d1f1      	bne.n	40a304 <.LBB774>

0040a320 <.LBE774>:
            XTRANSFORM(sha, local);
  40a320:	4641      	mov	r1, r8
  40a322:	4620      	mov	r0, r4
  40a324:	f7f9 ff58 	bl	4041d8 <.LFE18>

0040a328 <.LBB780>:
    word32 tmp = sha->loLen;
  40a328:	6862      	ldr	r2, [r4, #4]

0040a32a <.LVL361>:
    if ( (sha->loLen += len) < tmp)
  40a32a:	f102 0340 	add.w	r3, r2, #64	; 0x40
  40a32e:	6063      	str	r3, [r4, #4]
  40a330:	429a      	cmp	r2, r3
  40a332:	d9cf      	bls.n	40a2d4 <.LVL352>
        sha->hiLen++;                       /* carry low to high */
  40a334:	68a3      	ldr	r3, [r4, #8]
  40a336:	3301      	adds	r3, #1
  40a338:	60a3      	str	r3, [r4, #8]
  40a33a:	e7cb      	b.n	40a2d4 <.LVL352>

0040a33c <.LBE780>:
    return 0;
  40a33c:	2000      	movs	r0, #0
  40a33e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0040a342 <.LCFI4>:
        return BAD_FUNC_ARG;
  40a342:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a346 <.LVL364>:
  40a346:	4770      	bx	lr

0040a348 <.LCFI5>:
  40a348:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040a34c <.LVL366>:
  40a34c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0040a350 <.LVL367>:
        return BUFFER_E;
  40a350:	f06f 0083 	mvn.w	r0, #131	; 0x83

0040a354 <.LVL368>:
  40a354:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0040a358 <.LVL369>:
    return 0;
  40a358:	2000      	movs	r0, #0

0040a35a <.LVL370>:
}
  40a35a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text.wc_Sha256Update%68:

0040a35e <wc_Sha256Update>:
        if (sha256 == NULL || (data == NULL && len > 0)) {
  40a35e:	2800      	cmp	r0, #0
  40a360:	d04c      	beq.n	40a3fc <.LBB214>

0040a362 <.LBE196>:
    {
  40a362:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}

0040a366 <.LCFI5>:
  40a366:	460f      	mov	r7, r1
  40a368:	4616      	mov	r6, r2
  40a36a:	4604      	mov	r4, r0

0040a36c <.LBB213>:
        if (sha256 == NULL || (data == NULL && len > 0)) {
  40a36c:	b909      	cbnz	r1, 40a372 <.LBB213+0x6>
  40a36e:	2a00      	cmp	r2, #0
  40a370:	d148      	bne.n	40a404 <.LBB215>
        local = (byte*)sha256->buffer;
  40a372:	f104 0820 	add.w	r8, r4, #32

0040a376 <.LVL49>:
        if (sha256->buffLen >= SHA256_BLOCK_SIZE)
  40a376:	6e23      	ldr	r3, [r4, #96]	; 0x60
  40a378:	2b3f      	cmp	r3, #63	; 0x3f
  40a37a:	d846      	bhi.n	40a40a <.LVL67>
        while (len) {
  40a37c:	2e00      	cmp	r6, #0
  40a37e:	d047      	beq.n	40a410 <.LVL67+0x6>
  40a380:	f104 055c 	add.w	r5, r4, #92	; 0x5c

0040a384 <.LBB198>:
                sha256->buffLen = 0;
  40a384:	f04f 0900 	mov.w	r9, #0
  40a388:	e002      	b.n	40a390 <.LBB209>

0040a38a <.LVL50>:
  40a38a:	f8c4 9060 	str.w	r9, [r4, #96]	; 0x60

0040a38e <.LBE198>:
        while (len) {
  40a38e:	b38e      	cbz	r6, 40a3f4 <.LBE207>

0040a390 <.LBB209>:
            word32 add = min(len, SHA256_BLOCK_SIZE - sha256->buffLen);
  40a390:	6e20      	ldr	r0, [r4, #96]	; 0x60

0040a392 <.LVL52>:
  40a392:	f1c0 0a40 	rsb	sl, r0, #64	; 0x40

0040a396 <.LBB199>:
        return a > b ? b : a;
  40a396:	45b2      	cmp	sl, r6
  40a398:	bf28      	it	cs
  40a39a:	46b2      	movcs	sl, r6

0040a39c <.LBE199>:
            XMEMCPY(&local[sha256->buffLen], data, add);
  40a39c:	4652      	mov	r2, sl
  40a39e:	4639      	mov	r1, r7
  40a3a0:	4440      	add	r0, r8
  40a3a2:	f7fe fe13 	bl	408fcc <.LFE19>

0040a3a6 <.LVL55>:
            sha256->buffLen += add;
  40a3a6:	6e23      	ldr	r3, [r4, #96]	; 0x60
  40a3a8:	4453      	add	r3, sl
  40a3aa:	6623      	str	r3, [r4, #96]	; 0x60
            data            += add;
  40a3ac:	4457      	add	r7, sl
            len             -= add;
  40a3ae:	eba6 060a 	sub.w	r6, r6, sl
            if (sha256->buffLen == SHA256_BLOCK_SIZE) {
  40a3b2:	2b40      	cmp	r3, #64	; 0x40
  40a3b4:	d1eb      	bne.n	40a38e <.LBE198>
  40a3b6:	f104 011c 	add.w	r1, r4, #28

0040a3ba <.LBB201>:
        out[i] = ByteReverseWord32(in[i]);
  40a3ba:	684a      	ldr	r2, [r1, #4]

0040a3bc <.LBB203>:
    value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  40a3bc:	0a13      	lsrs	r3, r2, #8
  40a3be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
  40a3c2:	0212      	lsls	r2, r2, #8
  40a3c4:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
  40a3c8:	4313      	orrs	r3, r2

0040a3ca <.LBB205>:
        return (x << y) | (x >> (sizeof(y) * 8 - y));
  40a3ca:	ea4f 4333 	mov.w	r3, r3, ror #16

0040a3ce <.LBE203>:
        out[i] = ByteReverseWord32(in[i]);
  40a3ce:	f841 3f04 	str.w	r3, [r1, #4]!
    for (i = 0; i < count; i++)
  40a3d2:	42a9      	cmp	r1, r5
  40a3d4:	d1f1      	bne.n	40a3ba <.LBB201>

0040a3d6 <.LBE201>:
                ret = XTRANSFORM(sha256, local);
  40a3d6:	4620      	mov	r0, r4
  40a3d8:	f7fd fb1e 	bl	407a18 <.LBE16>

0040a3dc <.LVL59>:
                if (ret != 0) {
  40a3dc:	4603      	mov	r3, r0
  40a3de:	b950      	cbnz	r0, 40a3f6 <.LBE213>

0040a3e0 <.LBB207>:
        word32 tmp = sha256->loLen;
  40a3e0:	6e62      	ldr	r2, [r4, #100]	; 0x64

0040a3e2 <.LVL61>:
        if ( (sha256->loLen += len) < tmp)
  40a3e2:	f102 0340 	add.w	r3, r2, #64	; 0x40
  40a3e6:	6663      	str	r3, [r4, #100]	; 0x64
  40a3e8:	429a      	cmp	r2, r3
  40a3ea:	d9ce      	bls.n	40a38a <.LVL50>
            sha256->hiLen++;                       /* carry low to high */
  40a3ec:	6ea3      	ldr	r3, [r4, #104]	; 0x68
  40a3ee:	3301      	adds	r3, #1
  40a3f0:	66a3      	str	r3, [r4, #104]	; 0x68
  40a3f2:	e7ca      	b.n	40a38a <.LVL50>

0040a3f4 <.LBE207>:
        while (len) {
  40a3f4:	2300      	movs	r3, #0

0040a3f6 <.LBE213>:
    }
  40a3f6:	4618      	mov	r0, r3
  40a3f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0040a3fc <.LBB214>:
            return BAD_FUNC_ARG;
  40a3fc:	f06f 03ac 	mvn.w	r3, #172	; 0xac

0040a400 <.LBE214>:
    }
  40a400:	4618      	mov	r0, r3

0040a402 <.LVL65>:
  40a402:	4770      	bx	lr

0040a404 <.LBB215>:
            return BAD_FUNC_ARG;
  40a404:	f06f 03ac 	mvn.w	r3, #172	; 0xac
  40a408:	e7f5      	b.n	40a3f6 <.LBE213>

0040a40a <.LVL67>:
            return BUFFER_E;
  40a40a:	f06f 0383 	mvn.w	r3, #131	; 0x83
  40a40e:	e7f2      	b.n	40a3f6 <.LBE213>
        while (len) {
  40a410:	2300      	movs	r3, #0

0040a412 <.LBE215>:
        return Sha256Update(sha256, data, len);
  40a412:	e7f0      	b.n	40a3f6 <.LBE213>

Disassembly of section .text.__lshift%69:

0040a414 <__lshift>:
  40a414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

0040a418 <.LCFI11>:
  40a418:	4691      	mov	r9, r2
  40a41a:	690a      	ldr	r2, [r1, #16]

0040a41c <.LVL184>:
  40a41c:	688b      	ldr	r3, [r1, #8]
  40a41e:	ea4f 1469 	mov.w	r4, r9, asr #5

0040a422 <.LVL185>:
  40a422:	eb04 0802 	add.w	r8, r4, r2
  40a426:	f108 0501 	add.w	r5, r8, #1
  40a42a:	429d      	cmp	r5, r3
  40a42c:	460e      	mov	r6, r1
  40a42e:	4607      	mov	r7, r0
  40a430:	6849      	ldr	r1, [r1, #4]

0040a432 <.LVL186>:
  40a432:	dd04      	ble.n	40a43e <.LVL188+0x2>
  40a434:	005b      	lsls	r3, r3, #1

0040a436 <.LVL187>:
  40a436:	429d      	cmp	r5, r3
  40a438:	f101 0101 	add.w	r1, r1, #1

0040a43c <.LVL188>:
  40a43c:	dcfa      	bgt.n	40a434 <.LVL186+0x2>
  40a43e:	4638      	mov	r0, r7

0040a440 <.LVL189>:
  40a440:	f000 ff5a 	bl	40b2f8 <.LFE2>

0040a444 <.LVL190>:
  40a444:	2c00      	cmp	r4, #0
  40a446:	f100 0314 	add.w	r3, r0, #20

0040a44a <.LVL191>:
  40a44a:	dd06      	ble.n	40a45a <.LVL193+0x4>
  40a44c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  40a450:	2100      	movs	r1, #0

0040a452 <.LVL192>:
  40a452:	f843 1b04 	str.w	r1, [r3], #4

0040a456 <.LVL193>:
  40a456:	429a      	cmp	r2, r3
  40a458:	d1fb      	bne.n	40a452 <.LVL192>
  40a45a:	6934      	ldr	r4, [r6, #16]

0040a45c <.LVL194>:
  40a45c:	f106 0114 	add.w	r1, r6, #20

0040a460 <.LVL195>:
  40a460:	f019 091f 	ands.w	r9, r9, #31

0040a464 <.LVL196>:
  40a464:	eb01 0e84 	add.w	lr, r1, r4, lsl #2

0040a468 <.LVL197>:
  40a468:	d01d      	beq.n	40a4a6 <.LVL208>
  40a46a:	f1c9 0c20 	rsb	ip, r9, #32

0040a46e <.LVL198>:
  40a46e:	2200      	movs	r2, #0

0040a470 <.LVL199>:
  40a470:	680c      	ldr	r4, [r1, #0]
  40a472:	fa04 f409 	lsl.w	r4, r4, r9
  40a476:	4314      	orrs	r4, r2
  40a478:	f843 4b04 	str.w	r4, [r3], #4

0040a47c <.LVL200>:
  40a47c:	f851 2b04 	ldr.w	r2, [r1], #4

0040a480 <.LVL201>:
  40a480:	458e      	cmp	lr, r1
  40a482:	fa22 f20c 	lsr.w	r2, r2, ip

0040a486 <.LVL202>:
  40a486:	d8f3      	bhi.n	40a470 <.LVL199>
  40a488:	601a      	str	r2, [r3, #0]
  40a48a:	b10a      	cbz	r2, 40a490 <.LBB24>

0040a48c <.LVL203>:
  40a48c:	f108 0502 	add.w	r5, r8, #2

0040a490 <.LBB24>:
  40a490:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40a492:	6872      	ldr	r2, [r6, #4]

0040a494 <.LBE24>:
  40a494:	3d01      	subs	r5, #1

0040a496 <.LBB28>:
  40a496:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]

0040a49a <.LBE28>:
  40a49a:	6105      	str	r5, [r0, #16]

0040a49c <.LBB29>:
  40a49c:	6031      	str	r1, [r6, #0]
  40a49e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]

0040a4a2 <.LBE29>:
  40a4a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0040a4a6 <.LVL208>:
  40a4a6:	3b04      	subs	r3, #4

0040a4a8 <.LVL209>:
  40a4a8:	f851 2b04 	ldr.w	r2, [r1], #4

0040a4ac <.LVL210>:
  40a4ac:	f843 2f04 	str.w	r2, [r3, #4]!
  40a4b0:	458e      	cmp	lr, r1
  40a4b2:	d8f9      	bhi.n	40a4a8 <.LVL209>
  40a4b4:	e7ec      	b.n	40a490 <.LBB24>

0040a4b6 <.LFE26>:
  40a4b6:	bf00      	nop

Disassembly of section .text.__register_exitproc%70:

0040a4b8 <__register_exitproc>:
  40a4b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}

0040a4bc <.LCFI0>:
  40a4bc:	4c25      	ldr	r4, [pc, #148]	; (40a554 <.LVL14+0x2>)
  40a4be:	6825      	ldr	r5, [r4, #0]
  40a4c0:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148

0040a4c4 <.LVL1>:
  40a4c4:	4606      	mov	r6, r0
  40a4c6:	4688      	mov	r8, r1
  40a4c8:	4692      	mov	sl, r2
  40a4ca:	4699      	mov	r9, r3
  40a4cc:	b3c4      	cbz	r4, 40a540 <.LVL11>
  40a4ce:	6860      	ldr	r0, [r4, #4]

0040a4d0 <.LVL2>:
  40a4d0:	281f      	cmp	r0, #31
  40a4d2:	dc17      	bgt.n	40a504 <.LVL6>
  40a4d4:	1c43      	adds	r3, r0, #1

0040a4d6 <.LVL3>:
  40a4d6:	b176      	cbz	r6, 40a4f6 <.LVL5>

0040a4d8 <.LVL4>:
  40a4d8:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  40a4dc:	2201      	movs	r2, #1
  40a4de:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  40a4e2:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  40a4e6:	4082      	lsls	r2, r0
  40a4e8:	4311      	orrs	r1, r2
  40a4ea:	2e02      	cmp	r6, #2
  40a4ec:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  40a4f0:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  40a4f4:	d01e      	beq.n	40a534 <.LVL10>

0040a4f6 <.LVL5>:
  40a4f6:	3002      	adds	r0, #2
  40a4f8:	6063      	str	r3, [r4, #4]
  40a4fa:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  40a4fe:	2000      	movs	r0, #0
  40a500:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0040a504 <.LVL6>:
  40a504:	4b14      	ldr	r3, [pc, #80]	; (40a558 <.LVL14+0x6>)

0040a506 <.LVL7>:
  40a506:	b303      	cbz	r3, 40a54a <.LVL13>
  40a508:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40a50c:	f001 fc54 	bl	40bdb8 <.LFE151>

0040a510 <.LVL8>:
  40a510:	4604      	mov	r4, r0
  40a512:	b1d0      	cbz	r0, 40a54a <.LVL13>
  40a514:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  40a518:	2700      	movs	r7, #0
  40a51a:	e880 0088 	stmia.w	r0, {r3, r7}
  40a51e:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  40a522:	4638      	mov	r0, r7

0040a524 <.LVL9>:
  40a524:	2301      	movs	r3, #1
  40a526:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40a52a:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  40a52e:	2e00      	cmp	r6, #0
  40a530:	d0e1      	beq.n	40a4f6 <.LVL5>
  40a532:	e7d1      	b.n	40a4d8 <.LVL4>

0040a534 <.LVL10>:
  40a534:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  40a538:	430a      	orrs	r2, r1
  40a53a:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  40a53e:	e7da      	b.n	40a4f6 <.LVL5>

0040a540 <.LVL11>:
  40a540:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  40a544:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  40a548:	e7c1      	b.n	40a4ce <.LVL1+0xa>

0040a54a <.LVL13>:
  40a54a:	f04f 30ff 	mov.w	r0, #4294967295
  40a54e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0040a552 <.LVL14>:
  40a552:	bf00      	nop
  40a554:	0040abac 	.word	0x0040abac
  40a558:	0040bdb9 	.word	0x0040bdb9

Disassembly of section .text.SYS_TIME_Initialize%71:

0040a55c <SYS_TIME_Initialize>:
// Section: System Interface Functions
// *****************************************************************************
// *****************************************************************************
SYS_MODULE_OBJ SYS_TIME_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init )
{
    if(init == 0 || index != SYS_TIME_INDEX_0)
  40a55c:	2900      	cmp	r1, #0
  40a55e:	d042      	beq.n	40a5e6 <.LCFI12>
{
  40a560:	b538      	push	{r3, r4, r5, lr}

0040a562 <.LCFI11>:
  40a562:	460d      	mov	r5, r1
    if(init == 0 || index != SYS_TIME_INDEX_0)
  40a564:	b110      	cbz	r0, 40a56c <.LBB36>
    {
        return SYS_MODULE_OBJ_INVALID;
  40a566:	f04f 30ff 	mov.w	r0, #4294967295

0040a56a <.LVL125>:
    memset(timers, 0, sizeof(timers));

    gSystemCounterObj.status = SYS_STATUS_READY;

    return (SYS_MODULE_OBJ)&gSystemCounterObj;
}
  40a56a:	bd38      	pop	{r3, r4, r5, pc}

0040a56c <.LBB36>:
// *****************************************************************************
/* Function: OSAL_RESULT OSAL_MUTEX_Create(OSAL_MUTEX_HANDLE_TYPE mutexID)
 */
static OSAL_RESULT __attribute__((always_inline)) OSAL_MUTEX_Create(OSAL_MUTEX_HANDLE_TYPE* mutexID)
{
   *mutexID = 1;
  40a56c:	4c1f      	ldr	r4, [pc, #124]	; (40a5ec <.LVL138+0x2>)
  40a56e:	2301      	movs	r3, #1
  40a570:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

0040a574 <.LBB38>:
    counterObj->timePlib = initData->timePlib;
  40a574:	680b      	ldr	r3, [r1, #0]
  40a576:	6063      	str	r3, [r4, #4]
    counterObj->hwTimerFrequency = counterObj->timePlib->timerFrequencyGet();
  40a578:	689b      	ldr	r3, [r3, #8]
  40a57a:	4798      	blx	r3

0040a57c <.LVL128>:
  40a57c:	60e0      	str	r0, [r4, #12]

0040a57e <.LVL129>:
    cpuCyclesPerTimerClock=(SYS_TIME_CPU_CLOCK_FREQUENCY/counterObj->hwTimerFrequency);
  40a57e:	4b1c      	ldr	r3, [pc, #112]	; (40a5f0 <.LVL138+0x6>)
  40a580:	fbb3 f0f0 	udiv	r0, r3, r0

0040a584 <.LVL130>:
    counterObj->hwTimerCompareMargin=(SYS_TIME_COMPARE_UPDATE_EXECUTION_CYCLES/cpuCyclesPerTimerClock) +2;
  40a584:	f44f 7361 	mov.w	r3, #900	; 0x384
  40a588:	fb93 f3f0 	sdiv	r3, r3, r0
  40a58c:	3302      	adds	r3, #2
  40a58e:	6223      	str	r3, [r4, #32]
    counterObj->hwTimerIntNum = initData->hwTimerIntNum;
  40a590:	f995 3004 	ldrsb.w	r3, [r5, #4]
  40a594:	7223      	strb	r3, [r4, #8]
    counterObj->hwTimerPreviousValue = 0;
  40a596:	2100      	movs	r1, #0
  40a598:	6121      	str	r1, [r4, #16]
    counterObj->hwTimerPeriodValue = SYS_TIME_HW_COUNTER_PERIOD;
  40a59a:	f64f 73ff 	movw	r3, #65535	; 0xffff
  40a59e:	61a3      	str	r3, [r4, #24]
    counterObj->hwTimerCompareValue = SYS_TIME_HW_COUNTER_HALF_PERIOD;
  40a5a0:	f647 73ff 	movw	r3, #32767	; 0x7fff
  40a5a4:	61e3      	str	r3, [r4, #28]
    counterObj->swCounter64Low = 0;
  40a5a6:	6261      	str	r1, [r4, #36]	; 0x24
    counterObj->swCounter64High = 0;
  40a5a8:	62a1      	str	r1, [r4, #40]	; 0x28
    counterObj->tmrActive = NULL;
  40a5aa:	6321      	str	r1, [r4, #48]	; 0x30
    counterObj->interruptNestingCount = 0;
  40a5ac:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
    counterObj->timePlib->timerCallbackSet(SYS_TIME_PLIBCallback, 0);
  40a5b0:	6863      	ldr	r3, [r4, #4]
  40a5b2:	681b      	ldr	r3, [r3, #0]
  40a5b4:	480f      	ldr	r0, [pc, #60]	; (40a5f4 <.LVL138+0xa>)

0040a5b6 <.LVL131>:
  40a5b6:	4798      	blx	r3

0040a5b8 <.LVL132>:
    if (counterObj->timePlib->timerPeriodSet != NULL)
  40a5b8:	6863      	ldr	r3, [r4, #4]
  40a5ba:	685b      	ldr	r3, [r3, #4]
  40a5bc:	b10b      	cbz	r3, 40a5c2 <.LVL132+0xa>
        counterObj->timePlib->timerPeriodSet(counterObj->hwTimerPeriodValue);
  40a5be:	69a0      	ldr	r0, [r4, #24]
  40a5c0:	4798      	blx	r3
    counterObj->timePlib->timerCompareSet(counterObj->hwTimerCompareValue);
  40a5c2:	4c0a      	ldr	r4, [pc, #40]	; (40a5ec <.LVL138+0x2>)
  40a5c4:	6863      	ldr	r3, [r4, #4]
  40a5c6:	68db      	ldr	r3, [r3, #12]
  40a5c8:	69e0      	ldr	r0, [r4, #28]
  40a5ca:	4798      	blx	r3
    counterObj->timePlib->timerStart();
  40a5cc:	6863      	ldr	r3, [r4, #4]
  40a5ce:	691b      	ldr	r3, [r3, #16]
  40a5d0:	4798      	blx	r3

0040a5d2 <.LBE38>:
    memset(timers, 0, sizeof(timers));
  40a5d2:	f44f 72a0 	mov.w	r2, #320	; 0x140
  40a5d6:	2100      	movs	r1, #0
  40a5d8:	4807      	ldr	r0, [pc, #28]	; (40a5f8 <.LVL138+0xe>)
  40a5da:	f000 f8b1 	bl	40a740 <.LFE25>

0040a5de <.LVL136>:
    gSystemCounterObj.status = SYS_STATUS_READY;
  40a5de:	2302      	movs	r3, #2
  40a5e0:	7023      	strb	r3, [r4, #0]
    return (SYS_MODULE_OBJ)&gSystemCounterObj;
  40a5e2:	4620      	mov	r0, r4
  40a5e4:	bd38      	pop	{r3, r4, r5, pc}

0040a5e6 <.LCFI12>:
        return SYS_MODULE_OBJ_INVALID;
  40a5e6:	f04f 30ff 	mov.w	r0, #4294967295

0040a5ea <.LVL138>:
  40a5ea:	4770      	bx	lr
  40a5ec:	2040db9c 	.word	0x2040db9c
  40a5f0:	11e1a300 	.word	0x11e1a300
  40a5f4:	00409d5d 	.word	0x00409d5d
  40a5f8:	2040d9bc 	.word	0x2040d9bc

Disassembly of section .text%72:

0040a600 <memchr>:
  40a600:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40a604:	2a10      	cmp	r2, #16
  40a606:	db2b      	blt.n	40a660 <memchr+0x60>
  40a608:	f010 0f07 	tst.w	r0, #7
  40a60c:	d008      	beq.n	40a620 <memchr+0x20>
  40a60e:	f810 3b01 	ldrb.w	r3, [r0], #1
  40a612:	3a01      	subs	r2, #1
  40a614:	428b      	cmp	r3, r1
  40a616:	d02d      	beq.n	40a674 <memchr+0x74>
  40a618:	f010 0f07 	tst.w	r0, #7
  40a61c:	b342      	cbz	r2, 40a670 <memchr+0x70>
  40a61e:	d1f6      	bne.n	40a60e <memchr+0xe>
  40a620:	b4f0      	push	{r4, r5, r6, r7}
  40a622:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  40a626:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40a62a:	f022 0407 	bic.w	r4, r2, #7
  40a62e:	f07f 0700 	mvns.w	r7, #0
  40a632:	2300      	movs	r3, #0
  40a634:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  40a638:	3c08      	subs	r4, #8
  40a63a:	ea85 0501 	eor.w	r5, r5, r1
  40a63e:	ea86 0601 	eor.w	r6, r6, r1
  40a642:	fa85 f547 	uadd8	r5, r5, r7
  40a646:	faa3 f587 	sel	r5, r3, r7
  40a64a:	fa86 f647 	uadd8	r6, r6, r7
  40a64e:	faa5 f687 	sel	r6, r5, r7
  40a652:	b98e      	cbnz	r6, 40a678 <memchr+0x78>
  40a654:	d1ee      	bne.n	40a634 <memchr+0x34>
  40a656:	bcf0      	pop	{r4, r5, r6, r7}
  40a658:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40a65c:	f002 0207 	and.w	r2, r2, #7
  40a660:	b132      	cbz	r2, 40a670 <memchr+0x70>
  40a662:	f810 3b01 	ldrb.w	r3, [r0], #1
  40a666:	3a01      	subs	r2, #1
  40a668:	ea83 0301 	eor.w	r3, r3, r1
  40a66c:	b113      	cbz	r3, 40a674 <memchr+0x74>
  40a66e:	d1f8      	bne.n	40a662 <memchr+0x62>
  40a670:	2000      	movs	r0, #0
  40a672:	4770      	bx	lr
  40a674:	3801      	subs	r0, #1
  40a676:	4770      	bx	lr
  40a678:	2d00      	cmp	r5, #0
  40a67a:	bf06      	itte	eq
  40a67c:	4635      	moveq	r5, r6
  40a67e:	3803      	subeq	r0, #3
  40a680:	3807      	subne	r0, #7
  40a682:	f015 0f01 	tst.w	r5, #1
  40a686:	d107      	bne.n	40a698 <memchr+0x98>
  40a688:	3001      	adds	r0, #1
  40a68a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40a68e:	bf02      	ittt	eq
  40a690:	3001      	addeq	r0, #1
  40a692:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  40a696:	3001      	addeq	r0, #1
  40a698:	bcf0      	pop	{r4, r5, r6, r7}
  40a69a:	3801      	subs	r0, #1
  40a69c:	4770      	bx	lr

0040a69e <L0>:
  40a69e:	bf00      	nop

Disassembly of section .text.__pow5mult%73:

0040a6a0 <__pow5mult>:
  40a6a0:	f012 0303 	ands.w	r3, r2, #3
  40a6a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

0040a6a8 <.LCFI10>:
  40a6a8:	4614      	mov	r4, r2

0040a6aa <.LVL152>:
  40a6aa:	4607      	mov	r7, r0
  40a6ac:	d12e      	bne.n	40a70c <.LVL173>
  40a6ae:	460d      	mov	r5, r1

0040a6b0 <.LVL153>:
  40a6b0:	10a4      	asrs	r4, r4, #2

0040a6b2 <.LVL154>:
  40a6b2:	d01c      	beq.n	40a6ee <.LVL165>
  40a6b4:	6cbe      	ldr	r6, [r7, #72]	; 0x48

0040a6b6 <.LVL155>:
  40a6b6:	b396      	cbz	r6, 40a71e <.LBB20>
  40a6b8:	07e3      	lsls	r3, r4, #31
  40a6ba:	f04f 0800 	mov.w	r8, #0
  40a6be:	d406      	bmi.n	40a6ce <.LVL161>

0040a6c0 <.LVL156>:
  40a6c0:	1064      	asrs	r4, r4, #1

0040a6c2 <.LVL157>:
  40a6c2:	d014      	beq.n	40a6ee <.LVL165>

0040a6c4 <.LVL158>:
  40a6c4:	6830      	ldr	r0, [r6, #0]

0040a6c6 <.LVL159>:
  40a6c6:	b1a8      	cbz	r0, 40a6f4 <.LVL166>
  40a6c8:	4606      	mov	r6, r0

0040a6ca <.LVL160>:
  40a6ca:	07e3      	lsls	r3, r4, #31
  40a6cc:	d5f8      	bpl.n	40a6c0 <.LVL156>

0040a6ce <.LVL161>:
  40a6ce:	4632      	mov	r2, r6
  40a6d0:	4629      	mov	r1, r5
  40a6d2:	4638      	mov	r0, r7
  40a6d4:	f7fe fe3a 	bl	40934c <.LBE11>

0040a6d8 <.LBB16>:
  40a6d8:	b1b5      	cbz	r5, 40a708 <.LVL171>
  40a6da:	686a      	ldr	r2, [r5, #4]
  40a6dc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c

0040a6de <.LBE16>:
  40a6de:	1064      	asrs	r4, r4, #1

0040a6e0 <.LBB19>:
  40a6e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40a6e4:	6029      	str	r1, [r5, #0]
  40a6e6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]

0040a6ea <.LBE19>:
  40a6ea:	4605      	mov	r5, r0

0040a6ec <.LVL164>:
  40a6ec:	d1ea      	bne.n	40a6c4 <.LVL158>

0040a6ee <.LVL165>:
  40a6ee:	4628      	mov	r0, r5
  40a6f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040a6f4 <.LVL166>:
  40a6f4:	4632      	mov	r2, r6
  40a6f6:	4631      	mov	r1, r6
  40a6f8:	4638      	mov	r0, r7

0040a6fa <.LVL167>:
  40a6fa:	f7fe fe27 	bl	40934c <.LBE11>

0040a6fe <.LVL168>:
  40a6fe:	6030      	str	r0, [r6, #0]

0040a700 <.LVL169>:
  40a700:	f8c0 8000 	str.w	r8, [r0]
  40a704:	4606      	mov	r6, r0

0040a706 <.LVL170>:
  40a706:	e7e0      	b.n	40a6ca <.LVL160>

0040a708 <.LVL171>:
  40a708:	4605      	mov	r5, r0

0040a70a <.LVL172>:
  40a70a:	e7d9      	b.n	40a6c0 <.LVL156>

0040a70c <.LVL173>:
  40a70c:	1e5a      	subs	r2, r3, #1

0040a70e <.LVL174>:
  40a70e:	4d0b      	ldr	r5, [pc, #44]	; (40a73c <.LVL182+0x6>)
  40a710:	2300      	movs	r3, #0

0040a712 <.LVL175>:
  40a712:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]

0040a716 <.LVL176>:
  40a716:	f000 fa09 	bl	40ab2c <.LFE159>

0040a71a <.LVL177>:
  40a71a:	4605      	mov	r5, r0

0040a71c <.LVL178>:
  40a71c:	e7c8      	b.n	40a6b0 <.LVL153>

0040a71e <.LBB20>:
  40a71e:	2101      	movs	r1, #1
  40a720:	4638      	mov	r0, r7
  40a722:	f000 fde9 	bl	40b2f8 <.LFE2>

0040a726 <.LVL180>:
  40a726:	f240 2171 	movw	r1, #625	; 0x271
  40a72a:	2201      	movs	r2, #1

0040a72c <.LBE20>:
  40a72c:	2300      	movs	r3, #0

0040a72e <.LBB23>:
  40a72e:	6141      	str	r1, [r0, #20]
  40a730:	6102      	str	r2, [r0, #16]
  40a732:	4606      	mov	r6, r0

0040a734 <.LBE23>:
  40a734:	64b8      	str	r0, [r7, #72]	; 0x48

0040a736 <.LVL182>:
  40a736:	6003      	str	r3, [r0, #0]
  40a738:	e7be      	b.n	40a6b8 <.LVL155+0x2>
  40a73a:	bf00      	nop
  40a73c:	0040bec0 	.word	0x0040bec0

Disassembly of section .text.memset%74:

0040a740 <memset>:
  40a740:	b470      	push	{r4, r5, r6}

0040a742 <.LCFI0>:
  40a742:	0786      	lsls	r6, r0, #30
  40a744:	d046      	beq.n	40a7d4 <.LCFI2>
  40a746:	1e54      	subs	r4, r2, #1

0040a748 <.LVL1>:
  40a748:	2a00      	cmp	r2, #0
  40a74a:	d041      	beq.n	40a7d0 <.LVL25>
  40a74c:	b2ca      	uxtb	r2, r1
  40a74e:	4603      	mov	r3, r0
  40a750:	e002      	b.n	40a758 <.LVL4>

0040a752 <.LVL2>:
  40a752:	f114 34ff 	adds.w	r4, r4, #4294967295

0040a756 <.LVL3>:
  40a756:	d33b      	bcc.n	40a7d0 <.LVL25>

0040a758 <.LVL4>:
  40a758:	f803 2b01 	strb.w	r2, [r3], #1
  40a75c:	079d      	lsls	r5, r3, #30
  40a75e:	d1f8      	bne.n	40a752 <.LVL2>

0040a760 <.LVL6>:
  40a760:	2c03      	cmp	r4, #3
  40a762:	d92e      	bls.n	40a7c2 <.LVL22>
  40a764:	b2cd      	uxtb	r5, r1

0040a766 <.LVL7>:
  40a766:	ea45 2505 	orr.w	r5, r5, r5, lsl #8

0040a76a <.LVL8>:
  40a76a:	2c0f      	cmp	r4, #15
  40a76c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16

0040a770 <.LVL9>:
  40a770:	d919      	bls.n	40a7a6 <.LVL17+0x2>
  40a772:	f103 0210 	add.w	r2, r3, #16
  40a776:	4626      	mov	r6, r4

0040a778 <.LVL10>:
  40a778:	3e10      	subs	r6, #16

0040a77a <.LVL11>:
  40a77a:	2e0f      	cmp	r6, #15
  40a77c:	f842 5c10 	str.w	r5, [r2, #-16]

0040a780 <.LVL12>:
  40a780:	f842 5c0c 	str.w	r5, [r2, #-12]

0040a784 <.LVL13>:
  40a784:	f842 5c08 	str.w	r5, [r2, #-8]

0040a788 <.LVL14>:
  40a788:	f842 5c04 	str.w	r5, [r2, #-4]
  40a78c:	f102 0210 	add.w	r2, r2, #16

0040a790 <.LVL15>:
  40a790:	d8f2      	bhi.n	40a778 <.LVL10>
  40a792:	f1a4 0210 	sub.w	r2, r4, #16

0040a796 <.LVL16>:
  40a796:	f022 020f 	bic.w	r2, r2, #15
  40a79a:	f004 040f 	and.w	r4, r4, #15
  40a79e:	3210      	adds	r2, #16
  40a7a0:	2c03      	cmp	r4, #3
  40a7a2:	4413      	add	r3, r2

0040a7a4 <.LVL17>:
  40a7a4:	d90d      	bls.n	40a7c2 <.LVL22>
  40a7a6:	461e      	mov	r6, r3
  40a7a8:	4622      	mov	r2, r4

0040a7aa <.LVL18>:
  40a7aa:	3a04      	subs	r2, #4

0040a7ac <.LVL19>:
  40a7ac:	2a03      	cmp	r2, #3
  40a7ae:	f846 5b04 	str.w	r5, [r6], #4

0040a7b2 <.LVL20>:
  40a7b2:	d8fa      	bhi.n	40a7aa <.LVL18>
  40a7b4:	1f22      	subs	r2, r4, #4

0040a7b6 <.LVL21>:
  40a7b6:	f022 0203 	bic.w	r2, r2, #3
  40a7ba:	3204      	adds	r2, #4
  40a7bc:	4413      	add	r3, r2
  40a7be:	f004 0403 	and.w	r4, r4, #3

0040a7c2 <.LVL22>:
  40a7c2:	b12c      	cbz	r4, 40a7d0 <.LVL25>
  40a7c4:	b2c9      	uxtb	r1, r1

0040a7c6 <.LVL23>:
  40a7c6:	441c      	add	r4, r3
  40a7c8:	f803 1b01 	strb.w	r1, [r3], #1
  40a7cc:	429c      	cmp	r4, r3
  40a7ce:	d1fb      	bne.n	40a7c8 <.LVL23+0x2>

0040a7d0 <.LVL25>:
  40a7d0:	bc70      	pop	{r4, r5, r6}

0040a7d2 <.LCFI1>:
  40a7d2:	4770      	bx	lr

0040a7d4 <.LCFI2>:
  40a7d4:	4614      	mov	r4, r2
  40a7d6:	4603      	mov	r3, r0
  40a7d8:	e7c2      	b.n	40a760 <.LVL6>

0040a7da <.LFE17>:
  40a7da:	bf00      	nop

Disassembly of section .text.SYS_TIME_AddToList%75:

0040a7dc <SYS_TIME_AddToList>:
    SYS_TIME_TIMER_OBJ* tmr = counter->tmrActive;
  40a7dc:	4b23      	ldr	r3, [pc, #140]	; (40a86c <.LVL71>)
  40a7de:	6b1a      	ldr	r2, [r3, #48]	; 0x30

0040a7e0 <.LVL52>:
    if (newTimer == NULL)
  40a7e0:	2800      	cmp	r0, #0
  40a7e2:	d03f      	beq.n	40a864 <.LCFI6>
{
  40a7e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

0040a7e8 <.LCFI5>:
  40a7e8:	4684      	mov	ip, r0
    newTimerTime = newTimer->relativeTimePending;
  40a7ea:	f8d0 8008 	ldr.w	r8, [r0, #8]

0040a7ee <.LVL53>:
    if (tmr == NULL)
  40a7ee:	b1b2      	cbz	r2, 40a81e <.LVL58>
            if ((total_time + tmr->relativeTimePending) > newTimerTime)
  40a7f0:	6894      	ldr	r4, [r2, #8]
  40a7f2:	2500      	movs	r5, #0
  40a7f4:	4646      	mov	r6, r8
  40a7f6:	2700      	movs	r7, #0
  40a7f8:	42af      	cmp	r7, r5
  40a7fa:	bf08      	it	eq
  40a7fc:	45a0      	cmpeq	r8, r4
  40a7fe:	d328      	bcc.n	40a852 <.LVL65>

0040a800 <.LVL54>:
            tmr = tmr->tmrNext;
  40a800:	6993      	ldr	r3, [r2, #24]

0040a802 <.LVL55>:
        while (tmr != NULL)
  40a802:	b18b      	cbz	r3, 40a828 <.LVL61>
            if ((total_time + tmr->relativeTimePending) > newTimerTime)
  40a804:	6899      	ldr	r1, [r3, #8]
  40a806:	468e      	mov	lr, r1
  40a808:	1860      	adds	r0, r4, r1
  40a80a:	f145 0100 	adc.w	r1, r5, #0
  40a80e:	428f      	cmp	r7, r1
  40a810:	bf08      	it	eq
  40a812:	4286      	cmpeq	r6, r0
  40a814:	d31b      	bcc.n	40a84e <.LVL64>
  40a816:	4604      	mov	r4, r0

0040a818 <.LVL56>:
  40a818:	460d      	mov	r5, r1
            tmr = tmr->tmrNext;
  40a81a:	461a      	mov	r2, r3

0040a81c <.LVL57>:
  40a81c:	e7f0      	b.n	40a800 <.LVL54>

0040a81e <.LVL58>:
        counter->tmrActive = newTimer;
  40a81e:	4b13      	ldr	r3, [pc, #76]	; (40a86c <.LVL71>)
  40a820:	6318      	str	r0, [r3, #48]	; 0x30

0040a822 <.LVL59>:
        isHeadTimerUpdated = true;
  40a822:	2001      	movs	r0, #1

0040a824 <.LVL60>:
  40a824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040a828 <.LVL61>:
            tmr = tmr->tmrNext;
  40a828:	4619      	mov	r1, r3

0040a82a <.LVL62>:
        if (prevTmr == NULL)
  40a82a:	b1a2      	cbz	r2, 40a856 <.LVL66>
            newTimer->tmrNext = prevTmr->tmrNext;
  40a82c:	f8cc 3018 	str.w	r3, [ip, #24]
            prevTmr->tmrNext = newTimer;
  40a830:	f8c2 c018 	str.w	ip, [r2, #24]
    bool isHeadTimerUpdated = false;
  40a834:	2000      	movs	r0, #0

0040a836 <.LVL63>:
        newTimer->relativeTimePending = newTimerTime - total_time;
  40a836:	eba8 0404 	sub.w	r4, r8, r4
  40a83a:	f8cc 4008 	str.w	r4, [ip, #8]
        if (newTimer->tmrNext != NULL)
  40a83e:	f8dc 3018 	ldr.w	r3, [ip, #24]
  40a842:	b18b      	cbz	r3, 40a868 <.LCFI7>
            newTimer->tmrNext->relativeTimePending -= newTimer->relativeTimePending;
  40a844:	689a      	ldr	r2, [r3, #8]
  40a846:	1b14      	subs	r4, r2, r4
  40a848:	609c      	str	r4, [r3, #8]
  40a84a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040a84e <.LVL64>:
            tmr = tmr->tmrNext;
  40a84e:	4619      	mov	r1, r3
  40a850:	e7eb      	b.n	40a82a <.LVL62>

0040a852 <.LVL65>:
            if ((total_time + tmr->relativeTimePending) > newTimerTime)
  40a852:	4611      	mov	r1, r2
  40a854:	2400      	movs	r4, #0

0040a856 <.LVL66>:
            counter->tmrActive = newTimer;
  40a856:	4b05      	ldr	r3, [pc, #20]	; (40a86c <.LVL71>)
  40a858:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
            newTimer->tmrNext = tmr;
  40a85c:	f8cc 1018 	str.w	r1, [ip, #24]

0040a860 <.LVL67>:
            isHeadTimerUpdated = true;
  40a860:	2001      	movs	r0, #1
  40a862:	e7e8      	b.n	40a836 <.LVL63>

0040a864 <.LCFI6>:
        return isHeadTimerUpdated;
  40a864:	2000      	movs	r0, #0

0040a866 <.LVL69>:
  40a866:	4770      	bx	lr

0040a868 <.LCFI7>:
}
  40a868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040a86c <.LVL71>:
  40a86c:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__pic32c_data_initialization%76:

0040a870 <__pic32c_data_initialization>:
  40a870:	4921      	ldr	r1, [pc, #132]	; (40a8f8 <.LFE163+0x88>)
  40a872:	680b      	ldr	r3, [r1, #0]
  40a874:	b430      	push	{r4, r5}
  40a876:	b113      	cbz	r3, 40a87e <__pic32c_data_initialization+0xe>
  40a878:	4b20      	ldr	r3, [pc, #128]	; (40a8fc <.LFE163+0x8c>)
  40a87a:	681a      	ldr	r2, [r3, #0]
  40a87c:	bb72      	cbnz	r2, 40a8dc <__pic32c_data_initialization+0x6c>
  40a87e:	4820      	ldr	r0, [pc, #128]	; (40a900 <.LFE163+0x90>)
  40a880:	2500      	movs	r5, #0
  40a882:	6801      	ldr	r1, [r0, #0]
  40a884:	b9c1      	cbnz	r1, 40a8b8 <__pic32c_data_initialization+0x48>
  40a886:	6842      	ldr	r2, [r0, #4]
  40a888:	b332      	cbz	r2, 40a8d8 <__pic32c_data_initialization+0x68>
  40a88a:	6883      	ldr	r3, [r0, #8]
  40a88c:	300c      	adds	r0, #12
  40a88e:	b1d3      	cbz	r3, 40a8c6 <__pic32c_data_initialization+0x56>
  40a890:	3901      	subs	r1, #1
  40a892:	4603      	mov	r3, r0
  40a894:	f813 4b01 	ldrb.w	r4, [r3], #1
  40a898:	f801 4f01 	strb.w	r4, [r1, #1]!
  40a89c:	1a1c      	subs	r4, r3, r0
  40a89e:	4294      	cmp	r4, r2
  40a8a0:	d3f8      	bcc.n	40a894 <__pic32c_data_initialization+0x24>
  40a8a2:	f012 0303 	ands.w	r3, r2, #3
  40a8a6:	bf18      	it	ne
  40a8a8:	2301      	movne	r3, #1
  40a8aa:	eb03 0292 	add.w	r2, r3, r2, lsr #2
  40a8ae:	eb00 0082 	add.w	r0, r0, r2, lsl #2
  40a8b2:	6801      	ldr	r1, [r0, #0]
  40a8b4:	2900      	cmp	r1, #0
  40a8b6:	d0e6      	beq.n	40a886 <__pic32c_data_initialization+0x16>
  40a8b8:	6884      	ldr	r4, [r0, #8]
  40a8ba:	6842      	ldr	r2, [r0, #4]
  40a8bc:	460b      	mov	r3, r1
  40a8be:	300c      	adds	r0, #12
  40a8c0:	b93c      	cbnz	r4, 40a8d2 <__pic32c_data_initialization+0x62>
  40a8c2:	2a00      	cmp	r2, #0
  40a8c4:	d0dd      	beq.n	40a882 <__pic32c_data_initialization+0x12>
  40a8c6:	441a      	add	r2, r3
  40a8c8:	f803 5b01 	strb.w	r5, [r3], #1
  40a8cc:	4293      	cmp	r3, r2
  40a8ce:	d1fb      	bne.n	40a8c8 <__pic32c_data_initialization+0x58>
  40a8d0:	e7d7      	b.n	40a882 <__pic32c_data_initialization+0x12>
  40a8d2:	2a00      	cmp	r2, #0
  40a8d4:	d1dc      	bne.n	40a890 <__pic32c_data_initialization+0x20>
  40a8d6:	e7e4      	b.n	40a8a2 <__pic32c_data_initialization+0x32>
  40a8d8:	bc30      	pop	{r4, r5}
  40a8da:	4770      	bx	lr
  40a8dc:	428b      	cmp	r3, r1
  40a8de:	d2ce      	bcs.n	40a87e <__pic32c_data_initialization+0xe>
  40a8e0:	43da      	mvns	r2, r3
  40a8e2:	440a      	add	r2, r1
  40a8e4:	f022 0203 	bic.w	r2, r2, #3
  40a8e8:	3204      	adds	r2, #4
  40a8ea:	441a      	add	r2, r3
  40a8ec:	2100      	movs	r1, #0
  40a8ee:	f843 1b04 	str.w	r1, [r3], #4
  40a8f2:	4293      	cmp	r3, r2
  40a8f4:	d1fb      	bne.n	40a8ee <__pic32c_data_initialization+0x7e>
  40a8f6:	e7c2      	b.n	40a87e <__pic32c_data_initialization+0xe>
  40a8f8:	20400488 	.word	0x20400488
  40a8fc:	20400000 	.word	0x20400000
  40a900:	004050a0 	.word	0x004050a0

Disassembly of section .text._malloc_trim_r%77:

0040a904 <_malloc_trim_r>:
  40a904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040a906 <.LCFI0>:
  40a906:	4f21      	ldr	r7, [pc, #132]	; (40a98c <.LVL22+0x6>)
  40a908:	460c      	mov	r4, r1
  40a90a:	4606      	mov	r6, r0
  40a90c:	f001 f856 	bl	40b9bc <.LFE141>

0040a910 <.LVL1>:
  40a910:	68bb      	ldr	r3, [r7, #8]
  40a912:	685d      	ldr	r5, [r3, #4]
  40a914:	f1c4 046f 	rsb	r4, r4, #111	; 0x6f

0040a918 <.LVL2>:
  40a918:	f025 0503 	bic.w	r5, r5, #3

0040a91c <.LVL3>:
  40a91c:	442c      	add	r4, r5
  40a91e:	f024 047f 	bic.w	r4, r4, #127	; 0x7f
  40a922:	3c80      	subs	r4, #128	; 0x80

0040a924 <.LVL4>:
  40a924:	2c7f      	cmp	r4, #127	; 0x7f
  40a926:	dd07      	ble.n	40a938 <.LVL6>
  40a928:	2100      	movs	r1, #0
  40a92a:	4630      	mov	r0, r6
  40a92c:	f001 f86e 	bl	40ba0c <_sbrk_r>

0040a930 <.LVL5>:
  40a930:	68bb      	ldr	r3, [r7, #8]
  40a932:	442b      	add	r3, r5
  40a934:	4298      	cmp	r0, r3
  40a936:	d004      	beq.n	40a942 <.LVL8>

0040a938 <.LVL6>:
  40a938:	4630      	mov	r0, r6
  40a93a:	f001 facf 	bl	40bedc <.LFE144>

0040a93e <.LVL7>:
  40a93e:	2000      	movs	r0, #0
  40a940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040a942 <.LVL8>:
  40a942:	4261      	negs	r1, r4
  40a944:	4630      	mov	r0, r6

0040a946 <.LVL9>:
  40a946:	f001 f861 	bl	40ba0c <_sbrk_r>

0040a94a <.LVL10>:
  40a94a:	3001      	adds	r0, #1

0040a94c <.LVL11>:
  40a94c:	d00d      	beq.n	40a96a <.LVL16>
  40a94e:	4a10      	ldr	r2, [pc, #64]	; (40a990 <.LVL22+0xa>)
  40a950:	68b9      	ldr	r1, [r7, #8]
  40a952:	6813      	ldr	r3, [r2, #0]
  40a954:	1b2d      	subs	r5, r5, r4

0040a956 <.LVL12>:
  40a956:	f045 0501 	orr.w	r5, r5, #1
  40a95a:	4630      	mov	r0, r6

0040a95c <.LVL13>:
  40a95c:	1b1c      	subs	r4, r3, r4

0040a95e <.LVL14>:
  40a95e:	604d      	str	r5, [r1, #4]
  40a960:	6014      	str	r4, [r2, #0]
  40a962:	f001 fabb 	bl	40bedc <.LFE144>

0040a966 <.LVL15>:
  40a966:	2001      	movs	r0, #1
  40a968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040a96a <.LVL16>:
  40a96a:	2100      	movs	r1, #0
  40a96c:	4630      	mov	r0, r6

0040a96e <.LVL17>:
  40a96e:	f001 f84d 	bl	40ba0c <_sbrk_r>

0040a972 <.LVL18>:
  40a972:	68ba      	ldr	r2, [r7, #8]
  40a974:	1a83      	subs	r3, r0, r2

0040a976 <.LVL19>:
  40a976:	2b0f      	cmp	r3, #15
  40a978:	ddde      	ble.n	40a938 <.LVL6>
  40a97a:	4c06      	ldr	r4, [pc, #24]	; (40a994 <.LVL22+0xe>)

0040a97c <.LVL20>:
  40a97c:	4904      	ldr	r1, [pc, #16]	; (40a990 <.LVL22+0xa>)
  40a97e:	6824      	ldr	r4, [r4, #0]
  40a980:	f043 0301 	orr.w	r3, r3, #1

0040a984 <.LVL21>:
  40a984:	1b00      	subs	r0, r0, r4

0040a986 <.LVL22>:
  40a986:	6053      	str	r3, [r2, #4]
  40a988:	6008      	str	r0, [r1, #0]
  40a98a:	e7d5      	b.n	40a938 <.LVL6>
  40a98c:	2040d0b0 	.word	0x2040d0b0
  40a990:	2040dbd4 	.word	0x2040dbd4
  40a994:	2040dcb0 	.word	0x2040dcb0

Disassembly of section .text.PIO_Initialize%78:

0040a998 <PIO_Initialize>:
    See plib_pio.h for more details.
*/
void PIO_Initialize ( void )
{
    /* Selected System IO pins are configured as GPIO */
    MATRIX_REGS->CCFG_SYSIO |= 0x10;
  40a998:	4a20      	ldr	r2, [pc, #128]	; (40aa1c <.LFE2+0x84>)
  40a99a:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  40a99e:	f043 0310 	orr.w	r3, r3, #16
  40a9a2:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114

    /************************ PIO A Initialization ************************/
    /* PORTA PIO Disable and Peripheral Enable*/
    ((pio_registers_t*)PIO_PORT_A)->PIO_PDR = 0x200000;
  40a9a6:	f502 22b1 	add.w	r2, r2, #362496	; 0x58800
  40a9aa:	f502 62c0 	add.w	r2, r2, #1536	; 0x600
  40a9ae:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
  40a9b2:	6053      	str	r3, [r2, #4]
    /* PORTA Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_A)->PIO_PUDR = ~0x800;
  40a9b4:	f46f 6300 	mvn.w	r3, #2048	; 0x800
  40a9b8:	6613      	str	r3, [r2, #96]	; 0x60
    ((pio_registers_t*)PIO_PORT_A)->PIO_PUER = 0x800;
  40a9ba:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40a9be:	6653      	str	r3, [r2, #100]	; 0x64
    /* PORTA Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_A)->PIO_PPDDR = 0xFFFFFFFF;
  40a9c0:	f04f 33ff 	mov.w	r3, #4294967295
  40a9c4:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTA Output Write Enable */
    ((pio_registers_t*)PIO_PORT_A)->PIO_OWER = PIO_OWER_Msk;
  40a9c8:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
    /* PORTA Output Direction Enable */
    ((pio_registers_t*)PIO_PORT_A)->PIO_OER = 0x20;
  40a9cc:	2120      	movs	r1, #32
  40a9ce:	6111      	str	r1, [r2, #16]
    /* PORTA Initial state High */
    ((pio_registers_t*)PIO_PORT_A)->PIO_SODR = 0x20;
  40a9d0:	6311      	str	r1, [r2, #48]	; 0x30

    /************************ PIO B Initialization ************************/
    /* PORTB Peripheral Function Selection */
    ((pio_registers_t*)PIO_PORT_B)->PIO_ABCDSR[0]= 0x10;
  40a9d2:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40a9d6:	2110      	movs	r1, #16
  40a9d8:	6711      	str	r1, [r2, #112]	; 0x70
    ((pio_registers_t*)PIO_PORT_B)->PIO_ABCDSR[1]= 0x10;
  40a9da:	6751      	str	r1, [r2, #116]	; 0x74
    /* PORTB PIO Disable and Peripheral Enable*/
    ((pio_registers_t*)PIO_PORT_B)->PIO_PDR = 0x10;
  40a9dc:	6051      	str	r1, [r2, #4]
    /* PORTB Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_B)->PIO_PUDR = 0xFFFFFFFF;
  40a9de:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTB Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_B)->PIO_PPDDR = 0xFFFFFFFF;
  40a9e0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTB Output Write Enable */
    ((pio_registers_t*)PIO_PORT_B)->PIO_OWER = PIO_OWER_Msk;
  40a9e4:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
    /* PORTB Output Direction Enable */
    ((pio_registers_t*)PIO_PORT_B)->PIO_OER = 0x100;
  40a9e8:	f44f 7180 	mov.w	r1, #256	; 0x100
  40a9ec:	6111      	str	r1, [r2, #16]
    /* PORTB Initial state High */
    ((pio_registers_t*)PIO_PORT_B)->PIO_SODR = 0x100;
  40a9ee:	6311      	str	r1, [r2, #48]	; 0x30

    /************************ PIO C Initialization ************************/
    /* PORTC Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_C)->PIO_PUDR = 0xFFFFFFFF;
  40a9f0:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40a9f4:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTC Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_C)->PIO_PPDDR = 0xFFFFFFFF;
  40a9f6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTC Output Write Enable */
    ((pio_registers_t*)PIO_PORT_C)->PIO_OWER = PIO_OWER_Msk;
  40a9fa:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0

    /************************ PIO D Initialization ************************/
    /* PORTD Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_D)->PIO_PUDR = 0xFFFFFFFF;
  40a9fe:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40aa02:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTD Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_D)->PIO_PPDDR = 0xFFFFFFFF;
  40aa04:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTD Output Write Enable */
    ((pio_registers_t*)PIO_PORT_D)->PIO_OWER = PIO_OWER_Msk;
  40aa08:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0

    /************************ PIO E Initialization ************************/
    /* PORTE Pull Up Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_E)->PIO_PUDR = 0xFFFFFFFF;
  40aa0c:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40aa10:	6613      	str	r3, [r2, #96]	; 0x60
    /* PORTE Pull Down Enable/Disable as per MHC selection */
    ((pio_registers_t*)PIO_PORT_E)->PIO_PPDDR = 0xFFFFFFFF;
  40aa12:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
    /* PORTE Output Write Enable */
    ((pio_registers_t*)PIO_PORT_E)->PIO_OWER = PIO_OWER_Msk;
  40aa16:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  40aa1a:	4770      	bx	lr
  40aa1c:	40088000 	.word	0x40088000

Disassembly of section .text.wc_Md5Update%79:

0040aa20 <wc_Md5Update>:
    if (md5 == NULL || (data == NULL && len > 0)) {
  40aa20:	b3a0      	cbz	r0, 40aa8c <.LCFI4>
{
  40aa22:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

0040aa26 <.LCFI3>:
  40aa26:	460f      	mov	r7, r1
  40aa28:	4615      	mov	r5, r2
  40aa2a:	4606      	mov	r6, r0
    if (md5 == NULL || (data == NULL && len > 0)) {
  40aa2c:	b901      	cbnz	r1, 40aa30 <.LCFI3+0xa>
  40aa2e:	bb82      	cbnz	r2, 40aa92 <.LCFI5>
    local = (byte*)md5->buffer;
  40aa30:	f106 080c 	add.w	r8, r6, #12

0040aa34 <.LVL331>:
    if (md5->buffLen >= MD5_BLOCK_SIZE)
  40aa34:	6833      	ldr	r3, [r6, #0]
  40aa36:	2b3f      	cmp	r3, #63	; 0x3f
  40aa38:	d82f      	bhi.n	40aa9a <.LVL346>
    while (len) {
  40aa3a:	b395      	cbz	r5, 40aaa2 <.LVL348>

0040aa3c <.LBB141>:
            md5->buffLen = 0;
  40aa3c:	f04f 0900 	mov.w	r9, #0
  40aa40:	e002      	b.n	40aa48 <.LBB146>

0040aa42 <.LVL332>:
  40aa42:	f8c6 9000 	str.w	r9, [r6]

0040aa46 <.LBE141>:
    while (len) {
  40aa46:	b1f5      	cbz	r5, 40aa86 <.LBE144>

0040aa48 <.LBB146>:
        word32 add = min(len, MD5_BLOCK_SIZE - md5->buffLen);
  40aa48:	6830      	ldr	r0, [r6, #0]

0040aa4a <.LVL333>:
  40aa4a:	f1c0 0440 	rsb	r4, r0, #64	; 0x40

0040aa4e <.LBB142>:
        return a > b ? b : a;
  40aa4e:	42ac      	cmp	r4, r5
  40aa50:	bf28      	it	cs
  40aa52:	462c      	movcs	r4, r5

0040aa54 <.LBE142>:
        XMEMCPY(&local[md5->buffLen], data, add);
  40aa54:	4622      	mov	r2, r4
  40aa56:	4639      	mov	r1, r7
  40aa58:	4440      	add	r0, r8
  40aa5a:	f7fe fab7 	bl	408fcc <.LFE19>

0040aa5e <.LVL336>:
        md5->buffLen += add;
  40aa5e:	6833      	ldr	r3, [r6, #0]
  40aa60:	4423      	add	r3, r4
  40aa62:	6033      	str	r3, [r6, #0]
        data         += add;
  40aa64:	4427      	add	r7, r4
        len          -= add;
  40aa66:	1b2d      	subs	r5, r5, r4
        if (md5->buffLen == MD5_BLOCK_SIZE) {
  40aa68:	2b40      	cmp	r3, #64	; 0x40
  40aa6a:	d1ec      	bne.n	40aa46 <.LBE141>
            XTRANSFORM(md5, local);
  40aa6c:	4630      	mov	r0, r6
  40aa6e:	f7fc f815 	bl	406a9c <.LFE18>

0040aa72 <.LBB144>:
    word32 tmp = md5->loLen;
  40aa72:	6872      	ldr	r2, [r6, #4]

0040aa74 <.LVL340>:
    if ((md5->loLen += len) < tmp) {
  40aa74:	f102 0340 	add.w	r3, r2, #64	; 0x40
  40aa78:	6073      	str	r3, [r6, #4]
  40aa7a:	429a      	cmp	r2, r3
  40aa7c:	d9e1      	bls.n	40aa42 <.LVL332>
        md5->hiLen++;                       /* carry low to high */
  40aa7e:	68b3      	ldr	r3, [r6, #8]
  40aa80:	3301      	adds	r3, #1
  40aa82:	60b3      	str	r3, [r6, #8]
  40aa84:	e7dd      	b.n	40aa42 <.LVL332>

0040aa86 <.LBE144>:
    return ret;
  40aa86:	2000      	movs	r0, #0
  40aa88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0040aa8c <.LCFI4>:
        return BAD_FUNC_ARG;
  40aa8c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040aa90 <.LVL343>:
  40aa90:	4770      	bx	lr

0040aa92 <.LCFI5>:
  40aa92:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040aa96 <.LVL345>:
  40aa96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0040aa9a <.LVL346>:
        return BUFFER_E;
  40aa9a:	f06f 0083 	mvn.w	r0, #131	; 0x83

0040aa9e <.LVL347>:
  40aa9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0040aaa2 <.LVL348>:
    return ret;
  40aaa2:	2000      	movs	r0, #0

0040aaa4 <.LVL349>:
}
  40aaa4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .text.SYS_TIME_HwTimerCompareUpdate%80:

0040aaa8 <SYS_TIME_HwTimerCompareUpdate>:
{
  40aaa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040aaaa <.LCFI0>:
    SYS_TIME_TIMER_OBJ* tmrActive = counterObj->tmrActive;
  40aaaa:	4b1f      	ldr	r3, [pc, #124]	; (40ab28 <.LVL29+0x8>)
  40aaac:	6b19      	ldr	r1, [r3, #48]	; 0x30

0040aaae <.LVL19>:
    counterObj->hwTimerPreviousValue = counterObj->hwTimerCurrentValue;
  40aaae:	695a      	ldr	r2, [r3, #20]
  40aab0:	611a      	str	r2, [r3, #16]
    if (tmrActive != NULL)
  40aab2:	2900      	cmp	r1, #0
  40aab4:	d02f      	beq.n	40ab16 <.LVL27>
        if (tmrActive->relativeTimePending > SYS_TIME_HW_COUNTER_HALF_PERIOD)
  40aab6:	688c      	ldr	r4, [r1, #8]
  40aab8:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
            nextHwCounterValue = counterObj->hwTimerCurrentValue + SYS_TIME_HW_COUNTER_HALF_PERIOD;
  40aabc:	bf28      	it	cs
  40aabe:	f647 74ff 	movwcs	r4, #32767	; 0x7fff
            nextHwCounterValue = counterObj->hwTimerCurrentValue + tmrActive->relativeTimePending;
  40aac2:	4414      	add	r4, r2
  40aac4:	2500      	movs	r5, #0

0040aac6 <.LVL20>:
    currHwCounterValue = counterObj->timePlib->timerCounterGet();
  40aac6:	4e18      	ldr	r6, [pc, #96]	; (40ab28 <.LVL29+0x8>)
  40aac8:	6873      	ldr	r3, [r6, #4]
  40aaca:	699b      	ldr	r3, [r3, #24]
  40aacc:	4798      	blx	r3

0040aace <.LVL21>:
  40aace:	2100      	movs	r1, #0

0040aad0 <.LVL22>:
    if (currHwCounterValue < counterObj->hwTimerPreviousValue)
  40aad0:	6932      	ldr	r2, [r6, #16]
  40aad2:	2300      	movs	r3, #0
  40aad4:	4299      	cmp	r1, r3
  40aad6:	bf08      	it	eq
  40aad8:	4290      	cmpeq	r0, r2
  40aada:	d204      	bcs.n	40aae6 <.LVL24>
        currHwCounterValue = SYS_TIME_HW_COUNTER_PERIOD + currHwCounterValue;
  40aadc:	f64f 72ff 	movw	r2, #65535	; 0xffff
  40aae0:	2300      	movs	r3, #0
  40aae2:	1880      	adds	r0, r0, r2

0040aae4 <.LVL23>:
  40aae4:	4159      	adcs	r1, r3

0040aae6 <.LVL24>:
    if (nextHwCounterValue  < (currHwCounterValue + counterObj->hwTimerCompareMargin))
  40aae6:	4b10      	ldr	r3, [pc, #64]	; (40ab28 <.LVL29+0x8>)
  40aae8:	6a1b      	ldr	r3, [r3, #32]
  40aaea:	18c6      	adds	r6, r0, r3
  40aaec:	f141 0700 	adc.w	r7, r1, #0
  40aaf0:	42bd      	cmp	r5, r7
  40aaf2:	bf08      	it	eq
  40aaf4:	42b4      	cmpeq	r4, r6
  40aaf6:	d213      	bcs.n	40ab20 <.LVL29>
        counterObj->hwTimerCompareValue = currHwCounterValue + counterObj->hwTimerCompareMargin;
  40aaf8:	4418      	add	r0, r3

0040aafa <.LVL25>:
  40aafa:	4b0b      	ldr	r3, [pc, #44]	; (40ab28 <.LVL29+0x8>)
  40aafc:	61d8      	str	r0, [r3, #28]
    if ((counterObj->hwTimerCompareValue & SYS_TIME_HW_COUNTER_PERIOD) == 0)
  40aafe:	4b0a      	ldr	r3, [pc, #40]	; (40ab28 <.LVL29+0x8>)
  40ab00:	8b9b      	ldrh	r3, [r3, #28]
  40ab02:	b913      	cbnz	r3, 40ab0a <.LVL25+0x10>
        counterObj->hwTimerCompareValue = 1;
  40ab04:	2201      	movs	r2, #1
  40ab06:	4b08      	ldr	r3, [pc, #32]	; (40ab28 <.LVL29+0x8>)
  40ab08:	61da      	str	r2, [r3, #28]
    counterObj->timePlib->timerCompareSet(counterObj->hwTimerCompareValue);
  40ab0a:	4b07      	ldr	r3, [pc, #28]	; (40ab28 <.LVL29+0x8>)
  40ab0c:	685a      	ldr	r2, [r3, #4]
  40ab0e:	68d2      	ldr	r2, [r2, #12]
  40ab10:	69d8      	ldr	r0, [r3, #28]
  40ab12:	4790      	blx	r2
  40ab14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040ab16 <.LVL27>:
        nextHwCounterValue = counterObj->hwTimerCurrentValue + SYS_TIME_HW_COUNTER_HALF_PERIOD;
  40ab16:	f647 74ff 	movw	r4, #32767	; 0x7fff
  40ab1a:	4414      	add	r4, r2
  40ab1c:	2500      	movs	r5, #0

0040ab1e <.LVL28>:
  40ab1e:	e7d2      	b.n	40aac6 <.LVL20>

0040ab20 <.LVL29>:
        counterObj->hwTimerCompareValue = nextHwCounterValue;
  40ab20:	4b01      	ldr	r3, [pc, #4]	; (40ab28 <.LVL29+0x8>)
  40ab22:	61dc      	str	r4, [r3, #28]
  40ab24:	e7eb      	b.n	40aafe <.LVL25+0x4>
  40ab26:	bf00      	nop
  40ab28:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__multadd%81:

0040ab2c <__multadd>:
  40ab2c:	b5f0      	push	{r4, r5, r6, r7, lr}

0040ab2e <.LCFI1>:
  40ab2e:	690c      	ldr	r4, [r1, #16]
  40ab30:	b083      	sub	sp, #12

0040ab32 <.LCFI2>:
  40ab32:	460d      	mov	r5, r1
  40ab34:	4606      	mov	r6, r0

0040ab36 <.LVL13>:
  40ab36:	f101 0e14 	add.w	lr, r1, #20

0040ab3a <.LVL14>:
  40ab3a:	2700      	movs	r7, #0

0040ab3c <.LVL15>:
  40ab3c:	f8de 0000 	ldr.w	r0, [lr]

0040ab40 <.LVL16>:
  40ab40:	b281      	uxth	r1, r0
  40ab42:	fb02 3301 	mla	r3, r2, r1, r3

0040ab46 <.LVL17>:
  40ab46:	0c01      	lsrs	r1, r0, #16
  40ab48:	0c18      	lsrs	r0, r3, #16

0040ab4a <.LVL18>:
  40ab4a:	fb02 0101 	mla	r1, r2, r1, r0

0040ab4e <.LVL19>:
  40ab4e:	b29b      	uxth	r3, r3

0040ab50 <.LVL20>:
  40ab50:	3701      	adds	r7, #1

0040ab52 <.LVL21>:
  40ab52:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40ab56:	42bc      	cmp	r4, r7
  40ab58:	f84e 3b04 	str.w	r3, [lr], #4

0040ab5c <.LVL22>:
  40ab5c:	ea4f 4311 	mov.w	r3, r1, lsr #16

0040ab60 <.LVL23>:
  40ab60:	dcec      	bgt.n	40ab3c <.LVL15>
  40ab62:	b13b      	cbz	r3, 40ab74 <.LVL26+0x4>
  40ab64:	68aa      	ldr	r2, [r5, #8]

0040ab66 <.LVL24>:
  40ab66:	4294      	cmp	r4, r2
  40ab68:	da07      	bge.n	40ab7a <.LCFI4>

0040ab6a <.LVL25>:
  40ab6a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40ab6e:	3401      	adds	r4, #1

0040ab70 <.LVL26>:
  40ab70:	6153      	str	r3, [r2, #20]
  40ab72:	612c      	str	r4, [r5, #16]
  40ab74:	4628      	mov	r0, r5
  40ab76:	b003      	add	sp, #12

0040ab78 <.LCFI3>:
  40ab78:	bdf0      	pop	{r4, r5, r6, r7, pc}

0040ab7a <.LCFI4>:
  40ab7a:	6869      	ldr	r1, [r5, #4]

0040ab7c <.LVL28>:
  40ab7c:	9301      	str	r3, [sp, #4]
  40ab7e:	3101      	adds	r1, #1
  40ab80:	4630      	mov	r0, r6
  40ab82:	f000 fbb9 	bl	40b2f8 <.LFE2>

0040ab86 <.LVL29>:
  40ab86:	692a      	ldr	r2, [r5, #16]
  40ab88:	3202      	adds	r2, #2
  40ab8a:	f105 010c 	add.w	r1, r5, #12
  40ab8e:	4607      	mov	r7, r0

0040ab90 <.LVL30>:
  40ab90:	0092      	lsls	r2, r2, #2
  40ab92:	300c      	adds	r0, #12

0040ab94 <.LVL31>:
  40ab94:	f7fe fa1a 	bl	408fcc <.LFE19>

0040ab98 <.LBB12>:
  40ab98:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40ab9a:	6869      	ldr	r1, [r5, #4]

0040ab9c <.LBE12>:
  40ab9c:	9b01      	ldr	r3, [sp, #4]

0040ab9e <.LBB15>:
  40ab9e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  40aba2:	6028      	str	r0, [r5, #0]
  40aba4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]

0040aba8 <.LBE15>:
  40aba8:	463d      	mov	r5, r7

0040abaa <.LVL34>:
  40abaa:	e7de      	b.n	40ab6a <.LVL25>

Disassembly of section .text.frexp%82:

0040abb0 <frexp>:
  40abb0:	b430      	push	{r4, r5}

0040abb2 <.LCFI0>:
  40abb2:	b082      	sub	sp, #8

0040abb4 <.LCFI1>:
  40abb4:	ed8d 0b00 	vstr	d0, [sp]

0040abb8 <.LBB2>:
  40abb8:	9b01      	ldr	r3, [sp, #4]

0040abba <.LBE2>:
  40abba:	4c1b      	ldr	r4, [pc, #108]	; (40ac28 <.LVL14+0x12>)

0040abbc <.LBB3>:
  40abbc:	9d00      	ldr	r5, [sp, #0]

0040abbe <.LBE3>:
  40abbe:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000

0040abc2 <.LVL3>:
  40abc2:	2200      	movs	r2, #0
  40abc4:	42a1      	cmp	r1, r4
  40abc6:	6002      	str	r2, [r0, #0]
  40abc8:	dc17      	bgt.n	40abfa <.LBE6+0x4>
  40abca:	ea55 0401 	orrs.w	r4, r5, r1
  40abce:	d014      	beq.n	40abfa <.LBE6+0x4>
  40abd0:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40abd4:	db16      	blt.n	40ac04 <.LCFI4>
  40abd6:	4615      	mov	r5, r2

0040abd8 <.LVL4>:
  40abd8:	f023 44ff 	bic.w	r4, r3, #2139095040	; 0x7f800000
  40abdc:	f424 04e0 	bic.w	r4, r4, #7340032	; 0x700000

0040abe0 <.LBB4>:
  40abe0:	e9dd 2300 	ldrd	r2, r3, [sp]
  40abe4:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000

0040abe8 <.LBE4>:
  40abe8:	1509      	asrs	r1, r1, #20

0040abea <.LBB5>:
  40abea:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000

0040abee <.LBE5>:
  40abee:	f2a1 31fe 	subw	r1, r1, #1022	; 0x3fe

0040abf2 <.LBB6>:
  40abf2:	e9cd 2300 	strd	r2, r3, [sp]

0040abf6 <.LBE6>:
  40abf6:	4429      	add	r1, r5
  40abf8:	6001      	str	r1, [r0, #0]
  40abfa:	ed9d 0b00 	vldr	d0, [sp]
  40abfe:	b002      	add	sp, #8

0040ac00 <.LCFI2>:
  40ac00:	bc30      	pop	{r4, r5}

0040ac02 <.LCFI3>:
  40ac02:	4770      	bx	lr

0040ac04 <.LCFI4>:
  40ac04:	ed9f 7b06 	vldr	d7, [pc, #24]	; 40ac20 <.LVL14+0xa>
  40ac08:	ee20 7b07 	vmul.f64	d7, d0, d7
  40ac0c:	ed8d 7b00 	vstr	d7, [sp]

0040ac10 <.LBB7>:
  40ac10:	9b01      	ldr	r3, [sp, #4]

0040ac12 <.LBE7>:
  40ac12:	f06f 0535 	mvn.w	r5, #53	; 0x35

0040ac16 <.LVL14>:
  40ac16:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
  40ac1a:	e7dd      	b.n	40abd8 <.LVL4>
  40ac1c:	f3af 8000 	nop.w
  40ac20:	00000000 	.word	0x00000000
  40ac24:	43500000 	.word	0x43500000
  40ac28:	7fefffff 	.word	0x7fefffff

Disassembly of section .text.CLK_Initialize%83:

0040ac2c <CLK_Initialize>:
Clock Initialize
*********************************************************************************/
void CLK_Initialize( void )
{
    /* Set Flash Wait States and  Enable Code Loop Optimization */
    EFC_REGS->EEFC_FMR = EEFC_FMR_FWS(6) | EEFC_FMR_CLOE_Msk;
  40ac2c:	4a17      	ldr	r2, [pc, #92]	; (40ac8c <.LBE8+0xa>)
  40ac2e:	4b18      	ldr	r3, [pc, #96]	; (40ac90 <.LBE8+0xe>)
  40ac30:	601a      	str	r2, [r3, #0]

0040ac32 <.LBB6>:
    PMC_REGS->CKGR_PLLAR = CKGR_PLLAR_ONE_Msk | CKGR_PLLAR_PLLACOUNT(0x3f) |
  40ac32:	4a18      	ldr	r2, [pc, #96]	; (40ac94 <.LBE8+0x12>)
  40ac34:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40ac38:	629a      	str	r2, [r3, #40]	; 0x28
    while ( (PMC_REGS->PMC_SR & PMC_SR_LOCKA_Msk) != PMC_SR_LOCKA_Msk);
  40ac3a:	461a      	mov	r2, r3
  40ac3c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40ac3e:	f013 0f02 	tst.w	r3, #2
  40ac42:	d0fb      	beq.n	40ac3c <.LBB6+0xa>

0040ac44 <.LBB8>:
    PMC_REGS->PMC_MCKR = (PMC_REGS->PMC_MCKR & ~PMC_MCKR_PRES_Msk) | PMC_MCKR_PRES_CLK_1;
  40ac44:	4a14      	ldr	r2, [pc, #80]	; (40ac98 <.LBE8+0x16>)
  40ac46:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40ac48:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40ac4c:	6313      	str	r3, [r2, #48]	; 0x30
    while ((PMC_REGS->PMC_SR & PMC_SR_MCKRDY_Msk) != PMC_SR_MCKRDY_Msk);
  40ac4e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40ac50:	f013 0f08 	tst.w	r3, #8
  40ac54:	d0fb      	beq.n	40ac4e <.LBB8+0xa>
    PMC_REGS->PMC_MCKR = (PMC_REGS->PMC_MCKR & ~PMC_MCKR_MDIV_Msk) | PMC_MCKR_MDIV_PCK_DIV2;
  40ac56:	4a10      	ldr	r2, [pc, #64]	; (40ac98 <.LBE8+0x16>)
  40ac58:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40ac5a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  40ac5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  40ac62:	6313      	str	r3, [r2, #48]	; 0x30
    while ((PMC_REGS->PMC_SR & PMC_SR_MCKRDY_Msk) != PMC_SR_MCKRDY_Msk);
  40ac64:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40ac66:	f013 0f08 	tst.w	r3, #8
  40ac6a:	d0fb      	beq.n	40ac64 <.LBB8+0x20>
    PMC_REGS->PMC_MCKR = (PMC_REGS->PMC_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_PLLA_CLK;
  40ac6c:	4a0a      	ldr	r2, [pc, #40]	; (40ac98 <.LBE8+0x16>)
  40ac6e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40ac70:	f023 0303 	bic.w	r3, r3, #3
  40ac74:	f043 0302 	orr.w	r3, r3, #2
  40ac78:	6313      	str	r3, [r2, #48]	; 0x30
    while ((PMC_REGS->PMC_SR & PMC_SR_MCKRDY_Msk) != PMC_SR_MCKRDY_Msk);
  40ac7a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40ac7c:	f013 0f08 	tst.w	r3, #8
  40ac80:	d0fb      	beq.n	40ac7a <.LBB8+0x36>

0040ac82 <.LBE8>:




    /* Enable Peripheral Clock */
    PMC_REGS->PMC_PCER0=0x835c00;
  40ac82:	4a06      	ldr	r2, [pc, #24]	; (40ac9c <.LBE8+0x1a>)
  40ac84:	4b04      	ldr	r3, [pc, #16]	; (40ac98 <.LBE8+0x16>)
  40ac86:	611a      	str	r2, [r3, #16]
  40ac88:	4770      	bx	lr
  40ac8a:	bf00      	nop
  40ac8c:	04000600 	.word	0x04000600
  40ac90:	400e0c00 	.word	0x400e0c00
  40ac94:	20183f01 	.word	0x20183f01
  40ac98:	400e0600 	.word	0x400e0600
  40ac9c:	00835c00 	.word	0x00835c00

Disassembly of section .text.APP_ShaRun_Feed%84:

0040aca0 <APP_ShaRun_Feed>:
void APP_ShaRun_Feed(void) {
  40aca0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

0040aca4 <.LCFI6>:
  40aca4:	af00      	add	r7, sp, #0

0040aca6 <.LCFI7>:
  40aca6:	f5ad 7d20 	sub.w	sp, sp, #640	; 0x280
  40acaa:	f10d 057f 	add.w	r5, sp, #127	; 0x7f
  40acae:	f025 057f 	bic.w	r5, r5, #127	; 0x7f
    CRYPT_SHA_Initialize(&sha);
  40acb2:	4628      	mov	r0, r5
  40acb4:	f001 f847 	bl	40bd46 <.LFE0>

0040acb8 <.LVL17>:
    memset(myBuf, 'a', sizeof (myBuf));
  40acb8:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40acbc:	2161      	movs	r1, #97	; 0x61
  40acbe:	4813      	ldr	r0, [pc, #76]	; (40ad0c <.LCFI8+0x4>)
  40acc0:	f7ff fd3e 	bl	40a740 <.LFE25>

0040acc4 <.LVL18>:
    CRYPT_SHA_DataSizeSet(&sha, 512 * 1024);
  40acc4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  40acc8:	4628      	mov	r0, r5
  40acca:	f001 f8bd 	bl	40be48 <.LFE1>

0040acce <.LBB14>:
    return SYS_TIME_CounterGet();
  40acce:	f001 f8fd 	bl	40becc <SYS_TIME_CounterGet>

0040acd2 <.LVL20>:
  40acd2:	4681      	mov	r9, r0

0040acd4 <.LVL21>:
  40acd4:	f44f 7400 	mov.w	r4, #512	; 0x200

0040acd8 <.LBE14>:
        CRYPT_SHA_DataAdd(&sha, myBuf, sizeof (myBuf));
  40acd8:	f8df 8030 	ldr.w	r8, [pc, #48]	; 40ad0c <.LCFI8+0x4>
  40acdc:	f44f 6680 	mov.w	r6, #1024	; 0x400

0040ace0 <.LVL22>:
  40ace0:	4632      	mov	r2, r6
  40ace2:	4641      	mov	r1, r8
  40ace4:	4628      	mov	r0, r5
  40ace6:	f000 ff3d 	bl	40bb64 <.LFE3>

0040acea <.LVL23>:
    for (i = 0; i < 512; i++)
  40acea:	3c01      	subs	r4, #1

0040acec <.LVL24>:
  40acec:	d1f8      	bne.n	40ace0 <.LVL22>
    CRYPT_SHA_Finalize(&sha, appData.sha1_feed_result);
  40acee:	4c08      	ldr	r4, [pc, #32]	; (40ad10 <.LCFI8+0x8>)

0040acf0 <.LVL25>:
  40acf0:	f104 01e0 	add.w	r1, r4, #224	; 0xe0
  40acf4:	4628      	mov	r0, r5
  40acf6:	f000 ff41 	bl	40bb7c <.LFE6>

0040acfa <.LBB16>:
    return SYS_TIME_CounterGet();
  40acfa:	f001 f8e7 	bl	40becc <SYS_TIME_CounterGet>

0040acfe <.LBE16>:
    appData.sha1_feed_timing = hashStop - hashStart;
  40acfe:	eba0 0009 	sub.w	r0, r0, r9
  40ad02:	f8c4 00f4 	str.w	r0, [r4, #244]	; 0xf4
}
  40ad06:	46bd      	mov	sp, r7

0040ad08 <.LCFI8>:
  40ad08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40ad0c:	20400040 	.word	0x20400040
  40ad10:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.APP_Sha256Run_Feed%85:

0040ad14 <APP_Sha256Run_Feed>:
void APP_Sha256Run_Feed(void) {
  40ad14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

0040ad18 <.LCFI9>:
  40ad18:	af00      	add	r7, sp, #0

0040ad1a <.LCFI10>:
  40ad1a:	f5ad 7d20 	sub.w	sp, sp, #640	; 0x280
  40ad1e:	f10d 057f 	add.w	r5, sp, #127	; 0x7f
  40ad22:	f025 057f 	bic.w	r5, r5, #127	; 0x7f
    CRYPT_SHA256_Initialize(&sha256);
  40ad26:	4628      	mov	r0, r5
  40ad28:	f001 f815 	bl	40bd56 <.LFE4>

0040ad2c <.LVL28>:
    memset(myBuf, 'a', sizeof (myBuf));
  40ad2c:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40ad30:	2161      	movs	r1, #97	; 0x61
  40ad32:	4813      	ldr	r0, [pc, #76]	; (40ad80 <.LCFI11+0x4>)
  40ad34:	f7ff fd04 	bl	40a740 <.LFE25>

0040ad38 <.LVL29>:
    CRYPT_SHA256_DataSizeSet(&sha256, 512 * 1024);
  40ad38:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  40ad3c:	4628      	mov	r0, r5
  40ad3e:	f001 f889 	bl	40be54 <.LFE5>

0040ad42 <.LBB22>:
    return SYS_TIME_CounterGet();
  40ad42:	f001 f8c3 	bl	40becc <SYS_TIME_CounterGet>

0040ad46 <.LVL31>:
  40ad46:	4681      	mov	r9, r0

0040ad48 <.LVL32>:
  40ad48:	f44f 7400 	mov.w	r4, #512	; 0x200

0040ad4c <.LBE22>:
        CRYPT_SHA256_DataAdd(&sha256, myBuf, sizeof (myBuf));
  40ad4c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 40ad80 <.LCFI11+0x4>
  40ad50:	f44f 6680 	mov.w	r6, #1024	; 0x400

0040ad54 <.LVL33>:
  40ad54:	4632      	mov	r2, r6
  40ad56:	4641      	mov	r1, r8
  40ad58:	4628      	mov	r0, r5
  40ad5a:	f000 ff1b 	bl	40bb94 <.LFE7>

0040ad5e <.LVL34>:
    for (i = 0; i < 512; i++) {
  40ad5e:	3c01      	subs	r4, #1

0040ad60 <.LVL35>:
  40ad60:	d1f8      	bne.n	40ad54 <.LVL33>
    CRYPT_SHA256_Finalize(&sha256, appData.sha256_feed_result);
  40ad62:	4c08      	ldr	r4, [pc, #32]	; (40ad84 <.LCFI11+0x8>)

0040ad64 <.LVL36>:
  40ad64:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
  40ad68:	4628      	mov	r0, r5
  40ad6a:	f000 ff1f 	bl	40bbac <.LFE10>

0040ad6e <.LBB24>:
    return SYS_TIME_CounterGet();
  40ad6e:	f001 f8ad 	bl	40becc <SYS_TIME_CounterGet>

0040ad72 <.LBE24>:
    appData.sha256_feed_timing = hashStop - hashStart;
  40ad72:	eba0 0009 	sub.w	r0, r0, r9
  40ad76:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
}
  40ad7a:	46bd      	mov	sp, r7

0040ad7c <.LCFI11>:
  40ad7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40ad80:	20400040 	.word	0x20400040
  40ad84:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text%86:

0040ad88 <__do_global_dtors_aux>:
  40ad88:	b510      	push	{r4, lr}
  40ad8a:	4c05      	ldr	r4, [pc, #20]	; (40ada0 <.LFE167+0x18>)
  40ad8c:	7823      	ldrb	r3, [r4, #0]
  40ad8e:	b933      	cbnz	r3, 40ad9e <__do_global_dtors_aux+0x16>
  40ad90:	4b04      	ldr	r3, [pc, #16]	; (40ada4 <.LFE167+0x1c>)
  40ad92:	b113      	cbz	r3, 40ad9a <__do_global_dtors_aux+0x12>
  40ad94:	4804      	ldr	r0, [pc, #16]	; (40ada8 <.LFE167+0x20>)
  40ad96:	f3af 8000 	nop.w
  40ad9a:	2301      	movs	r3, #1
  40ad9c:	7023      	strb	r3, [r4, #0]
  40ad9e:	bd10      	pop	{r4, pc}
  40ada0:	2040dc1c 	.word	0x2040dc1c
	...

0040adac <frame_dummy>:
  40adac:	4b0c      	ldr	r3, [pc, #48]	; (40ade0 <frame_dummy+0x34>)
  40adae:	b143      	cbz	r3, 40adc2 <frame_dummy+0x16>
  40adb0:	480c      	ldr	r0, [pc, #48]	; (40ade4 <frame_dummy+0x38>)
  40adb2:	490d      	ldr	r1, [pc, #52]	; (40ade8 <frame_dummy+0x3c>)
  40adb4:	b510      	push	{r4, lr}
  40adb6:	f3af 8000 	nop.w
  40adba:	480c      	ldr	r0, [pc, #48]	; (40adec <frame_dummy+0x40>)
  40adbc:	6803      	ldr	r3, [r0, #0]
  40adbe:	b923      	cbnz	r3, 40adca <frame_dummy+0x1e>
  40adc0:	bd10      	pop	{r4, pc}
  40adc2:	480a      	ldr	r0, [pc, #40]	; (40adec <frame_dummy+0x40>)
  40adc4:	6803      	ldr	r3, [r0, #0]
  40adc6:	b933      	cbnz	r3, 40add6 <frame_dummy+0x2a>
  40adc8:	4770      	bx	lr
  40adca:	4b09      	ldr	r3, [pc, #36]	; (40adf0 <frame_dummy+0x44>)
  40adcc:	2b00      	cmp	r3, #0
  40adce:	d0f7      	beq.n	40adc0 <frame_dummy+0x14>
  40add0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40add4:	4718      	bx	r3
  40add6:	4b06      	ldr	r3, [pc, #24]	; (40adf0 <frame_dummy+0x44>)
  40add8:	2b00      	cmp	r3, #0
  40adda:	d0f5      	beq.n	40adc8 <frame_dummy+0x1c>
  40addc:	4718      	bx	r3
  40adde:	bf00      	nop
	...
  40ade8:	2040dc20 	.word	0x2040dc20
	...

Disassembly of section .text.APP_Md5Run_Feed%87:

0040adf4 <APP_Md5Run_Feed>:
void APP_Md5Run_Feed(void) {
  40adf4:	b570      	push	{r4, r5, r6, lr}

0040adf6 <.LCFI3>:
  40adf6:	f5ad 6db7 	sub.w	sp, sp, #1464	; 0x5b8

0040adfa <.LCFI4>:
    CRYPT_MD5_Initialize(&md5);
  40adfa:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40adfe:	f000 ff99 	bl	40bd34 <.LBE48>

0040ae02 <.LVL6>:
    memset(myBuf, 'a', 1024);
  40ae02:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40ae06:	2161      	movs	r1, #97	; 0x61
  40ae08:	4668      	mov	r0, sp
  40ae0a:	f7ff fc99 	bl	40a740 <.LFE25>

0040ae0e <.LVL7>:
    CRYPT_MD5_DataSizeSet(&md5, 512 * 1024);
  40ae0e:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  40ae12:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40ae16:	f001 f811 	bl	40be3c <.LFE173>

0040ae1a <.LBB6>:
    return SYS_TIME_CounterGet();
  40ae1a:	f001 f857 	bl	40becc <SYS_TIME_CounterGet>

0040ae1e <.LVL9>:
  40ae1e:	4606      	mov	r6, r0

0040ae20 <.LVL10>:
  40ae20:	f44f 7400 	mov.w	r4, #512	; 0x200

0040ae24 <.LBE6>:
        CRYPT_MD5_DataAdd(&md5, myBuf, sizeof (myBuf));
  40ae24:	f44f 6580 	mov.w	r5, #1024	; 0x400

0040ae28 <.LVL11>:
  40ae28:	462a      	mov	r2, r5
  40ae2a:	4669      	mov	r1, sp
  40ae2c:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40ae30:	f000 fe80 	bl	40bb34 <CRYPT_MD5_DataAdd>

0040ae34 <.LVL12>:
    for (i = 0; i < 512; i++)
  40ae34:	3c01      	subs	r4, #1

0040ae36 <.LVL13>:
  40ae36:	d1f7      	bne.n	40ae28 <.LVL11>
    CRYPT_MD5_Finalize(&md5, appData.md5_feed_result);
  40ae38:	4c07      	ldr	r4, [pc, #28]	; (40ae58 <.LCFI5+0x4>)

0040ae3a <.LVL14>:
  40ae3a:	f104 01cc 	add.w	r1, r4, #204	; 0xcc
  40ae3e:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40ae42:	f000 fe83 	bl	40bb4c <.LFE2>

0040ae46 <.LBB8>:
    return SYS_TIME_CounterGet();
  40ae46:	f001 f841 	bl	40becc <SYS_TIME_CounterGet>

0040ae4a <.LBE8>:
    appData.md5_feed_timing = hashStop - hashStart;
  40ae4a:	1b80      	subs	r0, r0, r6
  40ae4c:	f8c4 00dc 	str.w	r0, [r4, #220]	; 0xdc
}
  40ae50:	f50d 6db7 	add.w	sp, sp, #1464	; 0x5b8

0040ae54 <.LCFI5>:
  40ae54:	bd70      	pop	{r4, r5, r6, pc}
  40ae56:	bf00      	nop
  40ae58:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.wc_InitSha256_ex%88:

0040ae5c <wc_InitSha256_ex>:
        if (sha256 == NULL)
  40ae5c:	b300      	cbz	r0, 40aea0 <.LCFI4>
    {
  40ae5e:	b510      	push	{r4, lr}

0040ae60 <.LCFI3>:
  40ae60:	4604      	mov	r4, r0
        sha256->heap = heap;
  40ae62:	66c1      	str	r1, [r0, #108]	; 0x6c

0040ae64 <.LBB181>:
    XMEMSET(sha256->digest, 0, sizeof(sha256->digest));
  40ae64:	2220      	movs	r2, #32

0040ae66 <.LVL42>:
  40ae66:	2100      	movs	r1, #0

0040ae68 <.LVL43>:
  40ae68:	f7ff fc6a 	bl	40a740 <.LFE25>

0040ae6c <.LVL44>:
    sha256->digest[0] = 0x6A09E667L;
  40ae6c:	4b0e      	ldr	r3, [pc, #56]	; (40aea8 <.LVL47+0x4>)
  40ae6e:	6023      	str	r3, [r4, #0]
    sha256->digest[1] = 0xBB67AE85L;
  40ae70:	4b0e      	ldr	r3, [pc, #56]	; (40aeac <.LVL47+0x8>)
  40ae72:	6063      	str	r3, [r4, #4]
    sha256->digest[2] = 0x3C6EF372L;
  40ae74:	4b0e      	ldr	r3, [pc, #56]	; (40aeb0 <.LVL47+0xc>)
  40ae76:	60a3      	str	r3, [r4, #8]
    sha256->digest[3] = 0xA54FF53AL;
  40ae78:	4b0e      	ldr	r3, [pc, #56]	; (40aeb4 <.LVL47+0x10>)
  40ae7a:	60e3      	str	r3, [r4, #12]
    sha256->digest[4] = 0x510E527FL;
  40ae7c:	4b0e      	ldr	r3, [pc, #56]	; (40aeb8 <.LVL47+0x14>)
  40ae7e:	6123      	str	r3, [r4, #16]
    sha256->digest[5] = 0x9B05688CL;
  40ae80:	4b0e      	ldr	r3, [pc, #56]	; (40aebc <.LVL47+0x18>)
  40ae82:	6163      	str	r3, [r4, #20]
    sha256->digest[6] = 0x1F83D9ABL;
  40ae84:	4b0e      	ldr	r3, [pc, #56]	; (40aec0 <.LVL47+0x1c>)
  40ae86:	61a3      	str	r3, [r4, #24]
    sha256->digest[7] = 0x5BE0CD19L;
  40ae88:	f103 5374 	add.w	r3, r3, #1023410176	; 0x3d000000
  40ae8c:	f5a3 0323 	sub.w	r3, r3, #10682368	; 0xa30000
  40ae90:	f6a3 4392 	subw	r3, r3, #3218	; 0xc92
  40ae94:	61e3      	str	r3, [r4, #28]
    sha256->buffLen = 0;
  40ae96:	2000      	movs	r0, #0
  40ae98:	6620      	str	r0, [r4, #96]	; 0x60
    sha256->loLen   = 0;
  40ae9a:	6660      	str	r0, [r4, #100]	; 0x64
    sha256->hiLen   = 0;
  40ae9c:	66a0      	str	r0, [r4, #104]	; 0x68

0040ae9e <.LBE181>:
  40ae9e:	bd10      	pop	{r4, pc}

0040aea0 <.LCFI4>:
            return BAD_FUNC_ARG;
  40aea0:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040aea4 <.LVL47>:
  40aea4:	4770      	bx	lr
  40aea6:	bf00      	nop
  40aea8:	6a09e667 	.word	0x6a09e667
  40aeac:	bb67ae85 	.word	0xbb67ae85
  40aeb0:	3c6ef372 	.word	0x3c6ef372
  40aeb4:	a54ff53a 	.word	0xa54ff53a
  40aeb8:	510e527f 	.word	0x510e527f
  40aebc:	9b05688c 	.word	0x9b05688c
  40aec0:	1f83d9ab 	.word	0x1f83d9ab

Disassembly of section .text.strncpy%89:

0040aec4 <strncpy>:
  40aec4:	ea40 0301 	orr.w	r3, r0, r1
  40aec8:	f013 0f03 	tst.w	r3, #3
  40aecc:	b470      	push	{r4, r5, r6}

0040aece <.LCFI0>:
  40aece:	4603      	mov	r3, r0
  40aed0:	d024      	beq.n	40af1c <.LVL16>

0040aed2 <.LVL1>:
  40aed2:	b1a2      	cbz	r2, 40aefe <.LVL11+0xa>
  40aed4:	780c      	ldrb	r4, [r1, #0]
  40aed6:	701c      	strb	r4, [r3, #0]
  40aed8:	3a01      	subs	r2, #1

0040aeda <.LVL3>:
  40aeda:	3301      	adds	r3, #1
  40aedc:	3101      	adds	r1, #1
  40aede:	b13c      	cbz	r4, 40aef0 <.LVL10>

0040aee0 <.LVL6>:
  40aee0:	b16a      	cbz	r2, 40aefe <.LVL11+0xa>
  40aee2:	f811 4b01 	ldrb.w	r4, [r1], #1

0040aee6 <.LVL7>:
  40aee6:	f803 4b01 	strb.w	r4, [r3], #1

0040aeea <.LVL8>:
  40aeea:	3a01      	subs	r2, #1

0040aeec <.LVL9>:
  40aeec:	2c00      	cmp	r4, #0
  40aeee:	d1f7      	bne.n	40aee0 <.LVL6>

0040aef0 <.LVL10>:
  40aef0:	b12a      	cbz	r2, 40aefe <.LVL11+0xa>
  40aef2:	441a      	add	r2, r3

0040aef4 <.LVL11>:
  40aef4:	2100      	movs	r1, #0
  40aef6:	f803 1b01 	strb.w	r1, [r3], #1
  40aefa:	429a      	cmp	r2, r3
  40aefc:	d1fb      	bne.n	40aef6 <.LVL11+0x2>
  40aefe:	bc70      	pop	{r4, r5, r6}

0040af00 <.LCFI1>:
  40af00:	4770      	bx	lr

0040af02 <.LCFI2>:
  40af02:	460e      	mov	r6, r1

0040af04 <.LVL14>:
  40af04:	f851 5b04 	ldr.w	r5, [r1], #4
  40af08:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
  40af0c:	ea24 0405 	bic.w	r4, r4, r5
  40af10:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  40af14:	d105      	bne.n	40af22 <.LVL17>
  40af16:	f843 5b04 	str.w	r5, [r3], #4

0040af1a <.LVL15>:
  40af1a:	3a04      	subs	r2, #4

0040af1c <.LVL16>:
  40af1c:	2a03      	cmp	r2, #3
  40af1e:	d8f0      	bhi.n	40af02 <.LCFI2>
  40af20:	e7d7      	b.n	40aed2 <.LVL1>

0040af22 <.LVL17>:
  40af22:	4631      	mov	r1, r6
  40af24:	e7d6      	b.n	40aed4 <.LVL1+0x2>

0040af26 <.LFE0>:
  40af26:	bf00      	nop

Disassembly of section .text.SYS_Initialize%90:

0040af28 <SYS_Initialize>:

  Remarks:
 */

void SYS_Initialize ( void* data )
{
  40af28:	b510      	push	{r4, lr}

0040af2a <.LCFI0>:
    CLK_Initialize();
  40af2a:	f7ff fe7f 	bl	40ac2c <.LFE0>

0040af2e <.LVL1>:
	PIO_Initialize();
  40af2e:	f7ff fd33 	bl	40a998 <.LFE2>

0040af32 <.LVL2>:


    NVIC_Initialize();
  40af32:	f000 fad9 	bl	40b4e8 <NVIC_Initialize>

0040af36 <.LVL3>:
	RSWDT_REGS->RSWDT_MR = RSWDT_MR_WDDIS_Msk;	// Disable RSWDT 
  40af36:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40af3a:	4a0e      	ldr	r2, [pc, #56]	; (40af74 <.LVL10+0x2>)
  40af3c:	6053      	str	r3, [r2, #4]

	WDT_REGS->WDT_MR = WDT_MR_WDDIS_Msk; 		// Disable WDT 
  40af3e:	3ab0      	subs	r2, #176	; 0xb0
  40af40:	6053      	str	r3, [r2, #4]

	BSP_Initialize();
  40af42:	f7fe fe91 	bl	409c68 <.LBE840>

0040af46 <.LVL4>:
 
    TC0_CH0_TimerInitialize(); 
  40af46:	f000 fd25 	bl	40b994 <.LFE1>

0040af4a <.LVL5>:
     
    
	USART1_Initialize();
  40af4a:	f000 fba5 	bl	40b698 <.LFE186>

0040af4e <.LVL6>:



    sysObj.sysConsole0 = SYS_CONSOLE_Initialize(SYS_CONSOLE_INDEX_0, (SYS_MODULE_INIT *)&consUsartInit0);
  40af4e:	490a      	ldr	r1, [pc, #40]	; (40af78 <.LVL10+0x6>)
  40af50:	2000      	movs	r0, #0
  40af52:	f000 f9f7 	bl	40b344 <.LFE17>

0040af56 <.LVL7>:
  40af56:	4c09      	ldr	r4, [pc, #36]	; (40af7c <.LVL10+0xa>)
  40af58:	6020      	str	r0, [r4, #0]
    sysObj.sysDebug = SYS_DEBUG_Initialize(SYS_DEBUG_INDEX_0, (SYS_MODULE_INIT*)&debugInit);
  40af5a:	4909      	ldr	r1, [pc, #36]	; (40af80 <.LVL10+0xe>)
  40af5c:	2000      	movs	r0, #0
  40af5e:	f000 fd77 	bl	40ba50 <.LFE168>

0040af62 <.LVL8>:
  40af62:	6060      	str	r0, [r4, #4]

    sysObj.sysTime = SYS_TIME_Initialize(SYS_TIME_INDEX_0, (SYS_MODULE_INIT *)&sysTimeInitData);
  40af64:	4907      	ldr	r1, [pc, #28]	; (40af84 <.LVL10+0x12>)
  40af66:	2000      	movs	r0, #0
  40af68:	f7ff faf8 	bl	40a55c <.LFE0>

0040af6c <.LVL9>:
  40af6c:	60a0      	str	r0, [r4, #8]


    APP_Initialize();
  40af6e:	f000 ff5f 	bl	40be30 <APP_Initialize>

0040af72 <.LVL10>:
  40af72:	bd10      	pop	{r4, pc}
  40af74:	400e1900 	.word	0x400e1900
  40af78:	2040dc88 	.word	0x2040dc88
  40af7c:	20400000 	.word	0x20400000
  40af80:	2040dc98 	.word	0x2040dc98
  40af84:	2040dc90 	.word	0x2040dc90

Disassembly of section .text.memcmp%91:

0040af88 <memcmp>:
  40af88:	2a03      	cmp	r2, #3
  40af8a:	b470      	push	{r4, r5, r6}

0040af8c <.LCFI0>:
  40af8c:	d922      	bls.n	40afd4 <.LVL11>
  40af8e:	ea40 0301 	orr.w	r3, r0, r1
  40af92:	079b      	lsls	r3, r3, #30
  40af94:	d011      	beq.n	40afba <.LCFI2>

0040af96 <.LVL1>:
  40af96:	7803      	ldrb	r3, [r0, #0]
  40af98:	780c      	ldrb	r4, [r1, #0]
  40af9a:	42a3      	cmp	r3, r4
  40af9c:	d11d      	bne.n	40afda <.LVL11+0x6>
  40af9e:	440a      	add	r2, r1
  40afa0:	3101      	adds	r1, #1
  40afa2:	e005      	b.n	40afb0 <.LVL4>

0040afa4 <.LVL2>:
  40afa4:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  40afa8:	f811 4b01 	ldrb.w	r4, [r1], #1

0040afac <.LVL3>:
  40afac:	42a3      	cmp	r3, r4
  40afae:	d114      	bne.n	40afda <.LVL11+0x6>

0040afb0 <.LVL4>:
  40afb0:	4291      	cmp	r1, r2
  40afb2:	d1f7      	bne.n	40afa4 <.LVL2>

0040afb4 <.LVL5>:
  40afb4:	2000      	movs	r0, #0
  40afb6:	bc70      	pop	{r4, r5, r6}

0040afb8 <.LCFI1>:
  40afb8:	4770      	bx	lr

0040afba <.LCFI2>:
  40afba:	680d      	ldr	r5, [r1, #0]
  40afbc:	6806      	ldr	r6, [r0, #0]
  40afbe:	42ae      	cmp	r6, r5
  40afc0:	460c      	mov	r4, r1
  40afc2:	4603      	mov	r3, r0

0040afc4 <.LVL7>:
  40afc4:	f101 0104 	add.w	r1, r1, #4

0040afc8 <.LVL8>:
  40afc8:	f100 0004 	add.w	r0, r0, #4

0040afcc <.LVL9>:
  40afcc:	d108      	bne.n	40afe0 <.LCFI4>
  40afce:	3a04      	subs	r2, #4

0040afd0 <.LVL10>:
  40afd0:	2a03      	cmp	r2, #3
  40afd2:	d8f2      	bhi.n	40afba <.LCFI2>

0040afd4 <.LVL11>:
  40afd4:	2a00      	cmp	r2, #0
  40afd6:	d1de      	bne.n	40af96 <.LVL1>
  40afd8:	e7ec      	b.n	40afb4 <.LVL5>
  40afda:	1b18      	subs	r0, r3, r4
  40afdc:	bc70      	pop	{r4, r5, r6}

0040afde <.LCFI3>:
  40afde:	4770      	bx	lr

0040afe0 <.LCFI4>:
  40afe0:	4621      	mov	r1, r4

0040afe2 <.LVL13>:
  40afe2:	4618      	mov	r0, r3

0040afe4 <.LVL14>:
  40afe4:	e7d7      	b.n	40af96 <.LVL1>

0040afe6 <.LFE0>:
  40afe6:	bf00      	nop

Disassembly of section .text.__lo0bits%92:

0040afe8 <__lo0bits>:
  40afe8:	6803      	ldr	r3, [r0, #0]

0040afea <.LVL80>:
  40afea:	f013 0207 	ands.w	r2, r3, #7
  40afee:	4601      	mov	r1, r0
  40aff0:	d007      	beq.n	40b002 <.LVL84>
  40aff2:	07da      	lsls	r2, r3, #31
  40aff4:	d421      	bmi.n	40b03a <.LVL100>
  40aff6:	0798      	lsls	r0, r3, #30

0040aff8 <.LVL81>:
  40aff8:	d421      	bmi.n	40b03e <.LVL101+0x2>
  40affa:	089b      	lsrs	r3, r3, #2

0040affc <.LVL82>:
  40affc:	600b      	str	r3, [r1, #0]

0040affe <.LVL83>:
  40affe:	2002      	movs	r0, #2
  40b000:	4770      	bx	lr

0040b002 <.LVL84>:
  40b002:	b298      	uxth	r0, r3

0040b004 <.LVL85>:
  40b004:	b198      	cbz	r0, 40b02e <.LVL96>
  40b006:	4610      	mov	r0, r2

0040b008 <.LVL86>:
  40b008:	f013 0fff 	tst.w	r3, #255	; 0xff
  40b00c:	bf04      	itt	eq
  40b00e:	0a1b      	lsreq	r3, r3, #8

0040b010 <.LVL87>:
  40b010:	3008      	addeq	r0, #8

0040b012 <.LVL88>:
  40b012:	071a      	lsls	r2, r3, #28
  40b014:	bf04      	itt	eq
  40b016:	091b      	lsreq	r3, r3, #4

0040b018 <.LVL89>:
  40b018:	3004      	addeq	r0, #4

0040b01a <.LVL90>:
  40b01a:	079a      	lsls	r2, r3, #30
  40b01c:	bf04      	itt	eq
  40b01e:	089b      	lsreq	r3, r3, #2

0040b020 <.LVL91>:
  40b020:	3002      	addeq	r0, #2

0040b022 <.LVL92>:
  40b022:	07da      	lsls	r2, r3, #31
  40b024:	d407      	bmi.n	40b036 <.LVL99>

0040b026 <.LVL93>:
  40b026:	085b      	lsrs	r3, r3, #1

0040b028 <.LVL94>:
  40b028:	d104      	bne.n	40b034 <.LVL98>
  40b02a:	2020      	movs	r0, #32

0040b02c <.LVL95>:
  40b02c:	4770      	bx	lr

0040b02e <.LVL96>:
  40b02e:	0c1b      	lsrs	r3, r3, #16
  40b030:	2010      	movs	r0, #16
  40b032:	e7e9      	b.n	40b008 <.LVL86>

0040b034 <.LVL98>:
  40b034:	3001      	adds	r0, #1

0040b036 <.LVL99>:
  40b036:	600b      	str	r3, [r1, #0]
  40b038:	4770      	bx	lr

0040b03a <.LVL100>:
  40b03a:	2000      	movs	r0, #0

0040b03c <.LVL101>:
  40b03c:	4770      	bx	lr
  40b03e:	085b      	lsrs	r3, r3, #1

0040b040 <.LVL102>:
  40b040:	600b      	str	r3, [r1, #0]

0040b042 <.LVL103>:
  40b042:	2001      	movs	r0, #1
  40b044:	4770      	bx	lr

0040b046 <.LFE22>:
  40b046:	bf00      	nop

Disassembly of section .text._calloc_r%93:

0040b048 <_calloc_r>:
  40b048:	b510      	push	{r4, lr}

0040b04a <.LCFI0>:
  40b04a:	fb02 f101 	mul.w	r1, r2, r1

0040b04e <.LVL1>:
  40b04e:	f7fc f895 	bl	40717c <.LFE14>

0040b052 <.LVL2>:
  40b052:	4604      	mov	r4, r0
  40b054:	b1d8      	cbz	r0, 40b08e <.LBE2>

0040b056 <.LVL3>:
  40b056:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40b05a:	f022 0203 	bic.w	r2, r2, #3

0040b05e <.LBB2>:
  40b05e:	3a04      	subs	r2, #4

0040b060 <.LVL5>:
  40b060:	2a24      	cmp	r2, #36	; 0x24
  40b062:	d818      	bhi.n	40b096 <.LBE4>

0040b064 <.LBB3>:
  40b064:	2a13      	cmp	r2, #19
  40b066:	d914      	bls.n	40b092 <.LBB4>

0040b068 <.LVL7>:
  40b068:	2300      	movs	r3, #0
  40b06a:	2a1b      	cmp	r2, #27
  40b06c:	6003      	str	r3, [r0, #0]

0040b06e <.LVL8>:
  40b06e:	6043      	str	r3, [r0, #4]
  40b070:	d916      	bls.n	40b0a0 <.LBB5>

0040b072 <.LVL9>:
  40b072:	2a24      	cmp	r2, #36	; 0x24
  40b074:	6083      	str	r3, [r0, #8]

0040b076 <.LVL10>:
  40b076:	60c3      	str	r3, [r0, #12]
  40b078:	bf11      	iteee	ne
  40b07a:	f100 0210 	addne.w	r2, r0, #16

0040b07e <.LVL11>:
  40b07e:	6103      	streq	r3, [r0, #16]
  40b080:	6143      	streq	r3, [r0, #20]
  40b082:	f100 0218 	addeq.w	r2, r0, #24

0040b086 <.LVL12>:
  40b086:	2300      	movs	r3, #0
  40b088:	6013      	str	r3, [r2, #0]

0040b08a <.LVL13>:
  40b08a:	6053      	str	r3, [r2, #4]
  40b08c:	6093      	str	r3, [r2, #8]

0040b08e <.LBE2>:
  40b08e:	4620      	mov	r0, r4

0040b090 <.LVL15>:
  40b090:	bd10      	pop	{r4, pc}

0040b092 <.LBB4>:
  40b092:	4602      	mov	r2, r0

0040b094 <.LVL17>:
  40b094:	e7f7      	b.n	40b086 <.LVL12>

0040b096 <.LBE4>:
  40b096:	2100      	movs	r1, #0
  40b098:	f7ff fb52 	bl	40a740 <.LFE25>

0040b09c <.LBE6>:
  40b09c:	4620      	mov	r0, r4
  40b09e:	bd10      	pop	{r4, pc}

0040b0a0 <.LBB5>:
  40b0a0:	f100 0208 	add.w	r2, r0, #8

0040b0a4 <.LVL21>:
  40b0a4:	e7ef      	b.n	40b086 <.LVL12>

0040b0a6 <.LBE5>:
  40b0a6:	bf00      	nop

Disassembly of section .text.APP_Sha384Run_Feed%94:

0040b0a8 <APP_Sha384Run_Feed>:
void APP_Sha384Run_Feed(void) {
  40b0a8:	b570      	push	{r4, r5, r6, lr}

0040b0aa <.LCFI12>:
  40b0aa:	f5ad 6da0 	sub.w	sp, sp, #1280	; 0x500

0040b0ae <.LCFI13>:
    CRYPT_SHA384_Initialize(&sha384);
  40b0ae:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40b0b2:	f000 fe58 	bl	40bd66 <.LFE8>

0040b0b6 <.LVL39>:
    memset(myBuf, 'a', 1024);
  40b0b6:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40b0ba:	2161      	movs	r1, #97	; 0x61
  40b0bc:	4668      	mov	r0, sp
  40b0be:	f7ff fb3f 	bl	40a740 <.LFE25>

0040b0c2 <.LBB30>:
    return SYS_TIME_CounterGet();
  40b0c2:	f000 ff03 	bl	40becc <SYS_TIME_CounterGet>

0040b0c6 <.LVL41>:
  40b0c6:	4606      	mov	r6, r0

0040b0c8 <.LVL42>:
  40b0c8:	f44f 7400 	mov.w	r4, #512	; 0x200

0040b0cc <.LBE30>:
        CRYPT_SHA384_DataAdd(&sha384, myBuf, sizeof (myBuf));
  40b0cc:	f44f 6580 	mov.w	r5, #1024	; 0x400

0040b0d0 <.LVL43>:
  40b0d0:	462a      	mov	r2, r5
  40b0d2:	4669      	mov	r1, sp
  40b0d4:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40b0d8:	f000 fd74 	bl	40bbc4 <.LFE11>

0040b0dc <.LVL44>:
    for (i = 0; i < 512; i++)
  40b0dc:	3c01      	subs	r4, #1

0040b0de <.LVL45>:
  40b0de:	d1f7      	bne.n	40b0d0 <.LVL43>
    CRYPT_SHA384_Finalize(&sha384, appData.sha384_feed_result);
  40b0e0:	4c07      	ldr	r4, [pc, #28]	; (40b100 <.LCFI14+0x4>)

0040b0e2 <.LVL46>:
  40b0e2:	f504 718e 	add.w	r1, r4, #284	; 0x11c
  40b0e6:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40b0ea:	f000 fd77 	bl	40bbdc <.LFE13>

0040b0ee <.LBB32>:
    return SYS_TIME_CounterGet();
  40b0ee:	f000 feed 	bl	40becc <SYS_TIME_CounterGet>

0040b0f2 <.LBE32>:
    appData.sha384_feed_timing = hashStop - hashStart;
  40b0f2:	1b80      	subs	r0, r0, r6
  40b0f4:	f8c4 014c 	str.w	r0, [r4, #332]	; 0x14c
}
  40b0f8:	f50d 6da0 	add.w	sp, sp, #1280	; 0x500

0040b0fc <.LCFI14>:
  40b0fc:	bd70      	pop	{r4, r5, r6, pc}
  40b0fe:	bf00      	nop
  40b100:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.APP_Sha512Run_Feed%95:

0040b104 <APP_Sha512Run_Feed>:
void APP_Sha512Run_Feed(void) {
  40b104:	b570      	push	{r4, r5, r6, lr}

0040b106 <.LCFI15>:
  40b106:	f5ad 6da4 	sub.w	sp, sp, #1312	; 0x520

0040b10a <.LCFI16>:
    CRYPT_SHA512_Initialize(&sha512);
  40b10a:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40b10e:	f000 fe32 	bl	40bd76 <.LFE12>

0040b112 <.LVL49>:
    memset(myBuf, 'a', 1024);
  40b112:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40b116:	2161      	movs	r1, #97	; 0x61
  40b118:	4668      	mov	r0, sp
  40b11a:	f7ff fb11 	bl	40a740 <.LFE25>

0040b11e <.LBB38>:
    return SYS_TIME_CounterGet();
  40b11e:	f000 fed5 	bl	40becc <SYS_TIME_CounterGet>

0040b122 <.LVL51>:
  40b122:	4606      	mov	r6, r0

0040b124 <.LVL52>:
  40b124:	f44f 7400 	mov.w	r4, #512	; 0x200

0040b128 <.LBE38>:
        CRYPT_SHA512_DataAdd(&sha512, myBuf, sizeof (myBuf));
  40b128:	f44f 6580 	mov.w	r5, #1024	; 0x400

0040b12c <.LVL53>:
  40b12c:	462a      	mov	r2, r5
  40b12e:	4669      	mov	r1, sp
  40b130:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40b134:	f000 fd5e 	bl	40bbf4 <.LFE14>

0040b138 <.LVL54>:
    for (i = 0; i < 512; i++)
  40b138:	3c01      	subs	r4, #1

0040b13a <.LVL55>:
  40b13a:	d1f7      	bne.n	40b12c <.LVL53>
    CRYPT_SHA512_Finalize(&sha512, appData.sha512_feed_result);
  40b13c:	4c07      	ldr	r4, [pc, #28]	; (40b15c <.LCFI17+0x4>)

0040b13e <.LVL56>:
  40b13e:	f504 71a8 	add.w	r1, r4, #336	; 0x150
  40b142:	f50d 6080 	add.w	r0, sp, #1024	; 0x400
  40b146:	f000 fd61 	bl	40bc0c <.LFE16>

0040b14a <.LBB40>:
    return SYS_TIME_CounterGet();
  40b14a:	f000 febf 	bl	40becc <SYS_TIME_CounterGet>

0040b14e <.LBE40>:
    appData.sha512_feed_timing = hashStop - hashStart;
  40b14e:	1b80      	subs	r0, r0, r6
  40b150:	f8c4 0190 	str.w	r0, [r4, #400]	; 0x190
}
  40b154:	f50d 6da4 	add.w	sp, sp, #1312	; 0x520

0040b158 <.LCFI17>:
  40b158:	bd70      	pop	{r4, r5, r6, pc}
  40b15a:	bf00      	nop
  40b15c:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.Console_UART_Read%96:

0040b160 <Console_UART_Read>:
    while ((readQueue.numElem < readQueue.elemArrSz) && (rdBytes < count))
  40b160:	4b15      	ldr	r3, [pc, #84]	; (40b1b8 <.LCFI8+0x4>)
  40b162:	6898      	ldr	r0, [r3, #8]

0040b164 <.LVL47>:
  40b164:	691b      	ldr	r3, [r3, #16]
  40b166:	4298      	cmp	r0, r3
  40b168:	d222      	bcs.n	40b1b0 <.LBE13>
  40b16a:	b30a      	cbz	r2, 40b1b0 <.LBE13>
{
  40b16c:	b5f0      	push	{r4, r5, r6, r7, lr}

0040b16e <.LCFI6>:
    while ((readQueue.numElem < readQueue.elemArrSz) && (rdBytes < count))
  40b16e:	2000      	movs	r0, #0

0040b170 <.LBB10>:
    q->qPkts[q->nextPos] = pkt;
  40b170:	4b11      	ldr	r3, [pc, #68]	; (40b1b8 <.LCFI8+0x4>)
  40b172:	2701      	movs	r7, #1
    (q->nextPos < (q->elemArrSz - 1)) ? q->nextPos++ : (q->nextPos = 0);
  40b174:	4686      	mov	lr, r0
  40b176:	e009      	b.n	40b18c <.LBB13>

0040b178 <.LVL48>:
  40b178:	3401      	adds	r4, #1
  40b17a:	605c      	str	r4, [r3, #4]
    q->numElem++;
  40b17c:	689c      	ldr	r4, [r3, #8]
  40b17e:	3401      	adds	r4, #1
  40b180:	609c      	str	r4, [r3, #8]

0040b182 <.LBE10>:
        rdBytes++;
  40b182:	3001      	adds	r0, #1
    while ((readQueue.numElem < readQueue.elemArrSz) && (rdBytes < count))
  40b184:	4282      	cmp	r2, r0
  40b186:	d915      	bls.n	40b1b4 <.LCFI8>
  40b188:	42a5      	cmp	r5, r4
  40b18a:	d910      	bls.n	40b1ae <.LVL53>

0040b18c <.LBB13>:
    q->qPkts[q->nextPos] = pkt;
  40b18c:	685d      	ldr	r5, [r3, #4]
  40b18e:	68dc      	ldr	r4, [r3, #12]
  40b190:	eb04 06c5 	add.w	r6, r4, r5, lsl #3
  40b194:	eb01 0c00 	add.w	ip, r1, r0

0040b198 <.LVL52>:
  40b198:	f844 c035 	str.w	ip, [r4, r5, lsl #3]
  40b19c:	6077      	str	r7, [r6, #4]
    (q->nextPos < (q->elemArrSz - 1)) ? q->nextPos++ : (q->nextPos = 0);
  40b19e:	685c      	ldr	r4, [r3, #4]
  40b1a0:	691d      	ldr	r5, [r3, #16]
  40b1a2:	1e6e      	subs	r6, r5, #1
  40b1a4:	42b4      	cmp	r4, r6
  40b1a6:	d3e7      	bcc.n	40b178 <.LVL48>
  40b1a8:	f8c3 e004 	str.w	lr, [r3, #4]
  40b1ac:	e7e6      	b.n	40b17c <.LVL48+0x4>

0040b1ae <.LVL53>:
  40b1ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

0040b1b0 <.LBE13>:
    size_t rdBytes = 0;
  40b1b0:	2000      	movs	r0, #0
  40b1b2:	4770      	bx	lr

0040b1b4 <.LCFI8>:
}
  40b1b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40b1b6:	bf00      	nop
  40b1b8:	2040dc54 	.word	0x2040dc54

Disassembly of section .text.SYS_TIME_RemoveFromList%97:

0040b1bc <SYS_TIME_RemoveFromList>:
{
  40b1bc:	4601      	mov	r1, r0
    SYS_TIME_TIMER_OBJ* tmr = counter->tmrActive;
  40b1be:	4b13      	ldr	r3, [pc, #76]	; (40b20c <.LVL50+0x2>)
  40b1c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30

0040b1c2 <.LVL38>:
    while ((tmr != NULL) && (tmr != delTimer))
  40b1c2:	b10a      	cbz	r2, 40b1c8 <.LVL38+0x6>
  40b1c4:	4282      	cmp	r2, r0
  40b1c6:	d103      	bne.n	40b1d0 <.LVL41>
    tmr = counter->tmrActive;
  40b1c8:	4613      	mov	r3, r2
    SYS_TIME_TIMER_OBJ* prevTmr = NULL;
  40b1ca:	2200      	movs	r2, #0

0040b1cc <.LVL39>:
  40b1cc:	e005      	b.n	40b1da <.LVL43>

0040b1ce <.LVL40>:
        tmr = tmr->tmrNext;
  40b1ce:	461a      	mov	r2, r3

0040b1d0 <.LVL41>:
  40b1d0:	6993      	ldr	r3, [r2, #24]

0040b1d2 <.LVL42>:
    while ((tmr != NULL) && (tmr != delTimer))
  40b1d2:	2b00      	cmp	r3, #0
  40b1d4:	bf18      	it	ne
  40b1d6:	4299      	cmpne	r1, r3
  40b1d8:	d1f9      	bne.n	40b1ce <.LVL40>

0040b1da <.LVL43>:
    if (tmr == NULL)
  40b1da:	b1ab      	cbz	r3, 40b208 <.LCFI4>
{
  40b1dc:	b410      	push	{r4}

0040b1de <.LCFI1>:
    if (delTimer->tmrNext != NULL)
  40b1de:	698b      	ldr	r3, [r1, #24]

0040b1e0 <.LVL44>:
  40b1e0:	b11b      	cbz	r3, 40b1ea <.LVL45+0x6>
        delTimer->tmrNext->relativeTimePending += delTimer->relativeTimePending;
  40b1e2:	6898      	ldr	r0, [r3, #8]

0040b1e4 <.LVL45>:
  40b1e4:	688c      	ldr	r4, [r1, #8]
  40b1e6:	4420      	add	r0, r4
  40b1e8:	6098      	str	r0, [r3, #8]
    if (prevTmr == NULL)
  40b1ea:	b13a      	cbz	r2, 40b1fc <.LCFI3>
        prevTmr->tmrNext = delTimer->tmrNext;
  40b1ec:	698b      	ldr	r3, [r1, #24]
  40b1ee:	6193      	str	r3, [r2, #24]
    bool isHeadTimerUpdated = false;
  40b1f0:	2000      	movs	r0, #0

0040b1f2 <.LVL46>:
    delTimer->tmrNext = NULL;
  40b1f2:	2300      	movs	r3, #0
  40b1f4:	618b      	str	r3, [r1, #24]
}
  40b1f6:	f85d 4b04 	ldr.w	r4, [sp], #4

0040b1fa <.LCFI2>:
  40b1fa:	4770      	bx	lr

0040b1fc <.LCFI3>:
        counter->tmrActive = counter->tmrActive->tmrNext;
  40b1fc:	4b03      	ldr	r3, [pc, #12]	; (40b20c <.LVL50+0x2>)
  40b1fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40b200:	6992      	ldr	r2, [r2, #24]
  40b202:	631a      	str	r2, [r3, #48]	; 0x30

0040b204 <.LVL48>:
        isHeadTimerUpdated = true;
  40b204:	2001      	movs	r0, #1
  40b206:	e7f4      	b.n	40b1f2 <.LVL46>

0040b208 <.LCFI4>:
        return isHeadTimerUpdated;
  40b208:	2000      	movs	r0, #0

0040b20a <.LVL50>:
  40b20a:	4770      	bx	lr
  40b20c:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__libc_init_array%98:

0040b210 <__libc_init_array>:
  40b210:	b570      	push	{r4, r5, r6, lr}

0040b212 <.LCFI0>:
  40b212:	4e0f      	ldr	r6, [pc, #60]	; (40b250 <.LVL13+0x2>)
  40b214:	4d0f      	ldr	r5, [pc, #60]	; (40b254 <.LVL13+0x6>)
  40b216:	1b76      	subs	r6, r6, r5

0040b218 <.LVL0>:
  40b218:	10b6      	asrs	r6, r6, #2

0040b21a <.LVL1>:
  40b21a:	bf18      	it	ne
  40b21c:	2400      	movne	r4, #0
  40b21e:	d005      	beq.n	40b22c <.LVL5>

0040b220 <.LVL2>:
  40b220:	3401      	adds	r4, #1

0040b222 <.LVL3>:
  40b222:	f855 3b04 	ldr.w	r3, [r5], #4
  40b226:	4798      	blx	r3

0040b228 <.LVL4>:
  40b228:	42a6      	cmp	r6, r4
  40b22a:	d1f9      	bne.n	40b220 <.LVL2>

0040b22c <.LVL5>:
  40b22c:	4e0a      	ldr	r6, [pc, #40]	; (40b258 <.LVL13+0xa>)

0040b22e <.LVL6>:
  40b22e:	4d0b      	ldr	r5, [pc, #44]	; (40b25c <.LVL13+0xe>)
  40b230:	1b76      	subs	r6, r6, r5
  40b232:	f7f4 ff99 	bl	400168 <_init>

0040b236 <.LVL7>:
  40b236:	10b6      	asrs	r6, r6, #2

0040b238 <.LVL8>:
  40b238:	bf18      	it	ne
  40b23a:	2400      	movne	r4, #0
  40b23c:	d006      	beq.n	40b24c <.LVL12>

0040b23e <.LVL9>:
  40b23e:	3401      	adds	r4, #1

0040b240 <.LVL10>:
  40b240:	f855 3b04 	ldr.w	r3, [r5], #4
  40b244:	4798      	blx	r3

0040b246 <.LVL11>:
  40b246:	42a6      	cmp	r6, r4
  40b248:	d1f9      	bne.n	40b23e <.LVL9>
  40b24a:	bd70      	pop	{r4, r5, r6, pc}

0040b24c <.LVL12>:
  40b24c:	bd70      	pop	{r4, r5, r6, pc}

0040b24e <.LVL13>:
  40b24e:	bf00      	nop
  40b250:	00400174 	.word	0x00400174
  40b254:	00400174 	.word	0x00400174
  40b258:	0040017c 	.word	0x0040017c
  40b25c:	00400174 	.word	0x00400174

Disassembly of section .text.Console_UART_Write%99:

0040b260 <Console_UART_Write>:
{
  40b260:	b538      	push	{r3, r4, r5, lr}

0040b262 <.LCFI0>:
  40b262:	460d      	mov	r5, r1
  40b264:	4614      	mov	r4, r2

0040b266 <.LVL3>:
    if (writeQueue.numElem >= writeQueue.elemArrSz)
  40b266:	4b10      	ldr	r3, [pc, #64]	; (40b2a8 <.LVL9+0x4>)
  40b268:	689a      	ldr	r2, [r3, #8]

0040b26a <.LVL4>:
  40b26a:	691b      	ldr	r3, [r3, #16]
  40b26c:	429a      	cmp	r2, r3
  40b26e:	d216      	bcs.n	40b29e <.LVL7>

0040b270 <.LBB4>:
    q->qPkts[q->nextPos] = pkt;
  40b270:	4b0d      	ldr	r3, [pc, #52]	; (40b2a8 <.LVL9+0x4>)
  40b272:	6859      	ldr	r1, [r3, #4]
  40b274:	68da      	ldr	r2, [r3, #12]
  40b276:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
  40b27a:	f842 5031 	str.w	r5, [r2, r1, lsl #3]
  40b27e:	6044      	str	r4, [r0, #4]
    (q->nextPos < (q->elemArrSz - 1)) ? q->nextPos++ : (q->nextPos = 0);
  40b280:	685a      	ldr	r2, [r3, #4]
  40b282:	691b      	ldr	r3, [r3, #16]
  40b284:	3b01      	subs	r3, #1
  40b286:	429a      	cmp	r2, r3
  40b288:	bf34      	ite	cc
  40b28a:	3201      	addcc	r2, #1
  40b28c:	2200      	movcs	r2, #0
  40b28e:	4b06      	ldr	r3, [pc, #24]	; (40b2a8 <.LVL9+0x4>)
  40b290:	605a      	str	r2, [r3, #4]
    q->numElem++;
  40b292:	4a05      	ldr	r2, [pc, #20]	; (40b2a8 <.LVL9+0x4>)
  40b294:	6893      	ldr	r3, [r2, #8]
  40b296:	3301      	adds	r3, #1
  40b298:	6093      	str	r3, [r2, #8]

0040b29a <.LBE4>:
}
  40b29a:	4620      	mov	r0, r4
  40b29c:	bd38      	pop	{r3, r4, r5, pc}

0040b29e <.LVL7>:
        popQueue(&writeQueue);
  40b29e:	4802      	ldr	r0, [pc, #8]	; (40b2a8 <.LVL9+0x4>)

0040b2a0 <.LVL8>:
  40b2a0:	f000 fc04 	bl	40baac <.LFE4>

0040b2a4 <.LVL9>:
  40b2a4:	e7e4      	b.n	40b270 <.LBB4>
  40b2a6:	bf00      	nop
  40b2a8:	2040dc68 	.word	0x2040dc68

Disassembly of section .text.sprintf%100:

0040b2ac <sprintf>:
  40b2ac:	b40e      	push	{r1, r2, r3}

0040b2ae <.LCFI6>:
  40b2ae:	b5f0      	push	{r4, r5, r6, r7, lr}

0040b2b0 <.LCFI7>:
  40b2b0:	b09c      	sub	sp, #112	; 0x70

0040b2b2 <.LCFI8>:
  40b2b2:	ab21      	add	r3, sp, #132	; 0x84
  40b2b4:	490f      	ldr	r1, [pc, #60]	; (40b2f4 <.LCFI11+0x4>)
  40b2b6:	f853 2b04 	ldr.w	r2, [r3], #4
  40b2ba:	9301      	str	r3, [sp, #4]
  40b2bc:	4605      	mov	r5, r0
  40b2be:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40b2c2:	6808      	ldr	r0, [r1, #0]

0040b2c4 <.LVL4>:
  40b2c4:	9502      	str	r5, [sp, #8]
  40b2c6:	f44f 7702 	mov.w	r7, #520	; 0x208
  40b2ca:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40b2ce:	a902      	add	r1, sp, #8
  40b2d0:	9506      	str	r5, [sp, #24]
  40b2d2:	f8ad 7014 	strh.w	r7, [sp, #20]
  40b2d6:	9404      	str	r4, [sp, #16]
  40b2d8:	9407      	str	r4, [sp, #28]
  40b2da:	f8ad 6016 	strh.w	r6, [sp, #22]
  40b2de:	f7f7 fb03 	bl	4028e8 <_svfprintf_r>

0040b2e2 <.LVL5>:
  40b2e2:	9b02      	ldr	r3, [sp, #8]
  40b2e4:	2200      	movs	r2, #0
  40b2e6:	701a      	strb	r2, [r3, #0]
  40b2e8:	b01c      	add	sp, #112	; 0x70

0040b2ea <.LCFI9>:
  40b2ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}

0040b2ee <.LCFI10>:
  40b2ee:	b003      	add	sp, #12

0040b2f0 <.LCFI11>:
  40b2f0:	4770      	bx	lr
  40b2f2:	bf00      	nop
  40b2f4:	2040dca0 	.word	0x2040dca0

Disassembly of section .text._Balloc%101:

0040b2f8 <_Balloc>:
  40b2f8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40b2fa:	b570      	push	{r4, r5, r6, lr}

0040b2fc <.LCFI0>:
  40b2fc:	4605      	mov	r5, r0
  40b2fe:	460c      	mov	r4, r1
  40b300:	b14b      	cbz	r3, 40b316 <.LVL3>

0040b302 <.LVL1>:
  40b302:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]

0040b306 <.LVL2>:
  40b306:	b180      	cbz	r0, 40b32a <.LVL6>
  40b308:	6802      	ldr	r2, [r0, #0]
  40b30a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  40b30e:	2300      	movs	r3, #0
  40b310:	6103      	str	r3, [r0, #16]
  40b312:	60c3      	str	r3, [r0, #12]
  40b314:	bd70      	pop	{r4, r5, r6, pc}

0040b316 <.LVL3>:
  40b316:	2221      	movs	r2, #33	; 0x21
  40b318:	2104      	movs	r1, #4

0040b31a <.LVL4>:
  40b31a:	f7ff fe95 	bl	40b048 <_calloc_r>

0040b31e <.LVL5>:
  40b31e:	64e8      	str	r0, [r5, #76]	; 0x4c
  40b320:	4603      	mov	r3, r0
  40b322:	2800      	cmp	r0, #0
  40b324:	d1ed      	bne.n	40b302 <.LVL1>
  40b326:	2000      	movs	r0, #0
  40b328:	bd70      	pop	{r4, r5, r6, pc}

0040b32a <.LVL6>:
  40b32a:	2101      	movs	r1, #1
  40b32c:	fa01 f604 	lsl.w	r6, r1, r4
  40b330:	1d72      	adds	r2, r6, #5
  40b332:	4628      	mov	r0, r5

0040b334 <.LVL8>:
  40b334:	0092      	lsls	r2, r2, #2
  40b336:	f7ff fe87 	bl	40b048 <_calloc_r>

0040b33a <.LVL9>:
  40b33a:	2800      	cmp	r0, #0
  40b33c:	d0f3      	beq.n	40b326 <.LVL5+0x8>
  40b33e:	6044      	str	r4, [r0, #4]
  40b340:	6086      	str	r6, [r0, #8]
  40b342:	e7e4      	b.n	40b30e <.LVL2+0x8>

Disassembly of section .text.SYS_CONSOLE_Initialize%102:

0040b344 <SYS_CONSOLE_Initialize>:
SYS_MODULE_OBJ SYS_CONSOLE_Initialize( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init )
{
    SYS_CONSOLE_INIT *initConfig = (SYS_CONSOLE_INIT*)init;

    /* Confirm valid arguments */
    if (index >= SYS_CONSOLE_DEVICE_MAX_INSTANCES || init == NULL)
  40b344:	b908      	cbnz	r0, 40b34a <SYS_CONSOLE_Initialize+0x6>
  40b346:	4603      	mov	r3, r0
  40b348:	b911      	cbnz	r1, 40b350 <.LVL2>
        return SYS_MODULE_OBJ_INVALID;
  40b34a:	f04f 30ff 	mov.w	r0, #4294967295

0040b34e <.LVL1>:
  40b34e:	4770      	bx	lr

0040b350 <.LVL2>:

    if ((consoleDeviceInstance[index].consoleDeviceInstanceStatus == SYS_STATUS_UNINITIALIZED) && initConfig)
  40b350:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  40b354:	480c      	ldr	r0, [pc, #48]	; (40b388 <.LVL5+0x6>)

0040b356 <.LVL3>:
  40b356:	f910 2022 	ldrsb.w	r2, [r0, r2, lsl #2]
  40b35a:	b992      	cbnz	r2, 40b382 <.LVL5>
  40b35c:	b189      	cbz	r1, 40b382 <.LVL5>
{
  40b35e:	b430      	push	{r4, r5}

0040b360 <.LCFI0>:
    {
        consoleDeviceInstance[index].consoleDevHandle = CONSOLE_DEVICE_HANDLE_INVALID;
  40b360:	4604      	mov	r4, r0
  40b362:	005a      	lsls	r2, r3, #1
  40b364:	18d0      	adds	r0, r2, r3
  40b366:	eb04 0080 	add.w	r0, r4, r0, lsl #2
  40b36a:	f04f 35ff 	mov.w	r5, #4294967295
  40b36e:	6085      	str	r5, [r0, #8]

        consoleDeviceInstance[index].consoleInstanceDevDesc = initConfig->consDevDesc;
  40b370:	6849      	ldr	r1, [r1, #4]

0040b372 <.LVL4>:
  40b372:	6041      	str	r1, [r0, #4]
        consoleDeviceInstance[index].consoleDeviceInstanceStatus = SYS_STATUS_READY;
  40b374:	441a      	add	r2, r3
  40b376:	2102      	movs	r1, #2
  40b378:	f804 1022 	strb.w	r1, [r4, r2, lsl #2]

        return index;
  40b37c:	4618      	mov	r0, r3
    }

    return SYS_MODULE_OBJ_INVALID;
}
  40b37e:	bc30      	pop	{r4, r5}

0040b380 <.LCFI1>:
  40b380:	4770      	bx	lr

0040b382 <.LVL5>:
    return SYS_MODULE_OBJ_INVALID;
  40b382:	f04f 30ff 	mov.w	r0, #4294967295
  40b386:	4770      	bx	lr
  40b388:	2040dc7c 	.word	0x2040dc7c

Disassembly of section .text.Console_UART_Status%103:

0040b38c <Console_UART_Status>:
    if (consUartData.state == CONSOLE_UART_STATE_INIT)
  40b38c:	4b0e      	ldr	r3, [pc, #56]	; (40b3c8 <.LFE0+0x3c>)
  40b38e:	781b      	ldrb	r3, [r3, #0]
  40b390:	b1ab      	cbz	r3, 40b3be <Console_UART_Status+0x32>
    if (consUartData.state == CONSOLE_UART_STATE_CRITICAL_ERROR || consUartData.state == CONSOLE_UART_STATE_OPERATIONAL_ERROR || consUartData.overflowFlag)
  40b392:	3b07      	subs	r3, #7
  40b394:	b2db      	uxtb	r3, r3
  40b396:	2b01      	cmp	r3, #1
  40b398:	d913      	bls.n	40b3c2 <Console_UART_Status+0x36>
  40b39a:	4b0b      	ldr	r3, [pc, #44]	; (40b3c8 <.LFE0+0x3c>)
  40b39c:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
  40b3a0:	b10b      	cbz	r3, 40b3a6 <Console_UART_Status+0x1a>
        status = SYS_CONSOLE_STATUS_ERROR;
  40b3a2:	2003      	movs	r0, #3
  40b3a4:	4770      	bx	lr
        status = (writeQueue.numElem || readQueue.numElem) ? SYS_CONSOLE_STATUS_BUSY : SYS_CONSOLE_STATUS_CONFIGURED;
  40b3a6:	4b09      	ldr	r3, [pc, #36]	; (40b3cc <.LFE0+0x40>)
  40b3a8:	689b      	ldr	r3, [r3, #8]
  40b3aa:	b10b      	cbz	r3, 40b3b0 <Console_UART_Status+0x24>
  40b3ac:	2002      	movs	r0, #2
}
  40b3ae:	4770      	bx	lr
        status = (writeQueue.numElem || readQueue.numElem) ? SYS_CONSOLE_STATUS_BUSY : SYS_CONSOLE_STATUS_CONFIGURED;
  40b3b0:	4b07      	ldr	r3, [pc, #28]	; (40b3d0 <.LFE0+0x44>)
  40b3b2:	689b      	ldr	r3, [r3, #8]
  40b3b4:	2b00      	cmp	r3, #0
  40b3b6:	bf14      	ite	ne
  40b3b8:	2002      	movne	r0, #2
  40b3ba:	2001      	moveq	r0, #1
  40b3bc:	4770      	bx	lr
        return status;
  40b3be:	2000      	movs	r0, #0
  40b3c0:	4770      	bx	lr
        status = SYS_CONSOLE_STATUS_ERROR;
  40b3c2:	2003      	movs	r0, #3
  40b3c4:	4770      	bx	lr
  40b3c6:	bf00      	nop
  40b3c8:	2040db4c 	.word	0x2040db4c
  40b3cc:	2040dc68 	.word	0x2040dc68
  40b3d0:	2040dc54 	.word	0x2040dc54

Disassembly of section .text.USART1_Write%104:

0040b3d4 <USART1_Write>:
bool USART1_Write( void *buffer, const size_t size )
{
    bool status = false;
    uint8_t * lBuffer = (uint8_t *)buffer;

    if(NULL != lBuffer)
  40b3d4:	b1c8      	cbz	r0, 40b40a <.LVL38>
    {
        /* Check if transmit request is in progress */
        if(usart1Obj.txBusyStatus == false)
  40b3d6:	4b0f      	ldr	r3, [pc, #60]	; (40b414 <.LVL41+0x4>)
  40b3d8:	7d1b      	ldrb	r3, [r3, #20]
  40b3da:	b9c3      	cbnz	r3, 40b40e <.LVL40>
        {
            usart1Obj.txBuffer = lBuffer;
  40b3dc:	4b0d      	ldr	r3, [pc, #52]	; (40b414 <.LVL41+0x4>)
  40b3de:	6018      	str	r0, [r3, #0]
            usart1Obj.txSize = size;
  40b3e0:	6059      	str	r1, [r3, #4]
            usart1Obj.txProcessedSize = 0;
  40b3e2:	2100      	movs	r1, #0

0040b3e4 <.LVL35>:
  40b3e4:	6099      	str	r1, [r3, #8]
            usart1Obj.txBusyStatus = true;
  40b3e6:	2101      	movs	r1, #1
  40b3e8:	7519      	strb	r1, [r3, #20]

0040b3ea <.LVL36>:
            status = true;

            /* Initiate the transfer by sending first byte */
            if(US_CSR_TXEMPTY_Msk == (USART1_REGS->US_CSR& US_CSR_TXEMPTY_Msk))
  40b3ea:	4b0b      	ldr	r3, [pc, #44]	; (40b418 <.LVL41+0x8>)
  40b3ec:	695b      	ldr	r3, [r3, #20]
  40b3ee:	f413 7f00 	tst.w	r3, #512	; 0x200
  40b3f2:	d004      	beq.n	40b3fe <.LVL36+0x14>
            {
                USART1_REGS->US_THR = (US_THR_TXCHR(*lBuffer) & US_THR_TXCHR_Msk);
  40b3f4:	7802      	ldrb	r2, [r0, #0]
  40b3f6:	4b08      	ldr	r3, [pc, #32]	; (40b418 <.LVL41+0x8>)
  40b3f8:	61da      	str	r2, [r3, #28]
                usart1Obj.txProcessedSize++;
  40b3fa:	4b06      	ldr	r3, [pc, #24]	; (40b414 <.LVL41+0x4>)
  40b3fc:	6099      	str	r1, [r3, #8]
            }

            USART1_REGS->US_IER = US_IER_TXEMPTY_Msk;
  40b3fe:	f44f 7200 	mov.w	r2, #512	; 0x200
  40b402:	4b05      	ldr	r3, [pc, #20]	; (40b418 <.LVL41+0x8>)
  40b404:	609a      	str	r2, [r3, #8]
            status = true;
  40b406:	2001      	movs	r0, #1

0040b408 <.LVL37>:
  40b408:	4770      	bx	lr

0040b40a <.LVL38>:
    bool status = false;
  40b40a:	2000      	movs	r0, #0

0040b40c <.LVL39>:
  40b40c:	4770      	bx	lr

0040b40e <.LVL40>:
  40b40e:	2000      	movs	r0, #0

0040b410 <.LVL41>:
        }
    }

    return status;
}
  40b410:	4770      	bx	lr
  40b412:	bf00      	nop
  40b414:	20400454 	.word	0x20400454
  40b418:	40028000 	.word	0x40028000

Disassembly of section .text.SYS_INT_SourceDisable%105:

0040b41c <SYS_INT_SourceDisable>:

    return;
}

bool SYS_INT_SourceDisable( INT_SOURCE source )
{
  40b41c:	b538      	push	{r3, r4, r5, lr}

0040b41e <.LCFI0>:
  40b41e:	4604      	mov	r4, r0
    bool processorStatus;
    bool intSrcStatus;

    processorStatus = SYS_INT_Disable();
  40b420:	f000 fc76 	bl	40bd10 <SYS_INT_Disable>

0040b424 <.LBB50>:
  if ((int32_t)(IRQn) >= 0)
  40b424:	2c00      	cmp	r4, #0
  40b426:	db16      	blt.n	40b456 <.LVL9>
    return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
  40b428:	0963      	lsrs	r3, r4, #5
  40b42a:	490c      	ldr	r1, [pc, #48]	; (40b45c <.LVL9+0x6>)
  40b42c:	f851 5023 	ldr.w	r5, [r1, r3, lsl #2]
  40b430:	f004 041f 	and.w	r4, r4, #31

0040b434 <.LVL5>:
  40b434:	40e5      	lsrs	r5, r4

0040b436 <.LBE50>:

    intSrcStatus = NVIC_GetEnableIRQ(source);
  40b436:	f005 0501 	and.w	r5, r5, #1

0040b43a <.LBB52>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40b43a:	2201      	movs	r2, #1
  40b43c:	fa02 f404 	lsl.w	r4, r2, r4
  40b440:	3320      	adds	r3, #32
  40b442:	f841 4023 	str.w	r4, [r1, r3, lsl #2]

0040b446 <.LBB54>:
  __ASM volatile ("dsb 0xF":::"memory");
  40b446:	f3bf 8f4f 	dsb	sy

0040b44a <.LBB56>:
  __ASM volatile ("isb 0xF":::"memory");
  40b44a:	f3bf 8f6f 	isb	sy

0040b44e <.LBE52>:

    NVIC_DisableIRQ( source );

    SYS_INT_Restore( processorStatus );
  40b44e:	f000 fc68 	bl	40bd22 <.LFE142>

0040b452 <.LVL8>:

    /* return the source status */
    return intSrcStatus;
  40b452:	4628      	mov	r0, r5
  40b454:	bd38      	pop	{r3, r4, r5, pc}

0040b456 <.LVL9>:
    intSrcStatus = NVIC_GetEnableIRQ(source);
  40b456:	2500      	movs	r5, #0
  40b458:	e7f9      	b.n	40b44e <.LBE52>
  40b45a:	bf00      	nop
  40b45c:	e000e100 	.word	0xe000e100

Disassembly of section .rodata.SHA512Expected%106:

0040b460 <SHA512Expected>:
  40b460:	7f15497f 9eb359b3 4d93daa6 0907a1c9     .I...Y.....M....
  40b470:	4688dffe e6d039d1 fcc0a337 426f3b83     ...F.9..7....;oB
  40b480:	db583870 f428eeac 955e9b48 65e5b5fa     p8X...(.H.^....e
  40b490:	38f8255a f37bdcb0 c07c4cc8 4f6a4f26     Z%.8..{..L|.&OjO
  40b4a0:	bf000000                                ....

Disassembly of section .rodata%107:

0040b4a4 <.LC5-0x24>:
  40b4a4:	00464e49 	.word	0x00464e49
  40b4a8:	00666e69 	.word	0x00666e69
  40b4ac:	004e414e 	.word	0x004e414e
  40b4b0:	006e616e 	.word	0x006e616e
  40b4b4:	33323130 	.word	0x33323130
  40b4b8:	37363534 	.word	0x37363534
  40b4bc:	42413938 	.word	0x42413938
  40b4c0:	46454443 	.word	0x46454443
  40b4c4:	00000000 	.word	0x00000000

0040b4c8 <.LC5>:
  40b4c8:	33323130 	.word	0x33323130
  40b4cc:	37363534 	.word	0x37363534
  40b4d0:	62613938 	.word	0x62613938
  40b4d4:	66656463 	.word	0x66656463
  40b4d8:	00000000 	.word	0x00000000

0040b4dc <.LC6>:
  40b4dc:	6c756e28 	.word	0x6c756e28
  40b4e0:	0000296c 	.word	0x0000296c
  40b4e4:	0030      	.short	0x0030
  40b4e6:	bf00      	nop

Disassembly of section .text.NVIC_Initialize%108:

0040b4e8 <NVIC_Initialize>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  40b4e8:	490c      	ldr	r1, [pc, #48]	; (40b51c <.LVL10+0x4>)
  40b4ea:	68ca      	ldr	r2, [r1, #12]

0040b4ec <.LVL1>:
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  40b4ec:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700

0040b4f0 <.LVL2>:
  40b4f0:	0412      	lsls	r2, r2, #16
  40b4f2:	0c12      	lsrs	r2, r2, #16

0040b4f4 <.LVL3>:
  reg_value  =  (reg_value                                   |
  40b4f4:	4b0a      	ldr	r3, [pc, #40]	; (40b520 <.LVL10+0x8>)
  40b4f6:	4313      	orrs	r3, r2

0040b4f8 <.LVL4>:
  SCB->AIRCR =  reg_value;
  40b4f8:	60cb      	str	r3, [r1, #12]

0040b4fa <.LBB22>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  40b4fa:	f3bf 8f5f 	dmb	sy

0040b4fe <.LBB24>:
  __ASM volatile ("cpsie i" : : : "memory");
  40b4fe:	b662      	cpsie	i

0040b500 <.LBB26>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40b500:	4b08      	ldr	r3, [pc, #32]	; (40b524 <.LVL10+0xc>)
  40b502:	22e0      	movs	r2, #224	; 0xe0
  40b504:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e

0040b508 <.LBB28>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40b508:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  40b50c:	6019      	str	r1, [r3, #0]

0040b50e <.LBB30>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40b50e:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317

0040b512 <.LBB32>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40b512:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  40b516:	601a      	str	r2, [r3, #0]

0040b518 <.LVL10>:
  40b518:	4770      	bx	lr
  40b51a:	bf00      	nop
  40b51c:	e000ed00 	.word	0xe000ed00
  40b520:	05fa0400 	.word	0x05fa0400
  40b524:	e000e100 	.word	0xe000e100

Disassembly of section .text.wc_InitSha_ex%109:

0040b528 <wc_InitSha_ex>:
    if (sha == NULL)
  40b528:	4603      	mov	r3, r0
  40b52a:	b1b0      	cbz	r0, 40b55a <.LVL348>
    sha->heap = heap;
  40b52c:	6601      	str	r1, [r0, #96]	; 0x60

0040b52e <.LBB769>:
        sha->digest[0] = 0x67452301L;
  40b52e:	4a0c      	ldr	r2, [pc, #48]	; (40b560 <.LVL349+0x2>)

0040b530 <.LVL345>:
  40b530:	64c2      	str	r2, [r0, #76]	; 0x4c
        sha->digest[1] = 0xEFCDAB89L;
  40b532:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
  40b536:	6502      	str	r2, [r0, #80]	; 0x50
        sha->digest[2] = 0x98BADCFEL;
  40b538:	f102 4229 	add.w	r2, r2, #2835349504	; 0xa9000000
  40b53c:	f5a2 1296 	sub.w	r2, r2, #1228800	; 0x12c000
  40b540:	f6a2 628b 	subw	r2, r2, #3723	; 0xe8b
  40b544:	6542      	str	r2, [r0, #84]	; 0x54
        sha->digest[3] = 0x10325476L;
  40b546:	f1a2 3288 	sub.w	r2, r2, #2290649224	; 0x88888888
  40b54a:	6582      	str	r2, [r0, #88]	; 0x58
        sha->digest[4] = 0xC3D2E1F0L;
  40b54c:	4a05      	ldr	r2, [pc, #20]	; (40b564 <.LVL349+0x6>)
  40b54e:	65c2      	str	r2, [r0, #92]	; 0x5c
        sha->buffLen = 0;
  40b550:	2000      	movs	r0, #0

0040b552 <.LVL346>:
  40b552:	6018      	str	r0, [r3, #0]
        sha->loLen   = 0;
  40b554:	6058      	str	r0, [r3, #4]
        sha->hiLen   = 0;
  40b556:	6098      	str	r0, [r3, #8]

0040b558 <.LBE769>:
  40b558:	4770      	bx	lr

0040b55a <.LVL348>:
        return BAD_FUNC_ARG;
  40b55a:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040b55e <.LVL349>:
}
  40b55e:	4770      	bx	lr
  40b560:	67452301 	.word	0x67452301
  40b564:	c3d2e1f0 	.word	0xc3d2e1f0

Disassembly of section .text.__hi0bits%110:

0040b568 <__hi0bits>:
  40b568:	0c02      	lsrs	r2, r0, #16
  40b56a:	0412      	lsls	r2, r2, #16
  40b56c:	4603      	mov	r3, r0
  40b56e:	b9b2      	cbnz	r2, 40b59e <.LVL75>

0040b570 <.LVL63>:
  40b570:	0403      	lsls	r3, r0, #16

0040b572 <.LVL64>:
  40b572:	2010      	movs	r0, #16

0040b574 <.LVL65>:
  40b574:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40b578:	bf04      	itt	eq
  40b57a:	021b      	lsleq	r3, r3, #8

0040b57c <.LVL66>:
  40b57c:	3008      	addeq	r0, #8

0040b57e <.LVL67>:
  40b57e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  40b582:	bf04      	itt	eq
  40b584:	011b      	lsleq	r3, r3, #4

0040b586 <.LVL68>:
  40b586:	3004      	addeq	r0, #4

0040b588 <.LVL69>:
  40b588:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  40b58c:	bf04      	itt	eq
  40b58e:	009b      	lsleq	r3, r3, #2

0040b590 <.LVL70>:
  40b590:	3002      	addeq	r0, #2

0040b592 <.LVL71>:
  40b592:	2b00      	cmp	r3, #0
  40b594:	db02      	blt.n	40b59c <.LVL74>

0040b596 <.LVL72>:
  40b596:	005b      	lsls	r3, r3, #1

0040b598 <.LVL73>:
  40b598:	d403      	bmi.n	40b5a2 <.LVL77>
  40b59a:	2020      	movs	r0, #32

0040b59c <.LVL74>:
  40b59c:	4770      	bx	lr

0040b59e <.LVL75>:
  40b59e:	2000      	movs	r0, #0

0040b5a0 <.LVL76>:
  40b5a0:	e7e8      	b.n	40b574 <.LVL65>

0040b5a2 <.LVL77>:
  40b5a2:	3001      	adds	r0, #1

0040b5a4 <.LVL78>:
  40b5a4:	4770      	bx	lr

0040b5a6 <.LFE21>:
  40b5a6:	bf00      	nop

Disassembly of section .text.Console_UART_Flush%111:

0040b5a8 <Console_UART_Flush>:
    if (consUartData.state != CONSOLE_UART_STATE_INIT)
  40b5a8:	4b0b      	ldr	r3, [pc, #44]	; (40b5d8 <Console_UART_Flush+0x30>)
  40b5aa:	781b      	ldrb	r3, [r3, #0]
  40b5ac:	b113      	cbz	r3, 40b5b4 <Console_UART_Flush+0xc>
        consUartData.state = CONSOLE_UART_STATE_READY;
  40b5ae:	2202      	movs	r2, #2
  40b5b0:	4b09      	ldr	r3, [pc, #36]	; (40b5d8 <Console_UART_Flush+0x30>)
  40b5b2:	701a      	strb	r2, [r3, #0]
    consUartData.overflowFlag = false;
  40b5b4:	4a08      	ldr	r2, [pc, #32]	; (40b5d8 <Console_UART_Flush+0x30>)
  40b5b6:	2300      	movs	r3, #0
  40b5b8:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
    consUartData.isWriteComplete = true;
  40b5bc:	2001      	movs	r0, #1
  40b5be:	f882 0045 	strb.w	r0, [r2, #69]	; 0x45
    writeQueue.nextPos = 0;
  40b5c2:	4906      	ldr	r1, [pc, #24]	; (40b5dc <Console_UART_Flush+0x34>)
  40b5c4:	604b      	str	r3, [r1, #4]
    writeQueue.tailPos = 0;
  40b5c6:	600b      	str	r3, [r1, #0]
    writeQueue.numElem = 0;
  40b5c8:	608b      	str	r3, [r1, #8]
    consUartData.isReadComplete = true;
  40b5ca:	f882 0044 	strb.w	r0, [r2, #68]	; 0x44
    readQueue.nextPos = 0;
  40b5ce:	4a04      	ldr	r2, [pc, #16]	; (40b5e0 <Console_UART_Flush+0x38>)
  40b5d0:	6053      	str	r3, [r2, #4]
    readQueue.tailPos = 0;
  40b5d2:	6013      	str	r3, [r2, #0]
    readQueue.numElem = 0;
  40b5d4:	6093      	str	r3, [r2, #8]
  40b5d6:	4770      	bx	lr
  40b5d8:	2040db4c 	.word	0x2040db4c
  40b5dc:	2040dc68 	.word	0x2040dc68
  40b5e0:	2040dc54 	.word	0x2040dc54

Disassembly of section .text.SYS_TIME_GetTimerObject%112:

0040b5e4 <SYS_TIME_GetTimerObject>:
    if ((handle != SYS_TIME_HANDLE_INVALID) && (handle != 0))
  40b5e4:	1e43      	subs	r3, r0, #1
  40b5e6:	f113 0f03 	cmn.w	r3, #3
  40b5ea:	d80f      	bhi.n	40b60c <.LVL10>
        if ((handle & _SYS_TIME_INDEX_MASK) < SYS_TIME_MAX_TIMERS)
  40b5ec:	b283      	uxth	r3, r0
  40b5ee:	2b09      	cmp	r3, #9
  40b5f0:	d80e      	bhi.n	40b610 <.LVL12>

0040b5f2 <.LVL6>:
            if ((timerObj->tmrHandle == handle) && (timerObj->inUse == true))
  40b5f2:	4a0a      	ldr	r2, [pc, #40]	; (40b61c <.LVL17+0x2>)
  40b5f4:	eb02 1243 	add.w	r2, r2, r3, lsl #5
  40b5f8:	69d2      	ldr	r2, [r2, #28]
  40b5fa:	4290      	cmp	r0, r2
  40b5fc:	d10a      	bne.n	40b614 <.LVL14>
  40b5fe:	015a      	lsls	r2, r3, #5

0040b600 <.LVL7>:
  40b600:	4906      	ldr	r1, [pc, #24]	; (40b61c <.LVL17+0x2>)
  40b602:	5c8a      	ldrb	r2, [r1, r2]

0040b604 <.LVL8>:
  40b604:	b142      	cbz	r2, 40b618 <.LVL16>
            timerObj = &timers[handle & _SYS_TIME_INDEX_MASK];
  40b606:	eb01 1043 	add.w	r0, r1, r3, lsl #5

0040b60a <.LVL9>:
                return timerObj;
  40b60a:	4770      	bx	lr

0040b60c <.LVL10>:
    return NULL;
  40b60c:	2000      	movs	r0, #0

0040b60e <.LVL11>:
  40b60e:	4770      	bx	lr

0040b610 <.LVL12>:
  40b610:	2000      	movs	r0, #0

0040b612 <.LVL13>:
  40b612:	4770      	bx	lr

0040b614 <.LVL14>:
  40b614:	2000      	movs	r0, #0

0040b616 <.LVL15>:
  40b616:	4770      	bx	lr

0040b618 <.LVL16>:
  40b618:	2000      	movs	r0, #0

0040b61a <.LVL17>:
}
  40b61a:	4770      	bx	lr
  40b61c:	2040d9bc 	.word	0x2040d9bc

Disassembly of section .text.SYS_TIME_Counter64Get%113:

0040b620 <SYS_TIME_Counter64Get>:
{
    return gSystemCounterObj.hwTimerFrequency;
}

uint64_t SYS_TIME_Counter64Get ( void )
{
  40b620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040b622 <.LCFI14>:
    uint64_t counter64 = 0;
    uint32_t counter32 = 0;
    uint32_t elapsedCount;
    uint8_t isSwCounter32Oveflow = false;

    if (SYS_TIME_ResourceLock() == false)
  40b622:	f000 f8e3 	bl	40b7ec <SYS_TIME_ResourceLock>

0040b626 <.LVL147>:
  40b626:	b920      	cbnz	r0, 40b632 <.LVL149>
    {
        return counter64;
  40b628:	2400      	movs	r4, #0
  40b62a:	2500      	movs	r5, #0

0040b62c <.LVL148>:
    counter64 = ((counter64 << 32) + counter32);

    SYS_TIME_ResourceUnlock();

    return counter64;
}
  40b62c:	4620      	mov	r0, r4
  40b62e:	4629      	mov	r1, r5
  40b630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040b632 <.LVL149>:
    elapsedCount = SYS_TIME_GetElapsedCount(counterObj->timePlib->timerCounterGet());
  40b632:	4c09      	ldr	r4, [pc, #36]	; (40b658 <.LVL157+0x4>)
  40b634:	6863      	ldr	r3, [r4, #4]
  40b636:	699b      	ldr	r3, [r3, #24]
  40b638:	4798      	blx	r3
  40b63a:	f000 fb0b 	bl	40bc54 <.LFE172>

0040b63e <.LBB42>:
    uint32_t prevSwCounter32Bit = counterObj->swCounter64Low;
  40b63e:	6a63      	ldr	r3, [r4, #36]	; 0x24

0040b640 <.LBE42>:
    counter64 = counterObj->swCounter64High;
  40b640:	6aa6      	ldr	r6, [r4, #40]	; 0x28

0040b642 <.LVL153>:
    if (isSwCounter32Oveflow == true)
  40b642:	18c0      	adds	r0, r0, r3

0040b644 <.LVL154>:
  40b644:	d206      	bcs.n	40b654 <.LVL157>
    counter64 = ((counter64 << 32) + counter32);
  40b646:	2400      	movs	r4, #0
  40b648:	1824      	adds	r4, r4, r0
  40b64a:	f146 0500 	adc.w	r5, r6, #0

0040b64e <.LVL155>:
    SYS_TIME_ResourceUnlock();
  40b64e:	f000 f87b 	bl	40b748 <.LFE17>

0040b652 <.LVL156>:
    return counter64;
  40b652:	e7eb      	b.n	40b62c <.LVL148>

0040b654 <.LVL157>:
        counter64++;
  40b654:	3601      	adds	r6, #1
  40b656:	e7f6      	b.n	40b646 <.LVL154+0x2>
  40b658:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.SYS_TIME_TimerDestroy%114:

0040b65c <SYS_TIME_TimerDestroy>:
    SYS_TIME_ResourceUnlock();
    return result;
}

SYS_TIME_RESULT SYS_TIME_TimerDestroy(SYS_TIME_HANDLE handle)
{
  40b65c:	b510      	push	{r4, lr}

0040b65e <.LCFI22>:
  40b65e:	4604      	mov	r4, r0

0040b660 <.LVL195>:
    SYS_TIME_TIMER_OBJ *tmr = NULL;
    SYS_TIME_RESULT result = SYS_TIME_ERROR;

    if (SYS_TIME_ResourceLock() == false)
  40b660:	f000 f8c4 	bl	40b7ec <SYS_TIME_ResourceLock>

0040b664 <.LVL196>:
  40b664:	b1b0      	cbz	r0, 40b694 <.LVL206>
    {
        return result;
    }

    tmr = SYS_TIME_GetTimerObject(handle);
  40b666:	4620      	mov	r0, r4
  40b668:	f7ff ffbc 	bl	40b5e4 <.LFE170>

0040b66c <.LVL197>:

    if(tmr != NULL)
  40b66c:	4604      	mov	r4, r0

0040b66e <.LVL198>:
  40b66e:	b178      	cbz	r0, 40b690 <.LVL205>
    {
        if(tmr->active == true)
  40b670:	7843      	ldrb	r3, [r0, #1]
  40b672:	b943      	cbnz	r3, 40b686 <.LVL203>

0040b674 <.LVL199>:
        {
            SYS_TIME_RemoveFromList(tmr);
            tmr->active = false;
        }
        tmr->tmrElapsedFlag = false;
  40b674:	2000      	movs	r0, #0
  40b676:	7520      	strb	r0, [r4, #20]
        tmr->tmrElapsed = false;
  40b678:	7560      	strb	r0, [r4, #21]
        tmr->inUse = false;
  40b67a:	7020      	strb	r0, [r4, #0]

0040b67c <.LVL200>:
        result = SYS_TIME_SUCCESS;
  40b67c:	4604      	mov	r4, r0

0040b67e <.LVL201>:
    }

    SYS_TIME_ResourceUnlock();
  40b67e:	f000 f863 	bl	40b748 <.LFE17>

0040b682 <.LVL202>:
    return result;
}
  40b682:	4620      	mov	r0, r4
  40b684:	bd10      	pop	{r4, pc}

0040b686 <.LVL203>:
            SYS_TIME_RemoveFromList(tmr);
  40b686:	f7ff fd99 	bl	40b1bc <.LFE167>

0040b68a <.LVL204>:
            tmr->active = false;
  40b68a:	2300      	movs	r3, #0
  40b68c:	7063      	strb	r3, [r4, #1]
  40b68e:	e7f1      	b.n	40b674 <.LVL199>

0040b690 <.LVL205>:
    SYS_TIME_RESULT result = SYS_TIME_ERROR;
  40b690:	2401      	movs	r4, #1
  40b692:	e7f4      	b.n	40b67e <.LVL201>

0040b694 <.LVL206>:
        return result;
  40b694:	2401      	movs	r4, #1

0040b696 <.LVL207>:
  40b696:	e7f4      	b.n	40b682 <.LVL202>

Disassembly of section .text.USART1_Initialize%115:

0040b698 <USART1_Initialize>:
    USART1_REGS->US_CR = (US_CR_RSTRX_Msk | US_CR_RSTTX_Msk | US_CR_RSTSTA_Msk);
  40b698:	4b0c      	ldr	r3, [pc, #48]	; (40b6cc <.LFE186+0x34>)
  40b69a:	f44f 7286 	mov.w	r2, #268	; 0x10c
  40b69e:	601a      	str	r2, [r3, #0]
    USART1_REGS->US_CR = (US_CR_TXEN_Msk | US_CR_RXEN_Msk);
  40b6a0:	2250      	movs	r2, #80	; 0x50
  40b6a2:	601a      	str	r2, [r3, #0]
    USART1_REGS->US_MR = ((US_MR_USCLKS_MCK) | (0 << US_MR_MODE9_Pos) | US_MR_CHRL_8_BIT | US_MR_PAR_NO | US_MR_NBSTOP_1_BIT | (0 << US_MR_OVER_Pos));
  40b6a4:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
  40b6a8:	605a      	str	r2, [r3, #4]
    USART1_REGS->US_BRGR = US_BRGR_CD(81);
  40b6aa:	2251      	movs	r2, #81	; 0x51
  40b6ac:	621a      	str	r2, [r3, #32]
    usart1Obj.rxBuffer = NULL;
  40b6ae:	4b08      	ldr	r3, [pc, #32]	; (40b6d0 <.LFE186+0x38>)
  40b6b0:	2200      	movs	r2, #0
  40b6b2:	619a      	str	r2, [r3, #24]
    usart1Obj.rxSize = 0;
  40b6b4:	61da      	str	r2, [r3, #28]
    usart1Obj.rxProcessedSize = 0;
  40b6b6:	621a      	str	r2, [r3, #32]
    usart1Obj.rxBusyStatus = false;
  40b6b8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    usart1Obj.rxCallback = NULL;
  40b6bc:	625a      	str	r2, [r3, #36]	; 0x24
    usart1Obj.txBuffer = NULL;
  40b6be:	601a      	str	r2, [r3, #0]
    usart1Obj.txSize = 0;
  40b6c0:	605a      	str	r2, [r3, #4]
    usart1Obj.txProcessedSize = 0;
  40b6c2:	609a      	str	r2, [r3, #8]
    usart1Obj.txBusyStatus = false;
  40b6c4:	751a      	strb	r2, [r3, #20]
    usart1Obj.txCallback = NULL;
  40b6c6:	60da      	str	r2, [r3, #12]
  40b6c8:	4770      	bx	lr
  40b6ca:	bf00      	nop
  40b6cc:	40028000 	.word	0x40028000
  40b6d0:	20400454 	.word	0x20400454

Disassembly of section .text.USART1_Read%116:

0040b6d4 <USART1_Read>:
    if(NULL != lBuffer)
  40b6d4:	b1a0      	cbz	r0, 40b700 <.LCFI6>
{
  40b6d6:	b538      	push	{r3, r4, r5, lr}

0040b6d8 <.LCFI5>:
  40b6d8:	4605      	mov	r5, r0
  40b6da:	460c      	mov	r4, r1
        USART1_ErrorGet();
  40b6dc:	f000 f8d2 	bl	40b884 <.LFE6>

0040b6e0 <.LVL27>:
        if(usart1Obj.rxBusyStatus == false)
  40b6e0:	4b09      	ldr	r3, [pc, #36]	; (40b708 <.LVL33>)
  40b6e2:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40b6e6:	b96b      	cbnz	r3, 40b704 <.LCFI7>
            usart1Obj.rxBuffer = lBuffer;
  40b6e8:	4b07      	ldr	r3, [pc, #28]	; (40b708 <.LVL33>)
  40b6ea:	619d      	str	r5, [r3, #24]
            usart1Obj.rxSize = size;
  40b6ec:	61dc      	str	r4, [r3, #28]
            usart1Obj.rxProcessedSize = 0;
  40b6ee:	2200      	movs	r2, #0
  40b6f0:	621a      	str	r2, [r3, #32]
            usart1Obj.rxBusyStatus = true;
  40b6f2:	2001      	movs	r0, #1
  40b6f4:	f883 002c 	strb.w	r0, [r3, #44]	; 0x2c

0040b6f8 <.LVL28>:
            USART1_REGS->US_IER = (US_IER_RXRDY_Msk | US_IER_FRAME_Msk | US_IER_PARE_Msk | US_IER_OVRE_Msk);
  40b6f8:	22e1      	movs	r2, #225	; 0xe1
  40b6fa:	4b04      	ldr	r3, [pc, #16]	; (40b70c <.LVL33+0x4>)
  40b6fc:	609a      	str	r2, [r3, #8]
  40b6fe:	bd38      	pop	{r3, r4, r5, pc}

0040b700 <.LCFI6>:
    bool status = false;
  40b700:	2000      	movs	r0, #0

0040b702 <.LVL30>:
  40b702:	4770      	bx	lr

0040b704 <.LCFI7>:
  40b704:	2000      	movs	r0, #0

0040b706 <.LVL32>:
}
  40b706:	bd38      	pop	{r3, r4, r5, pc}

0040b708 <.LVL33>:
  40b708:	20400454 	.word	0x20400454
  40b70c:	40028000 	.word	0x40028000

Disassembly of section .text.wc_InitMd5_ex%117:

0040b710 <wc_InitMd5_ex>:
    if (md5 == NULL)
  40b710:	4603      	mov	r3, r0
  40b712:	b1a0      	cbz	r0, 40b73e <.LVL328>
    md5->heap = heap;
  40b714:	65c1      	str	r1, [r0, #92]	; 0x5c

0040b716 <.LBB139>:
    md5->digest[0] = 0x67452301L;
  40b716:	4a0b      	ldr	r2, [pc, #44]	; (40b744 <.LVL329+0x2>)

0040b718 <.LVL325>:
  40b718:	64c2      	str	r2, [r0, #76]	; 0x4c
    md5->digest[1] = 0xefcdab89L;
  40b71a:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
  40b71e:	6502      	str	r2, [r0, #80]	; 0x50
    md5->digest[2] = 0x98badcfeL;
  40b720:	f102 4229 	add.w	r2, r2, #2835349504	; 0xa9000000
  40b724:	f5a2 1296 	sub.w	r2, r2, #1228800	; 0x12c000
  40b728:	f6a2 628b 	subw	r2, r2, #3723	; 0xe8b
  40b72c:	6542      	str	r2, [r0, #84]	; 0x54
    md5->digest[3] = 0x10325476L;
  40b72e:	f1a2 3288 	sub.w	r2, r2, #2290649224	; 0x88888888
  40b732:	6582      	str	r2, [r0, #88]	; 0x58
    md5->buffLen = 0;
  40b734:	2000      	movs	r0, #0

0040b736 <.LVL326>:
  40b736:	6018      	str	r0, [r3, #0]
    md5->loLen   = 0;
  40b738:	6058      	str	r0, [r3, #4]
    md5->hiLen   = 0;
  40b73a:	6098      	str	r0, [r3, #8]

0040b73c <.LBE139>:
  40b73c:	4770      	bx	lr

0040b73e <.LVL328>:
        return BAD_FUNC_ARG;
  40b73e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040b742 <.LVL329>:
}
  40b742:	4770      	bx	lr
  40b744:	67452301 	.word	0x67452301

Disassembly of section .text.SYS_TIME_ResourceUnlock%118:

0040b748 <SYS_TIME_ResourceUnlock>:
    SYS_INT_SourceEnable(gSystemCounterObj.hwTimerIntNum);
  40b748:	4b0b      	ldr	r3, [pc, #44]	; (40b778 <.LVL4+0x4>)
  40b74a:	f993 3008 	ldrsb.w	r3, [r3, #8]

0040b74e <.LBB16>:
  if ((int32_t)(IRQn) >= 0)
  40b74e:	2b00      	cmp	r3, #0
  40b750:	db08      	blt.n	40b764 <.LBE16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40b752:	0959      	lsrs	r1, r3, #5
  40b754:	f003 031f 	and.w	r3, r3, #31

0040b758 <.LVL1>:
  40b758:	2201      	movs	r2, #1
  40b75a:	fa02 f303 	lsl.w	r3, r2, r3
  40b75e:	4a07      	ldr	r2, [pc, #28]	; (40b77c <.LVL4+0x8>)
  40b760:	f842 3021 	str.w	r3, [r2, r1, lsl #2]

0040b764 <.LBE16>:
    if(gSystemCounterObj.interruptNestingCount == 0)
  40b764:	4b04      	ldr	r3, [pc, #16]	; (40b778 <.LVL4+0x4>)
  40b766:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40b76a:	b91b      	cbnz	r3, 40b774 <.LVL4>

0040b76c <.LBB18>:
// *****************************************************************************
/* Function: OSAL_RESULT OSAL_MUTEX_Unlock(OSAL_MUTEX_HANDLE_TYPE mutexID)
 */
static OSAL_RESULT __attribute__((always_inline)) OSAL_MUTEX_Unlock(OSAL_MUTEX_HANDLE_TYPE* mutexID)
{
    *mutexID = 1;
  40b76c:	2201      	movs	r2, #1
  40b76e:	4b02      	ldr	r3, [pc, #8]	; (40b778 <.LVL4+0x4>)
  40b770:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

0040b774 <.LVL4>:
  40b774:	4770      	bx	lr
  40b776:	bf00      	nop
  40b778:	2040db9c 	.word	0x2040db9c
  40b77c:	e000e100 	.word	0xe000e100

Disassembly of section .text.__mcmp%119:

0040b780 <__mcmp>:
  40b780:	b430      	push	{r4, r5}

0040b782 <.LCFI12>:
  40b782:	690b      	ldr	r3, [r1, #16]
  40b784:	4605      	mov	r5, r0
  40b786:	6900      	ldr	r0, [r0, #16]

0040b788 <.LVL212>:
  40b788:	1ac0      	subs	r0, r0, r3

0040b78a <.LVL213>:
  40b78a:	d10f      	bne.n	40b7ac <.LVL223>
  40b78c:	009b      	lsls	r3, r3, #2

0040b78e <.LVL214>:
  40b78e:	3514      	adds	r5, #20

0040b790 <.LVL215>:
  40b790:	3114      	adds	r1, #20

0040b792 <.LVL216>:
  40b792:	4419      	add	r1, r3

0040b794 <.LVL217>:
  40b794:	442b      	add	r3, r5

0040b796 <.LVL218>:
  40b796:	e001      	b.n	40b79c <.LVL220>

0040b798 <.LVL219>:
  40b798:	429d      	cmp	r5, r3
  40b79a:	d207      	bcs.n	40b7ac <.LVL223>

0040b79c <.LVL220>:
  40b79c:	f853 4d04 	ldr.w	r4, [r3, #-4]!

0040b7a0 <.LVL221>:
  40b7a0:	f851 2d04 	ldr.w	r2, [r1, #-4]!

0040b7a4 <.LVL222>:
  40b7a4:	4294      	cmp	r4, r2
  40b7a6:	d0f7      	beq.n	40b798 <.LVL219>
  40b7a8:	d302      	bcc.n	40b7b0 <.LCFI14>
  40b7aa:	2001      	movs	r0, #1

0040b7ac <.LVL223>:
  40b7ac:	bc30      	pop	{r4, r5}

0040b7ae <.LCFI13>:
  40b7ae:	4770      	bx	lr

0040b7b0 <.LCFI14>:
  40b7b0:	f04f 30ff 	mov.w	r0, #4294967295

0040b7b4 <.LVL225>:
  40b7b4:	e7fa      	b.n	40b7ac <.LVL223>

0040b7b6 <.LFE27>:
  40b7b6:	bf00      	nop

Disassembly of section .rodata.SHA384Expected%120:

0040b7b8 <SHA384Expected>:
  40b7b8:	50a5 1a56 3063 8e04 82fe 976a fee5 43d8     .PV.c0....j....C
  40b7c8:	1cfa 46e6 bfa9 6c54 43cb 2f3c 0ecb 8254     ...F..Tl.C</..T.
  40b7d8:	4c1c 5e94 9aed 2b59 f45b 5731 12e2 77f2     .L.^..Y+[.1W...w
  40b7e8:	0000 bf00                                   ....

Disassembly of section .text.SYS_TIME_ResourceLock%121:

0040b7ec <SYS_TIME_ResourceLock>:
{
  40b7ec:	b508      	push	{r3, lr}

0040b7ee <.LCFI9>:
    if (gSystemCounterObj.interruptNestingCount == 0)
  40b7ee:	4b0b      	ldr	r3, [pc, #44]	; (40b81c <.LVL98+0x8>)
  40b7f0:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
  40b7f4:	b983      	cbnz	r3, 40b818 <.LVL98+0x4>

0040b7f6 <.LBB24>:
    if (*mutexID == 1)
  40b7f6:	4b09      	ldr	r3, [pc, #36]	; (40b81c <.LVL98+0x8>)
  40b7f8:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
  40b7fc:	2b01      	cmp	r3, #1
  40b7fe:	d001      	beq.n	40b804 <.LBB27>

0040b800 <.LBE24>:
            return false;
  40b800:	2000      	movs	r0, #0
}
  40b802:	bd08      	pop	{r3, pc}

0040b804 <.LBB27>:
        *mutexID = 0;
  40b804:	4b05      	ldr	r3, [pc, #20]	; (40b81c <.LVL98+0x8>)
  40b806:	2200      	movs	r2, #0
  40b808:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

0040b80c <.LBE27>:
            SYS_INT_SourceDisable(gSystemCounterObj.hwTimerIntNum);
  40b80c:	f993 0008 	ldrsb.w	r0, [r3, #8]
  40b810:	f7ff fe04 	bl	40b41c <.LFE149>

0040b814 <.LVL98>:
            return true;
  40b814:	2001      	movs	r0, #1
  40b816:	bd08      	pop	{r3, pc}
    return true;
  40b818:	2001      	movs	r0, #1
  40b81a:	bd08      	pop	{r3, pc}
  40b81c:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__libc_fini_array%122:

0040b820 <__libc_fini_array>:
  40b820:	b538      	push	{r3, r4, r5, lr}

0040b822 <.LCFI0>:
  40b822:	4c0a      	ldr	r4, [pc, #40]	; (40b84c <.LVL6+0x2>)
  40b824:	4d0a      	ldr	r5, [pc, #40]	; (40b850 <.LVL6+0x6>)
  40b826:	1b64      	subs	r4, r4, r5

0040b828 <.LVL0>:
  40b828:	10a4      	asrs	r4, r4, #2

0040b82a <.LVL1>:
  40b82a:	d00a      	beq.n	40b842 <.LVL4+0x4>
  40b82c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40b830:	3b01      	subs	r3, #1
  40b832:	eb05 0583 	add.w	r5, r5, r3, lsl #2

0040b836 <.LVL2>:
  40b836:	3c01      	subs	r4, #1

0040b838 <.LVL3>:
  40b838:	f855 3904 	ldr.w	r3, [r5], #-4
  40b83c:	4798      	blx	r3

0040b83e <.LVL4>:
  40b83e:	2c00      	cmp	r4, #0
  40b840:	d1f9      	bne.n	40b836 <.LVL2>
  40b842:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}

0040b846 <.LCFI1>:
  40b846:	f7f4 bc99 	b.w	40017c <_fini>

0040b84a <.LVL6>:
  40b84a:	bf00      	nop
  40b84c:	0040018c 	.word	0x0040018c
  40b850:	00400188 	.word	0x00400188

Disassembly of section .text.SYS_CONSOLE_Write%123:

0040b854 <SYS_CONSOLE_Write>:
    None.
*/

ssize_t SYS_CONSOLE_Write(const SYS_MODULE_INDEX index, int fd, const char *buf, size_t count )
{
    if (index >= SYS_CONSOLE_DEVICE_MAX_INSTANCES)
  40b854:	b970      	cbnz	r0, 40b874 <.LCFI9>
        return 0;

    if (consoleDeviceInstance[index].consoleDeviceInstanceStatus == SYS_STATUS_UNINITIALIZED
  40b856:	480a      	ldr	r0, [pc, #40]	; (40b880 <.LVL48>)

0040b858 <.LVL42>:
  40b858:	f990 0000 	ldrsb.w	r0, [r0]
  40b85c:	b160      	cbz	r0, 40b878 <.LVL47+0x2>
{
  40b85e:	b538      	push	{r3, r4, r5, lr}

0040b860 <.LCFI8>:
            || consoleDeviceInstance[index].consoleInstanceDevDesc == NULL)
  40b860:	4807      	ldr	r0, [pc, #28]	; (40b880 <.LVL48>)
  40b862:	6845      	ldr	r5, [r0, #4]
  40b864:	b155      	cbz	r5, 40b87c <.LCFI10>
  40b866:	4614      	mov	r4, r2
  40b868:	4608      	mov	r0, r1
    {
        return 0;
    }

    return consoleDeviceInstance[index].consoleInstanceDevDesc->sysConsoleWrite(fd, buf, count);
  40b86a:	68ed      	ldr	r5, [r5, #12]
  40b86c:	461a      	mov	r2, r3

0040b86e <.LVL43>:
  40b86e:	4621      	mov	r1, r4

0040b870 <.LVL44>:
  40b870:	47a8      	blx	r5

0040b872 <.LVL45>:
  40b872:	bd38      	pop	{r3, r4, r5, pc}

0040b874 <.LCFI9>:
        return 0;
  40b874:	2000      	movs	r0, #0

0040b876 <.LVL47>:
  40b876:	4770      	bx	lr
        return 0;
  40b878:	2000      	movs	r0, #0
  40b87a:	4770      	bx	lr

0040b87c <.LCFI10>:
  40b87c:	2000      	movs	r0, #0
}
  40b87e:	bd38      	pop	{r3, r4, r5, pc}

0040b880 <.LVL48>:
  40b880:	2040dc7c 	.word	0x2040dc7c

Disassembly of section .text.USART1_ErrorGet%124:

0040b884 <USART1_ErrorGet>:
    uint32_t status = USART1_REGS->US_CSR;
  40b884:	4b0a      	ldr	r3, [pc, #40]	; (40b8b0 <.LVL9+0xe>)
  40b886:	6958      	ldr	r0, [r3, #20]

0040b888 <.LVL6>:
    if(errors != USART_ERROR_NONE)
  40b888:	f010 00e0 	ands.w	r0, r0, #224	; 0xe0

0040b88c <.LVL7>:
  40b88c:	d100      	bne.n	40b890 <.LBB14>
}
  40b88e:	4770      	bx	lr

0040b890 <.LBB14>:
    USART1_REGS->US_CR|= US_CR_RSTSTA_Msk;
  40b890:	681a      	ldr	r2, [r3, #0]
  40b892:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  40b896:	601a      	str	r2, [r3, #0]
    while( US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk) )
  40b898:	695b      	ldr	r3, [r3, #20]
  40b89a:	f013 0f01 	tst.w	r3, #1
  40b89e:	d0f6      	beq.n	40b88e <.LVL7+0x2>
        dummyData = (USART1_REGS->US_RHR& US_RHR_RXCHR_Msk);
  40b8a0:	4b03      	ldr	r3, [pc, #12]	; (40b8b0 <.LVL9+0xe>)

0040b8a2 <.LVL9>:
  40b8a2:	699a      	ldr	r2, [r3, #24]
    while( US_CSR_RXRDY_Msk == (USART1_REGS->US_CSR& US_CSR_RXRDY_Msk) )
  40b8a4:	695a      	ldr	r2, [r3, #20]
  40b8a6:	f012 0f01 	tst.w	r2, #1
  40b8aa:	d1fa      	bne.n	40b8a2 <.LVL9>
  40b8ac:	e7ef      	b.n	40b88e <.LVL7+0x2>
  40b8ae:	bf00      	nop
  40b8b0:	40028000 	.word	0x40028000

Disassembly of section .text%125:

0040b8b4 <__aeabi_uldivmod>:
  40b8b4:	b953      	cbnz	r3, 40b8cc <__aeabi_uldivmod+0x18>
  40b8b6:	b94a      	cbnz	r2, 40b8cc <__aeabi_uldivmod+0x18>
  40b8b8:	2900      	cmp	r1, #0
  40b8ba:	bf08      	it	eq
  40b8bc:	2800      	cmpeq	r0, #0
  40b8be:	bf1c      	itt	ne
  40b8c0:	f04f 31ff 	movne.w	r1, #4294967295
  40b8c4:	f04f 30ff 	movne.w	r0, #4294967295
  40b8c8:	f7fe be98 	b.w	40a5fc <.LFE173>
  40b8cc:	f1ad 0c08 	sub.w	ip, sp, #8
  40b8d0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40b8d4:	f7fc fa26 	bl	407d24 <.LFE16>
  40b8d8:	f8dd e004 	ldr.w	lr, [sp, #4]
  40b8dc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40b8e0:	b004      	add	sp, #16
  40b8e2:	4770      	bx	lr

Disassembly of section .text.APP_DisplayHash%126:

0040b8e4 <APP_DisplayHash>:
    while (hashSz--) {
  40b8e4:	b179      	cbz	r1, 40b906 <.LCFI2>
void APP_DisplayHash(uint8_t *hash, uint32_t hashSz) {
  40b8e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0040b8e8 <.LCFI1>:
  40b8e8:	4604      	mov	r4, r0
  40b8ea:	460e      	mov	r6, r1
  40b8ec:	4406      	add	r6, r0
        sprintf(printBuffer, "%s%02X", printBuffer, *hash++);
  40b8ee:	4d06      	ldr	r5, [pc, #24]	; (40b908 <.LCFI2+0x2>)
  40b8f0:	4f06      	ldr	r7, [pc, #24]	; (40b90c <.LCFI2+0x6>)

0040b8f2 <.LVL2>:
  40b8f2:	f814 3b01 	ldrb.w	r3, [r4], #1

0040b8f6 <.LVL3>:
  40b8f6:	462a      	mov	r2, r5
  40b8f8:	4639      	mov	r1, r7
  40b8fa:	4628      	mov	r0, r5
  40b8fc:	f7ff fcd6 	bl	40b2ac <.LFE166>

0040b900 <.LVL4>:
    while (hashSz--) {
  40b900:	42a6      	cmp	r6, r4
  40b902:	d1f6      	bne.n	40b8f2 <.LVL2>
  40b904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0040b906 <.LCFI2>:
  40b906:	4770      	bx	lr
  40b908:	20400488 	.word	0x20400488
  40b90c:	00409690 	.word	0x00409690

Disassembly of section .text.SYS_TIME_UpdateTimerList%127:

0040b910 <SYS_TIME_UpdateTimerList>:
    tmr = counterObj->tmrActive;
  40b910:	4b09      	ldr	r3, [pc, #36]	; (40b938 <.LVL81+0x8>)
  40b912:	6b1a      	ldr	r2, [r3, #48]	; 0x30

0040b914 <.LVL77>:
    while ((tmr != NULL) && (elapsedCount > 0))
  40b914:	b162      	cbz	r2, 40b930 <.LVL81>
  40b916:	b158      	cbz	r0, 40b930 <.LVL81>
            tmr->relativeTimePending = 0;
  40b918:	2100      	movs	r1, #0
  40b91a:	e004      	b.n	40b926 <.LVL80+0x4>
            elapsedCount -= tmr->relativeTimePending;
  40b91c:	1ac0      	subs	r0, r0, r3

0040b91e <.LVL78>:
            tmr->relativeTimePending = 0;
  40b91e:	6091      	str	r1, [r2, #8]

0040b920 <.LVL79>:
        tmr = tmr->tmrNext;
  40b920:	6992      	ldr	r2, [r2, #24]

0040b922 <.LVL80>:
    while ((tmr != NULL) && (elapsedCount > 0))
  40b922:	b12a      	cbz	r2, 40b930 <.LVL81>
  40b924:	b120      	cbz	r0, 40b930 <.LVL81>
        if (tmr->relativeTimePending >= elapsedCount)
  40b926:	6893      	ldr	r3, [r2, #8]
  40b928:	4283      	cmp	r3, r0
  40b92a:	d3f7      	bcc.n	40b91c <.LVL77+0x8>
            tmr->relativeTimePending -= elapsedCount;
  40b92c:	1a1b      	subs	r3, r3, r0
  40b92e:	6093      	str	r3, [r2, #8]

0040b930 <.LVL81>:
    counterObj->hwTimerPreviousValue = counterObj->hwTimerCurrentValue;
  40b930:	4b01      	ldr	r3, [pc, #4]	; (40b938 <.LVL81+0x8>)
  40b932:	695a      	ldr	r2, [r3, #20]
  40b934:	611a      	str	r2, [r3, #16]
  40b936:	4770      	bx	lr
  40b938:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__ascii_mbtowc%128:

0040b93c <__ascii_mbtowc>:
  40b93c:	b082      	sub	sp, #8

0040b93e <.LCFI2>:
  40b93e:	b149      	cbz	r1, 40b954 <.LCFI4>
  40b940:	b15a      	cbz	r2, 40b95a <.LVL9+0x4>
  40b942:	b16b      	cbz	r3, 40b960 <.LCFI6>
  40b944:	7813      	ldrb	r3, [r2, #0]

0040b946 <.LVL4>:
  40b946:	600b      	str	r3, [r1, #0]
  40b948:	7812      	ldrb	r2, [r2, #0]

0040b94a <.LVL5>:
  40b94a:	1c10      	adds	r0, r2, #0

0040b94c <.LVL6>:
  40b94c:	bf18      	it	ne
  40b94e:	2001      	movne	r0, #1
  40b950:	b002      	add	sp, #8

0040b952 <.LCFI3>:
  40b952:	4770      	bx	lr

0040b954 <.LCFI4>:
  40b954:	a901      	add	r1, sp, #4

0040b956 <.LVL9>:
  40b956:	2a00      	cmp	r2, #0
  40b958:	d1f3      	bne.n	40b942 <.LCFI2+0x4>
  40b95a:	4610      	mov	r0, r2

0040b95c <.LVL10>:
  40b95c:	b002      	add	sp, #8

0040b95e <.LCFI5>:
  40b95e:	4770      	bx	lr

0040b960 <.LCFI6>:
  40b960:	f06f 0001 	mvn.w	r0, #1

0040b964 <.LVL13>:
  40b964:	e7f4      	b.n	40b950 <.LVL6+0x4>

0040b966 <.LFE18>:
  40b966:	bf00      	nop

Disassembly of section .text._sbrk%129:

0040b968 <_sbrk>:
  40b968:	4a07      	ldr	r2, [pc, #28]	; (40b988 <_sbrk+0x20>)
  40b96a:	6813      	ldr	r3, [r2, #0]
  40b96c:	b143      	cbz	r3, 40b980 <_sbrk+0x18>
  40b96e:	4907      	ldr	r1, [pc, #28]	; (40b98c <_sbrk+0x24>)
  40b970:	4418      	add	r0, r3
  40b972:	4288      	cmp	r0, r1
  40b974:	bf9a      	itte	ls
  40b976:	6010      	strls	r0, [r2, #0]
  40b978:	4618      	movls	r0, r3
  40b97a:	f04f 30ff 	movhi.w	r0, #4294967295
  40b97e:	4770      	bx	lr
  40b980:	4b03      	ldr	r3, [pc, #12]	; (40b990 <_sbrk+0x28>)
  40b982:	6013      	str	r3, [r2, #0]
  40b984:	e7f3      	b.n	40b96e <_sbrk+0x6>
  40b986:	bf00      	nop
  40b988:	2040dcb8 	.word	0x2040dcb8
  40b98c:	2040dcc0 	.word	0x2040dcc0
  40b990:	2040dcc0 	.word	0x2040dcc0

Disassembly of section .text.TC0_CH0_TimerInitialize%130:

0040b994 <TC0_CH0_TimerInitialize>:

/* Initialize channel in timer mode */
void TC0_CH0_TimerInitialize (void)
{
    /* Use peripheral clock */
    TC0_REGS->TC_CHANNEL[0].TC_EMR = TC_EMR_NODIVCLK_Msk;
  40b994:	4b07      	ldr	r3, [pc, #28]	; (40b9b4 <.LFE1+0x20>)
  40b996:	f44f 7280 	mov.w	r2, #256	; 0x100
  40b99a:	631a      	str	r2, [r3, #48]	; 0x30
    /* clock selection and waveform selection */
    TC0_REGS->TC_CHANNEL[0].TC_CMR =  TC_CMR_WAVSEL_UP_RC | TC_CMR_WAVE_Msk ;
  40b99c:	f44f 4240 	mov.w	r2, #49152	; 0xc000
  40b9a0:	605a      	str	r2, [r3, #4]

    /* write period */
    TC0_REGS->TC_CHANNEL[0].TC_RC = 60000U;
  40b9a2:	f64e 2260 	movw	r2, #60000	; 0xea60
  40b9a6:	61da      	str	r2, [r3, #28]


    /* enable interrupt */
    TC0_REGS->TC_CHANNEL[0].TC_IER = TC_IER_CPAS_Msk;
  40b9a8:	2204      	movs	r2, #4
  40b9aa:	625a      	str	r2, [r3, #36]	; 0x24
    TC0_CH0_CallbackObj.callback_fn = NULL;
  40b9ac:	2200      	movs	r2, #0
  40b9ae:	4b02      	ldr	r3, [pc, #8]	; (40b9b8 <.LFE1+0x24>)
  40b9b0:	601a      	str	r2, [r3, #0]
  40b9b2:	4770      	bx	lr
  40b9b4:	4000c000 	.word	0x4000c000
  40b9b8:	2040044c 	.word	0x2040044c

Disassembly of section .rodata.__mprec_bigtens%131:

0040b9c0 <__mprec_bigtens>:
  40b9c0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  40b9d0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  40b9e0:	7f73bf3c 75154fdd                       <.s..O.u

Disassembly of section .rodata.SHA256Expected%132:

0040b9e8 <SHA256Expected>:
  40b9e8:	754aa885 528a6e88 e1c4be6d fa75336e     ..Ju.n.Rm...n3u.
  40b9f8:	aeb407a3 edc979ad 47c06432 ba6e6f7a     .....y..2d.Gzon.
  40ba08:	bf000000                                ....

Disassembly of section .text._sbrk_r%133:

0040ba0c <_sbrk_r>:
  40ba0c:	b538      	push	{r3, r4, r5, lr}

0040ba0e <.LCFI0>:
  40ba0e:	4c07      	ldr	r4, [pc, #28]	; (40ba2c <.LVL4>)
  40ba10:	2300      	movs	r3, #0
  40ba12:	4605      	mov	r5, r0
  40ba14:	4608      	mov	r0, r1

0040ba16 <.LVL1>:
  40ba16:	6023      	str	r3, [r4, #0]
  40ba18:	f7ff ffa6 	bl	40b968 <_sbrk>

0040ba1c <.LVL2>:
  40ba1c:	1c43      	adds	r3, r0, #1
  40ba1e:	d000      	beq.n	40ba22 <.LVL2+0x6>
  40ba20:	bd38      	pop	{r3, r4, r5, pc}
  40ba22:	6823      	ldr	r3, [r4, #0]
  40ba24:	2b00      	cmp	r3, #0
  40ba26:	d0fb      	beq.n	40ba20 <.LVL2+0x4>
  40ba28:	602b      	str	r3, [r5, #0]
  40ba2a:	bd38      	pop	{r3, r4, r5, pc}

0040ba2c <.LVL4>:
  40ba2c:	20400484 	.word	0x20400484

Disassembly of section .text.Console_UART_ReadC%134:

0040ba30 <Console_UART_ReadC>:
{
  40ba30:	b500      	push	{lr}

0040ba32 <.LCFI1>:
  40ba32:	b083      	sub	sp, #12

0040ba34 <.LCFI2>:
    USART1_Read(&readBuffer, 1);
  40ba34:	2101      	movs	r1, #1
  40ba36:	f10d 0007 	add.w	r0, sp, #7

0040ba3a <.LVL13>:
  40ba3a:	f7ff fe4b 	bl	40b6d4 <.LFE145>

0040ba3e <.LVL14>:
    while (USART1_ReadCountGet() == 0);
  40ba3e:	f000 fa33 	bl	40bea8 <.LFE149>

0040ba42 <.LVL15>:
  40ba42:	2800      	cmp	r0, #0
  40ba44:	d0fb      	beq.n	40ba3e <.LVL14>
}
  40ba46:	f89d 0007 	ldrb.w	r0, [sp, #7]
  40ba4a:	b003      	add	sp, #12

0040ba4c <.LCFI3>:
  40ba4c:	f85d fb04 	ldr.w	pc, [sp], #4

Disassembly of section .text.SYS_DEBUG_Initialize%135:

0040ba50 <SYS_DEBUG_Initialize>:

SYS_MODULE_OBJ SYS_DEBUG_Initialize(const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init )
{
    SYS_DEBUG_INIT *initConfig = (SYS_DEBUG_INIT*)init;

    gblErrLvl = initConfig->errorLevel;
  40ba50:	784a      	ldrb	r2, [r1, #1]
  40ba52:	4b05      	ldr	r3, [pc, #20]	; (40ba68 <.LVL1+0xa>)
  40ba54:	701a      	strb	r2, [r3, #0]

    sysDebugInstance.debugConsole = initConfig->consoleIndex;
  40ba56:	884a      	ldrh	r2, [r1, #2]
  40ba58:	4b04      	ldr	r3, [pc, #16]	; (40ba6c <.LVL1+0xe>)
  40ba5a:	805a      	strh	r2, [r3, #2]
    sysDebugInstance.state = SYS_DEBUG_STATE_IDLE;
  40ba5c:	2000      	movs	r0, #0

0040ba5e <.LVL1>:
  40ba5e:	7058      	strb	r0, [r3, #1]
    sysDebugInstance.status = SYS_STATUS_READY;
  40ba60:	2202      	movs	r2, #2
  40ba62:	701a      	strb	r2, [r3, #0]
    sysDebugInstance.prtBufPtr = 0;
  40ba64:	6058      	str	r0, [r3, #4]

    return SYS_MODULE_OBJ_STATIC;
}
  40ba66:	4770      	bx	lr
  40ba68:	20400448 	.word	0x20400448
  40ba6c:	20400440 	.word	0x20400440

Disassembly of section .text.TC0_CH0_InterruptHandler%136:

0040ba70 <TC0_CH0_InterruptHandler>:
    TC0_CH0_CallbackObj.callback_fn = callback;
    TC0_CH0_CallbackObj.context = context;
}

void TC0_CH0_InterruptHandler(void)
{
  40ba70:	b508      	push	{r3, lr}

0040ba72 <.LCFI0>:
    TC_TIMER_STATUS timer_status = TC0_REGS->TC_CHANNEL[0].TC_SR & TC_TIMER_STATUS_MSK;
  40ba72:	4b05      	ldr	r3, [pc, #20]	; (40ba88 <.LVL4+0x8>)
  40ba74:	6a18      	ldr	r0, [r3, #32]

0040ba76 <.LVL3>:
    /* Call registered callback function */
    if (TC0_CH0_CallbackObj.callback_fn != NULL)
  40ba76:	4b05      	ldr	r3, [pc, #20]	; (40ba8c <.LVL4+0xc>)
  40ba78:	681b      	ldr	r3, [r3, #0]
  40ba7a:	b123      	cbz	r3, 40ba86 <.LVL4+0x6>
  40ba7c:	f000 0014 	and.w	r0, r0, #20

0040ba80 <.LVL4>:
    {
        TC0_CH0_CallbackObj.callback_fn(timer_status, TC0_CH0_CallbackObj.context);
  40ba80:	4a02      	ldr	r2, [pc, #8]	; (40ba8c <.LVL4+0xc>)
  40ba82:	6851      	ldr	r1, [r2, #4]
  40ba84:	4798      	blx	r3
  40ba86:	bd08      	pop	{r3, pc}
  40ba88:	4000c000 	.word	0x4000c000
  40ba8c:	2040044c 	.word	0x2040044c

Disassembly of section .text.SYS_CONSOLE_Tasks%137:

0040ba90 <SYS_CONSOLE_Tasks>:
{
  40ba90:	b508      	push	{r3, lr}

0040ba92 <.LCFI6>:
    if (consoleDeviceInstance[(SYS_MODULE_INDEX)object].consoleInstanceDevDesc == NULL)
  40ba92:	b283      	uxth	r3, r0
  40ba94:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  40ba98:	4a03      	ldr	r2, [pc, #12]	; (40baa8 <.LVL31+0x2>)
  40ba9a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40ba9e:	685b      	ldr	r3, [r3, #4]
  40baa0:	b10b      	cbz	r3, 40baa6 <.LVL31>
    consoleDeviceInstance[(SYS_MODULE_INDEX)object].consoleInstanceDevDesc->sysConsoleTasks(object);
  40baa2:	695b      	ldr	r3, [r3, #20]
  40baa4:	4798      	blx	r3

0040baa6 <.LVL31>:
  40baa6:	bd08      	pop	{r3, pc}
  40baa8:	2040dc7c 	.word	0x2040dc7c

Disassembly of section .text.popQueue%138:

0040baac <popQueue>:
    (q->tailPos < (q->elemArrSz - 1)) ? q->tailPos++ : (q->tailPos = 0);
  40baac:	6802      	ldr	r2, [r0, #0]
  40baae:	6903      	ldr	r3, [r0, #16]
  40bab0:	3b01      	subs	r3, #1
  40bab2:	429a      	cmp	r2, r3
  40bab4:	d305      	bcc.n	40bac2 <popQueue+0x16>
  40bab6:	2300      	movs	r3, #0
  40bab8:	6003      	str	r3, [r0, #0]
    q->numElem--;
  40baba:	6883      	ldr	r3, [r0, #8]
  40babc:	3b01      	subs	r3, #1
  40babe:	6083      	str	r3, [r0, #8]
  40bac0:	4770      	bx	lr
    (q->tailPos < (q->elemArrSz - 1)) ? q->tailPos++ : (q->tailPos = 0);
  40bac2:	3201      	adds	r2, #1
  40bac4:	6002      	str	r2, [r0, #0]
  40bac6:	e7f8      	b.n	40baba <popQueue+0xe>

Disassembly of section .text.SYS_TIME_Counter64Update%139:

0040bac8 <SYS_TIME_Counter64Update>:
    uint32_t prevSwCounter32Bit = counterObj->swCounter64Low;
  40bac8:	4a05      	ldr	r2, [pc, #20]	; (40bae0 <.LVL35+0x8>)
  40baca:	6a53      	ldr	r3, [r2, #36]	; 0x24

0040bacc <.LVL31>:
    newSwCounter32Bit = prevSwCounter32Bit + elapsedCount;
  40bacc:	4418      	add	r0, r3

0040bace <.LBE22>:
    counterObj->swCounter64Low = SYS_TIME_Counter32Update(elapsedCount, &isSwCounter32Oveflow);
  40bace:	6250      	str	r0, [r2, #36]	; 0x24
    if (isSwCounter32Oveflow == true)
  40bad0:	4283      	cmp	r3, r0
  40bad2:	d800      	bhi.n	40bad6 <.LVL34>

0040bad4 <.LVL33>:
  40bad4:	4770      	bx	lr

0040bad6 <.LVL34>:
        counterObj->swCounter64High++;
  40bad6:	6a93      	ldr	r3, [r2, #40]	; 0x28

0040bad8 <.LVL35>:
  40bad8:	3301      	adds	r3, #1
  40bada:	6293      	str	r3, [r2, #40]	; 0x28
}
  40badc:	e7fa      	b.n	40bad4 <.LVL33>
  40bade:	bf00      	nop
  40bae0:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.__ascii_wctomb%140:

0040bae4 <__ascii_wctomb>:
  40bae4:	b121      	cbz	r1, 40baf0 <.LVL4>
  40bae6:	2aff      	cmp	r2, #255	; 0xff
  40bae8:	d804      	bhi.n	40baf4 <.LVL6>
  40baea:	700a      	strb	r2, [r1, #0]
  40baec:	2001      	movs	r0, #1

0040baee <.LVL3>:
  40baee:	4770      	bx	lr

0040baf0 <.LVL4>:
  40baf0:	4608      	mov	r0, r1

0040baf2 <.LVL5>:
  40baf2:	4770      	bx	lr

0040baf4 <.LVL6>:
  40baf4:	238a      	movs	r3, #138	; 0x8a

0040baf6 <.LVL7>:
  40baf6:	6003      	str	r3, [r0, #0]
  40baf8:	f04f 30ff 	mov.w	r0, #4294967295

0040bafc <.LVL8>:
  40bafc:	4770      	bx	lr

0040bafe <.LFE18>:
  40bafe:	bf00      	nop

Disassembly of section .text._localeconv_r%141:

0040bb00 <_localeconv_r>:
  40bb00:	4a04      	ldr	r2, [pc, #16]	; (40bb14 <.LBE19+0x6>)
  40bb02:	4b05      	ldr	r3, [pc, #20]	; (40bb18 <.LBE19+0xa>)
  40bb04:	6812      	ldr	r2, [r2, #0]
  40bb06:	6b50      	ldr	r0, [r2, #52]	; 0x34

0040bb08 <.LVL3>:
  40bb08:	2800      	cmp	r0, #0
  40bb0a:	bf08      	it	eq
  40bb0c:	4618      	moveq	r0, r3

0040bb0e <.LBE19>:
  40bb0e:	30f0      	adds	r0, #240	; 0xf0
  40bb10:	4770      	bx	lr
  40bb12:	bf00      	nop
  40bb14:	2040dca0 	.word	0x2040dca0
  40bb18:	2040d850 	.word	0x2040d850

Disassembly of section .text.BSP_Initialize%142:

00409c68 <BSP_Initialize>:
void BSP_Initialize(void )
{


    /* Switch off LEDs */
		LED1_Off(); 
  409c68:	4b042220 	.word	0x4b042220
  409c6c:	631a      	str	r2, [r3, #48]	; 0x30
		LED2_Off(); 
  409c6e:	f44f 7280 	mov.w	r2, #256	; 0x100
  409c72:	f503 7300 	add.w	r3, r3, #512	; 0x200
  409c76:	631a      	str	r2, [r3, #48]	; 0x30
  409c78:	4770      	bx	lr
  409c7a:	bf00      	nop
  409c7c:	400e0e00 	.word	0x400e0e00

Disassembly of section .rodata.SHAExpected%143:

0040bb1c <SHAExpected>:
  40bb1c:	28c1fef7 92d5fcd7 3637ba22 10723b8d     ...(....".76.;r.
  40bb2c:	efb6c7d4 bf000000                       ........

Disassembly of section .text.CRYPT_MD5_DataAdd%144:

0040bb34 <CRYPT_MD5_DataAdd>:

/* Add data to MD5 */
int CRYPT_MD5_DataAdd(CRYPT_MD5_CTX* md5, const unsigned char* input,
                      unsigned int sz)
{
    if (md5 == NULL || input == NULL)
  40bb34:	b138      	cbz	r0, 40bb46 <.LCFI3>
{
  40bb36:	b508      	push	{r3, lr}

0040bb38 <.LCFI2>:
    if (md5 == NULL || input == NULL)
  40bb38:	b111      	cbz	r1, 40bb40 <.LVL8>
        return BAD_FUNC_ARG;

    return wc_Md5Update((Md5*)md5, input, sz);
  40bb3a:	f7fe ff71 	bl	40aa20 <.LFE149>

0040bb3e <.LVL7>:
  40bb3e:	bd08      	pop	{r3, pc}

0040bb40 <.LVL8>:
        return BAD_FUNC_ARG;
  40bb40:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb44 <.LVL9>:
}
  40bb44:	bd08      	pop	{r3, pc}

0040bb46 <.LCFI3>:
        return BAD_FUNC_ARG;
  40bb46:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb4a <.LVL11>:
  40bb4a:	4770      	bx	lr

Disassembly of section .text.CRYPT_MD5_Finalize%145:

0040bb4c <CRYPT_MD5_Finalize>:


/* Get MD5 Final into digest */
int CRYPT_MD5_Finalize(CRYPT_MD5_CTX* md5, unsigned char* digest)
{
    if (md5 == NULL || digest == NULL)
  40bb4c:	b138      	cbz	r0, 40bb5e <.LCFI5>
{
  40bb4e:	b508      	push	{r3, lr}

0040bb50 <.LCFI4>:
    if (md5 == NULL || digest == NULL)
  40bb50:	b111      	cbz	r1, 40bb58 <.LVL14>
        return BAD_FUNC_ARG;

    return wc_Md5Final((Md5*)md5, digest);
  40bb52:	f7fe fa31 	bl	409fb8 <wc_Md5Final>

0040bb56 <.LVL13>:
  40bb56:	bd08      	pop	{r3, pc}

0040bb58 <.LVL14>:
        return BAD_FUNC_ARG;
  40bb58:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb5c <.LVL15>:
}
  40bb5c:	bd08      	pop	{r3, pc}

0040bb5e <.LCFI5>:
        return BAD_FUNC_ARG;
  40bb5e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb62 <.LVL17>:
  40bb62:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_DataAdd%146:

0040bb64 <CRYPT_SHA_DataAdd>:

/* Add data to SHA */
int CRYPT_SHA_DataAdd(CRYPT_SHA_CTX* sha, const unsigned char* input,
                       unsigned int sz)
{
    if (sha == NULL || input == NULL)
  40bb64:	b138      	cbz	r0, 40bb76 <.LCFI9>
{
  40bb66:	b508      	push	{r3, lr}

0040bb68 <.LCFI8>:
    if (sha == NULL || input == NULL)
  40bb68:	b111      	cbz	r1, 40bb70 <.LVL26>
        return BAD_FUNC_ARG;

    return wc_ShaUpdate((Sha*)sha, input, sz);
  40bb6a:	f7fe fb9d 	bl	40a2a8 <.LFE27>

0040bb6e <.LVL25>:
  40bb6e:	bd08      	pop	{r3, pc}

0040bb70 <.LVL26>:
        return BAD_FUNC_ARG;
  40bb70:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb74 <.LVL27>:
}
  40bb74:	bd08      	pop	{r3, pc}

0040bb76 <.LCFI9>:
        return BAD_FUNC_ARG;
  40bb76:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb7a <.LVL29>:
  40bb7a:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_Finalize%147:

0040bb7c <CRYPT_SHA_Finalize>:


/* Get SHA Final into digest */
int CRYPT_SHA_Finalize(CRYPT_SHA_CTX* sha, unsigned char* digest)
{
    if (sha == NULL || digest == NULL)
  40bb7c:	b138      	cbz	r0, 40bb8e <.LCFI11>
{
  40bb7e:	b508      	push	{r3, lr}

0040bb80 <.LCFI10>:
    if (sha == NULL || digest == NULL)
  40bb80:	b111      	cbz	r1, 40bb88 <.LVL32>
        return BAD_FUNC_ARG;

    return wc_ShaFinal((Sha*)sha, digest);
  40bb82:	f7fd f981 	bl	408e88 <.LFE173>

0040bb86 <.LVL31>:
  40bb86:	bd08      	pop	{r3, pc}

0040bb88 <.LVL32>:
        return BAD_FUNC_ARG;
  40bb88:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb8c <.LVL33>:
}
  40bb8c:	bd08      	pop	{r3, pc}

0040bb8e <.LCFI11>:
        return BAD_FUNC_ARG;
  40bb8e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bb92 <.LVL35>:
  40bb92:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_DataAdd%148:

0040bb94 <CRYPT_SHA256_DataAdd>:

/* Add data to SHA-256 */
int CRYPT_SHA256_DataAdd(CRYPT_SHA256_CTX* sha256, const unsigned char* input,
                         unsigned int sz)
{
    if (sha256 == NULL || input == NULL)
  40bb94:	b138      	cbz	r0, 40bba6 <.LCFI15>
{
  40bb96:	b508      	push	{r3, lr}

0040bb98 <.LCFI14>:
    if (sha256 == NULL || input == NULL)
  40bb98:	b111      	cbz	r1, 40bba0 <.LVL44>
        return BAD_FUNC_ARG;

    return wc_Sha256Update((Sha256*)sha256, input, sz);
  40bb9a:	f7fe fbe0 	bl	40a35e <.LFE18>

0040bb9e <.LVL43>:
  40bb9e:	bd08      	pop	{r3, pc}

0040bba0 <.LVL44>:
        return BAD_FUNC_ARG;
  40bba0:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bba4 <.LVL45>:
}
  40bba4:	bd08      	pop	{r3, pc}

0040bba6 <.LCFI15>:
        return BAD_FUNC_ARG;
  40bba6:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbaa <.LVL47>:
  40bbaa:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_Finalize%149:

0040bbac <CRYPT_SHA256_Finalize>:


/* Get SHA-256 Final into digest */
int CRYPT_SHA256_Finalize(CRYPT_SHA256_CTX* sha256, unsigned char* digest)
{
    if (sha256 == NULL || digest == NULL)
  40bbac:	b138      	cbz	r0, 40bbbe <.LCFI17>
{
  40bbae:	b508      	push	{r3, lr}

0040bbb0 <.LCFI16>:
    if (sha256 == NULL || digest == NULL)
  40bbb0:	b111      	cbz	r1, 40bbb8 <.LVL50>
        return BAD_FUNC_ARG;

    return wc_Sha256Final((Sha256*)sha256, digest);
  40bbb2:	f7fc fffd 	bl	408bb0 <.LFE1>

0040bbb6 <.LVL49>:
  40bbb6:	bd08      	pop	{r3, pc}

0040bbb8 <.LVL50>:
        return BAD_FUNC_ARG;
  40bbb8:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbbc <.LVL51>:
}
  40bbbc:	bd08      	pop	{r3, pc}

0040bbbe <.LCFI17>:
        return BAD_FUNC_ARG;
  40bbbe:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbc2 <.LVL53>:
  40bbc2:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA384_DataAdd%150:

0040bbc4 <CRYPT_SHA384_DataAdd>:

/* Add data to SHA-384 */
int CRYPT_SHA384_DataAdd(CRYPT_SHA384_CTX* sha384, const unsigned char* input,
                         unsigned int sz)
{
    if (sha384 == NULL || input == NULL)
  40bbc4:	b138      	cbz	r0, 40bbd6 <.LCFI21>
{
  40bbc6:	b508      	push	{r3, lr}

0040bbc8 <.LCFI20>:
    if (sha384 == NULL || input == NULL)
  40bbc8:	b111      	cbz	r1, 40bbd0 <.LVL60>
        return BAD_FUNC_ARG;

    return wc_Sha384Update((Sha384*)sha384, input, sz);
  40bbca:	f7fd ffd8 	bl	409b7e <.LBE719>

0040bbce <.LVL59>:
  40bbce:	bd08      	pop	{r3, pc}

0040bbd0 <.LVL60>:
        return BAD_FUNC_ARG;
  40bbd0:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbd4 <.LVL61>:
}
  40bbd4:	bd08      	pop	{r3, pc}

0040bbd6 <.LCFI21>:
        return BAD_FUNC_ARG;
  40bbd6:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbda <.LVL63>:
  40bbda:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA384_Finalize%151:

0040bbdc <CRYPT_SHA384_Finalize>:


/* Get SHA-384 Final into digest */
int CRYPT_SHA384_Finalize(CRYPT_SHA384_CTX* sha384, unsigned char* digest)
{
    if (sha384 == NULL || digest == NULL)
  40bbdc:	b138      	cbz	r0, 40bbee <.LCFI23>
{
  40bbde:	b508      	push	{r3, lr}

0040bbe0 <.LCFI22>:
    if (sha384 == NULL || digest == NULL)
  40bbe0:	b111      	cbz	r1, 40bbe8 <.LVL66>
        return BAD_FUNC_ARG;

    return wc_Sha384Final((Sha384*)sha384, digest);
  40bbe2:	f7fc fb55 	bl	408290 <.LFE21>

0040bbe6 <.LVL65>:
  40bbe6:	bd08      	pop	{r3, pc}

0040bbe8 <.LVL66>:
        return BAD_FUNC_ARG;
  40bbe8:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbec <.LVL67>:
}
  40bbec:	bd08      	pop	{r3, pc}

0040bbee <.LCFI23>:
        return BAD_FUNC_ARG;
  40bbee:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bbf2 <.LVL69>:
  40bbf2:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA512_DataAdd%152:

0040bbf4 <CRYPT_SHA512_DataAdd>:

/* Add data to SHA-512 */
int CRYPT_SHA512_DataAdd(CRYPT_SHA512_CTX* sha512, const unsigned char* input,
                         unsigned int sz)
{
    if (sha512 == NULL || input == NULL)
  40bbf4:	b138      	cbz	r0, 40bc06 <.LCFI27>
{
  40bbf6:	b508      	push	{r3, lr}

0040bbf8 <.LCFI26>:
    if (sha512 == NULL || input == NULL)
  40bbf8:	b111      	cbz	r1, 40bc00 <.LVL76>
        return BAD_FUNC_ARG;

    return wc_Sha512Update((Sha512*)sha512, input, sz);
  40bbfa:	f7fd ff4b 	bl	409a94 <.LFE18>

0040bbfe <.LVL75>:
  40bbfe:	bd08      	pop	{r3, pc}

0040bc00 <.LVL76>:
        return BAD_FUNC_ARG;
  40bc00:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bc04 <.LVL77>:
}
  40bc04:	bd08      	pop	{r3, pc}

0040bc06 <.LCFI27>:
        return BAD_FUNC_ARG;
  40bc06:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bc0a <.LVL79>:
  40bc0a:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA512_Finalize%153:

0040bc0c <CRYPT_SHA512_Finalize>:


/* Get SHA-512 Final into digest */
int CRYPT_SHA512_Finalize(CRYPT_SHA512_CTX* sha512, unsigned char* digest)
{
    if (sha512 == NULL || digest == NULL)
  40bc0c:	b138      	cbz	r0, 40bc1e <.LCFI29>
{
  40bc0e:	b508      	push	{r3, lr}

0040bc10 <.LCFI28>:
    if (sha512 == NULL || digest == NULL)
  40bc10:	b111      	cbz	r1, 40bc18 <.LVL82>
        return BAD_FUNC_ARG;

    return wc_Sha512Final((Sha512*)sha512, digest);
  40bc12:	f7fc f9f5 	bl	408000 <.LFE1>

0040bc16 <.LVL81>:
  40bc16:	bd08      	pop	{r3, pc}

0040bc18 <.LVL82>:
        return BAD_FUNC_ARG;
  40bc18:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bc1c <.LVL83>:
}
  40bc1c:	bd08      	pop	{r3, pc}

0040bc1e <.LCFI29>:
        return BAD_FUNC_ARG;
  40bc1e:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bc22 <.LVL85>:
  40bc22:	4770      	bx	lr

Disassembly of section .text.Console_UART_RegisterCallback%154:

0040bc24 <Console_UART_RegisterCallback>:
    switch (event)
  40bc24:	b121      	cbz	r1, 40bc30 <Console_UART_RegisterCallback+0xc>
  40bc26:	2901      	cmp	r1, #1
  40bc28:	d104      	bne.n	40bc34 <Console_UART_RegisterCallback+0x10>
            consUartData.rdCallback = consCallback;
  40bc2a:	4b03      	ldr	r3, [pc, #12]	; (40bc38 <.LFE17+0x14>)
  40bc2c:	6498      	str	r0, [r3, #72]	; 0x48
            break;
  40bc2e:	4770      	bx	lr
            consUartData.wrCallback = consCallback;
  40bc30:	4b01      	ldr	r3, [pc, #4]	; (40bc38 <.LFE17+0x14>)
  40bc32:	64d8      	str	r0, [r3, #76]	; 0x4c
  40bc34:	4770      	bx	lr
  40bc36:	bf00      	nop
  40bc38:	2040db4c 	.word	0x2040db4c

Disassembly of section .text.UARTDeviceReadCallback%155:

0040bc3c <UARTDeviceReadCallback>:
{
  40bc3c:	b508      	push	{r3, lr}

0040bc3e <.LCFI4>:
    if (USART1_ErrorGet() == 0)
  40bc3e:	f7ff fe21 	bl	40b884 <.LFE6>

0040bc42 <.LVL17>:
  40bc42:	b918      	cbnz	r0, 40bc4c <.LVL17+0xa>
        consUartData.isReadComplete = true;
  40bc44:	2201      	movs	r2, #1
  40bc46:	4b02      	ldr	r3, [pc, #8]	; (40bc50 <.LVL17+0xe>)
  40bc48:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  40bc4c:	bd08      	pop	{r3, pc}
  40bc4e:	bf00      	nop
  40bc50:	2040db4c 	.word	0x2040db4c

Disassembly of section .text.SYS_TIME_GetElapsedCount%156:

0040bc54 <SYS_TIME_GetElapsedCount>:
    if (hwTimerCurrentValue > counterObj->hwTimerPreviousValue)
  40bc54:	4b04      	ldr	r3, [pc, #16]	; (40bc68 <.LVL75+0x2>)
  40bc56:	691b      	ldr	r3, [r3, #16]
  40bc58:	4283      	cmp	r3, r0
  40bc5a:	d303      	bcc.n	40bc64 <.LVL74>
        elapsedCount = (SYS_TIME_HW_COUNTER_PERIOD - counterObj->hwTimerPreviousValue) + hwTimerCurrentValue + 1;
  40bc5c:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
  40bc60:	4418      	add	r0, r3

0040bc62 <.LVL73>:
}
  40bc62:	4770      	bx	lr

0040bc64 <.LVL74>:
        elapsedCount = hwTimerCurrentValue - counterObj->hwTimerPreviousValue;
  40bc64:	1ac0      	subs	r0, r0, r3

0040bc66 <.LVL75>:
  40bc66:	4770      	bx	lr
  40bc68:	2040db9c 	.word	0x2040db9c

Disassembly of section .text.wc_InitMd5%157:

0040bc6c <wc_InitMd5>:
#endif /* !HAVE_MD5_CUST_API */


int wc_InitMd5(Md5* md5)
{
    if (md5 == NULL) {
  40bc6c:	b130      	cbz	r0, 40bc7c <.LCFI9>
{
  40bc6e:	b508      	push	{r3, lr}

0040bc70 <.LCFI8>:
        return BAD_FUNC_ARG;
    }
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
  40bc70:	f06f 0201 	mvn.w	r2, #1
  40bc74:	2100      	movs	r1, #0
  40bc76:	f7ff fd4b 	bl	40b710 <.LFE148>

0040bc7a <.LVL369>:
  40bc7a:	bd08      	pop	{r3, pc}

0040bc7c <.LCFI9>:
        return BAD_FUNC_ARG;
  40bc7c:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bc80 <.LVL371>:
  40bc80:	4770      	bx	lr

Disassembly of section .rodata.MD5Expected%158:

0040bc84 <MD5Expected>:
  40bc84:	c230 7e55 0283 bea5 90b2 15c7 d820 427f     0.U~........ ..B
  40bc94:	0000 bf00                                   ....

Disassembly of section .text.SYS_Tasks%159:

0040bc98 <SYS_Tasks>:
  Remarks:
    See prototype in system/common/sys_module.h.
*/

void SYS_Tasks ( void )
{
  40bc98:	b508      	push	{r3, lr}

0040bc9a <.LCFI0>:
    /* Maintain system services */
    SYS_CONSOLE_Tasks(sysObj.sysConsole0);
  40bc9a:	4b03      	ldr	r3, [pc, #12]	; (40bca8 <.LVL1+0x2>)
  40bc9c:	6818      	ldr	r0, [r3, #0]
  40bc9e:	f7ff fef7 	bl	40ba90 <.LFE150>

0040bca2 <.LVL0>:
    /* Maintain Middleware & Other Libraries */
    

    /* Maintain the application's state machine. */
        /* Call Application task APP. */
    APP_Tasks();
  40bca2:	f7fc fd7d 	bl	4087a0 <APP_Tasks>

0040bca6 <.LVL1>:
  40bca6:	bd08      	pop	{r3, pc}
  40bca8:	20400000 	.word	0x20400000

Disassembly of section .rodata%160:

0040bcac <.LANCHOR0>:
  40bcac:	00000043 	.word	0x00000043
  40bcb0:	49534f50 	.word	0x49534f50
  40bcb4:	00000058 	.word	0x00000058
  40bcb8:	00000000 	.word	0x00000000
  40bcbc:	002e      	.short	0x002e
  40bcbe:	bf00      	nop

Disassembly of section .text.register_fini%161:

0040bcc0 <register_fini>:
  40bcc0:	4b02      	ldr	r3, [pc, #8]	; (40bccc <.LVL0+0x2>)
  40bcc2:	b113      	cbz	r3, 40bcca <.LVL0>

0040bcc4 <.LBB2>:
  40bcc4:	4802      	ldr	r0, [pc, #8]	; (40bcd0 <.LVL0+0x6>)
  40bcc6:	f000 b8f5 	b.w	40beb4 <.LFE155>

0040bcca <.LVL0>:
  40bcca:	4770      	bx	lr
  40bccc:	00000000 	.word	0x00000000
  40bcd0:	0040b821 	.word	0x0040b821

Disassembly of section .rodata%162:

0040bcd4 <.LC0>:
  40bcd4:	69666e49 	.word	0x69666e49
  40bcd8:	7974696e 	.word	0x7974696e
  40bcdc:	00000000 	.word	0x00000000

0040bce0 <.LC1>:
  40bce0:	004e614e 	.word	0x004e614e

0040bce4 <.LC2>:
  40bce4:	0030      	.short	0x0030
  40bce6:	bf00      	nop

Disassembly of section .text._Bfree%163:

0040bce8 <_Bfree>:
  40bce8:	b131      	cbz	r1, 40bcf8 <.LVL11+0x6>
  40bcea:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40bcec:	684a      	ldr	r2, [r1, #4]
  40bcee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]

0040bcf2 <.LVL11>:
  40bcf2:	6008      	str	r0, [r1, #0]
  40bcf4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40bcf8:	4770      	bx	lr

0040bcfa <.LFE18>:
  40bcfa:	bf00      	nop

Disassembly of section .text.__i2b%164:

0040bcfc <__i2b>:
  40bcfc:	b510      	push	{r4, lr}

0040bcfe <.LCFI6>:
  40bcfe:	460c      	mov	r4, r1
  40bd00:	2101      	movs	r1, #1

0040bd02 <.LVL105>:
  40bd02:	f7ff faf9 	bl	40b2f8 <.LFE2>

0040bd06 <.LVL106>:
  40bd06:	2201      	movs	r2, #1
  40bd08:	6144      	str	r4, [r0, #20]
  40bd0a:	6102      	str	r2, [r0, #16]
  40bd0c:	bd10      	pop	{r4, pc}

0040bd0e <.LFE23>:
  40bd0e:	bf00      	nop

Disassembly of section .text.SYS_INT_Disable%165:

0040bd10 <SYS_INT_Disable>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40bd10:	f3ef 8010 	mrs	r0, PRIMASK

0040bd14 <.LBB38>:
  __ASM volatile ("cpsid i" : : : "memory");
  40bd14:	b672      	cpsid	i

0040bd16 <.LBB40>:
  __ASM volatile ("dmb 0xF":::"memory");
  40bd16:	f3bf 8f5f 	dmb	sy

0040bd1a <.LBE40>:
}
  40bd1a:	fab0 f080 	clz	r0, r0

0040bd1e <.LVL1>:
  40bd1e:	0940      	lsrs	r0, r0, #5
  40bd20:	4770      	bx	lr

Disassembly of section .text.SYS_INT_Restore%166:

0040bd22 <SYS_INT_Restore>:
    if( state == true )
  40bd22:	b918      	cbnz	r0, 40bd2c <.LBB46>

0040bd24 <.LBB42>:
  __ASM volatile ("cpsid i" : : : "memory");
  40bd24:	b672      	cpsid	i

0040bd26 <.LBB44>:
  __ASM volatile ("dmb 0xF":::"memory");
  40bd26:	f3bf 8f5f 	dmb	sy
  40bd2a:	4770      	bx	lr

0040bd2c <.LBB46>:
  40bd2c:	f3bf 8f5f 	dmb	sy

0040bd30 <.LBB48>:
  __ASM volatile ("cpsie i" : : : "memory");
  40bd30:	b662      	cpsie	i
  40bd32:	4770      	bx	lr

Disassembly of section .text.CRYPT_MD5_Initialize%167:

0040bd34 <CRYPT_MD5_Initialize>:
    if (md5 == NULL)
  40bd34:	b120      	cbz	r0, 40bd40 <.LCFI1>
{
  40bd36:	b508      	push	{r3, lr}

0040bd38 <.LCFI0>:
    wc_InitMd5((Md5*)md5);
  40bd38:	f7ff ff98 	bl	40bc6c <.LFE164>

0040bd3c <.LVL1>:
    return 0;
  40bd3c:	2000      	movs	r0, #0
  40bd3e:	bd08      	pop	{r3, pc}

0040bd40 <.LCFI1>:
        return BAD_FUNC_ARG;
  40bd40:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bd44 <.LVL3>:
  40bd44:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_Initialize%168:

0040bd46 <CRYPT_SHA_Initialize>:
    if (sha == NULL)
  40bd46:	b118      	cbz	r0, 40bd50 <.LCFI7>
{
  40bd48:	b508      	push	{r3, lr}

0040bd4a <.LCFI6>:
    return wc_InitSha((Sha*)sha);
  40bd4a:	f000 f862 	bl	40be12 <.LFE28>

0040bd4e <.LVL19>:
  40bd4e:	bd08      	pop	{r3, pc}

0040bd50 <.LCFI7>:
        return BAD_FUNC_ARG;
  40bd50:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bd54 <.LVL21>:
  40bd54:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_Initialize%169:

0040bd56 <CRYPT_SHA256_Initialize>:
    if (sha256 == NULL)
  40bd56:	b118      	cbz	r0, 40bd60 <.LCFI13>
{
  40bd58:	b508      	push	{r3, lr}

0040bd5a <.LCFI12>:
    return wc_InitSha256((Sha256*)sha256);
  40bd5a:	f000 f861 	bl	40be20 <.LFE20>

0040bd5e <.LVL37>:
  40bd5e:	bd08      	pop	{r3, pc}

0040bd60 <.LCFI13>:
        return BAD_FUNC_ARG;
  40bd60:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bd64 <.LVL39>:
  40bd64:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA384_Initialize%170:

0040bd66 <CRYPT_SHA384_Initialize>:
    if (sha384 == NULL)
  40bd66:	b118      	cbz	r0, 40bd70 <.LCFI19>
{
  40bd68:	b508      	push	{r3, lr}

0040bd6a <.LCFI18>:
    return wc_InitSha384((Sha384*)sha384);
  40bd6a:	f000 f84b 	bl	40be04 <.LFE22>

0040bd6e <.LVL55>:
  40bd6e:	bd08      	pop	{r3, pc}

0040bd70 <.LCFI19>:
        return BAD_FUNC_ARG;
  40bd70:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bd74 <.LVL57>:
  40bd74:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA512_Initialize%171:

0040bd76 <CRYPT_SHA512_Initialize>:
    if (sha512 == NULL)
  40bd76:	b118      	cbz	r0, 40bd80 <.LCFI25>
{
  40bd78:	b508      	push	{r3, lr}

0040bd7a <.LCFI24>:
    return wc_InitSha512((Sha512*)sha512);
  40bd7a:	f000 f83c 	bl	40bdf6 <.LFE163>

0040bd7e <.LVL71>:
  40bd7e:	bd08      	pop	{r3, pc}

0040bd80 <.LCFI25>:
        return BAD_FUNC_ARG;
  40bd80:	f06f 00ac 	mvn.w	r0, #172	; 0xac

0040bd84 <.LVL73>:
  40bd84:	4770      	bx	lr

Disassembly of section .text.UARTDeviceWriteCallback%172:

0040bd88 <UARTDeviceWriteCallback>:
    consUartData.isWriteComplete = true;
  40bd88:	2201      	movs	r2, #1
  40bd8a:	4b02      	ldr	r3, [pc, #8]	; (40bd94 <UARTDeviceWriteCallback+0xc>)
  40bd8c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
  40bd90:	4770      	bx	lr
  40bd92:	bf00      	nop
  40bd94:	2040db4c 	.word	0x2040db4c

Disassembly of section .text.USART1_WriteCallbackRegister%173:

0040bd98 <USART1_WriteCallbackRegister>:


bool USART1_WriteCallbackRegister( USART_CALLBACK callback, uintptr_t context )
{
    usart1Obj.txCallback = callback;
  40bd98:	4b02      	ldr	r3, [pc, #8]	; (40bda4 <.LVL43+0x4>)
  40bd9a:	60d8      	str	r0, [r3, #12]
    usart1Obj.txContext = context;
  40bd9c:	6119      	str	r1, [r3, #16]

    return true;
}
  40bd9e:	2001      	movs	r0, #1

0040bda0 <.LVL43>:
  40bda0:	4770      	bx	lr
  40bda2:	bf00      	nop
  40bda4:	20400454 	.word	0x20400454

Disassembly of section .text.USART1_ReadCallbackRegister%174:

0040bda8 <USART1_ReadCallbackRegister>:

bool USART1_ReadCallbackRegister( USART_CALLBACK callback, uintptr_t context )
{
    usart1Obj.rxCallback = callback;
  40bda8:	4b02      	ldr	r3, [pc, #8]	; (40bdb4 <.LVL45+0x4>)
  40bdaa:	6258      	str	r0, [r3, #36]	; 0x24
    usart1Obj.rxContext = context;
  40bdac:	6299      	str	r1, [r3, #40]	; 0x28

    return true;
}
  40bdae:	2001      	movs	r0, #1

0040bdb0 <.LVL45>:
  40bdb0:	4770      	bx	lr
  40bdb2:	bf00      	nop
  40bdb4:	20400454 	.word	0x20400454

Disassembly of section .text.malloc%175:

0040bdb8 <malloc>:
  40bdb8:	4b02      	ldr	r3, [pc, #8]	; (40bdc4 <.LVL2+0x2>)
  40bdba:	4601      	mov	r1, r0
  40bdbc:	6818      	ldr	r0, [r3, #0]

0040bdbe <.LVL1>:
  40bdbe:	f7fb b9dd 	b.w	40717c <.LFE14>

0040bdc2 <.LVL2>:
  40bdc2:	bf00      	nop
  40bdc4:	2040dca0 	.word	0x2040dca0

Disassembly of section .rodata.blanks.8352%176:

0040bdc8 <blanks.8352>:
  40bdc8:	20202020 20202020 20202020 20202020                     

Disassembly of section .rodata.zeroes.8353%177:

0040bdd8 <zeroes.8353>:
  40bdd8:	30303030 30303030 30303030 30303030     0000000000000000

Disassembly of section .text.main%178:

0040bde8 <main>:
// Section: Main Entry Point
// *****************************************************************************
// *****************************************************************************

int main ( void )
{
  40bde8:	b508      	push	{r3, lr}

0040bdea <.LCFI0>:
    /* Initialize all modules */
    SYS_Initialize ( NULL );
  40bdea:	2000      	movs	r0, #0
  40bdec:	f7ff f89c 	bl	40af28 <SYS_Initialize>

0040bdf0 <.LVL0>:

    while ( true )
    {
        /* Maintain state machines of all polled MPLAB Harmony modules. */
        SYS_Tasks ( );
  40bdf0:	f7ff ff52 	bl	40bc98 <SYS_Tasks>

0040bdf4 <.LVL1>:
  40bdf4:	e7fc      	b.n	40bdf0 <.LVL0>

Disassembly of section .text.wc_InitSha512%179:

0040bdf6 <wc_InitSha512>:
{
  40bdf6:	b508      	push	{r3, lr}

0040bdf8 <.LCFI12>:
    return wc_InitSha512_ex(sha512, NULL, INVALID_DEVID);
  40bdf8:	f06f 0201 	mvn.w	r2, #1
  40bdfc:	2100      	movs	r1, #0
  40bdfe:	f7fe f99b 	bl	40a138 <wc_InitSha512_ex>

0040be02 <.LVL80>:
}
  40be02:	bd08      	pop	{r3, pc}

Disassembly of section .text.wc_InitSha384%180:

0040be04 <wc_InitSha384>:
#endif

int wc_InitSha384(Sha384* sha384)
{
  40be04:	b508      	push	{r3, lr}

0040be06 <.LCFI21>:
    return wc_InitSha384_ex(sha384, NULL, INVALID_DEVID);
  40be06:	f06f 0201 	mvn.w	r2, #1
  40be0a:	2100      	movs	r1, #0
  40be0c:	f7fe f9f0 	bl	40a1f0 <.LFE15>

0040be10 <.LVL145>:
}
  40be10:	bd08      	pop	{r3, pc}

Disassembly of section .text.wc_InitSha%181:

0040be12 <wc_InitSha>:

#endif /* USE_SHA_SOFTWARE_IMPL */


int wc_InitSha(Sha* sha)
{
  40be12:	b508      	push	{r3, lr}

0040be14 <.LCFI8>:
    return wc_InitSha_ex(sha, NULL, INVALID_DEVID);
  40be14:	f06f 0201 	mvn.w	r2, #1
  40be18:	2100      	movs	r1, #0
  40be1a:	f7ff fb85 	bl	40b528 <.LBE32>

0040be1e <.LVL398>:
}
  40be1e:	bd08      	pop	{r3, pc}

Disassembly of section .text.wc_InitSha256%182:

0040be20 <wc_InitSha256>:

#endif /* WOLFSSL_SHA224 */


int wc_InitSha256(Sha256* sha256)
{
  40be20:	b508      	push	{r3, lr}

0040be22 <.LCFI9>:
    return wc_InitSha256_ex(sha256, NULL, INVALID_DEVID);
  40be22:	f06f 0201 	mvn.w	r2, #1
  40be26:	2100      	movs	r1, #0
  40be28:	f7ff f818 	bl	40ae5c <.LFE165>

0040be2c <.LVL97>:
}
  40be2c:	bd08      	pop	{r3, pc}

Disassembly of section .text.APP_Initialize%183:

0040be30 <APP_Initialize>:
    appData.state = APP_STATE_INIT;
  40be30:	2200      	movs	r2, #0
  40be32:	4b01      	ldr	r3, [pc, #4]	; (40be38 <APP_Initialize+0x8>)
  40be34:	701a      	strb	r2, [r3, #0]
  40be36:	4770      	bx	lr
  40be38:	2040d6b8 	.word	0x2040d6b8

Disassembly of section .text.CRYPT_MD5_DataSizeSet%184:

0040be3c <CRYPT_MD5_DataSizeSet>:
    if (md5 == NULL)
  40be3c:	2800      	cmp	r0, #0
}
  40be3e:	bf0c      	ite	eq
  40be40:	f06f 00ac 	mvneq.w	r0, #172	; 0xac

0040be44 <.LVL5>:
  40be44:	2000      	movne	r0, #0
  40be46:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA_DataSizeSet%185:

0040be48 <CRYPT_SHA_DataSizeSet>:
    if (sha == NULL)
  40be48:	2800      	cmp	r0, #0
}
  40be4a:	bf0c      	ite	eq
  40be4c:	f06f 00ac 	mvneq.w	r0, #172	; 0xac

0040be50 <.LVL23>:
  40be50:	2000      	movne	r0, #0
  40be52:	4770      	bx	lr

Disassembly of section .text.CRYPT_SHA256_DataSizeSet%186:

0040be54 <CRYPT_SHA256_DataSizeSet>:
    if (sha256 == NULL)
  40be54:	2800      	cmp	r0, #0
}
  40be56:	bf0c      	ite	eq
  40be58:	f06f 00ac 	mvneq.w	r0, #172	; 0xac

0040be5c <.LVL41>:
  40be5c:	2000      	movne	r0, #0
  40be5e:	4770      	bx	lr

Disassembly of section .text.TC0_CH0_TimerStart%187:

0040be60 <TC0_CH0_TimerStart>:
    TC0_REGS->TC_CHANNEL[0].TC_CCR = (TC_CCR_CLKEN_Msk | TC_CCR_SWTRG_Msk);
  40be60:	2205      	movs	r2, #5
  40be62:	4b01      	ldr	r3, [pc, #4]	; (40be68 <.LFE9+0x8>)
  40be64:	601a      	str	r2, [r3, #0]
  40be66:	4770      	bx	lr
  40be68:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerStop%188:

0040be6c <TC0_CH0_TimerStop>:
    TC0_REGS->TC_CHANNEL[0].TC_CCR = (TC_CCR_CLKDIS_Msk);
  40be6c:	2202      	movs	r2, #2
  40be6e:	4b01      	ldr	r3, [pc, #4]	; (40be74 <.LFE142+0x8>)
  40be70:	601a      	str	r2, [r3, #0]
  40be72:	4770      	bx	lr
  40be74:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerPeriodSet%189:

0040be78 <TC0_CH0_TimerPeriodSet>:
    TC0_REGS->TC_CHANNEL[0].TC_RC = period;
  40be78:	4b01      	ldr	r3, [pc, #4]	; (40be80 <.LFE143+0x8>)
  40be7a:	61d8      	str	r0, [r3, #28]
  40be7c:	4770      	bx	lr
  40be7e:	bf00      	nop
  40be80:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerCompareSet%190:

0040be84 <TC0_CH0_TimerCompareSet>:
    TC0_REGS->TC_CHANNEL[0].TC_RA = compare;
  40be84:	4b01      	ldr	r3, [pc, #4]	; (40be8c <.LFE145+0x8>)
  40be86:	6158      	str	r0, [r3, #20]
  40be88:	4770      	bx	lr
  40be8a:	bf00      	nop
  40be8c:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerCounterGet%191:

0040be90 <TC0_CH0_TimerCounterGet>:
    return TC0_REGS->TC_CHANNEL[0].TC_CV;
  40be90:	4b01      	ldr	r3, [pc, #4]	; (40be98 <.LFE146+0x8>)
  40be92:	6918      	ldr	r0, [r3, #16]
}
  40be94:	b280      	uxth	r0, r0
  40be96:	4770      	bx	lr
  40be98:	4000c000 	.word	0x4000c000

Disassembly of section .text.TC0_CH0_TimerCallbackRegister%192:

0040be9c <TC0_CH0_TimerCallbackRegister>:
    TC0_CH0_CallbackObj.callback_fn = callback;
  40be9c:	4b01      	ldr	r3, [pc, #4]	; (40bea4 <.LFE148+0x8>)
  40be9e:	6018      	str	r0, [r3, #0]
    TC0_CH0_CallbackObj.context = context;
  40bea0:	6059      	str	r1, [r3, #4]
  40bea2:	4770      	bx	lr
  40bea4:	2040044c 	.word	0x2040044c

Disassembly of section .text.USART1_ReadCountGet%193:

0040bea8 <USART1_ReadCountGet>:
}

size_t USART1_ReadCountGet( void )
{
    return usart1Obj.rxProcessedSize;
}
  40bea8:	4b01      	ldr	r3, [pc, #4]	; (40beb0 <.LFE149+0x8>)
  40beaa:	6a18      	ldr	r0, [r3, #32]
  40beac:	4770      	bx	lr
  40beae:	bf00      	nop
  40beb0:	20400454 	.word	0x20400454

Disassembly of section .text.atexit%194:

0040beb4 <atexit>:
  40beb4:	2300      	movs	r3, #0
  40beb6:	4601      	mov	r1, r0
  40beb8:	461a      	mov	r2, r3
  40beba:	4618      	mov	r0, r3

0040bebc <.LVL1>:
  40bebc:	f7fe bafc 	b.w	40a4b8 <__register_exitproc>

Disassembly of section .rodata.p05.7179%195:

0040bec0 <p05.7179>:
  40bec0:	0005 0000 0019 0000 007d 0000               ........}...

Disassembly of section .text.SYS_TIME_CounterGet%196:

0040becc <SYS_TIME_CounterGet>:
{
  40becc:	b508      	push	{r3, lr}

0040bece <.LCFI15>:
    counter32 = (uint32_t)SYS_TIME_Counter64Get();
  40bece:	f7ff fba7 	bl	40b620 <.LFE158>

0040bed2 <.LVL158>:
}
  40bed2:	bd08      	pop	{r3, pc}

Disassembly of section .text.TC0_CH0_TimerFrequencyGet%197:

0040bed4 <TC0_CH0_TimerFrequencyGet>:
}
  40bed4:	4800      	ldr	r0, [pc, #0]	; (40bed8 <.LFE178+0x4>)
  40bed6:	4770      	bx	lr
  40bed8:	08f0d180 	.word	0x08f0d180

Disassembly of section .text%198:

0040a5fc <__aeabi_idiv0>:
  40a5fc:	4770      	bx	lr

0040a5fe <L0>:
  40a5fe:	bf00      	nop

Disassembly of section .rodata._global_impure_ptr%199:

0040abac <_global_impure_ptr>:
  40abac:	cc88 2040                                   ..@ 

Disassembly of section .text.__malloc_lock%200:

0040b9bc <__malloc_lock>:
  40b9bc:	4770      	bx	lr
  40b9be:	bf00      	nop

Disassembly of section .text.__malloc_unlock%201:

0040bedc <__malloc_unlock>:
  40bedc:	4770      	bx	lr

0040bede <.LFE1>:
  40bede:	bf00      	nop

Disassembly of section .text.Dummy_Handler%202:

0040bc82 <Dummy_Handler>:

extern uint32_t _stack;

/* Brief default interrupt handler for unused IRQs.*/
void __attribute__((optimize("-O1"),section(".text.Dummy_Handler"),long_call))Dummy_Handler(void)
{
  40bc82:	e7fe      	b.n	40bc82 <Dummy_Handler>

Disassembly of section .text.NonMaskableInt_Handler%203:

0040bd86 <NonMaskableInt_Handler>:
// *****************************************************************************

/* Brief default interrupt handlers for core IRQs.*/

void NonMaskableInt_Handler(void)
{
  40bd86:	e7fe      	b.n	40bd86 <NonMaskableInt_Handler>

Disassembly of section .text.HardFault_Handler%204:

0040be2e <HardFault_Handler>:
    {
    }
}

void HardFault_Handler(void)
{
  40be2e:	e7fe      	b.n	40be2e <HardFault_Handler>

Disassembly of section .text.DebugMonitor_Handler%205:

0040bee0 <DebugMonitor_Handler>:
   {
   }
}

void DebugMonitor_Handler(void)
{
  40bee0:	e7fe      	b.n	40bee0 <DebugMonitor_Handler>

Disassembly of section .text.MemoryManagement_Handler%206:

0040bee2 <MemoryManagement_Handler>:
   {
   }
}

void MemoryManagement_Handler(void)
{
  40bee2:	e7fe      	b.n	40bee2 <MemoryManagement_Handler>

Disassembly of section .text.BusFault_Handler%207:

0040bee4 <BusFault_Handler>:
   {
   }
}

void BusFault_Handler(void)
{
  40bee4:	e7fe      	b.n	40bee4 <BusFault_Handler>

Disassembly of section .text.UsageFault_Handler%208:

0040bee6 <UsageFault_Handler>:
   {
   }
}

void UsageFault_Handler(void)
{
  40bee6:	e7fe      	b.n	40bee6 <UsageFault_Handler>
